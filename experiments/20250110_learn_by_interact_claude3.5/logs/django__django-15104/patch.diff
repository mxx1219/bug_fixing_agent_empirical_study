diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 97977d72ef..1ca04a18ad 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -96,7 +96,10 @@ class MigrationAutodetector:
         for name, field in sorted(fields.items()):
             deconstruction = self.deep_deconstruct(field)
             if field.remote_field and field.remote_field.model:
-                del deconstruction[2]['to']
+                deconstruction[2].pop('to', None)  # Use pop() to safely remove 'to' key if it exists
+            fields_def.append(deconstruction)
+
+
             fields_def.append(deconstruction)
         return fields_def
 
@@ -1394,3 +1397,7 @@ class MigrationAutodetector:
         if match:
             return int(match[0])
         return None
+
+
+
+
diff --git "a/django/db/migrations/autodetector.py\"" "b/django/db/migrations/autodetector.py\""
new file mode 100644
index 0000000000..ee288cf171
--- /dev/null
+++ "b/django/db/migrations/autodetector.py\""
@@ -0,0 +1,3 @@
+if field.remote_field and field.remote_field.model:
+                deconstruction[2].pop('to', None)  # Use pop() to safely remove 'to' key if it exists
+            fields_def.append(deconstruction)
