diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py
index da4ff928aa..a52c678cdb 100644
--- a/django/db/models/aggregates.py
+++ b/django/db/models/aggregates.py
@@ -99,6 +99,7 @@ class Aggregate(Func):
 class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
     function = 'AVG'
     name = 'Avg'
+    allow_distinct = True
 
 
 class Count(Aggregate):
@@ -142,6 +143,7 @@ class StdDev(NumericOutputFieldMixin, Aggregate):
 class Sum(FixDurationInputMixin, Aggregate):
     function = 'SUM'
     name = 'Sum'
+    allow_distinct = True
 
 
 class Variance(NumericOutputFieldMixin, Aggregate):
@@ -153,3 +155,5 @@ class Variance(NumericOutputFieldMixin, Aggregate):
 
     def _get_repr_options(self):
         return {**super()._get_repr_options(), 'sample': self.function == 'VAR_SAMP'}
+
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..e62f5c7654
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,46 @@
+from django.conf import settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',  # Use in-memory SQLite for testing
+        }
+    },
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
+)
+
+import django
+django.setup()
+
+from django.db import models, connection
+from django.db.models import Avg, Sum
+
+class DemoModel(models.Model):
+    value = models.IntegerField()
+    
+    class Meta:
+        app_label = 'myapp'
+
+# Create the table
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(DemoModel)
+
+# Add some test data
+DemoModel.objects.create(value=1)
+DemoModel.objects.create(value=2)
+DemoModel.objects.create(value=2)  # Duplicate value to test DISTINCT
+
+try:
+    # This should work with DISTINCT
+    result = DemoModel.objects.aggregate(avg=Avg('value', distinct=True))
+    print("Avg with distinct worked:", result)
+except TypeError as e:
+    print("Error with Avg:", str(e))
+
+try:
+    # This should work with DISTINCT
+    result = DemoModel.objects.aggregate(sum=Sum('value', distinct=True))
+    print("Sum with distinct worked:", result)
+except TypeError as e:
+    print("Error with Sum:", str(e))
+
