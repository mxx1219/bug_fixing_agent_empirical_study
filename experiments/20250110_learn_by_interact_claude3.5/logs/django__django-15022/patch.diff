diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..9b7e431164
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,76 @@
+from django.conf import settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+    ],
+    DEFAULT_AUTO_FIELD='django.db.models.AutoField'
+)
+
+import django
+django.setup()
+
+from django.db import models
+from django.contrib.admin import ModelAdmin
+
+class Client(models.Model):
+    name = models.CharField('name', max_length=256)
+    name2 = models.CharField('unofficial or obsolete name', max_length=256, blank=True, null=True)
+    contact_person = models.CharField('contact person', max_length=256, blank=True, null=True)
+    
+    class Meta:
+        app_label = 'testapp'
+
+class ClientOffice(models.Model):
+    name = models.CharField('name', max_length=256)
+    name2 = models.CharField('unofficial or obsolete name', max_length=256, blank=True, null=True)
+    client = models.ForeignKey(Client, on_delete=models.CASCADE, verbose_name='client')
+    
+    class Meta:
+        app_label = 'testapp'
+
+class ClientAdmin(ModelAdmin):
+    search_fields = ('name', 'name2', 'contact_person', 'clientoffice__name', 'clientoffice__name2')
+
+def setup_data():
+    # Create test objects
+    client = Client.objects.create(
+        name='Test Client',
+        name2='Old Name',
+        contact_person='John Doe'
+    )
+    
+    office = ClientOffice.objects.create(
+        name='Main Office',
+        name2='Downtown',
+        client=client
+    )
+
+    return client, office
+
+def test_search():
+    client, office = setup_data()
+    
+    # Test search with multiple terms
+    admin = ClientAdmin(Client, None)
+    qs = Client.objects.all()
+    
+    print("\nTesting search with multiple terms: 'test client john'")
+    results, may_have_duplicates = admin.get_search_results(None, qs, 'test client john')
+    print("\nGenerated SQL Query:")
+    print(str(results.query))
+
+if __name__ == '__main__':
+    # Create tables
+    from django.db import connection
+    with connection.schema_editor() as schema_editor:
+        schema_editor.create_model(Client)
+        schema_editor.create_model(ClientOffice)
+    
+    test_search()
