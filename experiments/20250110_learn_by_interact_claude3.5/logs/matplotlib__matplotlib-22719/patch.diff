diff --git a/lib/matplotlib/category.py b/lib/matplotlib/category.py
index c823b68fd9..a0cf38186a 100644
--- a/lib/matplotlib/category.py
+++ b/lib/matplotlib/category.py
@@ -53,17 +53,21 @@ class StrCategoryConverter(units.ConversionInterface):
         StrCategoryConverter._validate_unit(unit)
         # dtype = object preserves numerical pass throughs
         values = np.atleast_1d(np.array(value, dtype=object))
+        # Handle empty arrays specially
+        if values.size == 0:
+            return np.array([], dtype=float)
         # pass through sequence of non binary numbers
         with _api.suppress_matplotlib_deprecation_warning():
             is_numlike = all(units.ConversionInterface.is_numlike(v)
-                             and not isinstance(v, (str, bytes))
-                             for v in values)
+                            and not isinstance(v, (str, bytes))
+                            for v in values)
         if is_numlike:
             _api.warn_deprecated(
                 "3.5", message="Support for passing numbers through unit "
                 "converters is deprecated since %(since)s and support will be "
                 "removed %(removal)s; use Axis.convert_units instead.")
             return np.asarray(values, dtype=float)
+
         # force an update so it also does type checking
         unit.update(values)
         return np.vectorize(unit._mapping.__getitem__, otypes=[float])(values)
@@ -242,3 +246,4 @@ units.registry[str] = StrCategoryConverter()
 units.registry[np.str_] = StrCategoryConverter()
 units.registry[bytes] = StrCategoryConverter()
 units.registry[np.bytes_] = StrCategoryConverter()
+
diff --git a/test_reproduce/edge_cases.py b/test_reproduce/edge_cases.py
new file mode 100644
index 0000000000..e699fc7fad
--- /dev/null
+++ b/test_reproduce/edge_cases.py
@@ -0,0 +1,15 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+def test_case(x, y, title):
+    f, ax = plt.subplots()
+    ax.xaxis.update_units(["a", "b"])
+    ax.plot(x, y)
+    plt.title(title)
+    plt.show()
+
+# Test various empty data types
+test_case([], [], "Empty lists")
+test_case(np.array([]), np.array([]), "Empty numpy arrays")
+test_case(np.array([], dtype=float), np.array([], dtype=float), "Empty float arrays")
+test_case(np.array([], dtype=object), np.array([], dtype=object), "Empty object arrays")
diff --git a/test_reproduce/reproduce_bug.py b/test_reproduce/reproduce_bug.py
new file mode 100644
index 0000000000..2e8623f333
--- /dev/null
+++ b/test_reproduce/reproduce_bug.py
@@ -0,0 +1,6 @@
+import matplotlib.pyplot as plt
+
+f, ax = plt.subplots()
+ax.xaxis.update_units(["a", "b"])
+ax.plot([], [])
+plt.show()
