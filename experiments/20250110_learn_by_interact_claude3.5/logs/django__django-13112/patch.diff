diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..8936fdbcc9
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,31 @@
+#!/usr/bin/env python3
+
+def resolve_relation(scope_model, relation):
+    """Minimal reproduction of Django's resolve_relation"""
+    if relation == 'self':
+        relation = scope_model
+
+    # Look for an "app.Model" relation
+    if isinstance(relation, str):
+        if "." not in relation:
+            relation = "%s.%s" % (scope_model._meta.app_label, relation)
+        else:
+            # Handle case-insensitive app labels
+            app_label, model_name = relation.split(".")
+            if hasattr(scope_model, '_meta') and scope_model._meta.app_label.lower() == app_label.lower():
+                relation = "%s.%s" % (scope_model._meta.app_label, model_name)
+
+    return relation
+
+class FakeModel:
+    class _meta:
+        app_label = 'DJ_RegLogin'
+
+# Test case-insensitive resolution
+model = FakeModel()
+relation = 'dj_reglogin.Category'  # lowercase version
+resolved = resolve_relation(model, relation)
+print(f"Input relation: {relation}")
+print(f"Resolved to: {resolved}")
+print(f"Expected: DJ_RegLogin.Category")
+
