diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py
index a199e45d40..a9b99222e4 100644
--- a/lib/matplotlib/widgets.py
+++ b/lib/matplotlib/widgets.py
@@ -2140,15 +2140,20 @@ class SpanSelector(_SelectorWidget):
 
         if self.direction == 'horizontal':
             trans = ax.get_xaxis_transform()
-            w, h = 0, 1
+            xmin, xmax = ax.get_xbound()
+            self._rect = Rectangle((xmin, 0), xmax - xmin, 1,
+                               transform=trans,
+                               visible=False,
+                               **self._rectprops)
         else:
             trans = ax.get_yaxis_transform()
-            w, h = 1, 0
-        self._rect = Rectangle((0, 0), w, h,
+            ymin, ymax = ax.get_ybound()
+            self._rect = Rectangle((0, ymin), 1, ymax - ymin,
                                transform=trans,
                                visible=False,
                                **self._rectprops)
 
+
         self.ax.add_patch(self._rect)
         if len(self.artists) > 0:
             self.artists[0] = self._rect
@@ -3407,3 +3412,4 @@ class Lasso(AxesWidget):
             self.canvas.blit(self.ax.bbox)
         else:
             self.canvas.draw_idle()
+
diff --git a/reproduce_span.py b/reproduce_span.py
new file mode 100644
index 0000000000..265aff84fd
--- /dev/null
+++ b/reproduce_span.py
@@ -0,0 +1,7 @@
+from matplotlib import pyplot as plt
+from matplotlib.widgets import SpanSelector
+
+fig, ax = plt.subplots()
+ax.plot([10, 20], [10, 20])
+ss = SpanSelector(ax, print, "horizontal", interactive=True)
+plt.show()
diff --git a/test_span.py b/test_span.py
new file mode 100644
index 0000000000..0368e85c16
--- /dev/null
+++ b/test_span.py
@@ -0,0 +1,23 @@
+import matplotlib.pyplot as plt
+from matplotlib.widgets import SpanSelector
+
+# Test 1: Original case (positive range)
+fig, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=(8, 8))
+
+# Positive range
+ax1.plot([10, 20], [10, 20])
+ss1 = SpanSelector(ax1, print, "horizontal", interactive=True)
+ax1.set_title("Positive range")
+
+# Negative range
+ax2.plot([-20, -10], [-20, -10])
+ss2 = SpanSelector(ax2, print, "horizontal", interactive=True)
+ax2.set_title("Negative range")
+
+# Vertical selector
+ax3.plot([10, 20], [10, 20])
+ss3 = SpanSelector(ax3, print, "vertical", interactive=True)
+ax3.set_title("Vertical selector")
+
+plt.tight_layout()
+plt.show()
