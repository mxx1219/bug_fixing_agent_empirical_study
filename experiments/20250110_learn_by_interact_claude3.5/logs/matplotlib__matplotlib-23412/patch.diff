diff --git a/bug.png b/bug.png
new file mode 100644
index 0000000000..a6f01b7ddf
Binary files /dev/null and b/bug.png differ
diff --git a/lib/matplotlib/patches.py b/lib/matplotlib/patches.py
index e062249589..cb236e5ae6 100644
--- a/lib/matplotlib/patches.py
+++ b/lib/matplotlib/patches.py
@@ -586,10 +586,7 @@ class Patch(artist.Artist):
         # docstring inherited
         if not self.get_visible():
             return
-        # Patch has traditionally ignored the dashoffset.
-        with cbook._setattr_cm(
-                 self, _dash_pattern=(0, self._dash_pattern[1])), \
-             self._bind_draw_path_function(renderer) as draw_path:
+        with self._bind_draw_path_function(renderer) as draw_path:
             path = self.get_path()
             transform = self.get_transform()
             tpath = transform.transform_path_non_affine(path)
@@ -4681,3 +4678,4 @@ class ConnectionPatch(FancyArrowPatch):
         if not self.get_visible() or not self._check_xy(renderer):
             return
         super().draw(renderer)
+
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..bf4efab19c
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,10 @@
+import matplotlib.pyplot as plt
+import matplotlib as mpl
+
+plt.figure(figsize=(10,10))
+ax = plt.gca()
+ax.add_patch(mpl.patches.Rectangle((0.5,0.5),1,1, alpha=0.5, edgecolor = 'r', linewidth=4, ls=(0,(10,10))))
+ax.add_patch(mpl.patches.Rectangle((0.5,0.5),1,1, alpha=0.5, edgecolor = 'b', linewidth=4, ls=(10,(10,10))))
+plt.ylim([0,2])
+plt.xlim([0,2])
+plt.savefig('bug.png')  # Using savefig instead of show() for headless environment
