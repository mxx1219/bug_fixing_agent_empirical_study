diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 0f53d9c30b..64cebadc00 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -2524,7 +2524,8 @@ class AutoFieldMeta(type):
         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)
 
     def __subclasscheck__(self, subclass):
-        return subclass in self._subclasses or super().__subclasscheck__(subclass)
+        return any(issubclass(subclass, c) for c in self._subclasses) or super().__subclasscheck__(subclass)
+
 
 
 class AutoField(AutoFieldMixin, IntegerField, metaclass=AutoFieldMeta):
@@ -2552,3 +2553,4 @@ class SmallAutoField(AutoFieldMixin, SmallIntegerField):
 
     def rel_db_type(self, connection):
         return SmallIntegerField().db_type(connection=connection)
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..ad9a959e9c
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,25 @@
+import os
+import django
+from django.conf import settings
+
+# Configure minimal Django settings if not already configured
+if not settings.configured:
+    settings.configure(
+        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+        DEFAULT_AUTO_FIELD='reproduce.MyBigAutoField',
+        INSTALLED_APPS=['django.contrib.contenttypes']
+    )
+    django.setup()
+
+from django.db import models
+
+class MyBigAutoField(models.BigAutoField):
+    pass
+
+class TestModel(models.Model):  # Changed name to avoid conflict
+    class Meta:
+        app_label = 'reproduce'
+
+# Just validate the model class creation
+print("Model created successfully!")
+
