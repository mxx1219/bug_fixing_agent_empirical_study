diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..0b365ffbe2
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,50 @@
+import os
+import django
+from django.core.exceptions import MiddlewareNotUsed
+from django.conf import settings
+
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY='dummy-key-for-testing',
+        ROOT_URLCONF=__name__,
+        MIDDLEWARE=[
+            'reproduce_error.DummyMiddleware',
+            'reproduce_error.SimpleMiddleware'
+        ],
+        ALLOWED_HOSTS=['*'],
+    )
+    django.setup()
+
+from django.urls import path
+from django.http import HttpResponse
+from django.core.handlers.asgi import ASGIHandler
+
+class DummyMiddleware:
+    def __init__(self, get_response):
+        raise MiddlewareNotUsed()
+
+    def __call__(self, request):
+        return self.get_response(request)
+
+class SimpleMiddleware:
+    async_capable = True
+
+    def __init__(self, get_response):
+        self.get_response = get_response
+
+    async def __call__(self, request):
+        return await self.get_response(request)
+
+async def test_view(request):
+    return HttpResponse("OK")
+
+urlpatterns = [
+    path('', test_view),
+]
+
+app = django.core.asgi.get_asgi_application()
+
+if __name__ == '__main__':
+    import uvicorn
+    uvicorn.run("reproduce_error:app", host="127.0.0.1", port=8000)
