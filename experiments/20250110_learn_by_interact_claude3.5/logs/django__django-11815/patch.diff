diff --git a/django/db/migrations/serializer.py b/django/db/migrations/serializer.py
index 27b5cbd379..40fb7142cc 100644
--- a/django/db/migrations/serializer.py
+++ b/django/db/migrations/serializer.py
@@ -120,9 +120,8 @@ class EnumSerializer(BaseSerializer):
     def serialize(self):
         enum_class = self.value.__class__
         module = enum_class.__module__
-        v_string, v_imports = serializer_factory(self.value.value).serialize()
-        imports = {'import %s' % module, *v_imports}
-        return "%s.%s(%s)" % (module, enum_class.__name__, v_string), imports
+        imports = {'import %s' % module}
+        return "%s.%s['%s']" % (module, enum_class.__name__, self.value.name), imports
 
 
 class FloatSerializer(BaseSimpleSerializer):
@@ -337,3 +336,4 @@ def serializer_factory(value):
         "migration files.\nFor more, see https://docs.djangoproject.com/en/%s/"
         "topics/migrations/#migration-serializing" % (value, get_docs_version())
     )
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..0965729adc
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,30 @@
+import os
+import django
+from django.conf import settings
+
+# Configure settings before importing models
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=['django.contrib.contenttypes'],
+        USE_I18N=True,
+        LANGUAGES=[('en', 'English'), ('fr', 'French')],
+        LANGUAGE_CODE='en',
+    )
+    django.setup()
+
+from enum import Enum
+from django.utils.translation import gettext_lazy as _
+
+class Status(Enum):
+    GOOD = _('Good')  # 'Good' will be translated
+    BAD = _('Bad')  # 'Bad' will be translated
+    def __str__(self):
+        return self.name
+
+# Simulate what the migration serializer does
+from django.db.migrations.serializer import serializer_factory
+status_value = Status.GOOD
+serialized, imports = serializer_factory(status_value).serialize()
+print("Serialized value:", serialized)
+print("Required imports:", imports)
+
