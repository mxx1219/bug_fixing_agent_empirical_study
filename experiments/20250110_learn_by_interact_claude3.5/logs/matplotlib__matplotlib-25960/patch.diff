diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py
index dab2bc4a5a..ee487d67d4 100644
--- a/lib/matplotlib/figure.py
+++ b/lib/matplotlib/figure.py
@@ -2272,20 +2272,47 @@ class SubFigure(FigureBase):
             self.bbox_relative.p0 = bbox.p0
             self.bbox_relative.p1 = bbox.p1
             return
-        # need to figure out *where* this subplotspec is.
+
+        # Get the gridspec and spacing parameters
         gs = self._subplotspec.get_gridspec()
+
         wr = np.asarray(gs.get_width_ratios())
         hr = np.asarray(gs.get_height_ratios())
-        dx = wr[self._subplotspec.colspan].sum() / wr.sum()
-        dy = hr[self._subplotspec.rowspan].sum() / hr.sum()
-        x0 = wr[:self._subplotspec.colspan.start].sum() / wr.sum()
-        y0 = 1 - hr[:self._subplotspec.rowspan.stop].sum() / hr.sum()
+        wspace = gs.wspace or 0  # Default to 0 if None
+        hspace = gs.hspace or 0  # Default to 0 if None
+
+        # First normalize width and height ratios
+        wr = wr / wr.sum()
+        hr = hr / hr.sum()
+
+        # Calculate the total available space considering spacing
+        total_cols = len(wr)
+        total_rows = len(hr)
+        width_for_space = wspace * (total_cols - 1)
+        height_for_space = hspace * (total_rows - 1)
+        
+        # Adjust the width and height ratios to account for spacing
+        width_for_plots = 1.0 - width_for_space
+        height_for_plots = 1.0 - height_for_space
+        wr *= width_for_plots
+        hr *= height_for_plots
+
+        # Calculate the starting position
+        x0 = sum(wr[:self._subplotspec.colspan.start]) + wspace * self._subplotspec.colspan.start
+        y0 = 1.0 - (sum(hr[:self._subplotspec.rowspan.stop]) + hspace * self._subplotspec.rowspan.stop)
+
+        # Calculate the size
+        dx = sum(wr[self._subplotspec.colspan]) + wspace * (len(self._subplotspec.colspan) - 1)
+        dy = sum(hr[self._subplotspec.rowspan]) + hspace * (len(self._subplotspec.rowspan) - 1)
+
         if self.bbox_relative is None:
             self.bbox_relative = Bbox.from_bounds(x0, y0, dx, dy)
+
         else:
             self.bbox_relative.p0 = (x0, y0)
             self.bbox_relative.p1 = (x0 + dx, y0 + dy)
 
+
     def get_constrained_layout(self):
         """
         Return whether constrained layout is being used.
@@ -3616,3 +3643,7 @@ def figaspect(arg):
     # the min/max dimensions (we don't want figures 10 feet tall!)
     newsize = np.clip(newsize, figsize_min, figsize_max)
     return newsize
+
+
+
+
diff --git a/lib/matplotlib/gridspec.py b/lib/matplotlib/gridspec.py
index c86a527ef5..5e977af725 100644
--- a/lib/matplotlib/gridspec.py
+++ b/lib/matplotlib/gridspec.py
@@ -428,7 +428,10 @@ class GridSpec(GridSpecBase):
         else:
             subplotpars = copy.copy(figure.subplotpars)
 
-        subplotpars.update(**{k: getattr(self, k) for k in self._AllowedKeys})
+        # For subfigures, we want to use the explicitly set wspace/hspace
+        explicit_params = {k: getattr(self, k) for k in self._AllowedKeys 
+                         if getattr(self, k) is not None}
+        subplotpars.update(**explicit_params)
 
         return subplotpars
 
@@ -495,6 +498,7 @@ class GridSpecFromSubplotSpec(GridSpecBase):
         height_ratios : array-like of length *nrows*, optional
             See `GridSpecBase` for details.
         width_ratios : array-like of length *ncols*, optional
+
             See `GridSpecBase` for details.
         """
         self._wspace = wspace
@@ -651,7 +655,6 @@ class SubplotSpec:
 
     def is_first_col(self):
         return self.colspan.start == 0
-
     def is_last_col(self):
         return self.colspan.stop == self.get_gridspec().ncols
 
@@ -663,7 +666,7 @@ class SubplotSpec:
         nrows, ncols = gridspec.get_geometry()
         rows, cols = np.unravel_index([self.num1, self.num2], (nrows, ncols))
         fig_bottoms, fig_tops, fig_lefts, fig_rights = \
-            gridspec.get_grid_positions(figure)
+            gridspec.get_grid_positions(figure)  # Remove raw=True and handle spacing in GridSpec
 
         fig_bottom = fig_bottoms[rows].min()
         fig_top = fig_tops[rows].max()
@@ -736,3 +739,11 @@ class SubplotSpec:
                 fig.add_subplot(gssub[0, i])
         """
         return GridSpecFromSubplotSpec(nrows, ncols, self, **kwargs)
+
+
+
+
+
+
+
+
diff --git a/test_subfigures.py b/test_subfigures.py
new file mode 100644
index 0000000000..73d0e71642
--- /dev/null
+++ b/test_subfigures.py
@@ -0,0 +1,35 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+def test_spacing(wspace, hspace):
+    """Test subfigure spacing with given wspace and hspace values."""
+    fig = plt.figure(figsize=(10, 10))
+    fig.suptitle(f'wspace={wspace}, hspace={hspace}', y=0.95)
+    
+    # Create 2x2 subfigures with specified spacing
+    subfigs = fig.subfigures(2, 2, wspace=wspace, hspace=hspace)
+    
+    # Add a plot to each subfigure with a colored background to make spacing obvious
+    for i, subfig in enumerate(subfigs.flat):
+        subfig.patch.set_facecolor(f'C{i}')  # Different color for each subfigure
+        subfig.patch.set_alpha(0.2)  # Semi-transparent
+        ax = subfig.add_subplot(111)
+        ax.set_title(f'Subfigure {i+1}')
+        # Add a border to make subfigure boundaries clear
+        ax.spines['top'].set_visible(True)
+        ax.spines['right'].set_visible(True)
+        ax.spines['bottom'].set_visible(True)
+        ax.spines['left'].set_visible(True)
+        # Plot some data
+        x = np.linspace(0, 10, 100)
+        ax.plot(x, np.sin(x + i))
+        ax.grid(True)
+    
+    return fig
+
+# Test different spacing values
+for wspace, hspace in [(0, 0), (0.2, 0.2), (0.5, 0.5)]:
+    fig = test_spacing(wspace, hspace)
+    plt.savefig(f'test_subfigures_w{wspace}_h{hspace}.png')
+    plt.close()
+
diff --git a/test_subfigures_w0.1_h0.1.png b/test_subfigures_w0.1_h0.1.png
new file mode 100644
index 0000000000..5e70c214ad
Binary files /dev/null and b/test_subfigures_w0.1_h0.1.png differ
diff --git a/test_subfigures_w0.2_h0.2.png b/test_subfigures_w0.2_h0.2.png
new file mode 100644
index 0000000000..564c2d97e2
Binary files /dev/null and b/test_subfigures_w0.2_h0.2.png differ
diff --git a/test_subfigures_w0.5_h0.5.png b/test_subfigures_w0.5_h0.5.png
new file mode 100644
index 0000000000..7c3e52e42f
Binary files /dev/null and b/test_subfigures_w0.5_h0.5.png differ
diff --git a/test_subfigures_w0_h0.png b/test_subfigures_w0_h0.png
new file mode 100644
index 0000000000..c17c7feb8d
Binary files /dev/null and b/test_subfigures_w0_h0.png differ
