diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 90fc31bee5..9fec1cdcef 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -170,10 +170,24 @@ class CreateModel(ModelOperation):
                     managers=self.managers,
                 ),
             ]
+        elif (
+            isinstance(operation, AlterModelManagers)
+            and self.name_lower == operation.name_lower
+        ):
+            return [
+                CreateModel(
+                    self.name,
+                    fields=self.fields,
+                    options=self.options,
+                    bases=self.bases,
+                    managers=operation.managers,
+                ),
+            ]
         elif (
             isinstance(operation, AlterTogetherOptionOperation)
             and self.name_lower == operation.name_lower
         ):
+
             return [
                 CreateModel(
                     self.name,
@@ -944,3 +958,5 @@ class RemoveConstraint(IndexOperation):
     @property
     def migration_name_fragment(self):
         return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
+
+
diff --git a/test_migration_optimization.py b/test_migration_optimization.py
new file mode 100644
index 0000000000..e4d776d63e
--- /dev/null
+++ b/test_migration_optimization.py
@@ -0,0 +1,29 @@
+from django.db.migrations.operations.models import CreateModel, AlterModelManagers
+from django.db.models import Manager
+
+# Test case 1: Basic optimization
+create_op = CreateModel(
+    name='TestModel',
+    fields=[('id', None)],  # Simplified fields
+    managers=[('objects', Manager())]
+)
+
+alter_managers_op = AlterModelManagers(
+    name='TestModel',
+    managers=[('custom_objects', Manager())]
+)
+
+# Test optimization
+result = create_op.reduce(alter_managers_op, app_label='testapp')
+
+# Verify result
+if not result:
+    print("ERROR: No optimization performed")
+elif len(result) != 1:
+    print("ERROR: Expected 1 operation, got", len(result))
+elif not isinstance(result[0], CreateModel):
+    print("ERROR: Expected CreateModel, got", type(result[0]))
+elif result[0].managers != alter_managers_op.managers:
+    print("ERROR: Managers not updated correctly")
+else:
+    print("SUCCESS: CreateModel + AlterModelManagers optimized correctly")
