diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 4d8ddf3ee5..0e6e0324e4 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -797,8 +797,9 @@ class ConciseDateFormatter(ticker.Formatter):
         # 3: hours, 4: minutes, 5: seconds, 6: microseconds
         for level in range(5, -1, -1):
             if len(np.unique(tickdate[:, level])) > 1:
-                if level < 2:
-                    show_offset = False
+                # Always show offset (year) if we're at month level and year isn't changing
+                if level == 1 and len(np.unique(tickdate[:, 0])) == 1:
+                    show_offset = True
                 break
             elif level == 0:
                 # all tickdate are the same, so only micros might be different
@@ -1927,3 +1928,4 @@ units.registry[np.datetime64] = \
     units.registry[datetime.date] = \
     units.registry[datetime.datetime] = \
     _SwitchableDateConverter()
+
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..18726f1170
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,26 @@
+import matplotlib.pyplot as plt
+import matplotlib.dates as mdates
+from datetime import datetime, timedelta
+
+# Create time array starting from February
+initial = datetime(2021, 2, 14, 0, 0, 0)
+time_array = [initial + timedelta(days=x) for x in range(1, 200)]
+
+# Create data array
+data = [-x**2/20000 for x in range(1, 200)]
+
+# Plot data
+fig, ax = plt.subplots()
+ax.plot(time_array, data)
+
+locator = mdates.AutoDateLocator()
+formatter = mdates.ConciseDateFormatter(locator)
+
+ax.grid(True)
+ax.set_ylabel("Temperature (Â°C)")
+ax.xaxis.set_major_locator(locator)
+ax.xaxis.set_major_formatter(formatter)
+fig.autofmt_xdate()  # Automatically makes the x-labels rotate
+
+plt.savefig('before_fix.png')
+plt.close()
