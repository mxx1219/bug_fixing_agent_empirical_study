diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py
index ff6abdb958..835f5f01be 100644
--- a/lib/matplotlib/legend.py
+++ b/lib/matplotlib/legend.py
@@ -73,6 +73,23 @@ class DraggableLegend(DraggableOffsetBox):
 
         super().__init__(legend, legend._legend_box, use_blit=use_blit)
 
+    def __getstate__(self):
+        # Return a reduced state for pickling
+        state = self.__dict__.copy()
+        # Remove unpicklable canvas reference
+        state.pop('canvas', None)
+        state.pop('background', None)
+        state.pop('_last_pos', None)
+        return state
+        
+    def __setstate__(self, state):
+        # Restore instance attributes
+        self.__dict__.update(state)
+        # Initialize canvas-dependent attributes as None
+        self.canvas = None
+        self.background = None
+        self._last_pos = None
+
     def finalize_offset(self):
         if self._update == "loc":
             self._update_loc(self.get_loc_in_canvas())
@@ -1353,3 +1370,4 @@ def _parse_legend_args(axs, *args, handles=None, labels=None, **kwargs):
         raise TypeError('Invalid arguments to legend.')
 
     return handles, labels, extra_args, kwargs
+
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..92ff6b89d0
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,24 @@
+import matplotlib
+matplotlib.use('Qt5Agg')  # Force Qt backend
+import matplotlib.pyplot as plt
+import pickle
+
+fig = plt.figure()
+ax = fig.add_subplot(111)
+
+time=[0,1,2,3,4]
+speed=[40,43,45,47,48]
+
+ax.plot(time,speed,label="speed")
+
+leg=ax.legend()
+leg.set_draggable(True)  # This line causes the pickling error
+
+try:
+    pickle.dumps(fig)
+    print("Successfully pickled figure!")
+except Exception as e:
+    print(f"Error pickling figure: {str(e)}")
+
+plt.close()
+
diff --git a/test_legend_pickle.py b/test_legend_pickle.py
new file mode 100644
index 0000000000..19d1817039
--- /dev/null
+++ b/test_legend_pickle.py
@@ -0,0 +1,34 @@
+import matplotlib.pyplot as plt
+import pickle
+
+# Create a figure with draggable legend
+fig = plt.figure()
+ax = fig.add_subplot(111)
+
+time=[0,1,2,3,4]
+speed=[40,43,45,47,48]
+
+ax.plot(time,speed,label="speed")
+
+leg=ax.legend()
+leg.set_draggable(True)
+
+# Test pickling
+try:
+    # Try to pickle the figure
+    pickled_data = pickle.dumps(fig)
+    print("Successfully pickled figure!")
+    
+    # Try to unpickle and verify
+    unpickled_fig = pickle.loads(pickled_data)
+    print("Successfully unpickled figure!")
+    
+    # Verify the legend is still draggable
+    unpickled_leg = unpickled_fig.axes[0].get_legend()
+    if hasattr(unpickled_leg, '_draggable'):
+        print("Legend is still draggable!")
+    else:
+        print("Error: Legend lost draggable state!")
+
+except Exception as e:
+    print(f"Error: {str(e)}")
