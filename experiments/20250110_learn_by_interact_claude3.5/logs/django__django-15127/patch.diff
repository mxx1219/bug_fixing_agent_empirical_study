diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py
index 01422066a6..17f45d00ca 100644
--- a/django/contrib/messages/storage/base.py
+++ b/django/contrib/messages/storage/base.py
@@ -1,9 +1,19 @@
 from django.conf import settings
 from django.contrib.messages import constants, utils
+from django.core.signals import setting_changed
 
 LEVEL_TAGS = utils.get_level_tags()
 
 
+def update_level_tags(**kwargs):
+    if kwargs['setting'] == 'MESSAGE_TAGS':
+        global LEVEL_TAGS
+        LEVEL_TAGS = utils.get_level_tags()
+
+
+setting_changed.connect(update_level_tags)
+
+
 class Message:
     """
     Represent an actual message that can be stored in any of the supported
@@ -172,3 +182,4 @@ class BaseStorage:
             self._level = int(value)
 
     level = property(_get_level, _set_level, _set_level)
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..c44e8f7a35
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,18 @@
+from django.test import TestCase, override_settings
+from django.contrib.messages import constants
+from django.contrib.messages.storage.base import Message, LEVEL_TAGS
+
+class MessageTagsTest(TestCase):
+    def test_level_tags_override(self):
+        print("Initial LEVEL_TAGS:", LEVEL_TAGS)
+        print("Initial level_tag for INFO:", Message(constants.INFO, "test").level_tag)
+        
+        with override_settings(MESSAGE_TAGS={constants.INFO: 'custom_info'}):
+            # This should show 'custom_info' but shows '' due to the bug
+            print("Modified level_tag for INFO:", Message(constants.INFO, "test").level_tag)
+
+if __name__ == '__main__':
+    import django
+    django.setup()
+    test = MessageTagsTest()
+    test.test_level_tags_override()
