diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index 33cc636b22..1fdc0bbcf5 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -748,7 +748,8 @@ class Query(BaseExpression):
                     cur_model = source.related_model
                 else:
                     cur_model = source.remote_field.model
-                opts = cur_model._meta
+                opts = cur_model._meta.concrete_model._meta
+
                 # Even if we're "just passing through" this model, we must add
                 # both the current model's pk and the related reference field
                 # (if it's not a reverse relation) to the things we select.
@@ -2691,3 +2692,4 @@ class JoinPromoter:
         query.promote_joins(to_promote)
         query.demote_joins(to_demote)
         return to_demote
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..3940d826b4
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,50 @@
+from django.db import models
+from django.conf import settings
+import os, django
+
+# Configure minimal Django settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=['django.contrib.contenttypes'],
+)
+django.setup()
+
+# Define the models
+class CustomModel(models.Model):
+    name = models.CharField(max_length=16)
+    class Meta:
+        app_label = 'reproduction'
+
+class ProxyCustomModel(CustomModel):
+    class Meta:
+        proxy = True
+        app_label = 'reproduction'
+
+class AnotherModel(models.Model):
+    custom = models.ForeignKey(
+        ProxyCustomModel,
+        on_delete=models.SET_NULL,
+        null=True,
+        blank=True,
+    )
+    class Meta:
+        app_label = 'reproduction'
+
+# Create tables and test data
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(CustomModel)
+    schema_editor.create_model(AnotherModel)
+
+# Create test data
+custom = ProxyCustomModel.objects.create(name="test")
+another = AnotherModel.objects.create(custom=custom)
+
+# Reproduce the error
+print("Attempting to reproduce error...")
+list(AnotherModel.objects.select_related("custom").only("custom__name").all())
