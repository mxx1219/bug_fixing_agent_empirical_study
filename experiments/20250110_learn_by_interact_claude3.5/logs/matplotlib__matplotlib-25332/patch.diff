diff --git a/lib/matplotlib/cbook.py b/lib/matplotlib/cbook.py
index c9699b2e21..76c78b0d35 100644
--- a/lib/matplotlib/cbook.py
+++ b/lib/matplotlib/cbook.py
@@ -846,8 +846,27 @@ class Grouper:
         siblings = self._mapping.get(weakref.ref(a), [weakref.ref(a)])
         return [x() for x in siblings]
 
+    def __getstate__(self):
+        # Convert weak references to strong references for pickling
+        # Filter out dead references and store only live objects
+        return {
+            '_mapping': {
+                k(): [x() for x in v if x() is not None]
+                for k, v in self._mapping.items()
+                if k() is not None
+            }
+        }
+
+    def __setstate__(self, state):
+        # Reconstruct weak references from unpickled state
+        self._mapping = {
+            weakref.ref(k): [weakref.ref(x) for x in v]
+            for k, v in state['_mapping'].items()
+        }
+
 
 class GrouperView:
+
     """Immutable view over a `.Grouper`."""
 
     def __init__(self, grouper): self._grouper = grouper
@@ -2276,3 +2295,4 @@ def _auto_format_str(fmt, value):
         return fmt % (value,)
     except (TypeError, ValueError):
         return fmt.format(value)
+
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..c5371fab2f
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,28 @@
+import matplotlib.pyplot as plt
+import pickle
+
+# Create figure with aligned labels
+fig = plt.figure()
+ax1 = fig.add_subplot(211)
+ax2 = fig.add_subplot(212)
+time=[0,1,2,3,4]
+speed=[40000,4300,4500,4700,4800]
+acc=[10,11,12,13,14]
+ax1.plot(time,speed)
+ax1.set_ylabel('speed')
+ax2.plot(time,acc)
+ax2.set_ylabel('acc')
+
+# Align labels - this would previously fail
+fig.align_labels()
+
+# Try to pickle and unpickle
+pickled_data = pickle.dumps(fig)
+unpickled_fig = pickle.loads(pickled_data)
+
+print("Successfully pickled and unpickled figure!")
+
+# Show both figures to verify they're identical
+plt.figure(unpickled_fig.number)
+plt.show()
+
