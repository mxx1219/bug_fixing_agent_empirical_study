diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
index 6752a8e3c0..48b272c8b5 100644
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -326,12 +326,14 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
         """Create a field on a model."""
         # Fields with default values cannot by handled by ALTER TABLE ADD
         # COLUMN statement because DROP DEFAULT is not supported in
-        # ALTER TABLE.
-        if not field.null or self.effective_default(field) is not None:
+        # ALTER TABLE. Also OneToOneField requires rebuilding the table as
+        # SQLite doesn't support adding UNIQUE columns with ALTER TABLE.
+        if not field.null or self.effective_default(field) is not None or field.one_to_one:
             self._remake_table(model, create_field=field)
         else:
             super().add_field(model, field)
 
+
     def remove_field(self, model, field):
         """
         Remove a field from a model. Usually involves deleting a column,
@@ -445,3 +447,4 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
 
     def _collate_sql(self, collation):
         return 'COLLATE ' + collation
+
