diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 92fe4affb9..482c4aae87 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -277,6 +277,7 @@ class Collector:
             if self.can_fast_delete(instance):
                 with transaction.mark_for_rollback_on_error():
                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
+                setattr(instance, model._meta.pk.attname, None)
                 return count, {model._meta.label: count}
 
         with transaction.atomic(using=self.using, savepoint=False):
@@ -325,3 +326,4 @@ class Collector:
             for instance in instances:
                 setattr(instance, model._meta.pk.attname, None)
         return sum(deleted_counter.values()), dict(deleted_counter)
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..3bdacf3754
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,34 @@
+from django.conf import settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=['django.contrib.contenttypes']
+)
+
+import django
+django.setup()
+
+from django.db import models, connection
+
+# Create a simple model
+class SimpleModel(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        # Use an app that's already installed
+        app_label = 'contenttypes'
+
+# Create the table manually
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(SimpleModel)
+
+# Create and delete an instance
+obj = SimpleModel.objects.create(name="test")
+print(f"Before delete - PK: {obj.pk}")
+obj.delete()
+print(f"After delete - PK: {obj.pk}")
+
