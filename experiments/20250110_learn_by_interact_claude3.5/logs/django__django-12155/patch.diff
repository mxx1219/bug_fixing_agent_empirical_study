diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 4c0e7e2a56..0efa2eca04 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -34,7 +34,8 @@ def trim_docstring(docstring):
         return ''
     # Convert tabs to spaces and split into lines
     lines = docstring.expandtabs().splitlines()
-    indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())
+    indent = min((len(line) - len(line.lstrip()) for line in lines[1:] if line.lstrip()), default=0)
+
     trimmed = [lines[0].lstrip()] + [line[indent:].rstrip() for line in lines[1:]]
     return "\n".join(trimmed).strip()
 
@@ -238,3 +239,4 @@ def replace_unnamed_groups(pattern):
         return ''.join(final_pattern)
     else:
         return pattern
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..314a0d567b
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,45 @@
+from django.contrib.admindocs.utils import trim_docstring, parse_rst
+
+def test():
+    """test tests something.
+    This is a longer description.
+    """
+    pass
+
+def test2():
+    """
+    test tests something.
+    This is a longer description.
+    """
+    pass
+
+# Configure Django settings
+from django.conf import settings
+settings.configure(
+    ROOT_URLCONF='django.contrib.admindocs.urls',
+    INSTALLED_APPS=['django.contrib.admindocs'],
+    SECRET_KEY='dummy'
+)
+
+print("Case 1 - No empty first line:")
+docstring = test.__doc__
+trimmed1 = trim_docstring(docstring)
+print("Original docstring:", repr(docstring))
+print("Trimmed docstring:", repr(trimmed1))
+try:
+    result = parse_rst(trimmed1, 'view', "test_function")
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error:", str(e))
+
+print("\nCase 2 - With empty first line (Django style):")
+docstring = test2.__doc__
+trimmed2 = trim_docstring(docstring)
+print("Original docstring:", repr(docstring))
+print("Trimmed docstring:", repr(trimmed2))
+try:
+    result = parse_rst(trimmed2, 'view', "test_function")
+    print("Success! Result:", result)
+except Exception as e:
+    print("Error:", str(e))
+
