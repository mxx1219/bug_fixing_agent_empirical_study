diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..173f9fe05a
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,55 @@
+from django.conf import settings
+from django.db import models
+from django.test.utils import override_settings
+
+# Configure Django settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=['django.contrib.contenttypes']
+)
+
+import django
+django.setup()
+
+# Define test model
+class Dimension(models.Model):
+    order = models.IntegerField(default=0)
+
+    def __str__(self):
+        return f"Dimension {self.id}"
+
+    class Meta:
+        app_label = 'contenttypes'
+
+# Create tables
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(Dimension)
+
+# Create test data
+dims = [
+    Dimension.objects.create(order=i) for i in range(1, 10)
+]
+
+print("\nOriginal queryset:")
+print(Dimension.objects.values_list('id', flat=True))
+
+print("\nUnion queryset with ordering:")
+qs = (
+    Dimension.objects.filter(pk__in=[1, 2])
+    .union(Dimension.objects.filter(pk__in=[6, 7]))
+    .order_by('order')
+)
+print(qs)
+
+print("\nTrying to re-order:")
+try:
+    print(qs.order_by().values_list('pk', flat=True))
+    print(qs)
+except Exception as e:
+    print(f"Error occurred as expected: {str(e)}")
