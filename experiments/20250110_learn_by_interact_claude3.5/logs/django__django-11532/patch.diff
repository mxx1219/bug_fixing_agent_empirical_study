diff --git a/django/core/mail/message.py b/django/core/mail/message.py
index e393b4cf5c..512abf7621 100644
--- a/django/core/mail/message.py
+++ b/django/core/mail/message.py
@@ -63,6 +63,15 @@ def forbid_multi_line_headers(name, val, encoding):
     except UnicodeEncodeError:
         if name.lower() in ADDRESS_HEADERS:
             val = ', '.join(sanitize_address(addr, encoding) for addr in getaddresses((val,)))
+        elif name.lower() == 'message-id':
+            # For Message-ID, ensure domain part is IDNA encoded
+            at_idx = val.rindex('@')
+            localpart, domain = val[:at_idx], val[at_idx + 1:]
+            try:
+                domain = domain.encode('idna').decode('ascii')
+                val = localpart + '@' + domain
+            except UnicodeError:
+                val = Header(val, encoding).encode()
         else:
             val = Header(val, encoding).encode()
     else:
@@ -71,6 +80,7 @@ def forbid_multi_line_headers(name, val, encoding):
     return name, val
 
 
+
 def sanitize_address(addr, encoding):
     """
     Format a pair of (name, address) or an email address string.
@@ -440,3 +450,4 @@ class EmailMultiAlternatives(EmailMessage):
             for alternative in self.alternatives:
                 msg.attach(self._create_mime_attachment(*alternative))
         return msg
+
diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py
index d18dfe4667..ce71944bf7 100644
--- a/django/core/mail/utils.py
+++ b/django/core/mail/utils.py
@@ -14,7 +14,16 @@ class CachedDnsName:
     def get_fqdn(self):
         if not hasattr(self, '_fqdn'):
             self._fqdn = socket.getfqdn()
-        return self._fqdn
+        # Convert domain to IDNA/punycode for non-ASCII hostnames
+        try:
+            return self._fqdn.encode('idna').decode('ascii')
+        except UnicodeError:
+            # If IDNA encoding fails, try to return ASCII portion
+            try:
+                return self._fqdn.encode('ascii', 'ignore').decode('ascii')
+            except UnicodeError:
+                return 'localhost'
 
 
 DNS_NAME = CachedDnsName()
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..50958ec6b2
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,15 @@
+from django.conf import settings
+settings.configure()
+
+from unittest.mock import patch
+from django.core.mail import EmailMessage
+
+def test_unicode_dns():
+    with patch("django.core.mail.message.DNS_NAME", "漢字"):
+        email = EmailMessage('subject', '', 'from@example.com', ['to@example.com'])
+        email.encoding = 'iso-8859-1'
+        message = email.message()
+        print("Message ID:", message['Message-ID'])
+
+if __name__ == "__main__":
+    test_unicode_dns()
