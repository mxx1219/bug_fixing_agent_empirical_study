diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 6ea18dd22f..cc97ae012b 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -318,12 +318,17 @@ class LocalePrefixPattern:
         if language_code == settings.LANGUAGE_CODE and not self.prefix_default_language:
             return ''
         else:
-            return '%s/' % language_code
+            # Handle BCP 47 language tags (e.g., en-Latn-US)
+            return '%s/' % language_code.lower()
 
     def match(self, path):
-        language_prefix = self.language_prefix
-        if path.startswith(language_prefix):
-            return path[len(language_prefix):], (), {}
+        if not path:
+            return None
+        # Handle BCP 47 language tags by doing case-insensitive prefix match
+        for lang_code in {code for code, name in settings.LANGUAGES}:
+            prefix = f"{lang_code.lower()}/"
+            if path.lower().startswith(prefix):
+                return path[len(prefix):], (), {}
         return None
 
     def check(self):
@@ -723,3 +728,4 @@ class URLResolver:
                 "a valid view function or pattern name." % {'view': lookup_view_s}
             )
         raise NoReverseMatch(msg)
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..9b16de4663
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,50 @@
+from django.conf import settings
+from django.http import HttpResponse
+from django.urls import path
+from django.conf.urls.i18n import i18n_patterns
+
+# Configure minimal Django settings
+settings.configure(
+    DEBUG=True,
+    USE_I18N=True,
+    ROOT_URLCONF=__name__,
+    SECRET_KEY='dummy',
+    MIDDLEWARE=[
+        'django.middleware.locale.LocaleMiddleware',
+    ],
+    LANGUAGE_CODE='en-us',
+    LANGUAGES=[
+        ('en-us', "English"),
+        ('en-latn-us', "Latin English"),
+        ('en-Latn-US', "BCP 47 case format"),
+    ],
+)
+
+# Create a simple view
+def test_view(request):
+    return HttpResponse('U!')
+
+# URL patterns
+urlpatterns = i18n_patterns(
+    path('', test_view),
+)
+
+if __name__ == '__main__':
+    import django
+    django.setup()
+    
+    # Test URLs
+    from django.urls import resolve, Resolver404
+    
+    test_urls = [
+        '/en-us/',  # should work
+        '/en-latn-us/',  # should work but fails
+        '/en-Latn-US/',  # should work but fails
+    ]
+    
+    for url in test_urls:
+        try:
+            match = resolve(url)
+            print(f"✓ URL '{url}' resolved successfully")
+        except Resolver404:
+            print(f"✗ URL '{url}' failed to resolve")
