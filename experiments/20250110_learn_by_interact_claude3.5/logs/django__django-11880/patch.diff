diff --git a/django/forms/fields.py b/django/forms/fields.py
index 03cd8af8d7..cbabdd3b1f 100644
--- a/django/forms/fields.py
+++ b/django/forms/fields.py
@@ -200,9 +200,11 @@ class Field:
         memo[id(self)] = result
         result.widget = copy.deepcopy(self.widget, memo)
         result.validators = self.validators[:]
+        result.error_messages = copy.deepcopy(self.error_messages, memo)
         return result
 
 
+
 class CharField(Field):
     def __init__(self, *, max_length=None, min_length=None, strip=True, empty_value='', **kwargs):
         self.max_length = max_length
@@ -1198,3 +1200,4 @@ class UUIDField(CharField):
             except ValueError:
                 raise ValidationError(self.error_messages['invalid'], code='invalid')
         return value
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..23205074ee
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,19 @@
+from django.forms import CharField
+import copy
+
+def test_error_messages_deepcopy():
+    # Create original field
+    field1 = CharField(error_messages={'required': 'Original message'})
+    
+    # Create a deep copy
+    field2 = copy.deepcopy(field1)
+    
+    # Modify error message in field2
+    field2.error_messages['required'] = 'Modified message'
+    
+    # Print both messages to show they are incorrectly shared
+    print("Field 1 required message:", field1.error_messages['required'])
+    print("Field 2 required message:", field2.error_messages['required'])
+
+if __name__ == '__main__':
+    test_error_messages_deepcopy()
