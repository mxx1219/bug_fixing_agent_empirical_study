diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py
index b6594b043b..d205e4284e 100644
--- a/django/db/models/functions/datetime.py
+++ b/django/db/models/functions/datetime.py
@@ -292,7 +292,7 @@ class TruncDate(TruncBase):
     def as_sql(self, compiler, connection):
         # Cast to date rather than truncate to date.
         lhs, lhs_params = compiler.compile(self.lhs)
-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None
+        tzname = None if not settings.USE_TZ else self.get_tzname()
         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)
         return sql, lhs_params
 
@@ -305,12 +305,13 @@ class TruncTime(TruncBase):
     def as_sql(self, compiler, connection):
         # Cast to time rather than truncate to time.
         lhs, lhs_params = compiler.compile(self.lhs)
-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None
+        tzname = None if not settings.USE_TZ else self.get_tzname()
         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)
         return sql, lhs_params
 
 
 class TruncHour(TruncBase):
+
     kind = 'hour'
 
 
@@ -324,3 +325,6 @@ class TruncSecond(TruncBase):
 
 DateTimeField.register_lookup(TruncDate)
 DateTimeField.register_lookup(TruncTime)
+
+
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..9bb96144e0
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,42 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+
+from django.conf import settings
+settings.configure(
+    USE_TZ=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=['django.contrib.contenttypes'],
+)
+
+import django
+django.setup()
+
+from django.db import models
+from django.db.models import Count
+from django.db.models.functions import TruncDate
+import pytz
+
+class TimeSlots(models.Model):
+    start_at = models.DateTimeField()
+    class Meta:
+        app_label = 'contenttypes'
+        managed = False
+
+tz = pytz.timezone("America/New_York")
+print("Using timezone:", tz)
+
+# This will show the SQL query that would be executed
+report = (
+    TimeSlots.objects.annotate(start_date=TruncDate("start_at", tzinfo=tz))
+    .values("start_date")
+    .annotate(timeslot_count=Count("id"))
+    .values("start_date", "timeslot_count")
+)
+print("\nSQL Query:")
+print(report.query)
+
