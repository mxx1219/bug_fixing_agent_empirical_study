diff --git a/django/http/response.py b/django/http/response.py
index 6a84e193ba..a56c581f7e 100644
--- a/django/http/response.py
+++ b/django/http/response.py
@@ -231,6 +231,8 @@ class HttpResponseBase:
         # - when self._charset != 'utf-8' it re-encodes the content
         if isinstance(value, bytes):
             return bytes(value)
+        if isinstance(value, memoryview):
+            return bytes(value.tobytes())
         if isinstance(value, str):
             return bytes(value.encode(self.charset))
         # Handle non-string types.
@@ -556,3 +558,4 @@ class JsonResponse(HttpResponse):
         kwargs.setdefault('content_type', 'application/json')
         data = json.dumps(data, cls=encoder, **json_dumps_params)
         super().__init__(content=data, **kwargs)
+
diff --git a/reproduce_memoryview.py b/reproduce_memoryview.py
new file mode 100644
index 0000000000..c06d3e22c2
--- /dev/null
+++ b/reproduce_memoryview.py
@@ -0,0 +1,38 @@
+from django.conf import settings
+settings.configure()
+
+from django.http import HttpResponse
+
+# Test string content
+response1 = HttpResponse("My Content")
+print("String content:", response1.content)
+
+# Test bytes content
+response2 = HttpResponse(b"My Content")
+print("Bytes content:", response2.content)
+
+# Test memoryview content
+response3 = HttpResponse(memoryview(b"My Content"))
+print("Memoryview content:", response3.content)
+
+# Test edge cases
+print("\nEdge cases:")
+
+# Empty memoryview
+response4 = HttpResponse(memoryview(b""))
+print("Empty memoryview:", response4.content)
+
+# Non-ASCII characters
+response5 = HttpResponse(memoryview("Hello 世界".encode('utf-8')))
+print("Non-ASCII memoryview:", response5.content)
+
+# Null bytes
+response6 = HttpResponse(memoryview(b"Hello\x00World"))
+print("Null bytes memoryview:", response6.content)
+
+# Large memoryview
+large_content = b"x" * 1024 * 1024  # 1MB
+response7 = HttpResponse(memoryview(large_content))
+print("Large memoryview length:", len(response7.content))
+print("Large memoryview first 20 bytes:", response7.content[:20])
+
