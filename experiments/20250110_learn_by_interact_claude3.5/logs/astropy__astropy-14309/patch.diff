diff --git a/astropy/io/fits/connect.py b/astropy/io/fits/connect.py
index 4b6150f4ac..e7055651b6 100644
--- a/astropy/io/fits/connect.py
+++ b/astropy/io/fits/connect.py
@@ -69,7 +69,8 @@ def is_fits(origin, filepath, fileobj, *args, **kwargs):
             (".fits", ".fits.gz", ".fit", ".fit.gz", ".fts", ".fts.gz")
         ):
             return True
-    return isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+    return len(args) > 0 and isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+
 
 
 def _decode_mixins(tbl):
@@ -452,3 +453,4 @@ def write_table_fits(input, output, overwrite=False, append=False):
 io_registry.register_reader("fits", Table, read_table_fits)
 io_registry.register_writer("fits", Table, write_table_fits)
 io_registry.register_identifier("fits", Table, is_fits)
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..f15cf9a5b6
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,6 @@
+from astropy.io.registry import identify_format
+from astropy.table import Table
+
+# Try to identify format of a non-FITS file
+fmts = identify_format("write", Table, "bububu.ecsv", None, [], {})
+print(fmts)
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..80a48a27ad
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,17 @@
+from astropy.io.registry import identify_format
+from astropy.table import Table
+
+# Test case 1: Non-FITS file with .ecsv extension (should not raise IndexError)
+print("Test 1: Non-FITS file (.ecsv)")
+fmt = identify_format("write", Table, "test.ecsv", None, [], {})
+print(f"Format: {fmt}")
+
+# Test case 2: FITS file by extension
+print("\nTest 2: FITS file by extension")
+fmt = identify_format("write", Table, "test.fits", None, [], {})
+print(f"Format: {fmt}")
+
+# Test case 3: Non-FITS file with random extension
+print("\nTest 3: Non-FITS file (random extension)")
+fmt = identify_format("write", Table, "test.xyz", None, [], {})
+print(f"Format: {fmt}")
