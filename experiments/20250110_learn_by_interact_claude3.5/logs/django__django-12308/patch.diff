diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py
index e4ddc8f017..5e280f370f 100644
--- a/django/contrib/admin/utils.py
+++ b/django/contrib/admin/utils.py
@@ -398,10 +398,16 @@ def display_for_field(value, field, empty_value_display):
         return formats.number_format(value)
     elif isinstance(field, models.FileField) and value:
         return format_html('<a href="{}">{}</a>', value.url, value)
+    elif isinstance(field, models.JSONField) and value:
+        try:
+            return field.get_prep_value(value)
+        except TypeError:
+            return display_for_value(value, empty_value_display)
     else:
         return display_for_value(value, empty_value_display)
 
 
+
 def display_for_value(value, empty_value_display, boolean=False):
     from django.contrib.admin.templatetags.admin_list import _boolean_icon
 
@@ -543,3 +549,4 @@ def _get_changed_field_labels_from_form(form, changed_data):
             verbose_field_name = field_name
         changed_field_labels.append(str(verbose_field_name))
     return changed_field_labels
+
diff --git a/reproduce_json.py b/reproduce_json.py
new file mode 100644
index 0000000000..9030c292b1
--- /dev/null
+++ b/reproduce_json.py
@@ -0,0 +1,17 @@
+from django.contrib.admin.utils import display_for_field
+from django.db import models
+import json
+
+# Create a sample JSONField
+class SampleJSONField(models.JSONField):
+    def __init__(self):
+        super().__init__()
+
+# Create test data
+field = SampleJSONField()
+test_value = {"foo": "bar"}
+
+# Test display_for_field function
+result = display_for_field(test_value, field, empty_value_display='-empty-')
+print(f"Current output: {result}")
+print(f"Expected output: {json.dumps(test_value)}")
