diff --git a/django/db/models/query.py b/django/db/models/query.py
index be8580f2c4..258cfa9e48 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -773,7 +773,7 @@ class QuerySet(AltersData):
         # trickier so it's not done yet.
         if batch_size is not None and batch_size <= 0:
             raise ValueError("Batch size must be a positive integer.")
-        # Check that the parents share the same concrete model with the our
+        # Check that the parents share the same concrete model with our
         # model to detect the inheritance pattern ConcreteGrandParent ->
         # MultiTableParent -> ProxyChild. Simply checking self.model._meta.proxy
         # would not identify that case as involving multiple tables.
@@ -788,6 +788,21 @@ class QuerySet(AltersData):
             unique_fields = [
                 opts.pk.name if name == "pk" else name for name in unique_fields
             ]
+            # Map field names to actual db_column names
+            unique_field_columns = []
+            for field_name in unique_fields:
+                field = opts.get_field(field_name)
+                unique_field_columns.append(field.db_column or field.column)
+            unique_fields = unique_field_columns
+
+        if update_fields:
+            # Map update field names to actual db_column names
+            update_field_columns = []
+            for field_name in update_fields:
+                field = opts.get_field(field_name)
+                update_field_columns.append(field.db_column or field.column)
+            update_fields = update_field_columns
+
         on_conflict = self._check_bulk_create_options(
             ignore_conflicts,
             update_conflicts,
@@ -798,6 +813,7 @@ class QuerySet(AltersData):
         fields = opts.concrete_fields
         objs = list(objs)
         self._prepare_for_bulk_create(objs)
+
         with transaction.atomic(using=self.db, savepoint=False):
             objs_with_pk, objs_without_pk = partition(lambda o: o.pk is None, objs)
             if objs_with_pk:
@@ -2648,3 +2664,4 @@ def get_related_populators(klass_info, select, db):
         rel_cls = RelatedPopulator(rel_klass_info, select, db)
         iterators.append(rel_cls)
     return iterators
+
