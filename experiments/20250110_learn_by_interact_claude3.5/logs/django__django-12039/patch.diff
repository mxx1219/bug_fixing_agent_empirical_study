diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py
index 44e49806f8..3754df5f63 100644
--- a/django/db/backends/ddl_references.py
+++ b/django/db/backends/ddl_references.py
@@ -84,9 +84,11 @@ class Columns(TableColumns):
     def __str__(self):
         def col_str(column, idx):
             try:
-                return self.quote_name(column) + self.col_suffixes[idx]
+                if self.col_suffixes[idx]:  # Only add space if non-empty
+                    return self.quote_name(column) + ' ' + self.col_suffixes[idx]
             except IndexError:
-                return self.quote_name(column)
+                pass
+            return self.quote_name(column)
 
         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))
 
@@ -114,7 +116,8 @@ class IndexColumns(Columns):
             # length as self.columns.
             col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])
             try:
-                col = '{} {}'.format(col, self.col_suffixes[idx])
+                if self.col_suffixes[idx]:  # Only add space and suffix if non-empty
+                    col = '{} {}'.format(col, self.col_suffixes[idx])
             except IndexError:
                 pass
             return col
@@ -192,3 +195,4 @@ class Statement(Reference):
 
     def __str__(self):
         return self.template % self.parts
+
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..2711aae8ff
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,20 @@
+from django.db.backends.ddl_references import Columns, IndexColumns
+
+def quote_name(name):
+    return f'"{name}"'
+
+# Test case 1: Missing space before DESC
+cols = Columns('schema_author', ['name'], quote_name, col_suffixes=['DESC'])
+print("Test case 1 - Current output:")
+print(str(cols))
+print("Expected output:")
+print('"name" DESC')
+
+print("\n" + "="*50 + "\n")
+
+# Test case 2: Extra space after text_pattern_ops
+idx_cols = IndexColumns('schema_author', ['name'], quote_name, col_suffixes=[''], opclasses=['text_pattern_ops'])
+print("Test case 2 - Current output:")
+print(str(idx_cols))
+print("Expected output:")
+print('"name" text_pattern_ops')
