diff --git a/django/db/models/manager.py b/django/db/models/manager.py
index e37e56cd17..4470bcd174 100644
--- a/django/db/models/manager.py
+++ b/django/db/models/manager.py
@@ -81,11 +81,10 @@ class BaseManager:
     @classmethod
     def _get_queryset_methods(cls, queryset_class):
         def create_method(name, method):
+            from functools import wraps
+            @wraps(method)
             def manager_method(self, *args, **kwargs):
                 return getattr(self.get_queryset(), name)(*args, **kwargs)
-
-            manager_method.__name__ = method.__name__
-            manager_method.__doc__ = method.__doc__
             return manager_method
 
         new_methods = {}
@@ -211,3 +210,4 @@ class EmptyManager(Manager):
 
     def get_queryset(self):
         return super().get_queryset().none()
+
diff --git a/reproduce_signature_error.py b/reproduce_signature_error.py
new file mode 100644
index 0000000000..21c03e978a
--- /dev/null
+++ b/reproduce_signature_error.py
@@ -0,0 +1,31 @@
+import inspect
+from django.conf import settings
+from django.db import models
+import django
+
+# Configure minimal settings before importing models
+settings.configure(
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth']
+)
+
+# Initialize Django
+django.setup()
+
+class Person(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'auth'
+
+# Test method with fixed signature
+print("bulk_create signature:", inspect.signature(Person.objects.bulk_create))
+print("bulk_create doc:", Person.objects.bulk_create.__doc__.split('\n')[0])
+
+# Test methods with dynamic signatures
+print("\nfilter signature:", inspect.signature(Person.objects.filter))
+print("filter doc:", Person.objects.filter.__doc__.split('\n')[0])
+
+print("\nget signature:", inspect.signature(Person.objects.get))
+print("get doc:", Person.objects.get.__doc__.split('\n')[0])
+
