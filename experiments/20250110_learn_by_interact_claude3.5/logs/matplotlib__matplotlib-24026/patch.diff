diff --git a/lib/matplotlib/stackplot.py b/lib/matplotlib/stackplot.py
index c580043eeb..411ffaf4db 100644
--- a/lib/matplotlib/stackplot.py
+++ b/lib/matplotlib/stackplot.py
@@ -69,8 +69,6 @@ def stackplot(axes, x, *args,
     y = np.row_stack(args)
 
     labels = iter(labels)
-    if colors is not None:
-        axes.set_prop_cycle(color=colors)
 
     # Assume data passed has not been 'stacked', so stack it here.
     # We'll need a float buffer for the upcoming calculations.
@@ -108,17 +106,18 @@ def stackplot(axes, x, *args,
         stack += first_line
 
     # Color between x = 0 and the first array.
-    color = axes._get_lines.get_next_color()
+    color = colors[0] if colors is not None else axes._get_lines.get_next_color()
     coll = axes.fill_between(x, first_line, stack[0, :],
-                             facecolor=color, label=next(labels, None),
-                             **kwargs)
+                            facecolor=color, label=next(labels, None),
+                            **kwargs)
     coll.sticky_edges.y[:] = [0]
     r = [coll]
 
     # Color between array i-1 and array i
     for i in range(len(y) - 1):
-        color = axes._get_lines.get_next_color()
+        color = colors[(i + 1) % len(colors)] if colors is not None else axes._get_lines.get_next_color()
         r.append(axes.fill_between(x, stack[i, :], stack[i + 1, :],
-                                   facecolor=color, label=next(labels, None),
-                                   **kwargs))
+                                  facecolor=color, label=next(labels, None),
+                                  **kwargs))
     return r
+
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..4cc87dd6dc
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,10 @@
+import matplotlib.pyplot as plt
+from matplotlib.patches import Rectangle
+import numpy as np
+
+my_data = np.array([[1, 1, 1], [1, 2, 3], [4, 3, 2]])
+fig, ax = plt.subplots()
+ax.plot([1, 3], [1, 3], color='C0')
+ax.add_patch(Rectangle(xy=(1.5, 1.5), width=0.5, height=0.5, facecolor='C1'))
+ax.stackplot([1, 2, 3], my_data, colors=['C2', 'C3', 'C4'])
+plt.show()
