diff --git a/django/db/models/query.py b/django/db/models/query.py
index 85cd8311a7..d01d8297ba 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -1224,6 +1224,9 @@ class QuerySet:
             return True
         if self.query.extra_order_by or self.query.order_by:
             return True
+        # GROUP BY queries aren't ordered unless explicitly specified
+        if self.query.group_by is not None:
+            return False
         elif self.query.default_ordering and self.query.get_meta().ordering:
             return True
         else:
@@ -1979,3 +1982,4 @@ def get_related_populators(klass_info, select, db):
         rel_cls = RelatedPopulator(rel_klass_info, select, db)
         iterators.append(rel_cls)
     return iterators
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..68ab1aba31
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,42 @@
+from django.db import models
+from django.db.models import Count
+from django.conf import settings
+
+# Configure Django settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=['django.contrib.contenttypes'],
+)
+
+import django
+django.setup()
+
+# Create test model
+class Foo(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        ordering = ['name']
+        app_label = 'reproduce'
+
+# Create the tables
+from django.core.management import call_command
+call_command('migrate', verbosity=0)
+
+# Test the ordered property
+qs = Foo.objects.all()
+print("\nFirst query (normal):")
+print(f"SQL => {str(qs.query)}")
+print(f"qs.ordered => {qs.ordered}")
+print(f"qs.query.default_ordering => {qs.query.default_ordering}")
+
+qs2 = Foo.objects.annotate(Count("pk")).all()
+print("\nSecond query (with GROUP BY):")
+print(f"SQL => {str(qs2.query)}")
+print(f"qs2.ordered => {qs2.ordered}")
+print(f"qs2.query.default_ordering => {qs2.query.default_ordering}")
