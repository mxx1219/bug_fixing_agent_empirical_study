diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 61be31d890..914ab0f7c9 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -453,9 +453,11 @@ class AdminSite:
                 pass
             else:
                 if getattr(match.func, "should_append_slash", True):
-                    return HttpResponsePermanentRedirect("%s/" % request.path)
+                    return HttpResponsePermanentRedirect(request.get_full_path(force_append_slash=True))
         raise Http404
 
+
+
     def _build_app_dict(self, request, label=None):
         """
         Build the app dictionary. The optional `label` parameter filters models
@@ -609,3 +611,5 @@ class DefaultAdminSite(LazyObject):
 # attribute. You can also instantiate AdminSite in your own code to create a
 # custom admin site.
 site = DefaultAdminSite()
+
+
diff --git "a/django/contrib/admin/sites.py\"" "b/django/contrib/admin/sites.py\""
new file mode 100644
index 0000000000..36d783e5ab
--- /dev/null
+++ "b/django/contrib/admin/sites.py\""
@@ -0,0 +1,12 @@
+@no_append_slash
+    def catch_all_view(self, request, url):
+        if settings.APPEND_SLASH and not url.endswith("/"):
+            urlconf = getattr(request, "urlconf", None)
+            try:
+                match = resolve("%s/" % request.path_info, urlconf)
+            except Resolver404:
+                pass
+            else:
+                if getattr(match.func, "should_append_slash", True):
+                    return HttpResponsePermanentRedirect(request.get_full_path(force_append_slash=True))
+        raise Http404
diff --git a/test_redirect.py b/test_redirect.py
new file mode 100644
index 0000000000..195af01839
--- /dev/null
+++ b/test_redirect.py
@@ -0,0 +1,45 @@
+from django.contrib.admin.sites import AdminSite
+from django.test.client import RequestFactory
+from django.conf import settings
+from django.http import HttpResponsePermanentRedirect
+from django.urls import path
+
+def dummy_view(request):
+    pass
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    APPEND_SLASH=True,
+    ROOT_URLCONF=__name__,  # Use this module as the URL conf
+    SECRET_KEY='dummy',
+)
+
+import django
+django.setup()
+
+# URL patterns (needed for URL resolution)
+urlpatterns = [
+    path('admin/auth/foo/', dummy_view),  # Pattern with trailing slash
+]
+
+# Create an admin site instance
+site = AdminSite()
+
+# Create a test request with query parameters
+factory = RequestFactory()
+request = factory.get('/admin/auth/foo?id=123')  # URL with query string
+request.path = '/admin/auth/foo'  # Django sets this
+request.path_info = '/admin/auth/foo'  # Django sets this
+
+# Test the catch_all_view
+response = site.catch_all_view(request, 'auth/foo')
+
+# Print the redirect URL
+if isinstance(response, HttpResponsePermanentRedirect):
+    print(f"Redirect URL: {response['Location']}")
+    print(f"Expected URL: /admin/auth/foo/?id=123")
+    print(f"Query string preserved: {'?' in response['Location']}")
+else:
+    print(f"Unexpected response type: {type(response)}")
+
