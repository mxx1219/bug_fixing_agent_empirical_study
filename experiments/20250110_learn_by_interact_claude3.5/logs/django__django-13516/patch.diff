diff --git a/django/core/management/base.py b/django/core/management/base.py
index e6cbf8c64f..e34116c30e 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -149,6 +149,8 @@ class OutputWrapper(TextIOBase):
             msg += ending
         style_func = style_func or self.style_func
         self._out.write(style_func(msg))
+        self._out.flush()
+
 
 
 class BaseCommand:
@@ -575,3 +577,4 @@ class LabelCommand(BaseCommand):
         string as given on the command line.
         """
         raise NotImplementedError('subclasses of LabelCommand must provide a handle_label() method')
+
diff --git a/test_flush.py b/test_flush.py
new file mode 100644
index 0000000000..4ff04f7ef2
--- /dev/null
+++ b/test_flush.py
@@ -0,0 +1,13 @@
+from django.core.management.base import OutputWrapper
+import sys
+import time
+
+# Create an OutputWrapper instance
+wrapper = OutputWrapper(sys.stdout)
+
+# Write some output
+wrapper.write("First line")
+time.sleep(2)  # Simulate work
+wrapper.write("Second line")
+time.sleep(2)  # Simulate work
+wrapper.write("Third line")
diff --git a/test_migration.py b/test_migration.py
new file mode 100644
index 0000000000..3f336e634c
--- /dev/null
+++ b/test_migration.py
@@ -0,0 +1,16 @@
+import sys
+import time
+from django.core.management.base import OutputWrapper
+
+def simulate_migration():
+    wrapper = OutputWrapper(sys.stdout)
+    
+    wrapper.write("Operations to perform:")
+    wrapper.write(" Apply all migrations: myapp")
+    wrapper.write("Running migrations:")
+    wrapper.write(" Applying myapp.0002_auto_20200817_1030...", ending='')
+    time.sleep(2)  # Simulate migration work
+    wrapper.write(" OK")
+
+if __name__ == '__main__':
+    simulate_migration()
