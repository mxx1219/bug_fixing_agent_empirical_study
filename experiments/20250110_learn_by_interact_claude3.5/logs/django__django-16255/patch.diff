diff --git a/django/contrib/sitemaps/__init__.py b/django/contrib/sitemaps/__init__.py
index 27756d9d96..a9ad5c24a1 100644
--- a/django/contrib/sitemaps/__init__.py
+++ b/django/contrib/sitemaps/__init__.py
@@ -168,11 +168,12 @@ class Sitemap:
         if callable(self.lastmod):
             try:
                 return max([self.lastmod(item) for item in self.items()])
-            except TypeError:
+            except (TypeError, ValueError):
                 return None
         else:
             return self.lastmod
 
+
     def _urls(self, page, protocol, domain):
         urls = []
         latest_lastmod = None
@@ -256,3 +257,4 @@ class GenericSitemap(Sitemap):
                 .first()
             )
         return None
+
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..57d8648d6f
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+import os
+import django
+from django.contrib.sitemaps import Sitemap
+from datetime import datetime
+from django.conf import settings
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='dummy',
+    INSTALLED_APPS=[
+        'django.contrib.sitemaps',
+    ],
+)
+
+django.setup()
+
+class EmptySitemap(Sitemap):
+    def items(self):
+        return []  # Empty list to trigger the error
+
+    def lastmod(self, obj):
+        return datetime.now()  # Callable lastmod
+
+# Create sitemap instance
+sitemap = EmptySitemap()
+
+# Try to get latest lastmod - this should raise ValueError
+try:
+    lastmod = sitemap.get_latest_lastmod()
+    print(f"Latest lastmod: {lastmod}")
+except ValueError as e:
+    print(f"ValueError caught: {e}")
