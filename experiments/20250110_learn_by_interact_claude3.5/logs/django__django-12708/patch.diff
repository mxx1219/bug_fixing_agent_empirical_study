diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index 61f88401ab..39ab614c01 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -407,6 +407,9 @@ class BaseDatabaseSchemaEditor:
             model, columns, exclude=meta_constraint_names | meta_index_names,
             **constraint_kwargs
         )
+        # Filter for index-type constraints only when deleting an index
+        if constraint_kwargs.get('index'):
+            constraint_names = [name for name in constraint_names if name.endswith('_idx')]
         if len(constraint_names) != 1:
             raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
                 len(constraint_names),
@@ -1198,3 +1201,4 @@ class BaseDatabaseSchemaEditor:
             'param_types': ','.join(param_types),
         }
         self.execute(sql)
+
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..196d4a06dc
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,82 @@
+from django.db import models
+from django.db import migrations
+from django.db.backends.base.schema import BaseDatabaseSchemaEditor
+from django.db.migrations.state import ProjectState
+from django.db.backends.sqlite3.base import DatabaseWrapper
+from django.conf import settings
+import django
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+                'TIME_ZONE': None,
+                'CONN_MAX_AGE': 0,
+                'OPTIONS': {},
+                'AUTOCOMMIT': True,
+            }
+        },
+        INSTALLED_APPS=['django.contrib.contenttypes'],
+        DEFAULT_AUTO_FIELD='django.db.models.AutoField',
+        TIME_ZONE=None,
+        USE_TZ=False,
+    )
+    django.setup()
+
+# Create a test model class
+class TestModel(models.Model):
+    field1 = models.CharField(max_length=100)
+    field2 = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'testapp'
+        db_table = 'test_model'
+
+# Create schema editor
+connection = DatabaseWrapper({
+    'NAME': ':memory:',
+    'TIME_ZONE': None,
+    'CONN_MAX_AGE': 0,
+    'OPTIONS': {},
+    'AUTOCOMMIT': True,
+    'ENGINE': 'django.db.backends.sqlite3',
+})
+schema_editor = BaseDatabaseSchemaEditor(connection)
+
+# Create tables
+schema_editor.execute("""
+CREATE TABLE test_model (
+    id INTEGER PRIMARY KEY AUTOINCREMENT,
+    field1 varchar(100) NOT NULL,
+    field2 varchar(100) NOT NULL
+)
+""")
+
+# Create unique constraint
+schema_editor.execute("""
+CREATE UNIQUE INDEX test_model_field1_field2_uniq 
+ON test_model(field1, field2)
+""")
+
+# Create index
+schema_editor.execute("""
+CREATE INDEX test_model_field1_field2_idx 
+ON test_model(field1, field2)
+""")
+
+# Now try to delete just the index
+try:
+    # This should trigger the bug because _delete_composed_index will find both
+    # the unique constraint and the index
+    schema_editor._delete_composed_index(
+        TestModel,
+        ('field1', 'field2'),
+        {'index': True},
+        schema_editor.sql_delete_index
+    )
+except ValueError as e:
+    print(f"Error occurred: {e}")
+
