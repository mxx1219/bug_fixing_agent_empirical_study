diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 247e3680c0..9d019e4226 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -64,10 +64,22 @@ class ResolverMatch:
 
 
 @functools.lru_cache(maxsize=None)
+def _get_resolver_internal(urlconf):
+    """Internal function that creates the URLResolver."""
+    return URLResolver(RegexPattern(r'^/'), urlconf)
+
 def get_resolver(urlconf=None):
+    """
+    Return a URLResolver instance.
+    
+    Args:
+        urlconf: Optional URL configuration module path. If None,
+                settings.ROOT_URLCONF is used.
+    """
     if urlconf is None:
         urlconf = settings.ROOT_URLCONF
-    return URLResolver(RegexPattern(r'^/'), urlconf)
+    return _get_resolver_internal(urlconf)
+
 
 
 @functools.lru_cache(maxsize=None)
@@ -667,3 +679,5 @@ class URLResolver:
                 "a valid view function or pattern name." % {'view': lookup_view_s}
             )
         raise NoReverseMatch(msg)
+
+
diff --git "a/django/urls/resolvers.py\"" "b/django/urls/resolvers.py\""
new file mode 100644
index 0000000000..8f66057219
--- /dev/null
+++ "b/django/urls/resolvers.py\""
@@ -0,0 +1,16 @@
+def _get_resolver_internal(urlconf):
+    """Internal function that creates the URLResolver."""
+    return URLResolver(RegexPattern(r'^/'), urlconf)
+
+@functools.lru_cache(maxsize=None)
+def get_resolver(urlconf=None):
+    """
+    Return a URLResolver instance.
+    
+    Args:
+        urlconf: Optional URL configuration module path. If None,
+                settings.ROOT_URLCONF is used.
+    """
+    if urlconf is None:
+        urlconf = settings.ROOT_URLCONF
+    return _get_resolver_internal(urlconf)
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..7874643116
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,32 @@
+from django.conf import settings
+from django.urls import resolvers
+
+# Configure minimal Django settings
+settings.configure(
+    DEBUG=True,
+    ROOT_URLCONF='test_urls',
+    SECRET_KEY='dummy-key'
+)
+
+# Create a test urls module
+with open('test_urls.py', 'w') as f:
+    f.write("""
+from django.urls import path
+
+urlpatterns = [
+    path('test/', lambda req: None, name='test'),
+]
+""")
+
+# First call with None (simulating import time usage)
+resolver1 = resolvers.get_resolver(None)
+print("First resolver id:", id(resolver1))
+print("First resolver populated:", resolver1._populated)
+
+# Second call with settings.ROOT_URLCONF (simulating request time usage)
+resolver2 = resolvers.get_resolver(settings.ROOT_URLCONF)
+print("Second resolver id:", id(resolver2))
+print("Second resolver populated:", resolver2._populated)
+
+# Show that they are different instances
+print("Are resolvers different instances?", resolver1 is not resolver2)
diff --git a/test_urls.py b/test_urls.py
new file mode 100644
index 0000000000..2b8d754a7d
--- /dev/null
+++ b/test_urls.py
@@ -0,0 +1,6 @@
+
+from django.urls import path
+
+urlpatterns = [
+    path('test/', lambda req: None, name='test'),
+]
