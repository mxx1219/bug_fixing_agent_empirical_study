diff --git a/django/core/validators.py b/django/core/validators.py
index 92394a7eae..6c16da4d84 100644
--- a/django/core/validators.py
+++ b/django/core/validators.py
@@ -94,10 +94,11 @@ class URLValidator(RegexValidator):
 
     regex = _lazy_re_compile(
         r'^(?:[a-z0-9\.\-\+]*)://'  # scheme is validated separately
-        r'(?:\S+(?::\S*)?@)?'  # user:pass authentication
+        r'(?:(?:[a-z0-9\-._~!$&\'()*+,;=]|%[0-9a-f]{2})+(?::(?:[a-z0-9\-._~!$&\'()*+,;=]|%[0-9a-f]{2})*)?@)?'  # user:pass authentication
         r'(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')'
         r'(?::\d{2,5})?'  # port
         r'(?:[/?#][^\s]*)?'  # resource path
+
         r'\Z', re.IGNORECASE)
     message = _('Enter a valid URL.')
     schemes = ['http', 'https', 'ftp', 'ftps']
@@ -536,3 +537,4 @@ class ProhibitNullCharactersValidator:
             self.message == other.message and
             self.code == other.code
         )
+
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..5ba069e656
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,28 @@
+from django.core.validators import URLValidator
+from django.core.exceptions import ValidationError
+
+validator = URLValidator()
+
+test_cases = [
+    # Invalid cases (should be rejected)
+    ("http://foo/bar@example.com", False, "unencoded / in username"),
+    ("http://foo:p@ss@example.com", False, "unencoded @ in password"),
+    ("http://foo:bar:baz@example.com", False, "unencoded : in password"),
+    # Valid cases (should be accepted)
+    ("http://foo:bar@example.com", True, "basic auth without special chars"),
+    ("http://foo%2Fbar:b%40z@example.com", True, "properly encoded special chars"),
+    ("http://example.com", True, "no auth part"),
+]
+
+for url, should_pass, desc in test_cases:
+    try:
+        validator(url)
+        result = "accepted"
+        passed = should_pass
+    except ValidationError:
+        result = "rejected"
+        passed = not should_pass
+    
+    status = "PASS" if passed else "FAIL"
+    print("{}: URL '{}' was {} ({})".format(status, url, result, desc))
+
