diff --git a/.gitignore b/.gitignore
index 238fb3a200..975c5364d8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,6 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+*__pycache__*
+*venv*
+*_build*
diff --git a/django/db/models/options.py b/django/db/models/options.py
index a375f6ba1d..fc39de55b6 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -251,7 +251,14 @@ class Options:
                     field = already_created[0]
                 field.primary_key = True
                 self.setup_pk(field)
-                if not field.remote_field.parent_link:
+                # Check for parent links
+                parent_links = [f for f in self.local_fields if getattr(f.remote_field, 'parent_link', False)]
+                if len(parent_links) > 1:
+                    raise ImproperlyConfigured(
+                        'Multiple parent links found: %s. Only one parent link is allowed.' % parent_links,
+                    )
+                # Only check parent_link=True on fields that are actually being used as parent links
+                if field.remote_field.model in [base for base in self.model.__bases__ if hasattr(base, '_meta')] and not field.remote_field.parent_link:
                     raise ImproperlyConfigured(
                         'Add parent_link=True to %s.' % field,
                     )
@@ -801,7 +808,11 @@ class Options:
                 for obj in parent._meta._get_fields(
                         forward=forward, reverse=reverse, include_parents=include_parents,
                         include_hidden=include_hidden, seen_models=seen_models):
-                    if not getattr(obj, 'parent_link', False) or obj.model == self.concrete_model:
+                    # Only check parent_link if this field is actually being used as a parent link
+                    if obj in self.parents.values():
+                        if not getattr(obj, 'parent_link', False):
+                            fields.append(obj)
+                    else:
                         fields.append(obj)
         if reverse and not self.proxy:
             # Tree is computed once and cached until the app cache is expired.
diff --git a/reproduce_mti_issue.py b/reproduce_mti_issue.py
new file mode 100644
index 0000000000..64813f33e3
--- /dev/null
+++ b/reproduce_mti_issue.py
@@ -0,0 +1,32 @@
+from django.db import models
+from django.conf import settings
+import os
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'testapp.apps.TestAppConfig',
+    ],
+)
+
+import django
+django.setup()
+
+# Import models from our app
+from testapp.models import Document, Picking
+
+if __name__ == '__main__':
+    # This should raise django.core.exceptions.ImproperlyConfigured
+    from django.core.management.commands.migrate import Command as MigrateCommand
+    cmd = MigrateCommand()
+    cmd.run_from_argv(['manage.py', 'migrate'])
\ No newline at end of file
diff --git a/testapp/__init__.py b/testapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testapp/apps.py b/testapp/apps.py
new file mode 100644
index 0000000000..7100945a3b
--- /dev/null
+++ b/testapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestAppConfig(AppConfig):
+    name = 'testapp'
\ No newline at end of file
diff --git a/testapp/models.py b/testapp/models.py
new file mode 100644
index 0000000000..8076506016
--- /dev/null
+++ b/testapp/models.py
@@ -0,0 +1,9 @@
+from django.db import models
+
+class Document(models.Model):
+    pass
+
+class Picking(Document):
+    origin = models.OneToOneField(Document, related_name='picking', on_delete=models.PROTECT)
+    parent1 = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')
+    parent2 = models.OneToOneField(Document, on_delete=models.CASCADE, parent_link=True, related_name='+')
\ No newline at end of file
