diff --git a/django/db/models/fields/reverse_related.py b/django/db/models/fields/reverse_related.py
index ccc2223a5f..79cdee9fc0 100644
--- a/django/db/models/fields/reverse_related.py
+++ b/django/db/models/fields/reverse_related.py
@@ -310,7 +310,7 @@ class ManyToManyRel(ForeignObjectRel):
     def identity(self):
         return super().identity + (
             self.through,
-            self.through_fields,
+            make_hashable(self.through_fields) if self.through_fields else None,
             self.db_constraint,
         )
 
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..d1bd5d1b29
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,31 @@
+from django.conf import settings
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes'],
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+    DEFAULT_AUTO_FIELD='django.db.models.AutoField',
+)
+
+import django
+django.setup()
+
+from django.db import models
+
+# Let's directly test the ManyToManyRel class
+from django.db.models.fields.related import ManyToManyRel
+from django.db.models.fields.reverse_related import ForeignObjectRel
+
+# Create a test model
+class TestModel(models.Model):
+    class Meta:
+        app_label = 'django.contrib.contenttypes'
+
+# Create a ManyToManyRel instance with through_fields as a list
+rel = ManyToManyRel(
+    field=None,
+    to=TestModel,
+    through=TestModel,
+    through_fields=['field1', 'field2']  # This is a list that needs to be made hashable
+)
+
+# Try to hash the rel object which will trigger the error
+hash(rel)
\ No newline at end of file
