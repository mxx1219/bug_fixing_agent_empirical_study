diff --git a/django/core/mail/message.py b/django/core/mail/message.py
index e393b4cf5c..5fa38a8fbc 100644
--- a/django/core/mail/message.py
+++ b/django/core/mail/message.py
@@ -257,7 +257,13 @@ class EmailMessage:
             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)
         if 'message-id' not in header_names:
             # Use cached DNS_NAME for performance
-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)
+            # Convert domain to IDNA if it contains non-ASCII characters
+            domain = str(DNS_NAME)
+            try:
+                domain.encode('ascii')
+            except UnicodeEncodeError:
+                domain = domain.encode('idna').decode('ascii')
+            msg['Message-ID'] = make_msgid(domain=domain)
         for name, value in self.extra_headers.items():
             if name.lower() != 'from':  # From is already handled
                 msg[name] = value
diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py
index d18dfe4667..f6bbfd88e6 100644
--- a/django/core/mail/utils.py
+++ b/django/core/mail/utils.py
@@ -14,6 +14,11 @@ class CachedDnsName:
     def get_fqdn(self):
         if not hasattr(self, '_fqdn'):
             self._fqdn = socket.getfqdn()
+            # Convert to IDNA if hostname contains non-ASCII characters
+            try:
+                self._fqdn.encode('ascii')
+            except UnicodeEncodeError:
+                self._fqdn = self._fqdn.encode('idna').decode('ascii')
         return self._fqdn
 
 
diff --git a/tests/mail/tests.py b/tests/mail/tests.py
index 15593dc3f7..7a8a518dd5 100644
--- a/tests/mail/tests.py
+++ b/tests/mail/tests.py
@@ -370,6 +370,18 @@ class MailTests(HeadersCheckMixin, SimpleTestCase):
         Regression for #12791 - Encode body correctly with other encodings
         than utf-8
         """
+
+    def test_unicode_dns(self):
+        """
+        Regression test for non-ASCII DNS names in email headers.
+        The domain name should be converted to IDNA format.
+        """
+        from unittest.mock import patch
+        with patch("django.core.mail.message.DNS_NAME", "漢字"):
+            email = EmailMessage('subject', '', 'from@example.com', ['to@example.com'])
+            email.encoding = 'iso-8859-1'
+            message = email.message()
+            self.assertIn('xn--p8s937b', message['Message-ID'])
         email = EmailMessage('Subject', 'Firstname Sürname is a great guy.', 'from@example.com', ['other@example.com'])
         email.encoding = 'iso-8859-1'
         message = email.message()
