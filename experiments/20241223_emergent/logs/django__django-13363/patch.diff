diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py
index b6594b043b..a0141154c4 100644
--- a/django/db/models/functions/datetime.py
+++ b/django/db/models/functions/datetime.py
@@ -292,7 +292,7 @@ class TruncDate(TruncBase):
     def as_sql(self, compiler, connection):
         # Cast to date rather than truncate to date.
         lhs, lhs_params = compiler.compile(self.lhs)
-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None
+        tzname = self.get_tzname() if settings.USE_TZ else None
         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)
         return sql, lhs_params
 
@@ -305,7 +305,7 @@ class TruncTime(TruncBase):
     def as_sql(self, compiler, connection):
         # Cast to time rather than truncate to time.
         lhs, lhs_params = compiler.compile(self.lhs)
-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None
+        tzname = self.get_tzname() if settings.USE_TZ else None
         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)
         return sql, lhs_params
 
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..6227252b34
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,55 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+from django.db.models.functions import TruncDate
+from django.utils import timezone
+import pytz
+from datetime import datetime
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=['django.contrib.contenttypes'],
+        USE_TZ=True,
+        TIME_ZONE='UTC'
+    )
+django.setup()
+
+# Define the model
+class TimeSlots(models.Model):
+    start_at = models.DateTimeField()
+
+    class Meta:
+        app_label = 'reproduction'
+
+# Create the table
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(TimeSlots)
+
+# Insert test data
+tz_ny = pytz.timezone("America/New_York")
+tz_utc = pytz.UTC
+
+# Create a datetime in NY timezone
+dt_ny = tz_ny.localize(datetime(2023, 1, 1, 23, 0, 0))  # 11 PM NY time
+dt_utc = dt_ny.astimezone(tz_utc)  # Convert to UTC for storage
+
+TimeSlots.objects.create(start_at=dt_utc)
+
+# Query with TruncDate using NY timezone
+result = (
+    TimeSlots.objects.annotate(
+        start_date=TruncDate("start_at", tzinfo=tz_ny)
+    ).values('start_date').first()
+)
+
+print(f"Date in NY timezone should be 2023-01-01")
+print(f"Actual result: {result['start_date']}")
\ No newline at end of file
