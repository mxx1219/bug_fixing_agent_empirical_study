+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/db/models/deletion.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	reproduce.py


It took 14.69 seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 04ac9b45a34440fa447feb6ae934687aacbfc5f4
Author: Alex Gaynor <alex.gaynor@gmail.com>
Date:   Tue Oct 8 22:25:20 2019 -0400

    Improved performance of django.template.base.Parser.
    
    pop(0), which is used to fetch each token, is O(n) in the length of the
    list. By reversing the list and operating off the end, we can perform
    next_token(), prepend_token(), and delete_first_token() in constant
    time.

diff --git a/django/template/base.py b/django/template/base.py
index 6e22fbdcca..7ee23f7ebf 100644
--- a/django/template/base.py
+++ b/django/template/base.py
@@ -405,7 +405,9 @@ class DebugLexer(Lexer):
 
 class Parser:
     def __init__(self, tokens, libraries=None, builtins=None, origin=None):
-        self.tokens = tokens
+        # Reverse the tokens so delete_first_token(), prepend_token(), and
+        # next_token() can operate at the end of the list in constant time.
+        self.tokens = list(reversed(tokens))
         self.tags = {}
         self.filters = {}
         self.command_stack = []
@@ -541,13 +543,13 @@ class Parser:
         raise self.error(token, msg)
 
     def next_token(self):
-        return self.tokens.pop(0)
+        return self.tokens.pop()
 
     def prepend_token(self, token):
-        self.tokens.insert(0, token)
+        self.tokens.append(token)
 
     def delete_first_token(self):
-        del self.tokens[0]
+        del self.tokens[-1]
 
     def add_library(self, lib):
         self.tags.update(lib.tags)
+ git diff 04ac9b45a34440fa447feb6ae934687aacbfc5f4
diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index ae82d26340..362d06b881 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -1,4 +1,5 @@
 from collections import Counter
+from functools import reduce
 from itertools import chain
 from operator import attrgetter
 
@@ -190,16 +191,35 @@ class Collector:
 
         If 'keep_parents' is True, data of parent model's will be not deleted.
         """
+        if not objs:
+            return
+
+        model = objs[0].__class__
+        
+        # Check if we can combine fast deletes for this model
         if self.can_fast_delete(objs):
-            self.fast_deletes.append(objs)
+            # Check if there are existing fast deletes for this model
+            existing_qs = None
+            for qs in self.fast_deletes:
+                if qs.model == model:
+                    existing_qs = qs
+                    break
+            
+            if existing_qs is not None:
+                # Combine the querysets using OR conditions
+                new_qs = model._base_manager.using(self.using)
+                new_where = objs.query.where if hasattr(objs, 'query') else None
+                if new_where:
+                    existing_qs.query.where = sql.OR(existing_qs.query.where, new_where)
+            else:
+                self.fast_deletes.append(objs)
             return
+
         new_objs = self.add(objs, source, nullable,
                             reverse_dependency=reverse_dependency)
         if not new_objs:
             return
 
-        model = new_objs[0].__class__
-
         if not keep_parents:
             # Recursively collect concrete model's parent models, but not their
             # related objects. These will be found by meta.get_fields()
@@ -211,11 +231,14 @@ class Collector:
                                  source_attr=ptr.remote_field.related_name,
                                  collect_related=False,
                                  reverse_dependency=True)
+
         if collect_related:
             if keep_parents:
                 parents = set(model._meta.get_parent_list())
+            
+            # First collect all related objects
+            related_objects = []
             for related in get_candidate_relations_to_delete(model._meta):
-                # Preserve parent reverse relationships if keep_parents=True.
                 if keep_parents and related.model in parents:
                     continue
                 field = related.field
@@ -224,25 +247,35 @@ class Collector:
                 batches = self.get_del_batches(new_objs, field)
                 for batch in batches:
                     sub_objs = self.related_objects(related, batch)
-                    if self.can_fast_delete(sub_objs, from_field=field):
+                    if sub_objs:
+                        related_objects.append((field, sub_objs))
+
+            # Then process them in reverse order (children before parents)
+            for field, sub_objs in reversed(related_objects):
+                if self.can_fast_delete(sub_objs, from_field=field):
+                    # Try to combine with existing fast deletes
+                    combined = False
+                    for i, qs in enumerate(self.fast_deletes):
+                        if qs.model == sub_objs.model:
+                            # Combine the querysets using OR conditions
+                            new_where = sub_objs.query.where
+                            if new_where:
+                                qs.query.where = sql.OR(qs.query.where, new_where)
+                            combined = True
+                            break
+                    if not combined:
                         self.fast_deletes.append(sub_objs)
-                    else:
-                        related_model = related.related_model
-                        # Non-referenced fields can be deferred if no signal
-                        # receivers are connected for the related model as
-                        # they'll never be exposed to the user. Skip field
-                        # deferring when some relationships are select_related
-                        # as interactions between both features are hard to
-                        # get right. This should only happen in the rare
-                        # cases where .related_objects is overridden anyway.
-                        if not (sub_objs.query.select_related or self._has_signal_listeners(related_model)):
-                            referenced_fields = set(chain.from_iterable(
-                                (rf.attname for rf in rel.field.foreign_related_fields)
-                                for rel in get_candidate_relations_to_delete(related_model._meta)
-                            ))
-                            sub_objs = sub_objs.only(*tuple(referenced_fields))
-                        if sub_objs:
-                            field.remote_field.on_delete(self, field, sub_objs, self.using)
+                else:
+                    related_model = related.related_model
+                    if not (sub_objs.query.select_related or self._has_signal_listeners(related_model)):
+                        referenced_fields = set(chain.from_iterable(
+                            (rf.attname for rf in rel.field.foreign_related_fields)
+                            for rel in get_candidate_relations_to_delete(related_model._meta)
+                        ))
+                        sub_objs = sub_objs.only(*tuple(referenced_fields))
+                    if sub_objs:
+                        field.remote_field.on_delete(self, field, sub_objs, self.using)
+
             for field in model._meta.private_fields:
                 if hasattr(field, 'bulk_related_objects'):
                     # It's something like generic foreign key.
@@ -263,21 +296,50 @@ class Collector:
                 yield model, obj
 
     def sort(self):
-        sorted_models = []
-        concrete_models = set()
+        """
+        Sort the models so that we delete them in the right order - children before
+        parents, etc.
+        """
+        # Build a graph of model dependencies
+        model_graph = {}
         models = list(self.data)
-        while len(sorted_models) < len(models):
-            found = False
-            for model in models:
-                if model in sorted_models:
-                    continue
-                dependencies = self.dependencies.get(model._meta.concrete_model)
-                if not (dependencies and dependencies.difference(concrete_models)):
-                    sorted_models.append(model)
-                    concrete_models.add(model._meta.concrete_model)
-                    found = True
-            if not found:
+        
+        for model in models:
+            deps = set()
+            # Add dependencies from concrete fields
+            for field in model._meta.get_fields():
+                if (getattr(field, 'remote_field', None) and 
+                    field.remote_field.on_delete == CASCADE):
+                    remote_model = field.remote_field.model
+                    if remote_model in self.data:
+                        deps.add(remote_model)
+            model_graph[model] = deps
+
+        # Topological sort using depth-first search
+        sorted_models = []
+        visiting = set()
+        visited = set()
+
+        def visit(model):
+            if model in visiting:
+                # Skip cycles
+                return
+            if model in visited:
                 return
+            visiting.add(model)
+            for dep in model_graph[model]:
+                visit(dep)
+            visiting.remove(model)
+            visited.add(model)
+            sorted_models.append(model)
+
+        # Visit all models
+        for model in models:
+            if model not in visited:
+                visit(model)
+
+        # Reverse the order so that models with no dependencies are deleted first
+        sorted_models.reverse()
         self.data = {model: self.data[model] for model in sorted_models}
 
     def delete(self):
@@ -309,10 +371,48 @@ class Collector:
                         sender=model, instance=obj, using=self.using
                     )
 
-            # fast deletes
+            # Organize fast deletes by model
+            fast_deletes_by_model = {}
             for qs in self.fast_deletes:
-                count = qs._raw_delete(using=self.using)
-                deleted_counter[qs.model._meta.label] += count
+                model = qs.model
+                if model not in fast_deletes_by_model:
+                    fast_deletes_by_model[model] = []
+                fast_deletes_by_model[model].append(qs)
+
+            # Process each model's querysets
+            for model, querysets in fast_deletes_by_model.items():
+                # Group querysets by their field conditions
+                field_conditions = {}
+                for qs in querysets:
+                    key = []
+                    values = []
+                    for child in qs.query.where.children:
+                        if hasattr(child, 'lhs') and hasattr(child.lhs, 'target'):
+                            field = child.lhs.target.name
+                            key.append(field)
+                            values.append(child.rhs)
+                    key = tuple(sorted(key))
+                    if key not in field_conditions:
+                        field_conditions[key] = {'fields': key, 'values': set()}
+                    field_conditions[key]['values'].add(tuple(values))
+
+                # Process each group of field conditions
+                for key, condition in field_conditions.items():
+                    fields = condition['fields']
+                    value_tuples = condition['values']
+
+                    # Create a combined Q object for this group
+                    q_objects = []
+                    for values in value_tuples:
+                        field_dict = dict(zip(fields, values))
+                        q_objects.append(models.Q(**field_dict))
+
+                    # Combine Q objects with OR
+                    if q_objects:
+                        combined_q = reduce(lambda x, y: x | y, q_objects)
+                        combined_qs = model._base_manager.using(self.using).filter(combined_q)
+                        count = combined_qs._raw_delete(using=self.using)
+                        deleted_counter[model._meta.label] += count
 
             # update fields
             for model, instances_for_fieldvalues in self.field_updates.items():
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (2024.1)
Requirement already satisfied: sqlparse in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (0.4.4)
Requirement already satisfied: asgiref in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (3.4.1)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref->Django==3.1) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.1
    Uninstalling Django-3.1:
      Successfully uninstalled Django-3.1
  Running setup.py develop for Django
Successfully installed Django-3.1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout 04ac9b45a34440fa447feb6ae934687aacbfc5f4 tests/delete/tests.py
Updated 0 paths from 17b077174f
+ git apply -v -
Checking patch tests/delete/tests.py...
Applied patch tests/delete/tests.py cleanly.
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 delete.tests
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_bulk (delete.tests.DeletionTests) ... ERROR
test_can_defer_constraint_checks (delete.tests.DeletionTests) ... ERROR
test_cannot_defer_constraint_checks (delete.tests.DeletionTests) ... skipped 'Database has feature(s) can_defer_constraint_checks'
test_delete_with_keeping_parents (delete.tests.DeletionTests) ... ERROR
test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests) ... ERROR
test_deletion_order (delete.tests.DeletionTests) ... ERROR
test_hidden_related (delete.tests.DeletionTests) ... ERROR
test_instance_update (delete.tests.DeletionTests) ... ERROR
test_large_delete (delete.tests.DeletionTests) ... ERROR
test_large_delete_related (delete.tests.DeletionTests) ... ERROR
test_m2m (delete.tests.DeletionTests) ... ERROR
test_model_delete_returns_num_rows (delete.tests.DeletionTests) ... ERROR
test_only_referenced_fields_selected (delete.tests.DeletionTests) ... ERROR
test_proxied_model_duplicate_queries (delete.tests.DeletionTests) ... ERROR
test_queryset_delete_returns_num_rows (delete.tests.DeletionTests) ... ERROR
test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests) ... ERROR
test_fast_delete_combined_relationships (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests) ... FAIL
test_fast_delete_fk (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_inheritance (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests) ... ok
test_fast_delete_joined_qs (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_large_batch (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_m2m (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_qs (delete.tests.FastDeleteTests) ... ERROR
test_fast_delete_revm2m (delete.tests.FastDeleteTests) ... ERROR
test_auto (delete.tests.OnDeleteTests) ... ERROR
test_auto_nullable (delete.tests.OnDeleteTests) ... ERROR
test_cascade (delete.tests.OnDeleteTests) ... ERROR
test_cascade_from_child (delete.tests.OnDeleteTests) ... ERROR
test_cascade_from_parent (delete.tests.OnDeleteTests) ... ERROR
test_cascade_nullable (delete.tests.OnDeleteTests) ... ERROR
test_do_nothing (delete.tests.OnDeleteTests) ... ERROR
test_do_nothing_qscount (delete.tests.OnDeleteTests) ... ERROR
test_inheritance_cascade_down (delete.tests.OnDeleteTests) ... ERROR
test_inheritance_cascade_up (delete.tests.OnDeleteTests) ... ERROR
test_non_callable (delete.tests.OnDeleteTests) ... ok
test_o2o_setnull (delete.tests.OnDeleteTests) ... ERROR
test_protect (delete.tests.OnDeleteTests) ... ok
test_setdefault (delete.tests.OnDeleteTests) ... ERROR
test_setdefault_none (delete.tests.OnDeleteTests) ... ERROR
test_setnull (delete.tests.OnDeleteTests) ... ERROR
test_setnull_from_child (delete.tests.OnDeleteTests) ... ERROR
test_setnull_from_parent (delete.tests.OnDeleteTests) ... ERROR
test_setvalue (delete.tests.OnDeleteTests) ... ERROR

======================================================================
ERROR: test_bulk (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 191, in test_bulk
    self.assertNumQueries(5, s.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_can_defer_constraint_checks (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 1178, in skip_wrapper
    return test_func(*args, **kwargs)
  File "/testbed/tests/delete/tests.py", line 290, in test_can_defer_constraint_checks
    self.assertNumQueries(3, a.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_delete_with_keeping_parents (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 368, in test_delete_with_keeping_parents
    child.delete(keep_parents=True)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 376, in test_delete_with_keeping_parents_relationships
    child.delete(keep_parents=True)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_deletion_order (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 239, in test_deletion_order
    r.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_hidden_related (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 327, in test_hidden_related
    r.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_instance_update (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 206, in test_instance_update
    a.setnull.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_large_delete (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 343, in test_large_delete
    self.assertNumQueries(queries, Avatar.objects.all().delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 719, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_large_delete_related (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 361, in test_large_delete_related
    self.assertNumQueries(expected_num_queries, s.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_m2m (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 156, in test_m2m
    r.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_model_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 442, in test_model_delete_returns_num_rows
    deleted, deleted_objs = r.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_only_referenced_fields_selected (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 471, in test_only_referenced_fields_selected
    origin.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_proxied_model_duplicate_queries (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 456, in test_proxied_model_duplicate_queries
    avatar.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 398, in test_queryset_delete_returns_num_rows
    deleted, rows_count = Avatar.objects.all().delete()
  File "/testbed/django/db/models/query.py", line 719, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 264, in test_relational_post_delete_signals_happen_before_parent_object
    r.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_fast_delete_combined_relationships (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 592, in test_fast_delete_combined_relationships
    referer.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_fast_delete_fk (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 501, in test_fast_delete_fk
    self.assertNumQueries(2, a.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_fast_delete_inheritance (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 548, in test_fast_delete_inheritance
    self.assertNumQueries(2, c.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'OneToOneField' object has no attribute 'on_delete'

======================================================================
ERROR: test_fast_delete_joined_qs (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 540, in test_fast_delete_joined_qs
    User.objects.filter(avatar__desc='a').delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 719, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 408, in delete
    q_objects.append(models.Q(**field_dict))
NameError: name 'models' is not defined

======================================================================
ERROR: test_fast_delete_large_batch (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 566, in test_fast_delete_large_batch
    self.assertNumQueries(1, User.objects.all().delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 719, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 408, in delete
    q_objects.append(models.Q(**field_dict))
NameError: name 'models' is not defined

======================================================================
ERROR: test_fast_delete_m2m (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 510, in test_fast_delete_m2m
    self.assertNumQueries(2, f.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 397, in delete
    field_conditions[key]['values'].add(tuple(values))
TypeError: unhashable type: 'list'

======================================================================
ERROR: test_fast_delete_qs (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 522, in test_fast_delete_qs
    self.assertNumQueries(1, User.objects.filter(pk=u1.pk).delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/query.py", line 719, in delete
    deleted, _rows_count = collector.delete()
  File "/testbed/django/db/models/deletion.py", line 408, in delete
    q_objects.append(models.Q(**field_dict))
NameError: name 'models' is not defined

======================================================================
ERROR: test_fast_delete_revm2m (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 517, in test_fast_delete_revm2m
    self.assertNumQueries(2, f.delete)
  File "/testbed/django/test/testcases.py", line 1025, in assertNumQueries
    func(*args, **kwargs)
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 397, in delete
    field_conditions[key]['values'].add(tuple(values))
TypeError: unhashable type: 'list'

======================================================================
ERROR: test_auto (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 21, in test_auto
    a.auto.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_auto_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 33, in test_auto_nullable
    a.auto_nullable.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_cascade (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 62, in test_cascade
    a.cascade.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_cascade_from_child (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 117, in test_cascade_from_child
    a.child.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_cascade_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 123, in test_cascade_from_parent
    R.objects.get(pk=a.child_id).delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_cascade_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 67, in test_cascade_nullable
    a.cascade_nullable.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_do_nothing (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 89, in test_do_nothing
    a.donothing.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_do_nothing_qscount (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 101, in test_do_nothing_qscount
    b.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_inheritance_cascade_down (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 112, in test_inheritance_cascade_down
    parent.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_inheritance_cascade_up (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 106, in test_inheritance_cascade_up
    child.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_o2o_setnull (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 145, in test_o2o_setnull
    a.o2o_setnull.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'
Testing against Django installed in '/testbed/django'
Importing application delete
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, delete, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table delete_r
    Creating table delete_s
    Creating table delete_t
    Creating table delete_u
    Creating table delete_rchild
    Creating table delete_rchildchild
    Creating table delete_a
    Creating table delete_m
    Creating table delete_mr
    Creating table delete_mrnull
    Creating table delete_avatar
    Creating table delete_user
    Creating table delete_hiddenuser
    Creating table delete_hiddenuserprofile
    Creating table delete_m2mto
    Creating table delete_m2mfrom
    Creating table delete_parent
    Creating table delete_child
    Creating table delete_base
    Creating table delete_reltobase
    Creating table delete_origin
    Creating table delete_referrer
    Creating table delete_secondreferrer
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).

======================================================================
ERROR: test_setdefault (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 50, in test_setdefault
    a.setdefault.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_setdefault_none (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 56, in test_setdefault_none
    a.setdefault_none.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_setnull (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 44, in test_setnull
    a.setnull.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_setnull_from_child (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 129, in test_setnull_from_child
    a.child_setnull.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_setnull_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 137, in test_setnull_from_parent
    R.objects.get(pk=a.child_setnull_id).delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
ERROR: test_setvalue (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 38, in test_setvalue
    a.setvalue.delete()
  File "/testbed/django/db/models/base.py", line 937, in delete
    return collector.delete()
  File "/testbed/django/db/models/deletion.py", line 353, in delete
    self.sort()
  File "/testbed/django/db/models/deletion.py", line 312, in sort
    field.remote_field.on_delete == CASCADE):
AttributeError: 'ForeignKey' object has no attribute 'on_delete'

======================================================================
FAIL: test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 583, in test_fast_delete_empty_no_update_can_self_select
    (0, {'delete.User': 0})
AssertionError: Tuples differ: (0, {}) != (0, {'delete.User': 0})

First differing element 1:
{}
{'delete.User': 0}

- (0, {})
+ (0, {'delete.User': 0})

----------------------------------------------------------------------
Ran 45 tests in 0.972s

FAILED (failures=1, errors=40, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
+ git checkout 04ac9b45a34440fa447feb6ae934687aacbfc5f4 tests/delete/tests.py
Updated 1 path from 17b077174f
