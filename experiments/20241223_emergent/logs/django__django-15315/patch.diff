diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 88c9ca9f28..fcea1597ef 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -542,11 +542,7 @@ class Field(RegisterLookupMixin):
         return NotImplemented
 
     def __hash__(self):
-        return hash((
-            self.creation_counter,
-            self.model._meta.app_label if hasattr(self, 'model') else None,
-            self.model._meta.model_name if hasattr(self, 'model') else None,
-        ))
+        return hash(self.creation_counter)
 
     def __deepcopy__(self, memodict):
         # We don't have to deepcopy very much here, since most things are not
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..bee7c916ea
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,18 @@
+from django.conf import settings
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', '__main__'],
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+)
+
+import django
+django.setup()
+
+from django.db import models
+
+f = models.CharField(max_length=200)
+d = {f: 1}
+
+class Book(models.Model):
+    title = f
+
+assert f in d  # This will fail because f's hash changes after being assigned to Book.title
\ No newline at end of file
