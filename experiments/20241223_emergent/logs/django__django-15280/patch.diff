diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..fe4599faef
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,87 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django.db import connection
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+]
+
+SECRET_KEY = 'dummy'
+
+settings.configure(
+    DEBUG=True,
+    DATABASES=DATABASES,
+    INSTALLED_APPS=INSTALLED_APPS,
+    SECRET_KEY=SECRET_KEY,
+    USE_TZ=False,
+)
+
+django.setup()
+
+from django.db import models
+from django.test import TestCase
+from django.db.models import Prefetch
+
+class User(models.Model):
+    email = models.EmailField()
+    kind = models.CharField(
+        max_length=10, choices=[("ADMIN", "Admin"), ("REGULAR", "Regular")]
+    )
+    
+    class Meta:
+        app_label = 'contenttypes'
+        db_table = 'test_user'
+
+class Profile(models.Model):
+    full_name = models.CharField(max_length=255)
+    user = models.OneToOneField(User, on_delete=models.CASCADE)
+    
+    class Meta:
+        app_label = 'contenttypes'
+        db_table = 'test_profile'
+
+def run_test():
+    # Create tables
+    with connection.schema_editor() as schema_editor:
+        schema_editor.create_model(User)
+        schema_editor.create_model(Profile)
+    
+    # Create test data
+    user = User.objects.create(
+        email="test@example.com",
+        kind="ADMIN",
+    )
+    Profile.objects.create(user=user, full_name="Test Tester")
+    
+    # Run the test query
+    queryset = User.objects.only("email").prefetch_related(
+        Prefetch(
+            "profile",
+            queryset=Profile.objects.prefetch_related(
+                Prefetch("user", queryset=User.objects.only("kind"))
+            ),
+        )
+    )
+    
+    queries_before = len(connection.queries)
+    user = queryset.first()
+    queries_after_first = len(connection.queries)
+    print(f"Queries for first(): {queries_after_first - queries_before}")
+    
+    print(f"Kind: {user.profile.user.kind}")
+    queries_after_kind = len(connection.queries)
+    print(f"Additional queries for kind access: {queries_after_kind - queries_after_first}")
+    print(f"Deferred fields: {user.profile.user.get_deferred_fields()}")
+
+if __name__ == '__main__':
+    settings.DEBUG = True
+    run_test()
\ No newline at end of file
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..a1e2001bd0
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,13 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'test_app',
+]
+
+SECRET_KEY = 'dummy'
\ No newline at end of file
