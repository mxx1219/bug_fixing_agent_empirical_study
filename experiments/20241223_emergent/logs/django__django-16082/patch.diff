diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index 5e3c7cab82..9baeff9482 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -532,6 +532,7 @@ _connector_combinations = [
             Combinable.ADD,
             Combinable.SUB,
             Combinable.MUL,
+            Combinable.MOD,
             Combinable.DIV,
         )
     },
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..de344149a5
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,25 @@
+from django.db.models import F, Value, DecimalField, IntegerField, FloatField
+from decimal import Decimal
+
+def test_mod_operation(val1, val2, expected_type):
+    result = val1 % val2
+    actual_type = result.output_field.__class__.__name__
+    print(f"Testing {val1.output_field.__class__.__name__} % {val2.output_field.__class__.__name__}")
+    print(f"Expected type: {expected_type.__name__}")
+    print(f"Actual type: {actual_type}")
+    print(f"Test {'PASSED' if actual_type == expected_type.__name__ else 'FAILED'}\n")
+
+# Test Decimal % Integer
+decimal_val = Value(Decimal('10.5'), output_field=DecimalField())
+int_val = Value(3, output_field=IntegerField())
+test_mod_operation(decimal_val, int_val, DecimalField)
+
+# Test Integer % Decimal
+test_mod_operation(int_val, decimal_val, DecimalField)
+
+# Test Float % Integer
+float_val = Value(10.5, output_field=FloatField())
+test_mod_operation(float_val, int_val, FloatField)
+
+# Test Integer % Float
+test_mod_operation(int_val, float_val, FloatField)
\ No newline at end of file
