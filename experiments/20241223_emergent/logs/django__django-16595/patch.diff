diff --git a/django/db/migrations/operations/fields.py b/django/db/migrations/operations/fields.py
index cd3aab43ad..45b8a7d9aa 100644
--- a/django/db/migrations/operations/fields.py
+++ b/django/db/migrations/operations/fields.py
@@ -264,6 +264,12 @@ class AlterField(FieldOperation):
                     field=self.field,
                 ),
             ]
+        elif isinstance(operation, AlterField) and self.is_same_field_operation(
+            operation
+        ):
+            # If we have multiple AlterField operations on the same field,
+            # we can optimize them into just the latest one
+            return [operation]
         return super().reduce(operation, app_label)
 
 
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..aa8a7cc576
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,31 @@
+from django.db import migrations, models
+from django.db.migrations.optimizer import MigrationOptimizer
+
+# Create test operations
+operations = [
+    migrations.AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True),
+    ),
+    migrations.AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True, help_text="help"),
+    ),
+    migrations.AlterField(
+        model_name="book",
+        name="title",
+        field=models.CharField(max_length=128, null=True, help_text="help", default=None),
+    ),
+]
+
+# Run optimizer
+optimizer = MigrationOptimizer()
+result = optimizer.optimize(operations, "books")
+
+# Print results
+print("Number of operations after optimization:", len(result))
+print("\nOptimized operations:")
+for op in result:
+    print(f"- {op.__class__.__name__}(model_name='{op.model_name}', name='{op.name}')")
\ No newline at end of file
