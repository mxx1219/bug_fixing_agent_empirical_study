diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 0dc1c77c53..2166d77c14 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -951,6 +951,11 @@ class MigrationAutodetector:
             if old_field_dec != new_field_dec:
                 both_m2m = old_field.many_to_many and new_field.many_to_many
                 neither_m2m = not old_field.many_to_many and not new_field.many_to_many
+
+                # Add dependency when converting to a relation field
+                if hasattr(new_field, 'remote_field') and new_field.remote_field and not (hasattr(old_field, 'remote_field') and old_field.remote_field):
+                    self.add_dependency(new_field.remote_field.model._meta.app_label)
+
                 if both_m2m or neither_m2m:
                     # Either both fields are m2m or neither is
                     preserve_default = True
diff --git a/test_project/db.sqlite3 b/test_project/db.sqlite3
new file mode 100644
index 0000000000..41ff276589
Binary files /dev/null and b/test_project/db.sqlite3 differ
diff --git a/test_project/reproduce.py b/test_project/reproduce.py
new file mode 100644
index 0000000000..11aa49e338
--- /dev/null
+++ b/test_project/reproduce.py
@@ -0,0 +1,42 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+        }
+    },
+    INSTALLED_APPS=[
+        'testapp1',
+        'testapp2',
+    ],
+    SECRET_KEY='dummy-key-for-test',
+)
+
+django.setup()
+
+# Make initial migrations
+execute_from_command_line(['manage.py', 'makemigrations'])
+
+# Now modify the model to use ForeignKey
+import testapp1.models
+testapp1.models.App1.another_app = django.db.models.ForeignKey(
+    'testapp2.App2',
+    null=True,
+    blank=True,
+    on_delete=django.db.models.SET_NULL,
+    verbose_name='another app'
+)
+
+# Make migrations for the change
+execute_from_command_line(['manage.py', 'makemigrations'])
+
+# Try to apply migrations
+execute_from_command_line(['manage.py', 'migrate'])
\ No newline at end of file
diff --git a/test_project/test_migrations.py b/test_project/test_migrations.py
new file mode 100644
index 0000000000..f9ebffa870
--- /dev/null
+++ b/test_project/test_migrations.py
@@ -0,0 +1,27 @@
+import os
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+        }
+    },
+    INSTALLED_APPS=[
+        'testapp1',
+        'testapp2',
+    ],
+    SECRET_KEY='dummy-key-for-test',
+)
+
+django.setup()
+
+# Make initial migrations
+print("Creating initial migrations...")
+execute_from_command_line(['manage.py', 'makemigrations'])
\ No newline at end of file
diff --git a/test_project/testapp1/__init__.py b/test_project/testapp1/__init__.py
new file mode 100644
index 0000000000..0519ecba6e
--- /dev/null
+++ b/test_project/testapp1/__init__.py
@@ -0,0 +1 @@
+ 
\ No newline at end of file
diff --git a/test_project/testapp1/migrations/0001_initial.py b/test_project/testapp1/migrations/0001_initial.py
new file mode 100644
index 0000000000..f0160cbc23
--- /dev/null
+++ b/test_project/testapp1/migrations/0001_initial.py
@@ -0,0 +1,23 @@
+# Generated by Django 3.0 on 2024-12-21 11:17
+
+from django.db import migrations, models
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='App1',
+            fields=[
+                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='identifier')),
+                ('text', models.CharField(max_length=100, verbose_name='text')),
+                ('another_app', models.UUIDField(blank=True, null=True, verbose_name='another app')),
+            ],
+        ),
+    ]
diff --git a/test_project/testapp1/migrations/0002_auto_20241221_1117.py b/test_project/testapp1/migrations/0002_auto_20241221_1117.py
new file mode 100644
index 0000000000..f588cb93f6
--- /dev/null
+++ b/test_project/testapp1/migrations/0002_auto_20241221_1117.py
@@ -0,0 +1,19 @@
+# Generated by Django 3.0 on 2024-12-21 11:17
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('testapp1', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='app1',
+            name='another_app',
+            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testapp2.App2', verbose_name='another app'),
+        ),
+    ]
diff --git a/test_project/testapp1/migrations/__init__.py b/test_project/testapp1/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project/testapp1/models.py b/test_project/testapp1/models.py
new file mode 100644
index 0000000000..316d70280a
--- /dev/null
+++ b/test_project/testapp1/models.py
@@ -0,0 +1,8 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App1(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
+    another_app = models.ForeignKey('testapp2.App2', null=True, blank=True, on_delete=models.SET_NULL, verbose_name=_('another app'))
\ No newline at end of file
diff --git a/test_project/testapp2/__init__.py b/test_project/testapp2/__init__.py
new file mode 100644
index 0000000000..0519ecba6e
--- /dev/null
+++ b/test_project/testapp2/__init__.py
@@ -0,0 +1 @@
+ 
\ No newline at end of file
diff --git a/test_project/testapp2/migrations/0001_initial.py b/test_project/testapp2/migrations/0001_initial.py
new file mode 100644
index 0000000000..ea507aa3f1
--- /dev/null
+++ b/test_project/testapp2/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.0 on 2024-12-21 11:17
+
+from django.db import migrations, models
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='App2',
+            fields=[
+                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='identifier')),
+                ('text', models.CharField(max_length=100, verbose_name='text')),
+            ],
+        ),
+    ]
diff --git a/test_project/testapp2/migrations/__init__.py b/test_project/testapp2/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project/testapp2/models.py b/test_project/testapp2/models.py
new file mode 100644
index 0000000000..88c222bc73
--- /dev/null
+++ b/test_project/testapp2/models.py
@@ -0,0 +1,7 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App2(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
\ No newline at end of file
diff --git a/test_project2/db.sqlite3 b/test_project2/db.sqlite3
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project2/test_migrations.py b/test_project2/test_migrations.py
new file mode 100644
index 0000000000..599ff3af55
--- /dev/null
+++ b/test_project2/test_migrations.py
@@ -0,0 +1,54 @@
+import os
+import sys
+import django
+from django.conf import settings
+
+# Add Django source to Python path
+sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+        }
+    },
+    INSTALLED_APPS=[
+        'testapp1',
+        'testapp2',
+    ],
+    SECRET_KEY='dummy-key-for-test',
+)
+
+django.setup()
+
+from django.core.management import execute_from_command_line
+
+# Make initial migrations
+print("Creating initial migrations...")
+execute_from_command_line(['manage.py', 'makemigrations'])
+
+# Now modify the model
+print("\nModifying model to use ForeignKey...")
+from testapp1.models import App1
+App1.another_app = django.db.models.ForeignKey(
+    'testapp2.App2',
+    null=True,
+    blank=True,
+    on_delete=django.db.models.SET_NULL,
+    verbose_name='another app'
+)
+
+# Make migrations for the change
+print("\nCreating migration for the change...")
+execute_from_command_line(['manage.py', 'makemigrations'])
+
+# Show the contents of the latest migration
+latest_migration = sorted(os.listdir(os.path.join(BASE_DIR, 'testapp1/migrations')))[-1]
+if latest_migration.endswith('.py'):
+    print("\nLatest migration contents:")
+    with open(os.path.join(BASE_DIR, 'testapp1/migrations', latest_migration)) as f:
+        print(f.read())
\ No newline at end of file
diff --git a/test_project2/testapp1/__init__.py b/test_project2/testapp1/__init__.py
new file mode 100644
index 0000000000..0519ecba6e
--- /dev/null
+++ b/test_project2/testapp1/__init__.py
@@ -0,0 +1 @@
+ 
\ No newline at end of file
diff --git a/test_project2/testapp1/migrations/0001_initial.py b/test_project2/testapp1/migrations/0001_initial.py
new file mode 100644
index 0000000000..0674036db6
--- /dev/null
+++ b/test_project2/testapp1/migrations/0001_initial.py
@@ -0,0 +1,25 @@
+# Generated by Django 3.0 on 2024-12-21 11:19
+
+from django.db import migrations, models
+import django.db.models.deletion
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        ('testapp2', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='App1',
+            fields=[
+                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='identifier')),
+                ('text', models.CharField(max_length=100, verbose_name='text')),
+                ('another_app', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='testapp2.App2', verbose_name='another app')),
+            ],
+        ),
+    ]
diff --git a/test_project2/testapp1/migrations/__init__.py b/test_project2/testapp1/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project2/testapp1/models.py b/test_project2/testapp1/models.py
new file mode 100644
index 0000000000..316d70280a
--- /dev/null
+++ b/test_project2/testapp1/models.py
@@ -0,0 +1,8 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App1(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
+    another_app = models.ForeignKey('testapp2.App2', null=True, blank=True, on_delete=models.SET_NULL, verbose_name=_('another app'))
\ No newline at end of file
diff --git a/test_project2/testapp2/__init__.py b/test_project2/testapp2/__init__.py
new file mode 100644
index 0000000000..0519ecba6e
--- /dev/null
+++ b/test_project2/testapp2/__init__.py
@@ -0,0 +1 @@
+ 
\ No newline at end of file
diff --git a/test_project2/testapp2/migrations/0001_initial.py b/test_project2/testapp2/migrations/0001_initial.py
new file mode 100644
index 0000000000..07a969f0c1
--- /dev/null
+++ b/test_project2/testapp2/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.0 on 2024-12-21 11:19
+
+from django.db import migrations, models
+import uuid
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='App2',
+            fields=[
+                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='identifier')),
+                ('text', models.CharField(max_length=100, verbose_name='text')),
+            ],
+        ),
+    ]
diff --git a/test_project2/testapp2/migrations/__init__.py b/test_project2/testapp2/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_project2/testapp2/models.py b/test_project2/testapp2/models.py
new file mode 100644
index 0000000000..88c222bc73
--- /dev/null
+++ b/test_project2/testapp2/models.py
@@ -0,0 +1,7 @@
+import uuid
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+class App2(models.Model):
+    id = models.UUIDField(primary_key=True, unique=True, default=uuid.uuid4, editable=False, verbose_name=_('identifier'))
+    text = models.CharField(max_length=100, verbose_name=_('text'))
\ No newline at end of file
