diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 338d54d72f..879142c5df 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -378,7 +378,12 @@ class FileInput(Input):
 
     def format_value(self, value):
         """File input never renders a value."""
-        return
+
+    def use_required_attribute(self, initial):
+        """
+        Don't render 'required' if a file is already available.
+        """
+        return super().use_required_attribute(initial) and not initial
 
     def value_from_datadict(self, data, files, name):
         "File widgets take data from FILES, not POST"
@@ -451,9 +456,6 @@ class ClearableFileInput(FileInput):
             return False
         return upload
 
-    def use_required_attribute(self, initial):
-        return super().use_required_attribute(initial) and not initial
-
     def value_omitted_from_data(self, data, files, name):
         return (
             super().value_omitted_from_data(data, files, name) and
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..c6e0f5c48e
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,13 @@
+from django.forms import FileInput, ClearableFileInput
+
+# Test FileInput
+file_input = FileInput()
+print("FileInput with no initial data:")
+print(f"Required attribute should be shown: {file_input.use_required_attribute(initial=None)}")
+print(f"Required attribute with initial data: {file_input.use_required_attribute(initial='some_file.txt')}\n")
+
+# Test ClearableFileInput
+clearable_input = ClearableFileInput()
+print("ClearableFileInput with no initial data:")
+print(f"Required attribute should be shown: {clearable_input.use_required_attribute(initial=None)}")
+print(f"Required attribute with initial data: {clearable_input.use_required_attribute(initial='some_file.txt')}")
\ No newline at end of file
