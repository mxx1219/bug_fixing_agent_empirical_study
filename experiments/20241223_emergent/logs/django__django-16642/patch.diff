diff --git a/django/http/response.py b/django/http/response.py
index f62dec8ce9..5da7bcdf04 100644
--- a/django/http/response.py
+++ b/django/http/response.py
@@ -612,6 +612,8 @@ class FileResponse(StreamingHttpResponse):
                     "bzip2": "application/x-bzip",
                     "gzip": "application/gzip",
                     "xz": "application/x-xz",
+                    "br": "application/x-brotli",
+                    "compress": "application/x-compress",
                 }.get(encoding, content_type)
                 self.headers["Content-Type"] = (
                     content_type or "application/octet-stream"
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..1c20606277
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,34 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+]
+
+MIDDLEWARE = [
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+]
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+SECRET_KEY = 'dummy-key-for-tests'
\ No newline at end of file
diff --git a/tests/responses/test_fileresponse.py b/tests/responses/test_fileresponse.py
index 952fe4dd7c..659af6142c 100644
--- a/tests/responses/test_fileresponse.py
+++ b/tests/responses/test_fileresponse.py
@@ -255,6 +255,8 @@ class FileResponseTests(SimpleTestCase):
             (".tar.gz", "application/gzip"),
             (".tar.bz2", "application/x-bzip"),
             (".tar.xz", "application/x-xz"),
+            (".html.br", "application/x-brotli"),
+            (".html.Z", "application/x-compress"),
         )
         for extension, mimetype in test_tuples:
             with self.subTest(ext=extension):
