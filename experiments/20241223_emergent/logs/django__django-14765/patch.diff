diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py
index 088f5c41f0..7b3ad45610 100644
--- a/django/db/migrations/state.py
+++ b/django/db/migrations/state.py
@@ -91,8 +91,9 @@ class ProjectState:
     def __init__(self, models=None, real_apps=None):
         self.models = models or {}
         # Apps to include from main registry, usually unmigrated ones
-        if real_apps:
-            self.real_apps = real_apps if isinstance(real_apps, set) else set(real_apps)
+        if real_apps is not None:
+            assert isinstance(real_apps, set), "real_apps must be a set"
+            self.real_apps = real_apps
         else:
             self.real_apps = set()
         self.is_delayed = False
diff --git a/test_project_state.py b/test_project_state.py
new file mode 100644
index 0000000000..6aa628646c
--- /dev/null
+++ b/test_project_state.py
@@ -0,0 +1,19 @@
+from django.db.migrations.state import ProjectState
+
+# Test 1: real_apps as None (should work)
+ps1 = ProjectState()
+assert ps1.real_apps == set()
+
+# Test 2: real_apps as set (should work)
+test_apps = {'app1', 'app2'}
+ps2 = ProjectState(real_apps=test_apps)
+assert ps2.real_apps == test_apps
+
+# Test 3: real_apps as list (should fail)
+try:
+    ps3 = ProjectState(real_apps=['app1', 'app2'])
+    assert False, "Should have raised AssertionError"
+except AssertionError as e:
+    assert str(e) == "real_apps must be a set"
+
+print("All tests passed!")
\ No newline at end of file
