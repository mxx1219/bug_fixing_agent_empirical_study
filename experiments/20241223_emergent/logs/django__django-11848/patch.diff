diff --git a/django/utils/http.py b/django/utils/http.py
index 572cfb4347..cda1836793 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -176,10 +176,17 @@ def parse_http_date(date):
     try:
         year = int(m.group('year'))
         if year < 100:
-            if year < 70:
-                year += 2000
-            else:
-                year += 1900
+            # RFC 7231: Recipients of a timestamp value in rfc850-date format, which uses a
+            # two-digit year, MUST interpret a timestamp that appears to be more than 50
+            # years in the future as representing the most recent year in the past that had
+            # the same last two digits.
+            current_year = datetime.datetime.now().year
+            current_century = current_year // 100 * 100
+            candidate_year = current_century + year
+            if candidate_year - current_year > 50:
+                # Date would be more than 50 years in future, interpret as previous century
+                candidate_year -= 100
+            year = candidate_year
         month = MONTHS.index(m.group('mon').lower()) + 1
         day = int(m.group('day'))
         hour = int(m.group('hour'))
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..c643a2d7dd
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,41 @@
+from django.utils.http import parse_http_date
+from datetime import datetime
+import calendar
+
+def test_parse_http_date():
+    current_year = datetime.now().year
+    
+    # Test with current year's last two digits
+    current_yy = current_year % 100
+    date_str = f"Wednesday, 09-Nov-{current_yy:02d} 20:43:31 GMT"
+    timestamp = parse_http_date(date_str)
+    year = datetime.utcfromtimestamp(timestamp).year
+    print(f"Test with current year ({current_year}):")
+    print(f"Input date: {date_str}")
+    print(f"Parsed year: {year}")
+    print(f"Expected: {current_year}")
+    print()
+
+    # Test with a date that would be 51 years in the future if interpreted in current century
+    future_yy = (current_year + 51) % 100
+    date_str = f"Wednesday, 09-Nov-{future_yy:02d} 20:43:31 GMT"
+    timestamp = parse_http_date(date_str)
+    year = datetime.utcfromtimestamp(timestamp).year
+    print(f"Test with year that would be 51 years in future:")
+    print(f"Input date: {date_str}")
+    print(f"Parsed year: {year}")
+    print(f"Expected: {(current_year + 51) - 100}")  # Should be interpreted as previous century
+    print()
+
+    # Test with a date that would be 49 years in future if interpreted in current century
+    future_yy = (current_year + 49) % 100
+    date_str = f"Wednesday, 09-Nov-{future_yy:02d} 20:43:31 GMT"
+    timestamp = parse_http_date(date_str)
+    year = datetime.utcfromtimestamp(timestamp).year
+    print(f"Test with year that would be 49 years in future:")
+    print(f"Input date: {date_str}")
+    print(f"Parsed year: {year}")
+    print(f"Expected: {current_year + 49}")  # Should be interpreted as current century
+
+if __name__ == "__main__":
+    test_parse_http_date()
\ No newline at end of file
