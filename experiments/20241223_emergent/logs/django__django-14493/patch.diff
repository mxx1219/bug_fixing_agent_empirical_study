diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index f957a667b2..720767aa9e 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -261,6 +261,7 @@ class HashedFilesMixin:
 
         paths = {path: paths[path] for path in adjustable_paths}
 
+        substitutions = False
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
diff --git a/test_storage.py b/test_storage.py
new file mode 100644
index 0000000000..f088c59c8e
--- /dev/null
+++ b/test_storage.py
@@ -0,0 +1,41 @@
+import os
+import tempfile
+import shutil
+from django.conf import settings
+from django.contrib.staticfiles.storage import ManifestStaticFilesStorage
+
+# Configure Django settings
+STATIC_ROOT = tempfile.mkdtemp()
+settings.configure(
+    DEBUG=False,
+    STATIC_ROOT=STATIC_ROOT,
+    STATIC_URL='/static/',
+)
+
+# Create a custom storage class with max_post_process_passes = 0
+class MyManifestStaticFilesStorage(ManifestStaticFilesStorage):
+    max_post_process_passes = 0
+
+try:
+    # Create a test file
+    os.makedirs(STATIC_ROOT, exist_ok=True)
+    with open(os.path.join(STATIC_ROOT, 'test.css'), 'w') as f:
+        f.write('body { background: url("image.png"); }')
+
+    # Initialize storage
+    storage = MyManifestStaticFilesStorage()
+    
+    # Test post_process
+    paths = {
+        'test.css': (storage, 'test.css')
+    }
+    
+    # This should not raise UnboundLocalError
+    for name, hashed_name, processed in storage.post_process(paths):
+        print(f"Processed {name} -> {hashed_name} (processed: {processed})")
+    
+    print("Test passed successfully!")
+
+finally:
+    # Clean up
+    shutil.rmtree(STATIC_ROOT)
\ No newline at end of file
