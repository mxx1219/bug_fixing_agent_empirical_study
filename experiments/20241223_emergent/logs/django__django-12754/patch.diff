diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 30616c0172..3433980f35 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -164,9 +164,8 @@ class MigrationAutodetector:
         self._generate_through_model_map()
 
         # Generate non-rename model operations
-        self.generate_deleted_models()
-        self.generate_created_models()
         self.generate_deleted_proxies()
+        self.generate_created_models()  # Create models first
         self.generate_created_proxies()
         self.generate_altered_options()
         self.generate_altered_managers()
@@ -181,9 +180,10 @@ class MigrationAutodetector:
         self.generate_removed_indexes()
         # Generate field operations
         self.generate_renamed_fields()
-        self.generate_removed_fields()
-        self.generate_added_fields()
+        self.generate_added_fields()  # Add fields before removing them from parent
         self.generate_altered_fields()
+        self.generate_removed_fields()  # Remove fields after they're added to child
+        self.generate_deleted_models()  # Delete models last
         self.generate_altered_unique_together()
         self.generate_altered_index_together()
         self.generate_added_indexes()
diff --git a/reproduce_test/reproduce.py b/reproduce_test/reproduce.py
new file mode 100644
index 0000000000..9a567a4be5
--- /dev/null
+++ b/reproduce_test/reproduce.py
@@ -0,0 +1,106 @@
+import os
+import sys
+import django
+from django.core.management import execute_from_command_line
+from django.db import models
+
+# Set up Django environment
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_project.settings')
+
+# Create a test project structure
+if not os.path.exists('test_project'):
+    os.makedirs('test_project')
+    
+# Create settings.py
+settings_content = '''
+import os
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+SECRET_KEY = 'dummy-key-for-test'
+DEBUG = True
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'testapp',
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
+'''
+
+with open('test_project/settings.py', 'w') as f:
+    f.write(settings_content)
+
+# Create __init__.py
+with open('test_project/__init__.py', 'w') as f:
+    f.write('')
+
+# Create test app
+if not os.path.exists('testapp'):
+    os.makedirs('testapp')
+    os.makedirs('testapp/migrations')
+
+with open('testapp/__init__.py', 'w') as f:
+    f.write('')
+
+with open('testapp/migrations/__init__.py', 'w') as f:
+    f.write('')
+
+# Create models.py with the initial model
+models_content = '''
+from django.db import models
+
+class Readable(models.Model):
+    title = models.CharField(max_length=200)
+'''
+
+with open('testapp/models.py', 'w') as f:
+    f.write(models_content)
+
+# Initialize Django
+django.setup()
+
+print("Creating initial migration...")
+sys.argv = ['manage.py', 'makemigrations', 'testapp', '--name', 'initial']
+execute_from_command_line(sys.argv)
+
+print("Applying initial migration...")
+sys.argv = ['manage.py', 'migrate', 'testapp']
+execute_from_command_line(sys.argv)
+
+# Delete the old migrations to start fresh
+import shutil
+shutil.rmtree('testapp/migrations')
+os.makedirs('testapp/migrations')
+with open('testapp/migrations/__init__.py', 'w') as f:
+    f.write('')
+
+# Update models.py with the new structure
+models_content = '''
+from django.db import models
+
+class Readable(models.Model):
+    pass
+
+class Book(Readable):
+    title = models.CharField(max_length=200)
+'''
+
+with open('testapp/models.py', 'w') as f:
+    f.write(models_content)
+
+# Clear migration history to force new migration
+import shutil
+shutil.rmtree('testapp/migrations')
+os.makedirs('testapp/migrations')
+with open('testapp/migrations/__init__.py', 'w') as f:
+    f.write('')
+
+# Make migrations for the changes
+sys.argv = ['manage.py', 'makemigrations', 'testapp']
+execute_from_command_line(sys.argv)
+
+# Try to apply migrations - this should fail with FieldError
+sys.argv = ['manage.py', 'migrate', 'testapp']
+execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/reproduce_test/test_project/__init__.py b/reproduce_test/test_project/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce_test/test_project/db.sqlite3 b/reproduce_test/test_project/db.sqlite3
new file mode 100644
index 0000000000..4cc408e60f
Binary files /dev/null and b/reproduce_test/test_project/db.sqlite3 differ
diff --git a/reproduce_test/test_project/settings.py b/reproduce_test/test_project/settings.py
new file mode 100644
index 0000000000..2b304c3fd3
--- /dev/null
+++ b/reproduce_test/test_project/settings.py
@@ -0,0 +1,15 @@
+
+import os
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+SECRET_KEY = 'dummy-key-for-test'
+DEBUG = True
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'testapp',
+]
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
+    }
+}
diff --git a/reproduce_test/testapp/__init__.py b/reproduce_test/testapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce_test/testapp/migrations/0001_initial.py b/reproduce_test/testapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..671f5889ca
--- /dev/null
+++ b/reproduce_test/testapp/migrations/0001_initial.py
@@ -0,0 +1,21 @@
+# Generated by Django 3.2 on 2024-12-21 06:13
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Readable',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('title', models.CharField(max_length=200)),
+            ],
+        ),
+    ]
diff --git a/reproduce_test/testapp/migrations/__init__.py b/reproduce_test/testapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce_test/testapp/models.py b/reproduce_test/testapp/models.py
new file mode 100644
index 0000000000..f8a55a563f
--- /dev/null
+++ b/reproduce_test/testapp/models.py
@@ -0,0 +1,8 @@
+
+from django.db import models
+
+class Readable(models.Model):
+    pass
+
+class Book(Readable):
+    title = models.CharField(max_length=200)
