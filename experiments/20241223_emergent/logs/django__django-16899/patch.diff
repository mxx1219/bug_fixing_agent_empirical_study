diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py
index c395b0bde2..2c90dedc31 100644
--- a/django/contrib/admin/checks.py
+++ b/django/contrib/admin/checks.py
@@ -771,10 +771,11 @@ class BaseModelAdminChecks:
             except FieldDoesNotExist:
                 return [
                     checks.Error(
-                        "The value of '%s' is not a callable, an attribute of "
-                        "'%s', or an attribute of '%s'."
+                        "The value of '%s' refers to '%s', which is not a callable, "
+                        "an attribute of '%s', or an attribute of '%s'."
                         % (
                             label,
+                            field_name,
                             obj.__class__.__name__,
                             obj.model._meta.label,
                         ),
diff --git a/test_readonly_fields.py b/test_readonly_fields.py
new file mode 100644
index 0000000000..38ebd3fdb9
--- /dev/null
+++ b/test_readonly_fields.py
@@ -0,0 +1,31 @@
+import django
+django.setup()
+
+from django.contrib import admin
+from django.contrib.admin.checks import ModelAdminChecks
+from django.contrib.admin.options import ModelAdmin
+from django.core import checks
+from django.db import models
+
+# Create a simple model for testing
+class City(models.Model):
+    name = models.CharField(max_length=100)
+    population = models.IntegerField()
+
+    class Meta:
+        app_label = 'myapp'
+
+# Create a ModelAdmin with an invalid readonly_fields
+class CityAdmin(ModelAdmin):
+    readonly_fields = ['nonexistent_field']  # This field doesn't exist
+
+# Create an instance for testing
+city_admin = CityAdmin(City, admin.site)
+checker = ModelAdminChecks()
+
+# Run the checks
+errors = checker.check(city_admin)
+
+# Print the errors
+for error in errors:
+    print(error)
\ No newline at end of file
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..e26ab72abd
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,17 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+SECRET_KEY = 'dummy-key-for-test'
\ No newline at end of file
