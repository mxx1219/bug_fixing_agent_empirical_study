diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index b8efb9f881..4c96d4f271 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -216,15 +216,19 @@ def get_child_arguments():
     executable is reported to not have the .exe extension which can cause bugs
     on reloading.
     """
-    import django.__main__
-    django_main_path = Path(django.__main__.__file__)
+    import __main__
     py_script = Path(sys.argv[0])
 
     args = [sys.executable] + ['-W%s' % o for o in sys.warnoptions]
-    if py_script == django_main_path:
-        # The server was started with `python -m django runserver`.
-        args += ['-m', 'django']
-        args += sys.argv[1:]
+    
+    # Check if Python was launched with -m using __main__.__spec__
+    if getattr(__main__, '__spec__', None) is not None:
+        # Get the package name from __main__.__spec__.parent
+        package = __main__.__spec__.parent
+        if package:  # Empty string means Python was started with directory/zipfile
+            # The server was started with `python -m package`
+            args += ['-m', package]
+            args += sys.argv[1:]
     elif not py_script.exists():
         # sys.argv[0] may not exist for several reasons on Windows.
         # It may exist with a .exe extension or have a -script.py suffix.
diff --git a/test_autoreload.py b/test_autoreload.py
new file mode 100644
index 0000000000..ca73493805
--- /dev/null
+++ b/test_autoreload.py
@@ -0,0 +1,41 @@
+import os
+import sys
+import subprocess
+
+def test_autoreload():
+    # Create a test package
+    os.makedirs('test_pkg', exist_ok=True)
+    with open('test_pkg/__init__.py', 'w') as f:
+        f.write('')
+    with open('test_pkg/__main__.py', 'w') as f:
+        f.write('''
+import os
+import sys
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+# Configure minimal Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        ALLOWED_HOSTS=['*'],
+        INSTALLED_APPS=[],
+        SECRET_KEY='dummy',
+    )
+    django.setup()
+
+execute_from_command_line(sys.argv)
+''')
+
+    # Run the test package with -m
+    cmd = [sys.executable, '-m', 'test_pkg', 'runserver']
+    print(f"Running command: {' '.join(cmd)}")
+    try:
+        subprocess.run(cmd, check=True)
+    except subprocess.CalledProcessError as e:
+        print(f"Error running command: {e}")
+        sys.exit(1)
+
+if __name__ == '__main__':
+    test_autoreload()
\ No newline at end of file
diff --git a/test_pkg/__init__.py b/test_pkg/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_pkg/__main__.py b/test_pkg/__main__.py
new file mode 100644
index 0000000000..1e708d083a
--- /dev/null
+++ b/test_pkg/__main__.py
@@ -0,0 +1,18 @@
+
+import os
+import sys
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+# Configure minimal Django settings
+if not settings.configured:
+    settings.configure(
+        DEBUG=True,
+        ALLOWED_HOSTS=['*'],
+        INSTALLED_APPS=[],
+        SECRET_KEY='dummy',
+    )
+    django.setup()
+
+execute_from_command_line(sys.argv)
