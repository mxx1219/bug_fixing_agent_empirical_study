diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 7a5b28d159..602d56e075 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -150,14 +150,17 @@ def floatformat(text, arg=-1):
         elif last_char == "u":
             use_l10n = False
             arg = arg[:-1] or -1
-    try:
-        input_val = repr(text)
-        d = Decimal(input_val)
-    except InvalidOperation:
+    if isinstance(text, Decimal):
+        d = text
+    else:
         try:
-            d = Decimal(str(float(text)))
-        except (ValueError, InvalidOperation, TypeError):
-            return ""
+            input_val = repr(text)
+            d = Decimal(input_val)
+        except InvalidOperation:
+            try:
+                d = Decimal(str(float(text)))
+            except (ValueError, InvalidOperation, TypeError):
+                return ""
     try:
         p = int(arg)
     except ValueError:
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..6edcd1e08d
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,17 @@
+from decimal import Decimal
+from django import setup
+from django.conf import settings
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+    },
+]
+settings.configure(TEMPLATES=TEMPLATES)
+setup()
+
+from django.template import Template, Context
+
+t = Template('{{ value|floatformat:20 }}')
+c = Context({'value': Decimal('42.12345678901234567890')})
+print(t.render(c))  # Should print 42.12345678901234567890 but prints 42.12345678901234400000
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..83dd509e3b
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,54 @@
+from decimal import Decimal
+from django import setup
+from django.conf import settings
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+    },
+]
+settings.configure(TEMPLATES=TEMPLATES)
+setup()
+
+from django.template import Template, Context
+
+def test_template(value, format_spec="20"):
+    t = Template('{{ value|floatformat:' + str(format_spec) + ' }}')
+    c = Context({'value': value})
+    return t.render(c)
+
+# Test original decimal case
+print("Test 1 - Original decimal case:")
+print(test_template(Decimal('42.12345678901234567890')))
+
+# Test float input
+print("\nTest 2 - Float input:")
+print(test_template(42.12345))
+
+# Test string input
+print("\nTest 3 - String input:")
+print(test_template("42.12345"))
+
+# Test negative numbers
+print("\nTest 4 - Negative decimal:")
+print(test_template(Decimal('-42.12345678901234567890')))
+
+# Test zero decimal places
+print("\nTest 5 - Zero decimal places:")
+print(test_template(Decimal('42.12345'), 0))
+
+# Test negative format spec
+print("\nTest 6 - Negative format spec:")
+print(test_template(Decimal('42.12345'), -2))
+
+# Test very large number
+print("\nTest 7 - Very large decimal:")
+print(test_template(Decimal('1234567890.12345678901234567890')))
+
+# Test very small number
+print("\nTest 8 - Very small decimal:")
+print(test_template(Decimal('0.00000000000000000001')))
+
+# Test invalid input
+print("\nTest 9 - Invalid input:")
+print(test_template("invalid"))
\ No newline at end of file
