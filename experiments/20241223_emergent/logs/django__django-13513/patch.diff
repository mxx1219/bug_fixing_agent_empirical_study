diff --git a/test_exception.py b/test_exception.py
new file mode 100644
index 0000000000..85c8cb768e
--- /dev/null
+++ b/test_exception.py
@@ -0,0 +1,35 @@
+import sys
+from django.conf import settings
+from django.views.debug import ExceptionReporter
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    DEFAULT_EXCEPTION_REPORTER_FILTER='django.views.debug.SafeExceptionReporterFilter'
+)
+
+def explicit_or_implicit_cause(exc_value):
+    explicit = getattr(exc_value, '__cause__', None)
+    suppress_context = getattr(exc_value, '__suppress_context__', None)
+    implicit = getattr(exc_value, '__context__', None)
+    return explicit or (None if suppress_context else implicit)
+
+def test_exception():
+    try:
+        try:
+            raise RuntimeError('my error')
+        except Exception as exc:
+            raise ValueError('my new error') from None
+    except Exception as exc:
+        # Get the exception info
+        exc_type, exc_value, tb = sys.exc_info()
+        
+        # Print the exception chain
+        print("Exception chain:")
+        current = exc_value
+        while current:
+            print(f"- {type(current).__name__}: {str(current)}")
+            current = explicit_or_implicit_cause(current)
+
+if __name__ == '__main__':
+    test_exception()
\ No newline at end of file
