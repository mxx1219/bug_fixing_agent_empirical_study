diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 1ce4594501..be52d8fd18 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -166,11 +166,14 @@ def replace_named_groups(pattern):
     for start, end, group_name in named_group_indices:
         # Handle nested parentheses, e.g. '^(?P<a>(x|y))/b'.
         unmatched_open_brackets, prev_char = 1, None
-        for idx, val in enumerate(pattern[end:]):
+        remaining_pattern = pattern[end:]
+        found_end = False
+        for idx, val in enumerate(remaining_pattern):
             # If brackets are balanced, the end of the string for the current
             # named capture group pattern has been reached.
             if unmatched_open_brackets == 0:
                 group_pattern_and_name.append((pattern[start:end + idx], group_name))
+                found_end = True
                 break
 
             # Check for unescaped `(` and `)`. They mark the start and end of a
@@ -180,6 +183,11 @@ def replace_named_groups(pattern):
             elif val == ')' and prev_char != '\\':
                 unmatched_open_brackets -= 1
             prev_char = val
+            
+        # If we haven't found the end and we've reached the end of the pattern,
+        # this must be a trailing group
+        if not found_end:
+            group_pattern_and_name.append((pattern[start:], group_name))
 
     # Replace the string for named capture groups with their group names.
     for group_pattern, group_name in group_pattern_and_name:
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..7d41fa6a5a
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,32 @@
+from django.contrib.admindocs.utils import replace_named_groups
+
+def test_pattern(pattern, desc=""):
+    result = replace_named_groups(pattern)
+    if desc:
+        print(f"\n{desc}:")
+    print(f"Input:  {pattern}")
+    print(f"Output: {result}")
+
+# Original test case from PR description
+test_pattern(r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\w+)', 
+            "Original case")
+
+# Same pattern with trailing slash
+test_pattern(r'entries/(?P<pk>[^/.]+)/relationships/(?P<related_field>\w+)/',
+            "With trailing slash")
+
+# Edge case: Multiple nested groups at the end
+test_pattern(r'entries/(?P<pk>[^/.]+)/(?P<field>(?P<subfield>\w+))',
+            "Nested groups at end")
+
+# Edge case: Single character group at end
+test_pattern(r'entries/(?P<x>.)',
+            "Single char group at end")
+
+# Edge case: Empty pattern in group at end
+test_pattern(r'entries/(?P<empty>)',
+            "Empty group at end")
+
+# Edge case: Multiple groups with same name
+test_pattern(r'(?P<x>a)/(?P<x>b)',
+            "Multiple groups with same name")
\ No newline at end of file
