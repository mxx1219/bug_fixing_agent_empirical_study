diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py
index 8d08b7d1d3..3e70f37046 100644
--- a/django/utils/dateparse.py
+++ b/django/utils/dateparse.py
@@ -28,8 +28,8 @@ datetime_re = re.compile(
 
 standard_duration_re = re.compile(
     r'^'
-    r'(?:(?P<days>-?\d+) (days?, )?)?'
-    r'((?:(?P<hours>-?\d+):)(?=\d+:\d+))?'
+    r'(?:(?P<days>-?\d+) (?:days?(?:[, ]\s*|\s+))?)?'
+    r'((?:(?P<hours>-?\d+):)(?=-?\d+:-?\d+))?'
     r'(?:(?P<minutes>-?\d+):)?'
     r'(?P<seconds>-?\d+)'
     r'(?:\.(?P<microseconds>\d{1,6})\d{0,6})?'
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..ee52d52905
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,29 @@
+import re
+from django.utils.dateparse import parse_duration, standard_duration_re
+
+# Test cases
+test_cases = [
+    "2 days -1:-2:-3",     # Negative hours, minutes, seconds
+    "-2 days -1:-2:-3",    # All negative
+    "-1:-2:-3",            # Just negative time components
+    "2:-2:-3",             # Mixed positive hours, negative minutes/seconds
+    "2 days, -1:-2:-3",    # With comma after days
+    "-2 day -1:-2:-3",     # Singular "day"
+    "-2 days,-1:-2:-3",    # No space after comma
+    "-1:-2:-3.123456",     # With microseconds
+    "-2 days -1:-2:-3.123" # Days with microseconds
+]
+
+print("Testing parse_duration with various negative duration formats:")
+for test in test_cases:
+    print(f"\nTesting: '{test}'")
+    match = standard_duration_re.match(test)
+    if match:
+        print("Regex match groups:", match.groupdict())
+        try:
+            result = parse_duration(test)
+            print(f"Result: {result}")
+        except Exception as e:
+            print(f"ERROR: {str(e)}")
+    else:
+        print("No regex match")
\ No newline at end of file
