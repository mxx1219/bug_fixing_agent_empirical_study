diff --git a/.gitignore b/.gitignore
index 238fb3a200..975c5364d8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,6 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+*__pycache__*
+*venv*
+*_build*
diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py
index ac97f13161..0c7aa102d1 100644
--- a/django/core/management/commands/loaddata.py
+++ b/django/core/management/commands/loaddata.py
@@ -362,7 +362,9 @@ class Command(BaseCommand):
         """
         dirs = []
         fixture_dirs = settings.FIXTURE_DIRS
-        if len(fixture_dirs) != len(set(fixture_dirs)):
+        # Convert all paths to strings for duplicate detection
+        fixture_dirs_str = [str(d) for d in fixture_dirs]
+        if len(fixture_dirs_str) != len(set(fixture_dirs_str)):
             raise ImproperlyConfigured("settings.FIXTURE_DIRS contains duplicates.")
         for app_config in apps.get_app_configs():
             app_label = app_config.label
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..722466d9a6
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,46 @@
+from pathlib import Path
+import os
+import django
+from django.conf import settings
+from django.core.management import call_command
+from django.test import TestCase, override_settings
+
+# Configure Django settings
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+settings.configure(
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
+)
+django.setup()
+
+# Create a temporary test case to reproduce the issue
+class LoadDataPathTest(TestCase):
+    def test_fixture_dirs_with_path_duplicates(self):
+        # Test with Path instances
+        fixture_dirs = [
+            Path('/tmp/fixtures'),  # Path instance
+            Path('/tmp/fixtures'),  # Duplicate Path instance
+        ]
+        with override_settings(FIXTURE_DIRS=fixture_dirs):
+            try:
+                call_command('loaddata', 'dummy.json', verbosity=0)
+                print("ERROR: Duplicate Path instances were not detected!")
+            except Exception as e:
+                print(f"Test 1 - Got expected error with Path instances: {str(e)}")
+
+        # Test with mixed Path and string instances
+        fixture_dirs = [
+            Path('/tmp/fixtures'),  # Path instance
+            '/tmp/fixtures',        # String path
+        ]
+        with override_settings(FIXTURE_DIRS=fixture_dirs):
+            try:
+                call_command('loaddata', 'dummy.json', verbosity=0)
+                print("ERROR: Mixed Path and string duplicates were not detected!")
+            except Exception as e:
+                print(f"Test 2 - Got expected error with mixed types: {str(e)}")
+
+if __name__ == '__main__':
+    # Run the test
+    test = LoadDataPathTest()
+    test.test_fixture_dirs_with_path_duplicates()
\ No newline at end of file
