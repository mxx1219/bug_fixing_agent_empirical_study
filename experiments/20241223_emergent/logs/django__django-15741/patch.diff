diff --git a/django/utils/formats.py b/django/utils/formats.py
index 3f38322d84..040eea7148 100644
--- a/django/utils/formats.py
+++ b/django/utils/formats.py
@@ -8,6 +8,7 @@ from importlib import import_module
 from django.conf import settings
 from django.utils import dateformat, numberformat
 from django.utils.functional import lazy
+from django.utils.encoding import force_str
 from django.utils.translation import check_for_language, get_language, to_locale
 
 # format_cache is a mapping from (format_type, lang) to the format string.
@@ -106,6 +107,7 @@ def get_format(format_type, lang=None, use_l10n=None):
     If use_l10n is provided and is not None, it forces the value to
     be localized (or not), overriding the value of settings.USE_L10N.
     """
+    format_type = force_str(format_type)
     if use_l10n is None:
         try:
             use_l10n = settings._USE_L10N_INTERNAL
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..99326ad9ac
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,27 @@
+import django
+from django.conf import settings
+from django.utils.translation import gettext_lazy as _
+from django.utils.formats import get_format
+
+# Configure minimal settings
+settings.configure(
+    USE_L10N=True,
+    DATE_FORMAT='Y-m-d',
+    FORMAT_MODULE_PATH=None,
+    USE_TZ=False,
+    LANGUAGE_CODE='en-us',
+    INSTALLED_APPS=[]
+)
+
+# Initialize Django
+django.setup()
+
+# Create a lazy string
+lazy_format = _('DATE_FORMAT')
+
+# Try to use it with get_format
+try:
+    result = get_format(lazy_format)
+    print(f"Success! Result: {result}")
+except TypeError as e:
+    print(f"Error occurred: {e}")
\ No newline at end of file
