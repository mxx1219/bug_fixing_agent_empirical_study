diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py
index 3effab65a8..351829ff3e 100644
--- a/django/db/backends/postgresql/client.py
+++ b/django/db/backends/postgresql/client.py
@@ -36,21 +36,23 @@ class DatabaseClient(BaseDatabaseClient):
             args += [dbname]
         args.extend(parameters)
 
-        env = {}
-        if passwd:
-            env['PGPASSWORD'] = str(passwd)
-        if service:
-            env['PGSERVICE'] = str(service)
-        if sslmode:
-            env['PGSSLMODE'] = str(sslmode)
-        if sslrootcert:
-            env['PGSSLROOTCERT'] = str(sslrootcert)
-        if sslcert:
-            env['PGSSLCERT'] = str(sslcert)
-        if sslkey:
-            env['PGSSLKEY'] = str(sslkey)
-        if passfile:
-            env['PGPASSFILE'] = str(passfile)
+        env = None
+        if any([passwd, service, sslmode, sslrootcert, sslcert, sslkey, passfile]):
+            env = {}
+            if passwd:
+                env['PGPASSWORD'] = str(passwd)
+            if service:
+                env['PGSERVICE'] = str(service)
+            if sslmode:
+                env['PGSSLMODE'] = str(sslmode)
+            if sslrootcert:
+                env['PGSSLROOTCERT'] = str(sslrootcert)
+            if sslcert:
+                env['PGSSLCERT'] = str(sslcert)
+            if sslkey:
+                env['PGSSLKEY'] = str(sslkey)
+            if passfile:
+                env['PGPASSFILE'] = str(passfile)
         return args, env
 
     def runshell(self, parameters):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..1bff0755c0
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,20 @@
+import os
+from django.db.backends.postgresql.client import DatabaseClient
+
+# Set a test environment variable
+os.environ['TEST_VAR'] = 'test_value'
+
+# Create a minimal settings dict
+settings_dict = {
+    'NAME': 'test_db',
+    'USER': 'test_user',
+    'PASSWORD': 'test_password',  # This will set PGPASSWORD
+}
+
+# Get the command args and env
+args, env = DatabaseClient.settings_to_cmd_args_env(settings_dict, [])
+
+print("Environment variables returned by client:")
+print(env)
+print("\nActual environment variables:")
+print(os.environ.get('TEST_VAR'))
\ No newline at end of file
