diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 23c3a08c67..8378300345 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -183,7 +183,8 @@ def floatformat(text, arg=-1):
     tupl = d.as_tuple()
     units = len(tupl[1])
     units += -tupl[2] if m else tupl[2]
-    prec = abs(p) + units + 1
+    # Ensure minimum precision of 1 to handle zero values correctly
+    prec = max(1, abs(p) + units + 1)
 
     # Avoid conversion to scientific notation by accessing `sign`, `digits`,
     # and `exponent` from Decimal.as_tuple() directly.
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e2cf62880f
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+from decimal import Decimal
+import django
+from django.conf import settings
+from django.template.defaultfilters import floatformat
+
+# Configure Django settings
+settings.configure(
+    USE_I18N=True,
+    USE_L10N=True,
+    USE_TZ=True,
+)
+
+# Initialize Django
+django.setup()
+
+# Test cases
+test_cases = [
+    ('0.00', 0),
+    (Decimal('0.00'), 0),
+    ('0.000', 0),
+    (Decimal('0.000'), 0),
+    ('0.00', 1),
+    (Decimal('0.00'), 1),
+    ('0.00', 2),
+    (Decimal('0.00'), 2)
+]
+
+for value, decimal_places in test_cases:
+    try:
+        result = floatformat(value, decimal_places)
+        print(f"Success: floatformat({value}, {decimal_places}) = {result}")
+    except Exception as e:
+        print(f"Error: floatformat({value}, {decimal_places}) raised {type(e).__name__}: {str(e)}")
\ No newline at end of file
