diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index a44adfc760..641e67e4cd 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -425,7 +425,8 @@ class SQLCompiler:
                 # If the columns list is limited, then all combined queries
                 # must have the same columns list. Set the selects defined on
                 # the query on all combined queries, if not already set.
-                if not compiler.query.values_select and self.query.values_select:
+                # Always update values_select to match the main query
+                if self.query.values_select:
                     compiler.query.set_values((
                         *self.query.extra_select,
                         *self.query.values_select,
diff --git a/migrations/0001_initial.py b/migrations/0001_initial.py
new file mode 100644
index 0000000000..6572b7ad37
--- /dev/null
+++ b/migrations/0001_initial.py
@@ -0,0 +1,22 @@
+# Generated by Django 3.0.dev20190619064046 on 2024-12-21 12:19
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='ReservedName',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+                ('order', models.IntegerField()),
+            ],
+        ),
+    ]
diff --git a/migrations/__init__.py b/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..576637eaa9
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,35 @@
+from django.conf import settings
+from django.db import models
+import os
+
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=['__main__'],
+    )
+
+import django
+django.setup()
+
+from django.core.management import call_command
+
+class ReservedName(models.Model):
+    name = models.CharField(max_length=100)
+    order = models.IntegerField()
+
+# Create database tables
+call_command('makemigrations', '__main__', verbosity=0)
+call_command('migrate', verbosity=0)
+
+# Create test instance
+ReservedName.objects.create(name='a', order=2)
+
+# Test the issue
+qs1 = ReservedName.objects.all()
+print("First query:", qs1.union(qs1).values_list('name', 'order').get())
+print("Second query:", qs1.union(qs1).values_list('order').get())
\ No newline at end of file
