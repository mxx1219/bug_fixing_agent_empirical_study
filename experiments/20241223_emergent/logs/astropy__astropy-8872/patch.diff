diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py
index ded609cbe9..752c21eba5 100644
--- a/astropy/units/quantity.py
+++ b/astropy/units/quantity.py
@@ -377,8 +377,9 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):
                             "Numpy numeric type.")
 
         # by default, cast any integer, boolean, etc., to float
-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)
-                                   or value.dtype.fields)
+        if dtype is None and (not ((np.can_cast(np.float32, value.dtype) or
+                                     (value.dtype.kind == 'f' and value.dtype.itemsize >= 2))
+                                    or value.dtype.fields)
                               or value.dtype.kind == 'O'):
             value = value.astype(float)
 
diff --git a/check_casting.py b/check_casting.py
new file mode 100644
index 0000000000..6931adb2dc
--- /dev/null
+++ b/check_casting.py
@@ -0,0 +1,4 @@
+import numpy as np
+
+print("Can float32 be cast to float16?", np.can_cast(np.float32, np.float16))
+print("Can float16 be cast to float32?", np.can_cast(np.float16, np.float32))
\ No newline at end of file
diff --git a/reproduce_float16.py b/reproduce_float16.py
new file mode 100644
index 0000000000..5a497fdf22
--- /dev/null
+++ b/reproduce_float16.py
@@ -0,0 +1,20 @@
+import numpy as np
+from astropy import units as u
+
+# Test float16
+print("Testing float16:")
+x = np.float16(1)
+print(f"Original dtype: {x.dtype}")
+q = x * u.km
+print(f"Quantity dtype: {q.dtype}")
+
+# Compare with other float types
+print("\nTesting other float types:")
+for dtype in [np.float32, np.float64, np.float128]:
+    try:
+        x = dtype(1)
+        print(f"\nOriginal {dtype.__name__} dtype: {x.dtype}")
+        q = x * u.km
+        print(f"Quantity {dtype.__name__} dtype: {q.dtype}")
+    except AttributeError:
+        print(f"{dtype.__name__} not available on this system")
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..e42b081c95
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,40 @@
+import numpy as np
+from astropy import units as u
+
+# Test with arrays
+print("Testing array of float16:")
+x = np.array([1, 2, 3], dtype=np.float16)
+q = x * u.km
+print(f"Array dtype: {q.dtype}")
+
+# Test with scalar operations
+print("\nTesting scalar operations:")
+x = np.float16(2)
+q = x * u.km
+print(f"2 * km dtype: {q.dtype}")
+q = q + q
+print(f"After addition dtype: {q.dtype}")
+q = q * 2
+print(f"After multiplication dtype: {q.dtype}")
+
+# Test with mixed dtypes
+print("\nTesting mixed dtypes:")
+x16 = np.float16(1)
+x32 = np.float32(1)
+q16 = x16 * u.km
+q32 = x32 * u.km
+try:
+    result = q16 + q32
+    print(f"Mixed addition dtype: {result.dtype}")
+except Exception as e:
+    print(f"Mixed addition error: {e}")
+
+# Test with non-float types
+print("\nTesting non-float types:")
+x = np.int32(1)
+q = x * u.km
+print(f"Int32 conversion dtype: {q.dtype}")
+
+x = np.bool_(True)
+q = x * u.km
+print(f"Bool conversion dtype: {q.dtype}")
\ No newline at end of file
