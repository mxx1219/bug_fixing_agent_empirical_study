diff --git a/.gitignore b/.gitignore
index 238fb3a200..975c5364d8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,6 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+*__pycache__*
+*venv*
+*_build*
diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index d73d1c8495..e3ee6603e1 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -141,6 +141,9 @@ class UserCreationForm(forms.ModelForm):
         user.set_password(self.cleaned_data["password1"])
         if commit:
             user.save()
+            self.save_m2m()  # Save many-to-many relationships
+        else:
+            self.save_m2m = self._save_m2m  # Defer saving many-to-many relationships
         return user
 
 
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..48c6651eab
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,57 @@
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'reproduce_issue',  # Add our test module as an app
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        }
+    )
+    django.setup()
+
+from django.contrib.auth.forms import UserCreationForm
+from django.contrib.auth.models import User, Group
+from django.db import models
+
+# Create a custom user model with a ManyToMany field
+class CustomUser(User):
+    groups = models.ManyToManyField(Group, related_name='custom_users')
+
+    class Meta:
+        app_label = 'reproduce_issue'
+
+# Create a custom UserCreationForm for our model
+class CustomUserCreationForm(UserCreationForm):
+    class Meta(UserCreationForm.Meta):
+        model = CustomUser
+        fields = UserCreationForm.Meta.fields + ('groups',)
+
+# Create a group
+group = Group.objects.create(name='test_group')
+
+# Create form data including the group
+form_data = {
+    'username': 'testuser',
+    'password1': 'testpass123',
+    'password2': 'testpass123',
+    'groups': [group.id]
+}
+
+# Create and validate the form
+form = CustomUserCreationForm(data=form_data)
+if form.is_valid():
+    user = form.save()
+    print(f"User created: {user}")
+    print(f"User groups: {list(user.groups.all())}")  # Should show the group but won't
+else:
+    print(f"Form errors: {form.errors}")
\ No newline at end of file
diff --git a/test_m2m_save.py b/test_m2m_save.py
new file mode 100644
index 0000000000..76482f8ee5
--- /dev/null
+++ b/test_m2m_save.py
@@ -0,0 +1,60 @@
+import os
+import django
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        MIDDLEWARE=[],
+        SECRET_KEY='dummy-key'
+    )
+    django.setup()
+
+# Run migrations
+from django.core.management import call_command
+call_command('migrate', verbosity=0)
+
+from django.contrib.auth.forms import UserCreationForm
+from django.contrib.auth.models import User, Group
+from django.db import models
+
+# Create a test group
+group = Group.objects.create(name='test_group')
+
+# Create form data including the group
+form_data = {
+    'username': 'testuser',
+    'password1': 'testpass123',
+    'password2': 'testpass123',
+}
+
+# Create and validate the form
+form = UserCreationForm(data=form_data)
+if form.is_valid():
+    # First test with commit=False
+    user = form.save(commit=False)
+    user.save()
+    user.groups.add(group)
+    print("Test 1 - Manual M2M save:")
+    print(f"User created: {user}")
+    print(f"User groups: {list(user.groups.all())}")
+    user.delete()
+
+    # Now test with commit=True after our fix
+    user = form.save()
+    user.groups.add(group)
+    print("\nTest 2 - Automatic M2M save:")
+    print(f"User created: {user}")
+    print(f"User groups: {list(user.groups.all())}")
+else:
+    print(f"Form errors: {form.errors}")
\ No newline at end of file
