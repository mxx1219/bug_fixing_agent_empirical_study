diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py
index 1ba093e51f..eb6ead388e 100644
--- a/django/core/management/__init__.py
+++ b/django/core/management/__init__.py
@@ -187,9 +187,11 @@ class ManagementUtility:
     """
     def __init__(self, argv=None):
         self.argv = argv or sys.argv[:]
-        self.prog_name = os.path.basename(self.argv[0])
-        if self.prog_name == '__main__.py':
-            self.prog_name = 'python -m django'
+        self.prog_name = 'django'  # Default value
+        if self.argv and self.argv[0]:
+            self.prog_name = os.path.basename(self.argv[0])
+            if self.prog_name == '__main__.py':
+                self.prog_name = 'python -m django'
         self.settings_exception = None
 
     def main_help_text(self, commands_only=False):
@@ -344,7 +346,11 @@ class ManagementUtility:
         # Preprocess options to extract --settings and --pythonpath.
         # These options could affect the commands that are available, so they
         # must be processed early.
-        parser = CommandParser(usage='%(prog)s subcommand [options] [args]', add_help=False, allow_abbrev=False)
+        parser = CommandParser(
+            prog=self.prog_name,
+            usage='%(prog)s subcommand [options] [args]',
+            add_help=False,
+            allow_abbrev=False)
         parser.add_argument('--settings')
         parser.add_argument('--pythonpath')
         parser.add_argument('args', nargs='*')  # catch-all
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..b2482a07b9
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,10 @@
+from django.core.management import ManagementUtility
+
+# Create a custom argv list where argv[0] is None
+custom_argv = [None, 'help']
+
+# Initialize ManagementUtility with our custom argv
+utility = ManagementUtility(argv=custom_argv)
+
+# Try to execute - this should use our custom argv
+utility.execute()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..24d6788b2a
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,29 @@
+from django.core.management import ManagementUtility
+
+# Test case 1: Empty argv list
+try:
+    utility = ManagementUtility(argv=[])
+    print("Test 1 (empty argv): prog_name =", utility.prog_name)
+except Exception as e:
+    print("Test 1 failed:", str(e))
+
+# Test case 2: None as argv
+try:
+    utility = ManagementUtility(argv=None)  # Should use sys.argv
+    print("Test 2 (None argv): prog_name =", utility.prog_name)
+except Exception as e:
+    print("Test 2 failed:", str(e))
+
+# Test case 3: argv[0] is __main__.py
+try:
+    utility = ManagementUtility(argv=['__main__.py', 'help'])
+    print("Test 3 (__main__.py): prog_name =", utility.prog_name)
+except Exception as e:
+    print("Test 3 failed:", str(e))
+
+# Test case 4: Normal case
+try:
+    utility = ManagementUtility(argv=['/usr/local/bin/django-admin', 'help'])
+    print("Test 4 (normal case): prog_name =", utility.prog_name)
+except Exception as e:
+    print("Test 4 failed:", str(e))
\ No newline at end of file
