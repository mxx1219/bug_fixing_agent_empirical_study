diff --git a/django/db/models/base.py b/django/db/models/base.py
index e3b14a41a0..039c5b8308 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -847,12 +847,14 @@ class Model(metaclass=ModelBase):
         if not pk_set and (force_update or update_fields):
             raise ValueError("Cannot force an update in save() with no primary key.")
         updated = False
-        # Skip an UPDATE when adding an instance and primary key has a default.
+        # Skip an UPDATE when adding an instance and primary key has a default,
+        # but only if no explicit pk value was provided
         if (
             not force_insert and
             self._state.adding and
             self._meta.pk.default and
-            self._meta.pk.default is not NOT_PROVIDED
+            self._meta.pk.default is not NOT_PROVIDED and
+            not pk_set  # Only force insert if no pk value was explicitly set
         ):
             force_insert = True
         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..47ea78cca1
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,45 @@
+from uuid import uuid4
+from django.db import models
+from django.conf import settings
+import os
+import django
+
+# Configure Django settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+    DEFAULT_AUTO_FIELD='django.db.models.AutoField'
+)
+django.setup()
+
+# Define the model
+class Sample(models.Model):
+    id = models.UUIDField(primary_key=True, default=uuid4)
+    name = models.CharField(blank=True, max_length=100)
+    
+    class Meta:
+        app_label = 'auth'  # Using existing app for simplicity
+
+# Create the tables
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(Sample)
+
+# Reproduce the issue
+s0 = Sample.objects.create()
+print(f"Created first instance with id: {s0.pk}")
+
+s1 = Sample(pk=s0.pk, name='Test 1')
+print(f"Attempting to save instance with same pk: {s1.pk}")
+try:
+    s1.save()
+except Exception as e:
+    print(f"Error occurred: {e}")
\ No newline at end of file
