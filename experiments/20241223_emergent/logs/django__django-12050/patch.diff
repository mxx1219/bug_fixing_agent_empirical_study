diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py
index ea51912e8b..cc3747396f 100644
--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1073,7 +1073,8 @@ class Query(BaseExpression):
                         ))
                 else:
                     resolved_values.append(sub_value)
-            value = tuple(resolved_values)
+            # Preserve the input type (list or tuple) in the output
+            value = type(value)(resolved_values)
         return value
 
     def solve_lookup_type(self, lookup):
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..b2c5238bdd
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,41 @@
+from django.conf import settings
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'django.contrib.admin']
+)
+
+import django
+django.setup()
+
+from django.db import models
+from django.db.models.sql.query import Query
+
+class TestModel(models.Model):
+    pickled_field = models.Field()  # Simulating a PickledField
+    
+    class Meta:
+        app_label = 'admin'  # Using existing app for simplicity
+
+# Create a query instance
+query = Query(TestModel)
+
+# Test with a list value
+test_list = [1, 2, 3]
+result_list = query.resolve_lookup_value(test_list, can_reuse=True, allow_joins=True, simple_col=True)
+
+print("Testing with list:")
+print(f"Input type: {type(test_list)}")
+print(f"Output type: {type(result_list)}")
+print(f"Input value: {test_list}")
+print(f"Output value: {result_list}")
+print(f"Types match: {type(test_list) == type(result_list)}")
+
+print("\nTesting with tuple:")
+# Test with a tuple value
+test_tuple = (1, 2, 3)
+result_tuple = query.resolve_lookup_value(test_tuple, can_reuse=True, allow_joins=True, simple_col=True)
+
+print(f"Input type: {type(test_tuple)}")
+print(f"Output type: {type(result_tuple)}")
+print(f"Input value: {test_tuple}")
+print(f"Output value: {result_tuple}")
+print(f"Types match: {type(test_tuple) == type(result_tuple)}")
\ No newline at end of file
