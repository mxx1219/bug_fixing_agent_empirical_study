diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 6ea18dd22f..3c7eea885a 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -318,7 +318,9 @@ class LocalePrefixPattern:
         if language_code == settings.LANGUAGE_CODE and not self.prefix_default_language:
             return ''
         else:
-            return '%s/' % language_code
+            # Normalize the language code to lowercase for URL matching
+            # This ensures that 'en-Latn-US' and 'en-latn-us' are treated the same
+            return '%s/' % language_code.lower()
 
     def match(self, path):
         language_prefix = self.language_prefix
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..25a2840fc6
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,34 @@
+import django
+from django.urls.resolvers import LocalePrefixPattern
+from django.conf import settings
+from django.utils import translation
+from django.apps import apps
+
+# Mock Django settings
+settings.configure(
+    LANGUAGE_CODE='en-us',
+    LANGUAGES=[
+        ('en-us', "English"),
+        ('en-latn-us', "Latin English"),
+        ('en-Latn-US', "BCP 47 case format"),
+    ],
+    INSTALLED_APPS=[],
+    USE_I18N=True
+)
+django.setup()
+
+# Create a LocalePrefixPattern instance
+pattern = LocalePrefixPattern()
+
+# Test with different language codes
+def test_language(lang_code):
+    translation.activate(lang_code)
+    prefix = pattern.language_prefix
+    print(f"Language: {lang_code}")
+    print(f"Prefix: {prefix}")
+    print(f"Match /en-latn-us/test/: {pattern.match('en-latn-us/test/')}")
+    print("---")
+
+test_language('en-us')
+test_language('en-latn-us')
+test_language('en-Latn-US')
\ No newline at end of file
