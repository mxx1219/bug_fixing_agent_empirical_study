diff --git a/.gitignore b/.gitignore
index 238fb3a200..975c5364d8 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,6 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+*__pycache__*
+*venv*
+*_build*
diff --git a/django/db/models/base.py b/django/db/models/base.py
index 6c9e9d3707..fb9f775778 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1747,7 +1747,16 @@ class Model(metaclass=ModelBase):
                     else:
                         _cls = None
                 except (FieldDoesNotExist, AttributeError):
-                    if fld is None or fld.get_transform(part) is None:
+                    if fld is None:
+                        errors.append(
+                            checks.Error(
+                                "'ordering' refers to the nonexistent field, "
+                                "related field, or lookup '%s'." % field,
+                                obj=cls,
+                                id='models.E015',
+                            )
+                        )
+                    elif fld.get_transform(part) is None and fld.get_lookup(part) is None:
                         errors.append(
                             checks.Error(
                                 "'ordering' refers to the nonexistent field, "
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..9874f2d364
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,17 @@
+from django.core import checks
+from django.conf import settings
+import os
+
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes', 'testapp'],
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+)
+
+import django
+django.setup()
+
+from testapp.models import Stock
+
+# Run the check
+errors = Stock.check()
+print("Errors:", errors)
\ No newline at end of file
diff --git a/testapp/__init__.py b/testapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testapp/models.py b/testapp/models.py
new file mode 100644
index 0000000000..f999df3975
--- /dev/null
+++ b/testapp/models.py
@@ -0,0 +1,20 @@
+from django.db import models
+
+class Product(models.Model):
+    parent = models.ForeignKey('self', models.CASCADE, null=True)
+
+    class Meta:
+        app_label = 'testapp'
+
+class Supply(models.Model):
+    product = models.ForeignKey(Product, models.CASCADE)
+
+    class Meta:
+        app_label = 'testapp'
+
+class Stock(models.Model):
+    supply = models.ForeignKey(Supply, models.CASCADE)
+
+    class Meta:
+        app_label = 'testapp'
+        ordering = ['supply__product__parent__invalid']
\ No newline at end of file
