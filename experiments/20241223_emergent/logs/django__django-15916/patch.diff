diff --git a/django/forms/models.py b/django/forms/models.py
index 192d9fad94..dce252e64f 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -636,7 +636,10 @@ def modelform_factory(
     class_name = model.__name__ + "Form"
 
     # Class attributes for the new form class.
-    form_class_attrs = {"Meta": Meta, "formfield_callback": formfield_callback}
+    form_class_attrs = {"Meta": Meta}
+    # Only set formfield_callback as a class attribute if it was explicitly provided
+    if formfield_callback is not None:
+        form_class_attrs["formfield_callback"] = formfield_callback
 
     if getattr(Meta, "fields", None) is None and getattr(Meta, "exclude", None) is None:
         raise ImproperlyConfigured(
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..7565438418
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,43 @@
+import django
+from django.conf import settings
+from django import forms
+from django.db import models
+
+# Configure Django settings
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth', 'testapp.TestAppConfig'],
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+)
+django.setup()
+
+class MyModel(models.Model):
+    class Meta:
+        app_label = 'testapp'
+    active = models.BooleanField()
+    name = models.CharField(max_length=64, blank=True, null=True)
+
+def all_required(field, **kwargs):
+    formfield = field.formfield(**kwargs)
+    formfield.required = True
+    return formfield
+
+class MyForm(forms.ModelForm):
+    formfield_callback = all_required
+    class Meta:
+        model = MyModel
+        formfield_callback = all_required
+        fields = ['active', 'name']
+
+FactoryForm = forms.modelform_factory(MyModel, form=MyForm)
+
+# Print form fields to check if they are required
+form = MyForm()
+factory_form = FactoryForm()
+
+print("MyForm fields required status:")
+for field_name, field in form.fields.items():
+    print(f"{field_name}: {field.required}")
+
+print("\nFactoryForm fields required status:")
+for field_name, field in factory_form.fields.items():
+    print(f"{field_name}: {field.required}")
\ No newline at end of file
diff --git a/testapp.py b/testapp.py
new file mode 100644
index 0000000000..7100945a3b
--- /dev/null
+++ b/testapp.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestAppConfig(AppConfig):
+    name = 'testapp'
\ No newline at end of file
