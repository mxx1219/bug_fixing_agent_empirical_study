diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 967a91fdc8..d803209a42 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -844,6 +844,15 @@ class AddIndex(IndexOperation):
             kwargs,
         )
 
+    def reduce(self, operation, app_label):
+        if isinstance(operation, RemoveIndex):
+            if (
+                self.model_name_lower == operation.model_name_lower and
+                self.index.name.lower() == operation.name.lower()
+            ):
+                return []
+        return super().reduce(operation, app_label)
+
     def describe(self):
         if self.index.expressions:
             return "Create index %s on %s on model %s" % (
@@ -900,6 +909,15 @@ class RemoveIndex(IndexOperation):
     def describe(self):
         return "Remove index %s from %s" % (self.name, self.model_name)
 
+    def reduce(self, operation, app_label):
+        if isinstance(operation, AddIndex):
+            if (
+                self.model_name_lower == operation.model_name_lower and
+                self.name.lower() == operation.index.name.lower()
+            ):
+                return []
+        return super().reduce(operation, app_label)
+
     @property
     def migration_name_fragment(self):
         return "remove_%s_%s" % (self.model_name_lower, self.name.lower())
diff --git a/test_index_optimization.py b/test_index_optimization.py
new file mode 100644
index 0000000000..66b7f0c69c
--- /dev/null
+++ b/test_index_optimization.py
@@ -0,0 +1,38 @@
+import django
+from django.db import models
+from django.db.migrations.operations.models import AddIndex, RemoveIndex
+from django.db.migrations.optimizer import MigrationOptimizer
+from django.conf import settings
+
+# Configure minimal settings
+settings.configure(
+    INSTALLED_APPS=['django.contrib.contenttypes'],
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3'}},
+)
+django.setup()
+
+# Create a test model
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'testapp'
+
+# Create test index
+test_index = models.Index(fields=['name'], name='test_name_idx')
+
+# Create operations
+operations = [
+    AddIndex('TestModel', test_index),
+    RemoveIndex('TestModel', 'test_name_idx')
+]
+
+# Try to optimize
+optimizer = MigrationOptimizer()
+optimized = optimizer.optimize(operations, 'testapp')
+
+print(f"Original operations count: {len(operations)}")
+print(f"Optimized operations count: {len(optimized)}")
+print("\nOptimized operations:")
+for op in optimized:
+    print(f"- {op.__class__.__name__}")
\ No newline at end of file
