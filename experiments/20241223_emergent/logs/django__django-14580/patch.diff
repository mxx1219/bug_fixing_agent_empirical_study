diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py
index 4918261fb0..10d24e6a9f 100644
--- a/django/db/migrations/writer.py
+++ b/django/db/migrations/writer.py
@@ -163,8 +163,17 @@ class MigrationWriter:
                 self.needs_manual_porting = True
 
         # django.db.migrations is always used, but models import may not be.
-        # If models import exists, merge it with migrations import.
-        if "from django.db import models" in imports:
+        # Check if models.Model is used in bases or if models import exists
+        needs_models = False
+        for operation in self.migration.operations:
+            if isinstance(operation, migrations.CreateModel):
+                bases = getattr(operation, 'bases', None)
+                if bases and any('models.Model' in str(base) for base in bases):
+                    needs_models = True
+                    break
+
+        # If models import exists or models.Model is used in bases, merge it with migrations import
+        if needs_models or "from django.db import models" in imports:
             imports.discard("from django.db import models")
             imports.add("from django.db import migrations, models")
         else:
diff --git a/tests/conftest.py b/tests/conftest.py
new file mode 100644
index 0000000000..2605c14a1c
--- /dev/null
+++ b/tests/conftest.py
@@ -0,0 +1,8 @@
+import os
+import django
+from django.conf import settings
+
+def pytest_configure():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.test_settings')
+    settings.configure()
+    django.setup()
\ No newline at end of file
diff --git a/tests/migrations/test_writer.py b/tests/migrations/test_writer.py
index a590ff4398..1cc223c66d 100644
--- a/tests/migrations/test_writer.py
+++ b/tests/migrations/test_writer.py
@@ -25,8 +25,6 @@ from django.utils.functional import SimpleLazyObject
 from django.utils.timezone import get_default_timezone, get_fixed_timezone, utc
 from django.utils.translation import gettext_lazy as _
 
-from .models import FoodManager, FoodQuerySet
-
 
 class DeconstructibleInstances:
     def deconstruct(self):
@@ -771,6 +769,25 @@ class WriterTests(SimpleTestCase):
                         # a comment or indentation or blank line
                         self.assertRegex(output.splitlines(keepends=True)[0], r"^[^#\s]+")
 
+    def test_models_import_for_model_base(self):
+        """
+        django.db.models should be imported when models.Model is used in bases.
+        """
+        migration = type("Migration", (migrations.Migration,), {
+            "operations": [
+                migrations.CreateModel(
+                    name='MyModel',
+                    fields=[
+                        ('name', models.TextField(primary_key=True)),
+                    ],
+                    bases=(models.Model,),
+                ),
+            ]
+        })
+        writer = MigrationWriter(migration)
+        output = writer.as_string()
+        self.assertIn('from django.db import migrations, models', output)
+
     def test_models_import_omitted(self):
         """
         django.db.models shouldn't be imported if unused.
diff --git a/tests/test_settings.py b/tests/test_settings.py
new file mode 100644
index 0000000000..77a17fbfbf
--- /dev/null
+++ b/tests/test_settings.py
@@ -0,0 +1,14 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'tests',
+]
+
+SECRET_KEY = 'dummy'
\ No newline at end of file
