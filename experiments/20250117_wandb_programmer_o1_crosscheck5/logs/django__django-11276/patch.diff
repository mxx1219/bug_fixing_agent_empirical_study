diff --git a/django/utils/html.py b/django/utils/html.py
index 9c519978f5..7dcff86035 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -43,7 +43,9 @@ def escape(text):
     This may result in double-escaping. If this is a concern, use
     conditional_escape() instead.
     """
-    return mark_safe(str(text).translate(_html_escapes))
+    from html import escape as py_escape
+    return mark_safe(py_escape(str(text), quote=True))
+
 
 
 _js_escapes = {
diff --git a/test_escape_repro.py b/test_escape_repro.py
new file mode 100644
index 0000000000..e6dc284528
--- /dev/null
+++ b/test_escape_repro.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python3
+
+import sys
+import html
+from django.utils.html import escape
+
+def main():
+    print("STEP1: Starting test_escape_repro")
+    test_input = "'"
+    print(f"STEP2: Using test input = {test_input!r}")
+    expected = html.escape(test_input, quote=True)
+    actual = escape(test_input)
+    print(f"STEP3: expected = {expected!r}, actual = {actual!r}")
+    if actual != expected:
+        print("FAIL: django.utils.html.escape does not match stdlib html.escape")
+        print("Exiting with status code 1")
+        sys.exit(1)
+    print("PASS: django.utils.html.escape matches stdlib html.escape")
+    sys.exit(0)
+
+if __name__ == '__main__':
+    main()
diff --git a/tests/utils_tests/test_html.py b/tests/utils_tests/test_html.py
index d87927cdfe..b33d3e714e 100644
--- a/tests/utils_tests/test_html.py
+++ b/tests/utils_tests/test_html.py
@@ -27,7 +27,7 @@ class TestUtilsHtml(SimpleTestCase):
             ('<', '&lt;'),
             ('>', '&gt;'),
             ('"', '&quot;'),
-            ("'", '&#39;'),
+            ("'", '&#x27;'),
         )
         # Substitution patterns for testing the above items.
         patterns = ("%s", "asdf%sfdsa", "%s1", "1%sb")
@@ -41,6 +41,7 @@ class TestUtilsHtml(SimpleTestCase):
                 self.check_output(escape, value * 2, output * 2)
         # Verify it doesn't double replace &.
         self.check_output(escape, '<&', '&lt;&amp;')
+    
 
     def test_format_html(self):
         self.assertEqual(
