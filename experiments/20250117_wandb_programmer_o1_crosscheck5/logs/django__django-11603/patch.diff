diff --git a/django/db/models/aggregates.py b/django/db/models/aggregates.py
index da4ff928aa..b27afaf9e4 100644
--- a/django/db/models/aggregates.py
+++ b/django/db/models/aggregates.py
@@ -99,6 +99,8 @@ class Aggregate(Func):
 class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
     function = 'AVG'
     name = 'Avg'
+    allow_distinct = True
+
 
 
 class Count(Aggregate):
@@ -121,11 +123,15 @@ class Count(Aggregate):
 class Max(Aggregate):
     function = 'MAX'
     name = 'Max'
+    allow_distinct = True
+
 
 
 class Min(Aggregate):
     function = 'MIN'
     name = 'Min'
+    allow_distinct = True
+
 
 
 class StdDev(NumericOutputFieldMixin, Aggregate):
@@ -142,6 +148,8 @@ class StdDev(NumericOutputFieldMixin, Aggregate):
 class Sum(FixDurationInputMixin, Aggregate):
     function = 'SUM'
     name = 'Sum'
+    allow_distinct = True
+
 
 
 class Variance(NumericOutputFieldMixin, Aggregate):
diff --git a/test_distinct_aggregates.py b/test_distinct_aggregates.py
new file mode 100644
index 0000000000..45167b4544
--- /dev/null
+++ b/test_distinct_aggregates.py
@@ -0,0 +1,53 @@
+import sys
+import django
+from django.conf import settings
+from django.db import models
+
+# We'll define a minimal settings config here:
+settings.configure(
+    SECRET_KEY='test',
+    INSTALLED_APPS=['__main__'],  # Our test will define models in __main__
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+)
+django.setup()
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=50)
+    value = models.IntegerField()
+
+def main():
+    print("Creating tables...")
+    # We need to create tables for our TestModel.
+    # We'll do a quick migration using the ORM's create operation:
+    with django.db.connection.schema_editor() as schema_editor:
+        schema_editor.create_model(TestModel)
+
+    # Insert some sample data
+    print("Inserting sample data...")
+    TestModel.objects.create(name="A", value=10)
+    TestModel.objects.create(name="B", value=10)
+    TestModel.objects.create(name="C", value=20)
+
+    from django.db.models import Avg, Sum
+
+    try:
+        print("Attempting to run Avg with distinct=True...")
+        avg_val = TestModel.objects.aggregate(distinct_avg=models.Avg('value', distinct=True))['distinct_avg']
+        print(f"Got avg_val={avg_val}")
+    except TypeError as e:
+        print("FAIL: TypeError when using Avg with distinct=True.")
+        sys.exit(1)
+
+    try:
+        print("Attempting to run Sum with distinct=True...")
+        sum_val = TestModel.objects.aggregate(distinct_sum=models.Sum('value', distinct=True))['distinct_sum']
+        print(f"Got sum_val={sum_val}")
+    except TypeError as e:
+        print("FAIL: TypeError when using Sum with distinct=True.")
+        sys.exit(1)
+
+    print("SUCCESS: No errors raised. Exiting with 0.")
+    sys.exit(0)
+
+if __name__ == '__main__':
+    main()
