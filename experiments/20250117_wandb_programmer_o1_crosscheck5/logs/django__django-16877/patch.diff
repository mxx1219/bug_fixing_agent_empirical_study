diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 5289ef34a0..9192183745 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -497,6 +497,16 @@ def safeseq(value):
     """
     return [mark_safe(obj) for obj in value]
 
+@register.filter(is_safe=True)
+def escapeseq(value):
+    """
+    A filter that escapes each element of a sequence.
+    Usage: {{ some_list|escapeseq|join:"," }}
+    """
+    return [mark_safe(escape(str(obj))) for obj in value]
+
+
+
 
 @register.filter(is_safe=True)
 @stringfilter
diff --git a/test_escapeseq.py b/test_escapeseq.py
new file mode 100644
index 0000000000..84bc7df125
--- /dev/null
+++ b/test_escapeseq.py
@@ -0,0 +1,49 @@
+import sys
+import django
+from django.conf import settings
+from django.template import Template, Context
+from django import setup
+
+def main():
+    print("Step 1: Configure minimal Django settings.")
+    settings.configure(
+        INSTALLED_APPS=[],
+        TEMPLATES=[{'BACKEND': 'django.template.backends.django.DjangoTemplates'}],
+    )
+    setup()
+    print("Step 2: Prepare context data.")
+    some_list = ['hello', '<b>world</b>']
+
+    print("Step 3: Define template using escapeseq filter.")
+    template_str = "{{ some_list|escapeseq|join:\",\" }}"
+    print("Template content:", template_str)
+
+    try:
+        print("Step 4: Attempt to compile template.")
+        t = Template(template_str)
+    except Exception as e:
+        print("Template compilation failed:", e)
+        print("Test fails (filter not present?).")
+        sys.exit(1)
+
+    print("Step 5: Attempt to render template.")
+    try:
+        result = t.render(Context({'some_list': some_list}))
+    except Exception as e:
+        print("Template rendering failed:", e)
+        print("Test fails (filter not present?).")
+        sys.exit(1)
+
+    print("Rendered result:", result)
+    expected = "hello,&lt;b&gt;world&lt;/b&gt;"
+    print("Expected result:", expected)
+
+    if result == expected:
+        print("Test passes - escapeseq filter is functioning properly.")
+        sys.exit(0)
+    else:
+        print("Test fails - output did not match expected escaped value.")
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
