diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 1b3285ddce..0a02e2347e 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -827,16 +827,16 @@ class Card(_Verify):
         return comment
 
     def _split(self):
-        """
+        '''
         Split the card image between the keyword and the rest of the card.
-        """
+        '''
         if self._image is not None:
             # If we already have a card image, don't try to rebuild a new card
             # image, which self.image would do
             image = self._image
         else:
             image = self.image
-
+    
         # Split cards with CONTINUE cards or commentary keywords with long
         # values
         if len(self._image) > self.length:
@@ -847,52 +847,54 @@ class Card(_Verify):
                 kw, vc = card._split()
                 if keyword is None:
                     keyword = kw
-
+    
                 if keyword in self._commentary_keywords:
                     values.append(vc)
                     continue
-
+    
                 # Should match a string followed by a comment; if not it
                 # might be an invalid Card, so we just take it verbatim
                 m = self._strg_comment_RE.match(vc)
                 if not m:
                     return kw, vc
-
-                value = m.group("strg") or ""
-                value = value.rstrip().replace("''", "'")
-                if value and value[-1] == "&":
+    
+                value = m.group('strg') or ''
+                # Removed the .replace("''","'")
+                value = value.rstrip()
+                if value and value[-1] == '&':
                     value = value[:-1]
                 values.append(value)
-                comment = m.group("comm")
+                comment = m.group('comm')
                 if comment:
                     comments.append(comment.rstrip())
-
+    
             if keyword in self._commentary_keywords:
-                valuecomment = "".join(values)
+                valuecomment = ''.join(values)
             else:
                 # CONTINUE card
                 valuecomment = f"'{''.join(values)}' / {' '.join(comments)}"
             return keyword, valuecomment
-
+    
         if self.keyword in self._special_keywords:
-            keyword, valuecomment = image.split(" ", 1)
+            keyword, valuecomment = image.split(' ', 1)
         else:
             try:
                 delim_index = image.index(self._value_indicator)
             except ValueError:
                 delim_index = None
-
+    
             # The equal sign may not be any higher than column 10; anything
             # past that must be considered part of the card value
             if delim_index is None:
-                keyword = image[:KEYWORD_LENGTH]
-                valuecomment = image[KEYWORD_LENGTH:]
-            elif delim_index > 10 and image[:9] != "HIERARCH ":
+                keyword = image[:8]
+                valuecomment = image[8:]
+            elif delim_index > 10 and image[:9] != 'HIERARCH ':
                 keyword = image[:8]
                 valuecomment = image[8:]
             else:
                 keyword, valuecomment = image.split(self._value_indicator, 1)
         return keyword.strip(), valuecomment.strip()
+    
 
     def _fix_keyword(self):
         if self.field_specifier:
diff --git a/test_double_quotes_issue.py b/test_double_quotes_issue.py
new file mode 100644
index 0000000000..8397de67c7
--- /dev/null
+++ b/test_double_quotes_issue.py
@@ -0,0 +1,39 @@
+import sys
+from astropy.io import fits
+
+def main():
+    print("Testing double quotes issue with null string '' in FITS Cards...")
+    print("We check if card1.value == card2.value for lengths near 80 columns.")
+    all_good = True
+
+    # First scenario: "x"*n + "''"
+    print("Scenario 1: Value ends with ''")
+    for n in range(60, 70):
+        v = "x"*n + "''"
+        card1 = fits.Card('CONFIG', v)
+        card2 = fits.Card.fromstring(str(card1))
+        same = (card1.value == card2.value)
+        print(f"n={n}, card1.value={card1.value!r}, card2.value={card2.value!r}, same={same}")
+        if not same:
+            all_good = False
+
+    # Second scenario: "x"*n + "''" + "x"*10
+    print("Scenario 2: Embedded '' in a longer string")
+    for n in range(50, 70):
+        v = "x"*n + "''" + "x"*10
+        card1 = fits.Card('CONFIG', v)
+        card2 = fits.Card.fromstring(str(card1))
+        same = (card1.value == card2.value)
+        print(f"n={n}, card1.value={card1.value!r}, card2.value={card2.value!r}, same={same}")
+        if not same:
+            all_good = False
+
+    if all_good:
+        print("All checks passed. The double quotes issue appears fixed.")
+        sys.exit(0)
+    else:
+        print("At least one mismatch found. The double quotes issue persists!")
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
