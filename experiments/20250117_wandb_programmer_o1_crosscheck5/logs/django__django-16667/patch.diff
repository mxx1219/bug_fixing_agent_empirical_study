diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 842b73e95c..2ab8f50f3a 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -1157,12 +1157,13 @@ class SelectDateWidget(Widget):
             input_format = formats.sanitize_strftime_format(input_format)
             try:
                 date_value = datetime.date(int(y), int(m), int(d))
-            except ValueError:
+            except (ValueError, OverflowError):
                 # Return pseudo-ISO dates with zeros for any unselected values,
                 # e.g. '2017-0-23'.
                 return "%s-%s-%s" % (y or 0, m or 0, d or 0)
             return date_value.strftime(input_format)
         return data.get(name)
+    
 
     def value_omitted_from_data(self, data, files, name):
         return not any(
diff --git a/test_overflow_select_date_widget.py b/test_overflow_select_date_widget.py
new file mode 100644
index 0000000000..88c7c1b3d5
--- /dev/null
+++ b/test_overflow_select_date_widget.py
@@ -0,0 +1,46 @@
+import sys
+import django
+from django.conf import settings
+from django import forms
+from django.forms import SelectDateWidget
+
+def configure_django():
+    if not settings.configured:
+        settings.configure(
+            DEBUG=True,
+            SECRET_KEY="fake-key-for-tests-12345",
+            USE_I18N=False,
+            USE_L10N=False,
+            TIME_ZONE="UTC",
+            INSTALLED_APPS=[],
+        )
+    django.setup()
+
+class ReproForm(forms.Form):
+    my_date = forms.DateField(widget=SelectDateWidget())
+
+def main():
+    print("Test: Overflow in SelectDateWidget with extremely large integers.")
+    configure_django()
+
+    data = {
+        "my_date_year": "1234567821345678",
+        "my_date_month": "1",
+        "my_date_day": "1"
+    }
+    print("Using data:", data)
+    form = ReproForm(data)
+    try:
+        _ = form.is_valid()  # This triggers value_from_datadict() internally
+    except OverflowError as e:
+        print("Encountered OverflowError:", e)
+        sys.exit(1)
+    except Exception as e:
+        print("Encountered some other exception:", e)
+        sys.exit(2)
+
+    print("No OverflowError encountered - bug is presumably fixed or handled gracefully.")
+    sys.exit(0)
+
+if __name__ == "__main__":
+    main()
