diff --git a/app_test/__init__.py b/app_test/__init__.py
new file mode 100644
index 0000000000..a5d59a1600
--- /dev/null
+++ b/app_test/__init__.py
@@ -0,0 +1 @@
+# Marks this directory as a Python package
diff --git a/app_test/admin.py b/app_test/admin.py
new file mode 100644
index 0000000000..7c2fcec0a2
--- /dev/null
+++ b/app_test/admin.py
@@ -0,0 +1,11 @@
+from django.contrib import admin
+from .models import Employee, Department
+
+my_custom_admin_site = admin.AdminSite(name='my_custom_admin_site')
+
+class EmployeeAdmin(admin.ModelAdmin):
+    readonly_fields = ('department',)
+
+# Also register Department so that get_admin_url() succeeds.
+my_custom_admin_site.register(Department)
+my_custom_admin_site.register(Employee, EmployeeAdmin)
diff --git a/app_test/apps.py b/app_test/apps.py
new file mode 100644
index 0000000000..fd37bf96ee
--- /dev/null
+++ b/app_test/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class AppTestConfig(AppConfig):
+    name = "app_test"
diff --git a/app_test/models.py b/app_test/models.py
new file mode 100644
index 0000000000..e1e4031a4c
--- /dev/null
+++ b/app_test/models.py
@@ -0,0 +1,14 @@
+from django.db import models
+
+class Department(models.Model):
+    name = models.CharField(max_length=100)
+
+    def __str__(self):
+        return self.name
+
+class Employee(models.Model):
+    name = models.CharField(max_length=100)
+    department = models.ForeignKey(Department, on_delete=models.CASCADE)
+
+    def __str__(self):
+        return self.name
diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py
index dd154f72ee..b2717cb5b0 100644
--- a/django/contrib/admin/helpers.py
+++ b/django/contrib/admin/helpers.py
@@ -209,10 +209,15 @@ class AdminReadonlyField:
             remote_field.model._meta.model_name,
         )
         try:
-            url = reverse(url_name, args=[quote(remote_obj.pk)])
+            url = reverse(
+                url_name,
+                args=[quote(remote_obj.pk)],
+                current_app=self.model_admin.admin_site.name,
+            )
             return format_html('<a href="{}">{}</a>', url, remote_obj)
         except NoReverseMatch:
             return str(remote_obj)
+    
 
     def contents(self):
         from django.contrib.admin.templatetags.admin_list import _boolean_icon
diff --git a/migrations/0001_initial.py b/migrations/0001_initial.py
new file mode 100644
index 0000000000..ac00888f9f
--- /dev/null
+++ b/migrations/0001_initial.py
@@ -0,0 +1,23 @@
+# Generated by Django 4.0.dev20210917181926 on 2025-01-13 02:44
+
+from django.db import migrations, models
+import django.db.models.deletion
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Foo',
+            fields=[
+                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('name', models.CharField(max_length=100)),
+                ('bar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_test.foo')),
+            ],
+        ),
+    ]
diff --git a/migrations/__init__.py b/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/test_custom_admin_url.py b/test_custom_admin_url.py
new file mode 100644
index 0000000000..276b000d0d
--- /dev/null
+++ b/test_custom_admin_url.py
@@ -0,0 +1,85 @@
+import sys
+from django.conf import settings
+
+def configure_django():
+    settings.configure(
+        SECRET_KEY='test_secret',
+        DEBUG=True,
+        ALLOWED_HOSTS=['*'],
+        ROOT_URLCONF='test_custom_admin_url_urls',
+        INSTALLED_APPS=[
+            'django.contrib.admin',
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'django.contrib.sessions',
+            'app_test.apps.AppTestConfig'
+        ],
+        MIDDLEWARE=[
+            'django.contrib.sessions.middleware.SessionMiddleware',
+            'django.contrib.auth.middleware.AuthenticationMiddleware'
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:'
+            }
+        },
+        TEMPLATES=[
+            {
+                'BACKEND': 'django.template.backends.django.DjangoTemplates',
+                'APP_DIRS': True,
+                'OPTIONS': {}
+            }
+        ]
+    )
+
+def main():
+    print('Starting test...')
+    import django
+    configure_django()
+    django.setup()
+
+    from django.core.management import call_command
+    from django.contrib.auth.models import User
+    from django.test import Client
+    from app_test.models import Department, Employee
+
+    # Migrate and create a superuser
+    print('Running migrations...')
+    call_command('migrate', interactive=False, run_syncdb=True)
+    print('Creating superuser...')
+    User.objects.create_superuser('admin', 'admin@example.com', 'admin')
+
+    # Create test objects
+    print('Creating Department and Employee...')
+    dept = Department.objects.create(name='Dept1')
+    emp = Employee.objects.create(name='Emp1', department=dept)
+
+    # Log in with Client
+    print('Logging in...')
+    c = Client()
+    logged_in = c.login(username='admin', password='admin')
+    print('Logged in:', logged_in)
+
+    # Retrieve the Employee change form
+    emp_change_url = f'/myadmin/app_test/employee/{emp.pk}/change/'
+    print('Fetching:', emp_change_url)
+    response = c.get(emp_change_url)
+    print('Response status code:', response.status_code)
+
+    body = response.content.decode('utf-8', errors='replace')
+    with open('test_custom_admin_url_response.html', 'w', encoding='utf-8') as f:
+        f.write(body)
+
+    expected_link = f'/myadmin/app_test/department/{dept.pk}/change/'
+    if expected_link in body:
+        print('Test passed. Found link:', expected_link)
+        sys.exit(0)
+    else:
+        print('Test failed.')
+        print('Expected link not found:', expected_link)
+        print('Body content written to test_custom_admin_url_response.html')
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
diff --git a/test_custom_admin_url_response.html b/test_custom_admin_url_response.html
new file mode 100644
index 0000000000..74051bc70b
--- /dev/null
+++ b/test_custom_admin_url_response.html
@@ -0,0 +1,261 @@
+<!DOCTYPE html>
+
+<html lang="en-us" dir="ltr">
+<head>
+<title>Emp1 | Change employee | Django site admin</title>
+<link rel="stylesheet" type="text/css" href="admin/css/base.css">
+
+  <link rel="stylesheet" type="text/css" href="admin/css/nav_sidebar.css">
+  <script src="admin/js/nav_sidebar.js" defer></script>
+
+<link rel="stylesheet" type="text/css" href="admin/css/forms.css">
+
+
+<script src="/myadmin/jsi18n/"></script>
+<script src="admin/js/vendor/jquery/jquery.js"></script>
+<script src="admin/js/jquery.init.js"></script>
+<script src="admin/js/core.js"></script>
+<script src="admin/js/admin/RelatedObjectLookups.js"></script>
+<script src="admin/js/actions.js"></script>
+<script src="admin/js/urlify.js"></script>
+<script src="admin/js/prepopulate.js"></script>
+<script src="admin/js/vendor/xregexp/xregexp.js"></script>
+
+
+    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">
+    <link rel="stylesheet" type="text/css" href="admin/css/responsive.css">
+    
+
+<meta name="robots" content="NONE,NOARCHIVE">
+</head>
+
+<body class=" app-app_test model-employee change-form"
+  data-admin-utc-offset="-21600">
+
+<!-- Container -->
+<div id="container">
+
+    
+    <!-- Header -->
+    
+    <div id="header">
+        <div id="branding">
+        
+<h1 id="site-name"><a href="/myadmin/">Django administration</a></h1>
+
+        </div>
+        
+        
+        <div id="user-tools">
+            
+                Welcome,
+                <strong></strong>.
+            
+            
+                
+                    <a href="/">View site</a> /
+                
+                
+                
+                <a href="/myadmin/logout/">Log out</a>
+            
+        </div>
+        
+        
+        
+    </div>
+    
+    <!-- END Header -->
+    
+<div class="breadcrumbs">
+<a href="/myadmin/">Home</a>
+&rsaquo; <a href="/myadmin/app_test/">App_Test</a>
+&rsaquo; <a href="/myadmin/app_test/employee/">Employees</a>
+&rsaquo; Emp1
+</div>
+
+    
+
+    <div class="main" id="main">
+      
+        
+          
+<button class="sticky toggle-nav-sidebar" id="toggle-nav-sidebar" aria-label="Toggle navigation"></button>
+<nav class="sticky" id="nav-sidebar">
+  <input type="search" id="nav-filter"
+         placeholder="Start typing to filter..."
+         aria-label="Filter navigation items">
+  
+
+
+  
+    <div class="app-app_test module">
+      <table>
+        <caption>
+          <a href="/myadmin/app_test/" class="section" title="Models in the App_Test application">App_Test</a>
+        </caption>
+        
+          <tr class="model-department">
+            
+              <th scope="row"><a href="/myadmin/app_test/department/">Departments</a></th>
+            
+
+            
+              <td><a href="/myadmin/app_test/department/add/" class="addlink">Add</a></td>
+            
+
+            
+          </tr>
+        
+          <tr class="model-employee">
+            
+              <th scope="row"><a href="/myadmin/app_test/employee/">Employees</a></th>
+            
+
+            
+              <td><a href="/myadmin/app_test/employee/add/" class="addlink">Add</a></td>
+            
+
+            
+          </tr>
+        
+      </table>
+    </div>
+  
+
+
+</nav>
+
+        
+      
+      <div class="content">
+        
+          
+        
+        <!-- Content -->
+        <div id="content" class="colM">
+          
+          <h1>Change employee</h1>
+          <h2>Emp1</h2>
+          <div id="content-main">
+
+
+  <ul class="object-tools">
+    
+      
+
+<li>
+    
+    <a href="/myadmin/app_test/employee/1/history/" class="historylink">History</a>
+</li>
+
+
+
+    
+  </ul>
+
+
+<form method="post" id="employee_form" novalidate><input type="hidden" name="csrfmiddlewaretoken" value="Gg7TZatPrxaFBpnl8pzRH0vxbSahKXcNZi1C9xD5gCC16kcHR8IpdWDq6wXAB2xn">
+<div>
+
+
+
+
+
+
+
+  <fieldset class="module aligned ">
+    
+    
+    
+        <div class="form-row field-name">
+            
+            
+                <div>
+                    
+                    
+                        <label class="required" for="id_name">Name:</label>
+                        
+                            <input type="text" name="name" value="Emp1" class="vTextField" maxlength="100" required id="id_name">
+                        
+                    
+                    
+                </div>
+            
+        </div>
+    
+        <div class="form-row field-department">
+            
+            
+                <div>
+                    
+                    
+                        <label>Department:</label>
+                        
+                            <div class="readonly"><a href="/myadmin/app_test/department/1/change/">Dept1</a></div>
+                        
+                    
+                    
+                </div>
+            
+        </div>
+    
+</fieldset>
+
+
+
+
+
+
+
+
+
+
+
+
+
+<div class="submit-row">
+
+<input type="submit" value="Save" class="default" name="_save">
+
+    
+    <p class="deletelink-box"><a href="/myadmin/app_test/employee/1/delete/" class="deletelink">Delete</a></p>
+
+
+<input type="submit" value="Save and add another" name="_addanother">
+<input type="submit" value="Save and continue editing" name="_continue">
+
+
+</div>
+
+
+
+    <script id="django-admin-form-add-constants"
+            src="admin/js/change_form.js"
+            
+            async>
+    </script>
+
+
+
+
+<script id="django-admin-prepopulated-fields-constants"
+        src="admin/js/prepopulate_init.js"
+        data-prepopulated-fields="[]">
+</script>
+
+
+</div>
+</form></div>
+
+          
+          <br class="clear">
+        </div>
+        <!-- END Content -->
+        <div id="footer"></div>
+      </div>
+    </div>
+</div>
+<!-- END Container -->
+</body>
+</html>
diff --git a/test_custom_admin_url_urls.py b/test_custom_admin_url_urls.py
new file mode 100644
index 0000000000..f0be69fa7f
--- /dev/null
+++ b/test_custom_admin_url_urls.py
@@ -0,0 +1,6 @@
+from django.urls import path
+from app_test.admin import my_custom_admin_site
+
+urlpatterns = [
+    path('myadmin/', my_custom_admin_site.urls),
+]
