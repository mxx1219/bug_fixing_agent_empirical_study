diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py
index 4c0e7e2a56..350f65b278 100644
--- a/django/contrib/admindocs/utils.py
+++ b/django/contrib/admindocs/utils.py
@@ -34,11 +34,16 @@ def trim_docstring(docstring):
         return ''
     # Convert tabs to spaces and split into lines
     lines = docstring.expandtabs().splitlines()
-    indent = min(len(line) - len(line.lstrip()) for line in lines if line.lstrip())
+    # Skip the first line for indentation if there is more than one line
+    if len(lines) > 1:
+        indent = min(len(line) - len(line.lstrip()) for line in lines[1:] if line.lstrip())
+    else:
+        indent = 0
     trimmed = [lines[0].lstrip()] + [line[indent:].rstrip() for line in lines[1:]]
     return "\n".join(trimmed).strip()
 
 
+
 def parse_docstring(docstring):
     """
     Parse out the parts of a docstring.  Return (title, body, metadata).
diff --git a/tests/manual_admindocs_test.py b/tests/manual_admindocs_test.py
new file mode 100644
index 0000000000..a2578e561f
--- /dev/null
+++ b/tests/manual_admindocs_test.py
@@ -0,0 +1,32 @@
+import sys
+from django.contrib.admindocs.utils import trim_docstring
+
+print("Testing trim_docstring indentation...")
+
+# This docstring starts immediately with text on the first line, then has an indented second line.
+test_doc = """First line is not empty.
+    Second line is indented.
+"""
+
+print("Raw docstring (repr):", repr(test_doc))
+
+trimmed = trim_docstring(test_doc)
+print("Trimmed docstring (repr):", repr(trimmed))
+
+lines = trimmed.splitlines()
+print("Trimmed docstring lines:")
+for i, line in enumerate(lines):
+    print(f"Line {i}: {repr(line)}")
+
+if len(lines) < 2:
+    print("Not enough lines to test indentation. Exiting 1.")
+    sys.exit(1)
+
+# If the second line is still indented, HEAD code is in effect => fail.
+# If the second line is dedented, the fix is in effect => pass.
+if lines[1].startswith("    "):
+    print("Bug triggered: second line is still indented => HEAD behavior.")
+    sys.exit(1)
+else:
+    print("No indentation on second line => fix is working.")
+    sys.exit(0)
diff --git a/tests/manual_admindocs_urls.py b/tests/manual_admindocs_urls.py
new file mode 100644
index 0000000000..aa19cda7c5
--- /dev/null
+++ b/tests/manual_admindocs_urls.py
@@ -0,0 +1,11 @@
+from django.urls import path
+from django.http import HttpResponse
+from django.contrib import admin
+
+def docroot_view(request):
+    return HttpResponse("Docroot for manual admindocs testing")
+
+urlpatterns = [
+    path('django-admindocs-docroot', docroot_view, name='django-admindocs-docroot'),
+    path('admin/doc/', admin.site.urls),
+]
