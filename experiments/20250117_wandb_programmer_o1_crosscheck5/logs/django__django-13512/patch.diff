diff --git a/django/forms/fields.py b/django/forms/fields.py
index 9de2c60b35..b6f7092de9 100644
--- a/django/forms/fields.py
+++ b/django/forms/fields.py
@@ -1258,7 +1258,8 @@ class JSONField(CharField):
     def prepare_value(self, value):
         if isinstance(value, InvalidJSONInput):
             return value
-        return json.dumps(value, cls=self.encoder)
+        return json.dumps(value, cls=self.encoder, ensure_ascii=False)
+    
 
     def has_changed(self, initial, data):
         if super().has_changed(initial, data):
diff --git a/test_unicode_jsonfield.py b/test_unicode_jsonfield.py
new file mode 100644
index 0000000000..5e00fe0f78
--- /dev/null
+++ b/test_unicode_jsonfield.py
@@ -0,0 +1,26 @@
+#!/usr/bin/env python3
+
+import sys
+from django.forms.fields import JSONField
+
+def main():
+    print("Running test_unicode_jsonfield...")
+
+    test_data = {"country": "中国"}
+    field = JSONField()
+    prepared = field.prepare_value(test_data)
+
+    # Safely print the prepared value so we don't crash on terminal encoding issues.
+    safe_prepared = prepared.encode('ascii', 'backslashreplace').decode('ascii')
+    print("Prepared value (escaped for debug):", safe_prepared)
+
+    # Check if ASCII-escaped sequences are still in the actual string
+    if "\\u4e2d" in prepared or "\\u56fd" in prepared:
+        print("FAIL: Found escaped sequences in JSON output.")
+        sys.exit(1)
+    else:
+        print("PASS: No ASCII-escaped sequences found, test passed.")
+        sys.exit(0)
+
+if __name__ == "__main__":
+    main()
