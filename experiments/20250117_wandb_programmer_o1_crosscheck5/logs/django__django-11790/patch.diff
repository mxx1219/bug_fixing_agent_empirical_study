diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index a0cfed0995..c9ef7591af 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -188,12 +188,15 @@ class AuthenticationForm(forms.Form):
         self.request = request
         self.user_cache = None
         super().__init__(*args, **kwargs)
-
+    
         # Set the max length and label for the "username" field.
         self.username_field = UserModel._meta.get_field(UserModel.USERNAME_FIELD)
-        self.fields['username'].max_length = self.username_field.max_length or 254
+        max_len = self.username_field.max_length or 254
+        self.fields['username'].max_length = max_len
+        self.fields['username'].widget.attrs['maxlength'] = str(max_len)
         if self.fields['username'].label is None:
             self.fields['username'].label = capfirst(self.username_field.verbose_name)
+    
 
     def clean(self):
         username = self.cleaned_data.get('username')
diff --git a/tests/test_authform_maxlength.py b/tests/test_authform_maxlength.py
new file mode 100644
index 0000000000..dac6a58e05
--- /dev/null
+++ b/tests/test_authform_maxlength.py
@@ -0,0 +1,40 @@
+import sys
+from django.conf import settings
+import django
+
+def main():
+    # Configure settings if needed
+    if not settings.configured:
+        settings.configure(
+            INSTALLED_APPS=[
+                "django.contrib.auth",
+                "django.contrib.contenttypes",
+            ],
+            DATABASES={
+                "default": {
+                    "ENGINE": "django.db.backends.sqlite3",
+                    "NAME": ":memory:",
+                }
+            },
+            SECRET_KEY="testsecretkey",
+        )
+    django.setup()
+
+    from django.contrib.auth.forms import AuthenticationForm
+
+    print("Testing if the AuthenticationForm username HTML input has the correct maxlength attribute.")
+    form = AuthenticationForm()  # no data, no request
+    html = form.as_p()
+    # The default User model typically has a username max_length of 150.
+    expected_max_length = 150
+    print("Rendered HTML:", html)
+    if f'maxlength=\"{expected_max_length}\"' in html:
+        print("PASS: The form is rendered with the correct maxlength attribute in the HTML.")
+        sys.exit(0)
+    else:
+        print("FAIL: The form is missing the correct maxlength attribute. HTML was:")
+        print(html)
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
