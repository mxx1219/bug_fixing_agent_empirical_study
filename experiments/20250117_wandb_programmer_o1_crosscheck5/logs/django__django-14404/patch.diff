diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 59a4a0364d..657a84476b 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -420,7 +420,7 @@ class AdminSite:
     def catch_all_view(self, request, url):
         if settings.APPEND_SLASH and not url.endswith('/'):
             urlconf = getattr(request, 'urlconf', None)
-            path = '%s/' % request.path_info
+            path = '%s/' % request.path
             try:
                 match = resolve(path, urlconf)
             except Resolver404:
@@ -429,6 +429,7 @@ class AdminSite:
                 if getattr(match.func, 'should_append_slash', True):
                     return HttpResponsePermanentRedirect(path)
         raise Http404
+    
 
     def _build_app_dict(self, request, label=None):
         """
diff --git a/scripts/__init__.py b/scripts/__init__.py
new file mode 100644
index 0000000000..8b13789179
--- /dev/null
+++ b/scripts/__init__.py
@@ -0,0 +1 @@
+
diff --git a/scripts/test_force_scriptname_catch_all.py b/scripts/test_force_scriptname_catch_all.py
new file mode 100644
index 0000000000..b6ffd9b7d3
--- /dev/null
+++ b/scripts/test_force_scriptname_catch_all.py
@@ -0,0 +1,68 @@
+import sys
+import os
+import traceback
+
+# Insert the scripts folder so that test_urlconf.py is importable as a top-level module.
+script_dir = os.path.dirname(os.path.abspath(__file__))
+sys.path.insert(0, script_dir)
+
+import django
+from django.conf import settings
+from django.test.client import RequestFactory
+from django.contrib.admin.sites import AdminSite
+from django.http import HttpResponsePermanentRedirect
+
+def main():
+    print("Starting test_force_scriptname_catch_all...")
+    # Minimal Django setup
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY="test",
+        ALLOWED_HOSTS=["*"],
+        APPEND_SLASH=True,
+        INSTALLED_APPS=[
+            "django.contrib.admin",
+            "django.contrib.auth",
+            "django.contrib.contenttypes",
+            "django.contrib.sessions",
+        ],
+        MIDDLEWARE=[],
+        FORCE_SCRIPT_NAME="/myadmin",
+        ROOT_URLCONF="test_urlconf",  # remains
+    )
+    django.setup()
+
+    factory = RequestFactory()
+    site = AdminSite()
+
+    # Simulate a request to "/myadmin/admin-without-trailing" missing slash
+    request = factory.get("/myadmin/admin-without-trailing")
+    # By default, Django sets path == path_info. We simulate the presence of FORCE_SCRIPT_NAME by:
+    # - path (the full URL including script prefix)
+    # - path_info (the portion after the script prefix)
+    request.path = "/myadmin/admin-without-trailing"
+    request.path_info = "/admin-without-trailing"
+
+    print(f"request.path = {request.path}")
+    print(f"request.path_info = {request.path_info}")
+
+    try:
+        response = site.catch_all_view(request, "admin-without-trailing")
+        if isinstance(response, HttpResponsePermanentRedirect):
+            print(f"Redirect location: {response['Location']}")
+            if response['Location'] == "/myadmin/admin-without-trailing/":
+                print("SUCCESS: redirect includes script prefix.")
+                sys.exit(0)
+            else:
+                print("FAIL: redirect omits script prefix.")
+                sys.exit(1)
+        else:
+            print("FAIL: Did not get a permanent redirect.")
+            sys.exit(1)
+    except Exception as e:
+        print("FAIL: Exception occurred:", e)
+        traceback.print_exc()
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
diff --git a/scripts/test_urlconf.py b/scripts/test_urlconf.py
new file mode 100644
index 0000000000..1bc2784b6b
--- /dev/null
+++ b/scripts/test_urlconf.py
@@ -0,0 +1,12 @@
+from django.http import HttpResponse
+from django.urls import re_path
+
+def dummy_view(request):
+    return HttpResponse("Dummy view for admin-without-trailing/")
+
+urlpatterns = [
+    # Pattern for the no-script-prefix, just in case
+    re_path(r'^admin-without-trailing/$', dummy_view),
+    # Pattern for the script-prefix version
+    re_path(r'^myadmin/admin-without-trailing/$', dummy_view),
+]
