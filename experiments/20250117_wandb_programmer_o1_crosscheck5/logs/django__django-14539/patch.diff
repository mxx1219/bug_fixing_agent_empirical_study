diff --git a/django/utils/html.py b/django/utils/html.py
index 3bc02b8dd3..d3d6a63d08 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -261,7 +261,6 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):
         Trim trailing and wrapping punctuation from `middle`. Return the items
         of the new state.
         """
-        # Continue trimming until middle remains unchanged.
         trimmed_something = True
         while trimmed_something:
             trimmed_something = False
@@ -272,19 +271,25 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):
                     lead += opening
                     trimmed_something = True
                 # Keep parentheses at the end only if they're balanced.
-                if (middle.endswith(closing) and
-                        middle.count(closing) == middle.count(opening) + 1):
+                if (
+                    middle.endswith(closing)
+                    and middle.count(closing) == middle.count(opening) + 1
+                ):
                     middle = middle[:-len(closing)]
                     trail = closing + trail
                     trimmed_something = True
+
             # Trim trailing punctuation (after trimming wrapping punctuation,
             # as encoded entities contain ';'). Unescape entities to avoid
             # breaking them by removing ';'.
             middle_unescaped = html.unescape(middle)
             stripped = middle_unescaped.rstrip(TRAILING_PUNCTUATION_CHARS)
-            if middle_unescaped != stripped:
-                trail = middle[len(stripped):] + trail
-                middle = middle[:len(stripped) - len(middle_unescaped)]
+            if stripped != middle_unescaped:
+                diff = len(middle_unescaped) - len(stripped)
+                if diff > 0:
+                    # Remove that many last characters from the original, add them to trail
+                    trail = middle[-diff:] + trail
+                    middle = middle[:-diff]
                 trimmed_something = True
         return lead, middle, trail
 
@@ -349,6 +354,7 @@ def urlize(text, trim_url_limit=None, nofollow=False, autoescape=False):
     return ''.join(words)
 
 
+
 def avoid_wrapping(value):
     """
     Avoid text wrapping in the middle of a phrase by adding non-breaking
diff --git a/test_urlize_bug.py b/test_urlize_bug.py
new file mode 100644
index 0000000000..7fc92a448e
--- /dev/null
+++ b/test_urlize_bug.py
@@ -0,0 +1,21 @@
+import sys
+from django.utils.html import urlize
+
+TEST_STR = 'Search for google.com/?q=1&lt! and see.'
+EXPECTED = 'Search for <a href="http://google.com/?q=1%3C">google.com/?q=1&lt</a>! and see.'
+
+def main():
+    print("Testing URLIZE bug reproduction.")
+    actual = urlize(TEST_STR)
+    print("TEST STRING:", TEST_STR)
+    print("EXPECTED:   ", EXPECTED)
+    print("ACTUAL:     ", actual)
+    if actual == EXPECTED:
+        print("Test PASSED; problem is fixed.")
+        sys.exit(0)
+    else:
+        print("Test FAILED; problem is not fixed.")
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
