diff --git a/django/core/validators.py b/django/core/validators.py
index 92394a7eae..5101874d99 100644
--- a/django/core/validators.py
+++ b/django/core/validators.py
@@ -94,7 +94,7 @@ class URLValidator(RegexValidator):
 
     regex = _lazy_re_compile(
         r'^(?:[a-z0-9\.\-\+]*)://'  # scheme is validated separately
-        r'(?:\S+(?::\S*)?@)?'  # user:pass authentication
+        r'(?:[^\s:@/]+(?::[^\s:@/]*)?@)?'  # user:pass authentication (disallow :/@/ unencoded)
         r'(?:' + ipv4_re + '|' + ipv6_re + '|' + host_re + ')'
         r'(?::\d{2,5})?'  # port
         r'(?:[/?#][^\s]*)?'  # resource path
@@ -149,6 +149,7 @@ class URLValidator(RegexValidator):
             raise ValidationError(self.message, code=self.code)
 
 
+
 integer_validator = RegexValidator(
     _lazy_re_compile(r'^-?\d+\Z'),
     message=_('Enter a valid integer.'),
diff --git a/test_bug_20003.py b/test_bug_20003.py
new file mode 100644
index 0000000000..9c5e74b433
--- /dev/null
+++ b/test_bug_20003.py
@@ -0,0 +1,39 @@
+import sys
+from django.core.validators import URLValidator
+from django.core.exceptions import ValidationError
+
+def test_bug_20003():
+    invalid_urls = [
+        "http://foo/bar@example.com",
+    ]
+    valid_urls = [
+        "http://user:pass@validhost.com",
+        "http://validhost.com",
+    ]
+
+    validator = URLValidator()
+
+    for url in invalid_urls:
+        print("Testing invalid URL:", url)
+        try:
+            validator(url)
+            print("URL unexpectedly passed:", url)
+            return 1
+        except ValidationError:
+            print("ValidationError correctly raised for invalid URL:", url)
+
+    for url in valid_urls:
+        print("Testing valid URL:", url)
+        try:
+            validator(url)
+            print("Valid URL passed as expected:", url)
+        except ValidationError:
+            print("ValidationError raised incorrectly for valid URL:", url)
+            return 1
+
+    print("All checks passed.")
+    return 0
+
+if __name__ == "__main__":
+    result = test_bug_20003()
+    sys.exit(result)
