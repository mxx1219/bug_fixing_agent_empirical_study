diff --git a/django/db/backends/sqlite3/schema.py b/django/db/backends/sqlite3/schema.py
index 6752a8e3c0..82f9dc1eea 100644
--- a/django/db/backends/sqlite3/schema.py
+++ b/django/db/backends/sqlite3/schema.py
@@ -324,13 +324,14 @@ class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
 
     def add_field(self, model, field):
         """Create a field on a model."""
-        # Fields with default values cannot by handled by ALTER TABLE ADD
-        # COLUMN statement because DROP DEFAULT is not supported in
-        # ALTER TABLE.
-        if not field.null or self.effective_default(field) is not None:
+        # Fields with default values cannot be handled by ALTER TABLE ADD COLUMN
+        # statement because DROP DEFAULT is not supported in ALTER TABLE.
+        # Also, SQLite does not allow adding a UNIQUE column via ALTER TABLE.
+        if not field.null or self.effective_default(field) is not None or field.unique:
             self._remake_table(model, create_field=field)
         else:
             super().add_field(model, field)
+    
 
     def remove_field(self, model, field):
         """
diff --git a/test_add_nullable_o2o_sqlite.py b/test_add_nullable_o2o_sqlite.py
new file mode 100644
index 0000000000..3be2b36e9e
--- /dev/null
+++ b/test_add_nullable_o2o_sqlite.py
@@ -0,0 +1,119 @@
+import sys
+import os
+import traceback
+import django
+from django.conf import settings
+
+def main():
+    print('Starting test: Add nullable OneToOneField on SQLite.')
+    directory = 'tmp_testapp'
+    try:
+        # Ensure tmp_testapp is on sys.path so we can import "testapp"
+        sys.path.insert(0, os.path.abspath(directory))
+
+        if not os.path.exists(directory):
+            os.makedirs(directory)
+        app_dir = os.path.join(directory, 'testapp')
+        if not os.path.exists(app_dir):
+            os.makedirs(app_dir)
+        migrations_dir = os.path.join(app_dir, 'migrations')
+        if not os.path.exists(migrations_dir):
+            os.makedirs(migrations_dir)
+
+        # Create __init__.py files
+        open(os.path.join(app_dir, '__init__.py'), 'w').close()
+        open(os.path.join(migrations_dir, '__init__.py'), 'w').close()
+
+        # Create apps.py
+        with open(os.path.join(app_dir, 'apps.py'), 'w') as f:
+            f.write(
+'from django.apps import AppConfig\n'
+'\n'
+'class TestappConfig(AppConfig):\n'
+'    name = \"testapp\"\n'
+            )
+
+        # Create models.py
+        with open(os.path.join(app_dir, 'models.py'), 'w') as f:
+            f.write(
+'from django.db import models\n'
+'\n'
+'class MyModel(models.Model):\n'
+'    name = models.CharField(max_length=255)\n'
+            )
+
+        # Create 0001_initial.py
+        with open(os.path.join(migrations_dir, '0001_initial.py'), 'w') as f:
+            f.write(
+'from django.db import migrations, models\n'
+'\n'
+'class Migration(migrations.Migration):\n'
+'    initial = True\n'
+'    dependencies = []\n'
+'    operations = [\n'
+'        migrations.CreateModel(\n'
+'            name=\"MyModel\",\n'
+'            fields=[\n'
+'                (\"id\", models.AutoField(primary_key=True, auto_created=True, serialize=False, verbose_name=\"ID\")),\n'
+'                (\"name\", models.CharField(max_length=255)),\n'
+'            ],\n'
+'        ),\n'
+'    ]\n'
+            )
+
+        # Create 0002_one_to_one.py
+        with open(os.path.join(migrations_dir, '0002_one_to_one.py'), 'w') as f:
+            f.write(
+'from django.db import migrations, models\n'
+'import django.db.models.deletion\n'
+'\n'
+'class Migration(migrations.Migration):\n'
+'    dependencies = [\n'
+'        (\"testapp\", \"0001_initial\"),\n'
+'    ]\n'
+'    operations = [\n'
+'        migrations.AddField(\n'
+'            model_name=\"mymodel\",\n'
+'            name=\"myo2o\",\n'
+'            field=models.OneToOneField(null=True, blank=True, to=\"testapp.MyModel\", on_delete=django.db.models.deletion.SET_NULL),\n'
+'        ),\n'
+'    ]\n'
+            )
+
+        # Configure Django
+        if not settings.configured:
+            settings.configure(
+                INSTALLED_APPS=[
+                    'django.contrib.contenttypes',
+                    'testapp',
+                ],
+                DATABASES={
+                    'default': {
+                        'ENGINE': 'django.db.backends.sqlite3',
+                        'NAME': 'test_o2o_db.sqlite3',
+                    }
+                },
+                MIDDLEWARE=[],
+                ROOT_URLCONF=None,
+                TEMPLATES=[],
+                SECRET_KEY='testsecretkey',
+            )
+        django.setup()
+
+        from django.core.management import call_command
+
+        print('Running migrate for 0001...')
+        call_command('migrate', 'testapp', '0001_initial', '--verbosity=2')
+        print('Running migrate for 0002...')
+        call_command('migrate', 'testapp', '0002_one_to_one', '--verbosity=2')
+
+        print('SUCCESS: it did not crash.')
+        sys.exit(0)
+
+    except Exception as e:
+        print('FAIL: encountered an exception:', e)
+        traceback.print_exc()
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
diff --git a/test_o2o_db.sqlite3 b/test_o2o_db.sqlite3
new file mode 100644
index 0000000000..c76863e239
Binary files /dev/null and b/test_o2o_db.sqlite3 differ
diff --git a/tmp_testapp/testapp/__init__.py b/tmp_testapp/testapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tmp_testapp/testapp/apps.py b/tmp_testapp/testapp/apps.py
new file mode 100644
index 0000000000..d42cf542a5
--- /dev/null
+++ b/tmp_testapp/testapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestappConfig(AppConfig):
+    name = "testapp"
diff --git a/tmp_testapp/testapp/migrations/0001_initial.py b/tmp_testapp/testapp/migrations/0001_initial.py
new file mode 100644
index 0000000000..73bf8ef245
--- /dev/null
+++ b/tmp_testapp/testapp/migrations/0001_initial.py
@@ -0,0 +1,14 @@
+from django.db import migrations, models
+
+class Migration(migrations.Migration):
+    initial = True
+    dependencies = []
+    operations = [
+        migrations.CreateModel(
+            name="MyModel",
+            fields=[
+                ("id", models.AutoField(primary_key=True, auto_created=True, serialize=False, verbose_name="ID")),
+                ("name", models.CharField(max_length=255)),
+            ],
+        ),
+    ]
diff --git a/tmp_testapp/testapp/migrations/0002_one_to_one.py b/tmp_testapp/testapp/migrations/0002_one_to_one.py
new file mode 100644
index 0000000000..4fa2c2da44
--- /dev/null
+++ b/tmp_testapp/testapp/migrations/0002_one_to_one.py
@@ -0,0 +1,14 @@
+from django.db import migrations, models
+import django.db.models.deletion
+
+class Migration(migrations.Migration):
+    dependencies = [
+        ("testapp", "0001_initial"),
+    ]
+    operations = [
+        migrations.AddField(
+            model_name="mymodel",
+            name="myo2o",
+            field=models.OneToOneField(null=True, blank=True, to="testapp.MyModel", on_delete=django.db.models.deletion.SET_NULL),
+        ),
+    ]
diff --git a/tmp_testapp/testapp/migrations/__init__.py b/tmp_testapp/testapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/tmp_testapp/testapp/models.py b/tmp_testapp/testapp/models.py
new file mode 100644
index 0000000000..91e1b749b1
--- /dev/null
+++ b/tmp_testapp/testapp/models.py
@@ -0,0 +1,4 @@
+from django.db import models
+
+class MyModel(models.Model):
+    name = models.CharField(max_length=255)
