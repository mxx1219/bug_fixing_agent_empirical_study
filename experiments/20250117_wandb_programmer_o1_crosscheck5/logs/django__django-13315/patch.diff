diff --git a/django/forms/models.py b/django/forms/models.py
index 5d115458a1..2c8307b6f5 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -100,7 +100,8 @@ def apply_limit_choices_to_to_formfield(formfield):
     if hasattr(formfield, 'queryset') and hasattr(formfield, 'get_limit_choices_to'):
         limit_choices_to = formfield.get_limit_choices_to()
         if limit_choices_to is not None:
-            formfield.queryset = formfield.queryset.complex_filter(limit_choices_to)
+            formfield.queryset = formfield.queryset.complex_filter(limit_choices_to).distinct()
+
 
 
 def fields_for_model(model, fields=None, exclude=None, widgets=None,
diff --git a/tests/test_duplicate_choices.py b/tests/test_duplicate_choices.py
new file mode 100644
index 0000000000..4d76ca1769
--- /dev/null
+++ b/tests/test_duplicate_choices.py
@@ -0,0 +1,60 @@
+import sys
+import django
+from django.conf import settings
+from django.core.management import call_command
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            "django.contrib.contenttypes",
+            "django.contrib.auth",
+            "tests.test_duplicate_choices_app",
+        ],
+        SECRET_KEY="not very secret",
+        DATABASES={
+            "default": {
+                "ENGINE": "django.db.backends.sqlite3",
+                "NAME": ":memory:",
+            }
+        },
+        MIGRATION_MODULES={"test_duplicate_choices_app": None},
+    )
+
+django.setup()
+
+from tests.test_duplicate_choices_app.models import Category, Topping
+from tests.test_duplicate_choices_app.forms import PizzaForm
+
+def main():
+    call_command("migrate", run_syncdb=True, verbosity=0)
+
+    cat1 = Category.objects.create(name="VegCheese", is_vegetarian=True)
+    cat2 = Category.objects.create(name="VegCheese2", is_vegetarian=True)
+    cat3 = Category.objects.create(name="Meat", is_vegetarian=False)
+
+    # Create toppings with multiple categories for at least one topping, to force duplicates
+    t1 = Topping.objects.create(name="Cheese1")
+    t1.categories.add(cat1)  # single vegetarian category
+
+    t2 = Topping.objects.create(name="Cheese2")
+    t2.categories.add(cat1, cat2)  # multiple vegetarian categories => duplicates
+
+    t3 = Topping.objects.create(name="Meat1")
+    t3.categories.add(cat3)  # non-vegetarian
+
+    from tests.test_duplicate_choices_app.forms import PizzaForm
+    form = PizzaForm()
+    labeled_choices = [label for value, label in form.fields["topping"].choices]
+    print("Topping choices (labels):", labeled_choices)
+
+    # Fails if duplicates are found
+    if len(labeled_choices) != len(set(labeled_choices)):
+        print("Found duplicate choices in topping field. Test fails.")
+        sys.exit(1)
+    else:
+        print("No duplicate choices found. Test passes.")
+        sys.exit(0)
+
+
+if __name__ == "__main__":
+    main()
diff --git a/tests/test_duplicate_choices_app/__init__.py b/tests/test_duplicate_choices_app/__init__.py
new file mode 100644
index 0000000000..969ace0722
--- /dev/null
+++ b/tests/test_duplicate_choices_app/__init__.py
@@ -0,0 +1 @@
+# Empty __init__ to make this directory a Python package
diff --git a/tests/test_duplicate_choices_app/apps.py b/tests/test_duplicate_choices_app/apps.py
new file mode 100644
index 0000000000..6ed97ce2b0
--- /dev/null
+++ b/tests/test_duplicate_choices_app/apps.py
@@ -0,0 +1,5 @@
+from django.apps import AppConfig
+
+class TestDupChoicesAppConfig(AppConfig):
+    name = "tests.test_duplicate_choices_app"
+    label = "test_duplicate_choices_app"
diff --git a/tests/test_duplicate_choices_app/forms.py b/tests/test_duplicate_choices_app/forms.py
new file mode 100644
index 0000000000..51f6c3a3c9
--- /dev/null
+++ b/tests/test_duplicate_choices_app/forms.py
@@ -0,0 +1,7 @@
+from django.forms import ModelForm
+from .models import Pizza
+
+class PizzaForm(ModelForm):
+    class Meta:
+        model = Pizza
+        fields = ["topping"]
diff --git a/tests/test_duplicate_choices_app/models.py b/tests/test_duplicate_choices_app/models.py
new file mode 100644
index 0000000000..f4a86251af
--- /dev/null
+++ b/tests/test_duplicate_choices_app/models.py
@@ -0,0 +1,29 @@
+from django.db import models
+from django.db.models import Q
+
+class Category(models.Model):
+    name = models.CharField(max_length=100)
+    is_vegetarian = models.BooleanField(default=False)
+
+    class Meta:
+        app_label = "test_duplicate_choices_app"
+
+class Topping(models.Model):
+    name = models.CharField(max_length=50)
+    categories = models.ManyToManyField(Category)
+
+    class Meta:
+        app_label = "test_duplicate_choices_app"
+
+
+class Pizza(models.Model):
+    topping = models.ForeignKey(
+        Topping,
+        limit_choices_to=Q(categories__is_vegetarian=True),
+        on_delete=models.CASCADE,
+        related_name="pizzas",
+    )
+
+    class Meta:
+        app_label = "test_duplicate_choices_app"
+
