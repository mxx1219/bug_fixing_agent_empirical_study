diff --git a/django/contrib/sitemaps/__init__.py b/django/contrib/sitemaps/__init__.py
index 27756d9d96..d6ee496b79 100644
--- a/django/contrib/sitemaps/__init__.py
+++ b/django/contrib/sitemaps/__init__.py
@@ -168,10 +168,11 @@ class Sitemap:
         if callable(self.lastmod):
             try:
                 return max([self.lastmod(item) for item in self.items()])
-            except TypeError:
+            except (TypeError, ValueError):
                 return None
         else:
             return self.lastmod
+    
 
     def _urls(self, page, protocol, domain):
         urls = []
diff --git a/test_sitemaps_empty_lastmod.py b/test_sitemaps_empty_lastmod.py
new file mode 100644
index 0000000000..539a71c8e8
--- /dev/null
+++ b/test_sitemaps_empty_lastmod.py
@@ -0,0 +1,28 @@
+import sys
+from django.contrib.sitemaps import Sitemap
+
+class MyEmptySitemap(Sitemap):
+    def items(self):
+        return []
+
+    def lastmod(self, item):
+        # This should never be called since items() is empty, but let's provide a stub
+        return None
+
+def main():
+    print("Running empty sitemap lastmod test...")
+    s = MyEmptySitemap()
+    try:
+        val = s.get_latest_lastmod()
+        print(f"Returned get_latest_lastmod value: {val}")
+        print("No ValueError encountered -> test_sitemaps_empty_lastmod: PASS means bug is apparently fixed or absent.")
+        sys.exit(0)
+    except ValueError:
+        print("ValueError encountered -> test_sitemaps_empty_lastmod: FAIL means bug is present on HEAD.")
+        sys.exit(1)
+    except Exception as e:
+        print(f"Unexpected exception -> test_sitemaps_empty_lastmod: FAIL: {e}")
+        sys.exit(2)
+
+if __name__ == '__main__':
+    main()
