diff --git a/django/views/generic/base.py b/django/views/generic/base.py
index db1842e3e5..ff22ce8dc7 100644
--- a/django/views/generic/base.py
+++ b/django/views/generic/base.py
@@ -148,7 +148,13 @@ class View:
             request.path,
             extra={"status_code": 405, "request": request},
         )
-        return HttpResponseNotAllowed(self._allowed_methods())
+        if self.view_is_async:
+            async def func():
+                return HttpResponseNotAllowed(self._allowed_methods())
+            return func()
+        else:
+            return HttpResponseNotAllowed(self._allowed_methods())
+    
 
     def options(self, request, *args, **kwargs):
         """Handle responding to requests for the OPTIONS HTTP verb."""
diff --git a/test_async_http_not_allowed.py b/test_async_http_not_allowed.py
new file mode 100644
index 0000000000..d1e4309d0e
--- /dev/null
+++ b/test_async_http_not_allowed.py
@@ -0,0 +1,47 @@
+import sys
+import django
+from django.conf import settings
+from django.test import Client
+from django.urls import path
+from django.http import HttpResponse
+from django.views import View
+
+
+class Demo(View):
+    async def post(self, request):
+        return HttpResponse("ok")
+
+
+urlpatterns = [
+    path("test/", Demo.as_view()),
+]
+
+
+def main():
+    print("Starting test_async_http_not_allowed.py")
+    print("Configuring minimal Django settings for the test.")
+    settings.configure(
+        DEBUG=True,
+        SECRET_KEY="secret",
+        ROOT_URLCONF=__name__,
+        ALLOWED_HOSTS=["*"],
+        MIDDLEWARE=[],
+        INSTALLED_APPS=["django.contrib.contenttypes", "django.contrib.auth"],
+    )
+    django.setup()
+
+    print("Making a GET request to /test/ where the view only defines async POST.")
+    client = Client()
+    response = client.get("/test/")
+    print(f"Response status code: {response.status_code}")
+
+    if response.status_code == 405:
+        print("RESULT: test_async_http_not_allowed is FIXED => got 405.")
+        sys.exit(0)
+    else:
+        print("RESULT: test_async_http_not_allowed is FAILING => expected 405, got", response.status_code)
+        sys.exit(1)
+
+
+if __name__ == '__main__':
+    main()
