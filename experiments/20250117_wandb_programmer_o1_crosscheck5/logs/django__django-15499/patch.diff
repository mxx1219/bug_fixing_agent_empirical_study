diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index 90fc31bee5..a3137b4425 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -202,6 +202,20 @@ class CreateModel(ModelOperation):
                     managers=self.managers,
                 ),
             ]
+        elif (
+            isinstance(operation, AlterModelManagers)
+            and self.name_lower == operation.name_lower
+        ):
+            # New branch to merge CreateModel + AlterModelManagers
+            return [
+                CreateModel(
+                    self.name,
+                    fields=self.fields,
+                    options=self.options,
+                    bases=self.bases,
+                    managers=operation.managers,
+                ),
+            ]
         elif (
             isinstance(operation, FieldOperation)
             and self.name_lower == operation.model_name_lower
@@ -291,6 +305,7 @@ class CreateModel(ModelOperation):
                     ),
                 ]
         return super().reduce(operation, app_label)
+    
 
 
 class DeleteModel(ModelOperation):
diff --git a/test_create_model_alter_managers_merge.py b/test_create_model_alter_managers_merge.py
new file mode 100644
index 0000000000..a1cd5c8ab4
--- /dev/null
+++ b/test_create_model_alter_managers_merge.py
@@ -0,0 +1,50 @@
+import sys
+import django
+from django.conf import settings
+from django.db.migrations.optimizer import MigrationOptimizer
+from django.db import models
+from django.db.migrations.operations.models import CreateModel, AlterModelManagers
+
+def main():
+    print("Step 1: Configuring Django settings in-memory.")
+    if not settings.configured:
+        settings.configure(
+            INSTALLED_APPS=[],
+            DATABASES={"default": {"ENGINE": "django.db.backends.sqlite3"}},
+            SECRET_KEY="dummy",
+            LOGGING_CONFIG=None,
+        )
+    django.setup()
+
+    print("Step 2: Defining test operations.")
+    ops = [
+        CreateModel(
+            name="Simple",
+            fields=[("id", models.AutoField(primary_key=True))],
+            options={},
+            managers=[("objects", models.Manager())],
+        ),
+        AlterModelManagers(
+            name="Simple",
+            managers=[
+                ("objects", models.Manager()),
+                ("special", models.Manager()),
+            ],
+        ),
+    ]
+    print(f"Test operations (unoptimized): {ops}")
+
+    print("Step 3: Running MigrationOptimizer.")
+    optimized = MigrationOptimizer().optimize(ops, "test_app")
+    print(f"Optimized operations: {optimized}")
+
+    # The bug: We expect 1 (merged) but on HEAD, we get 2.
+    if len(optimized) == 1:
+        print("SUCCESS: CreateModel + AlterModelManagers merged into 1 operation.")
+        sys.exit(0)
+    else:
+        print(f"FAILURE: Expected 1 operation, got {len(optimized)}.")
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
