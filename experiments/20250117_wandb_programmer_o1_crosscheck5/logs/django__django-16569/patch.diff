diff --git a/django/forms/formsets.py b/django/forms/formsets.py
index 235aaf844c..5b05275911 100644
--- a/django/forms/formsets.py
+++ b/django/forms/formsets.py
@@ -490,12 +490,13 @@ class BaseFormSet(RenderableFormMixin):
                     required=False,
                     widget=self.get_ordering_widget(),
                 )
-        if self.can_delete and (self.can_delete_extra or index < initial_form_count):
+        if self.can_delete and (self.can_delete_extra or (index is not None and index < initial_form_count)):
             form.fields[DELETION_FIELD_NAME] = BooleanField(
                 label=_("Delete"),
                 required=False,
                 widget=self.get_deletion_widget(),
             )
+    
 
     def add_prefix(self, index):
         return "%s-%s" % (self.prefix, index)
diff --git a/test_formsets_bug.py b/test_formsets_bug.py
new file mode 100644
index 0000000000..4c7905db3a
--- /dev/null
+++ b/test_formsets_bug.py
@@ -0,0 +1,42 @@
+import sys
+import traceback
+import os
+import django
+from django import forms
+
+print("Step 1: Starting test script for the 'index=None' bug in FormSet.add_fields().")
+
+class MyForm(forms.Form):
+    my_field = forms.CharField()
+
+def main():
+    print("Step 2: Configuring settings for Django.")
+    settings_file = os.path.splitext(os.path.basename(__file__))[0]
+    django.conf.settings.configure(
+        DEBUG=True,
+        MIDDLEWARE_CLASSES=[],
+        ROOT_URLCONF=settings_file,
+    )
+    django.setup()
+
+    print("Step 3: Creating formset with can_delete=True, can_delete_extra=False, and calling empty_form.")
+    try:
+        MyFormSet = forms.formset_factory(
+            form=MyForm,
+            can_delete=True,
+            can_delete_extra=False,
+        )
+        my_formset = MyFormSet(initial=None)
+        _ = my_formset.empty_form  # <-- This triggers the bug if not fixed
+        print("No exception occurred. The bug is fixed or not present.")
+        print("Exiting with status 0.")
+        sys.exit(0)
+    except Exception as e:
+        print("Exception encountered. This indicates the bug is still present.")
+        print("Exception details:")
+        traceback.print_exc()
+        print("Exiting with status 1.")
+        sys.exit(1)
+
+if __name__ == '__main__':
+    main()
