diff --git a/django/utils/formats.py b/django/utils/formats.py
index 3f38322d84..63e4148c0d 100644
--- a/django/utils/formats.py
+++ b/django/utils/formats.py
@@ -98,14 +98,7 @@ def get_format_modules(lang=None):
 
 
 def get_format(format_type, lang=None, use_l10n=None):
-    """
-    For a specific format type, return the format for the current
-    language (locale). Default to the format in the settings.
-    format_type is the name of the format, e.g. 'DATE_FORMAT'.
-
-    If use_l10n is provided and is not None, it forces the value to
-    be localized (or not), overriding the value of settings.USE_L10N.
-    """
+    format_type = str(format_type)
     if use_l10n is None:
         try:
             use_l10n = settings._USE_L10N_INTERNAL
@@ -133,8 +126,8 @@ def get_format(format_type, lang=None, use_l10n=None):
             return format_type
         val = getattr(settings, format_type)
     elif format_type in ISO_INPUT_FORMATS:
-        # If a list of input formats from one of the format_modules was
-        # retrieved, make sure the ISO_INPUT_FORMATS are in this list.
+        # If a list of input formats was retrieved from one of the format modules,
+        # ensure the ISO_INPUT_FORMATS are in this list.
         val = list(val)
         for iso_input in ISO_INPUT_FORMATS.get(format_type, ()):
             if iso_input not in val:
@@ -143,6 +136,7 @@ def get_format(format_type, lang=None, use_l10n=None):
     return val
 
 
+
 get_format_lazy = lazy(get_format, str, list, tuple)
 
 
diff --git a/tests/check_lazy_format_bug.py b/tests/check_lazy_format_bug.py
new file mode 100644
index 0000000000..5ec467a675
--- /dev/null
+++ b/tests/check_lazy_format_bug.py
@@ -0,0 +1,36 @@
+import sys
+import django
+from django.conf import settings
+from django.utils.translation import gettext_lazy as _
+from django.utils.formats import get_format
+
+def main():
+    print("Configuring Django settings...")
+    if not settings.configured:
+        settings.configure(
+            USE_L10N=True,
+            SECRET_KEY="dummykey",
+            LANGUAGE_CODE="en",
+            INSTALLED_APPS=[],
+        )
+    django.setup()  # Initialize Django
+
+    print("Testing lazy string passed to django.utils.formats.get_format()...")
+    lazy_str = _("Y-m-d")
+    try:
+        # Attempt to retrieve a format using a lazy string
+        output = get_format(lazy_str)
+        print("No crash with lazy string. get_format returned:", output)
+        # If this works without error, exit with 0 meaning the bug is fixed
+        sys.exit(0)
+    except TypeError as e:
+        print("TypeError triggered:", e)
+        # The bug still exists
+        sys.exit(1)
+    except Exception as e:
+        # Unexpected error
+        print("Unexpected exception:", e)
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
