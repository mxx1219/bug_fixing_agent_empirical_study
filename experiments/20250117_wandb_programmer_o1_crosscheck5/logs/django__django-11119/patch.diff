diff --git a/autoesc_test.html b/autoesc_test.html
new file mode 100644
index 0000000000..e6b3aa7fc5
--- /dev/null
+++ b/autoesc_test.html
@@ -0,0 +1 @@
+Hello {{ name }} <b>!</b>
\ No newline at end of file
diff --git a/django/template/engine.py b/django/template/engine.py
index dfaa67ba12..216c92435d 100644
--- a/django/template/engine.py
+++ b/django/template/engine.py
@@ -160,7 +160,8 @@ class Engine:
         if isinstance(context, Context):
             return t.render(context)
         else:
-            return t.render(Context(context))
+            return t.render(Context(context, autoescape=self.autoescape))
+    
 
     def select_template(self, template_name_list):
         """
diff --git a/test_autoescape.py b/test_autoescape.py
new file mode 100644
index 0000000000..ac41517acc
--- /dev/null
+++ b/test_autoescape.py
@@ -0,0 +1,27 @@
+import sys
+import os
+from django.template import Engine
+
+def main():
+    print("Testing autoescape bug reproduction with file-based template.")
+    # Create a template file in the current directory
+    with open("autoesc_test.html", "w") as f:
+        f.write("Hello {{ name }} <b>!</b>")
+
+    # Create an engine that looks in the current directory, with autoescape=False
+    e = Engine(dirs=["."], autoescape=False)
+    context = {"name": "<b>World</b>"}
+    # Render the named template
+    out = e.render_to_string("autoesc_test.html", context)
+    print("Output from e.render_to_string('autoesc_test.html', context):", out)
+    expected = "Hello <b>World</b> <b>!</b>"
+
+    if out == expected:
+        print("Test passed: autoescape is honored (no escaping).")
+        sys.exit(0)
+    else:
+        print("Test failed: autoescape was not honored - got:", out, " expected:", expected)
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
