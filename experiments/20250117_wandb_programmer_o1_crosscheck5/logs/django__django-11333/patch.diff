diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 247e3680c0..6e31774a94 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -63,13 +63,30 @@ class ResolverMatch:
         )
 
 
+import functools
+
 @functools.lru_cache(maxsize=None)
+def _get_resolver_impl(final_urlconf):
+    return URLResolver(RegexPattern(r'^/'), final_urlconf)
+
 def get_resolver(urlconf=None):
     if urlconf is None:
         urlconf = settings.ROOT_URLCONF
+    return _get_resolver_impl(urlconf)
+
+# Expose cache-clear so tests that call get_resolver.cache_clear() still work.
+get_resolver.cache_clear = _get_resolver_impl.cache_clear
+get_resolver.cache_info = _get_resolver_impl.cache_info
+
+
+@functools.lru_cache(maxsize=None)
+def _get_cached_resolver(urlconf):
     return URLResolver(RegexPattern(r'^/'), urlconf)
 
 
+
+
+
 @functools.lru_cache(maxsize=None)
 def get_ns_resolver(ns_pattern, resolver, converters):
     # Build a namespaced resolver for the given parent URLconf pattern.
diff --git a/test_multiple_resolver_creation.py b/test_multiple_resolver_creation.py
new file mode 100644
index 0000000000..2183588216
--- /dev/null
+++ b/test_multiple_resolver_creation.py
@@ -0,0 +1,49 @@
+import sys
+import django
+from django.conf import settings
+from django.urls import get_resolver, set_urlconf, get_urlconf, path
+from django.http import HttpResponse
+
+def dummy_view(request):
+    return HttpResponse("OK")
+
+urlpatterns = [
+    path('', dummy_view),
+]
+
+def main():
+    # Provide a minimal Django settings configuration if not already configured.
+    if not settings.configured:
+        settings.configure(
+            DEBUG=True,
+            SECRET_KEY='abc123',
+            ROOT_URLCONF=__name__,
+            ALLOWED_HOSTS=[],
+            INSTALLED_APPS=[],
+        )
+    django.setup()
+
+    try:
+        print("Step 1: get_urlconf() =>", get_urlconf())
+        r1 = get_resolver(get_urlconf())
+        print("Obtained resolver r1:", r1)
+
+        print("Step 2: set_urlconf to settings.ROOT_URLCONF =>", settings.ROOT_URLCONF)
+        set_urlconf(settings.ROOT_URLCONF)
+
+        print("Step 3: get_urlconf() =>", get_urlconf())
+        r2 = get_resolver(get_urlconf())
+        print("Obtained resolver r2:", r2)
+
+        if r1 is r2:
+            print("The bug is fixed: only one resolver was created.")
+            sys.exit(0)
+        else:
+            print("The bug is present: multiple resolver instances found (r1 != r2).")
+            sys.exit(1)
+    except Exception as e:
+        print("Test encountered an exception:", e)
+        sys.exit(2)
+
+if __name__ == '__main__':
+    main()
