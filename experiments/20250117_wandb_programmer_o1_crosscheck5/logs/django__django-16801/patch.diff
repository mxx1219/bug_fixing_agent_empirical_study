diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py
index 7f8eb128e1..581f90c46d 100644
--- a/django/db/models/fields/files.py
+++ b/django/db/models/fields/files.py
@@ -441,8 +441,9 @@ class ImageField(FileField):
         # after their corresponding image field don't stay cleared by
         # Model.__init__, see bug #11196.
         # Only run post-initialization dimension update on non-abstract models
-        if not cls._meta.abstract:
+        if not cls._meta.abstract and (self.width_field or self.height_field):
             signals.post_init.connect(self.update_dimension_fields, sender=cls)
+    
 
     def update_dimension_fields(self, instance, force=False, *args, **kwargs):
         """
diff --git a/scripts/test_no_width_height_post_init.py b/scripts/test_no_width_height_post_init.py
new file mode 100644
index 0000000000..85e6b1179d
--- /dev/null
+++ b/scripts/test_no_width_height_post_init.py
@@ -0,0 +1,46 @@
+import sys
+import django
+from django.conf import settings
+from django.db import models
+from django.db.models.signals import post_init
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+            '__main__',  # So this file is recognized as an "app"
+        ],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        MIDDLEWARE=[],
+        SECRET_KEY='testsecret'
+    )
+
+django.setup()
+
+class MyModel(models.Model):
+    # ImageField without width_field or height_field
+    image = models.ImageField()
+
+def main():
+    found_signal = False
+    # Check callables connected to post_init for MyModel
+    for receiver in post_init._live_receivers(sender=MyModel):
+        if 'update_dimension_fields' in repr(receiver):
+            print('FAIL: Found update_dimension_fields connected for a model with no width/height fields.')
+            found_signal = True
+            break
+
+    if found_signal:
+        sys.exit(1)  # Problem is present
+    else:
+        print('PASS: No update_dimension_fields connected for MyModel.')
+        sys.exit(0)
+
+if __name__ == '__main__':
+    main()
