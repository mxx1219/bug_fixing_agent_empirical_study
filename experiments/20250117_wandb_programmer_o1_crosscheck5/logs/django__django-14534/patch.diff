diff --git a/django/forms/boundfield.py b/django/forms/boundfield.py
index 2ff8b0ee26..a43c0f39d6 100644
--- a/django/forms/boundfield.py
+++ b/django/forms/boundfield.py
@@ -277,7 +277,11 @@ class BoundWidget:
 
     @property
     def id_for_label(self):
-        return 'id_%s_%s' % (self.data['name'], self.data['index'])
+        return self.data['attrs'].get('id',
+            'id_%s_%s' % (self.data['name'], self.data['index'])
+        )
+    
+    
 
     @property
     def choice_label(self):
diff --git a/test_subwidget_id.py b/test_subwidget_id.py
new file mode 100644
index 0000000000..b92399e9e8
--- /dev/null
+++ b/test_subwidget_id.py
@@ -0,0 +1,53 @@
+#!/usr/bin/env python3
+import sys
+import django
+from django.conf import settings
+from django import forms
+
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=[],
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        SECRET_KEY='testsecret',
+        USE_I18N=True,
+        USE_L10N=True,
+        USE_TZ=True,
+    )
+django.setup()
+
+def main():
+    print("STEP 1: Creating a form with a MultipleChoiceField using a custom auto_id...")
+    class MyForm(forms.Form):
+        mychoices = forms.MultipleChoiceField(
+            choices=[('1','Choice A'), ('2','Choice B')],
+            widget=forms.CheckboxSelectMultiple,
+            required=False
+        )
+
+    form = MyForm(auto_id="custom_%s")
+    subwidgets = form['mychoices'].subwidgets
+
+    print("STEP 2: Checking if each subwidget's assigned 'id' in data['attrs'] matches id_for_label...")
+    all_ok = True
+    for i, sw in enumerate(subwidgets):
+        assigned_id = sw.data['attrs'].get('id')
+        label_id = sw.id_for_label
+        print(f'  Subwidget {i} => assigned_id={assigned_id}, label_id={label_id}')
+        if assigned_id != label_id:
+            print('  MISMATCH! assigned_id != label_id')
+            all_ok = False
+
+    if all_ok:
+        print('TEST PASSED (subwidget IDs match label IDs)')
+        sys.exit(0)
+    else:
+        print('TEST FAILED (subwidget IDs do NOT match label IDs). Problem still present.')
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
