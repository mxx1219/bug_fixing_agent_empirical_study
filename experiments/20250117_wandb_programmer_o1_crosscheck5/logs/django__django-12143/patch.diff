diff --git a/admin_prefix_bug_test.py b/admin_prefix_bug_test.py
new file mode 100644
index 0000000000..9253d83be1
--- /dev/null
+++ b/admin_prefix_bug_test.py
@@ -0,0 +1,38 @@
+import sys
+
+def main():
+    print("Step 1: Reading django/contrib/admin/options.py and searching for the fix in _get_edited_object_pks().")
+    path = "django/contrib/admin/options.py"
+
+    try:
+        with open(path, "r", encoding="utf-8") as f:
+            lines = f.readlines()
+    except FileNotFoundError:
+        print("ERROR: Could not open django/contrib/admin/options.py.")
+        sys.exit(1)
+
+    found_escape = False
+    is_in_method = False
+
+    for line in lines:
+        # When we spot the definition, note that we've entered the method.
+        if "def _get_edited_object_pks" in line:
+            is_in_method = True
+        # If we see another def or class, weâ€™re out of that method.
+        elif "def " in line or "class " in line:
+            is_in_method = False
+
+        # Check for usage of re.escape in the pk_pattern line within that method.
+        if is_in_method and "re.compile" in line and "prefix" in line and "re.escape" in line:
+            found_escape = True
+            break
+
+    if found_escape:
+        print("SUCCESS: Found re.escape usage with prefix. The bug should be fixed.")
+        sys.exit(0)
+    else:
+        print("FAILURE: No re.escape usage found in pk_pattern inside _get_edited_object_pks.")
+        sys.exit(1)
+
+if __name__ == "__main__":
+    main()
diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 137e6faa0f..cca66ca2ec 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -1630,9 +1630,10 @@ class ModelAdmin(BaseModelAdmin):
         return self.changeform_view(request, object_id, form_url, extra_context)
 
     def _get_edited_object_pks(self, request, prefix):
-        """Return POST data values of list_editable primary keys."""
-        pk_pattern = re.compile(r'{}-\d+-{}$'.format(prefix, self.model._meta.pk.name))
+        import re
+        pk_pattern = re.compile('{}-\\d+-{}$'.format(re.escape(prefix), self.model._meta.pk.name))
         return [value for key, value in request.POST.items() if pk_pattern.match(key)]
+    
 
     def _get_list_editable_queryset(self, request, prefix):
         """
