diff --git a/django/forms/models.py b/django/forms/models.py
index 5dcf923c12..7e29e59b56 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -1163,6 +1163,14 @@ class ModelChoiceIteratorValue:
         self.value = value
         self.instance = instance
 
+    def __hash__(self):
+        return hash(self.value)
+
+    def __eq__(self, other):
+        if isinstance(other, ModelChoiceIteratorValue):
+            return self.value == other.value
+        return self.value == other
+
     def __str__(self):
         return str(self.value)
 
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2020cebc3a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,19 @@
+from django.forms.models import ModelChoiceIteratorValue
+
+# Create a test instance
+value = ModelChoiceIteratorValue(1, "test_instance")
+
+# Try to use it in a dictionary lookup
+show_fields = {1: ['first_name', 'last_name']}
+
+try:
+    # This will raise TypeError: unhashable type: 'ModelChoiceIteratorValue'
+    if value in show_fields:
+        print("Found in dictionary")
+except TypeError as e:
+    print(f"Error occurred as expected: {e}")
+
+# However, this works fine with a list
+allowed_values = [1, 2]
+if value in allowed_values:
+    print("Found in list")
\ No newline at end of file
