diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py
index 2e97d9064b..e64c3f9414 100644
--- a/django/core/management/commands/makemigrations.py
+++ b/django/core/management/commands/makemigrations.py
@@ -248,12 +248,13 @@ class Command(BaseCommand):
                 else:
                     self.log("No changes detected")
         else:
+            # If --check is passed, don't write the migration files
+            if check_changes:
+                sys.exit(1)
             if self.update:
                 self.write_to_last_migration_files(changes)
             else:
                 self.write_migration_files(changes)
-            if check_changes:
-                sys.exit(1)
 
     def write_to_last_migration_files(self, changes):
         loader = MigrationLoader(connections[DEFAULT_DB_ALIAS])
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..39b4ad5579
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,69 @@
+import os
+import sys
+import subprocess
+
+def main():
+    # Create a temporary Django project
+    os.makedirs("test_project", exist_ok=True)
+    os.chdir("test_project")
+    
+    # Add current directory to Python path
+    sys.path.insert(0, os.getcwd())
+    
+    # Create a basic Django project structure
+    os.makedirs("myapp/migrations", exist_ok=True)
+    os.makedirs("myapp/management/commands", exist_ok=True)
+    
+    # Create __init__.py files
+    open("myapp/__init__.py", "w").close()
+    open("myapp/migrations/__init__.py", "w").close()
+    open("myapp/management/__init__.py", "w").close()
+    open("myapp/management/commands/__init__.py", "w").close()
+    
+    # Create models.py with a simple model
+    with open("myapp/models.py", "w") as f:
+        f.write("""from django.db import models
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+""")
+    
+    # Create settings.py
+    with open("settings.py", "w") as f:
+        f.write("""
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': 'db.sqlite3',
+    }
+}
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'myapp',
+]
+SECRET_KEY = 'dummy-key-for-test'
+""")
+
+    # Set DJANGO_SETTINGS_MODULE
+    os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'
+    
+    # Import Django and setup
+    import django
+    django.setup()
+    
+    # Run makemigrations with --check
+    from django.core.management import execute_from_command_line
+    try:
+        execute_from_command_line(['manage.py', 'makemigrations', '--check'])
+        print("makemigrations --check completed successfully")
+    except SystemExit as e:
+        print(f"makemigrations --check exited with code {e.code}")
+        # Check if migration files were created despite --check flag
+        if os.path.exists("myapp/migrations/0001_initial.py"):
+            print("ERROR: Migration file was created despite --check flag!")
+        else:
+            print("OK: No migration files were created")
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
