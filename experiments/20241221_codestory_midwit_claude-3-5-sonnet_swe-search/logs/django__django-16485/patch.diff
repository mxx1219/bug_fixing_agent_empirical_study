diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 23c3a08c67..3032a36f76 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -183,7 +183,7 @@ def floatformat(text, arg=-1):
     tupl = d.as_tuple()
     units = len(tupl[1])
     units += -tupl[2] if m else tupl[2]
-    prec = abs(p) + units + 1
+    prec = max(1, abs(p) + units + 1)
 
     # Avoid conversion to scientific notation by accessing `sign`, `digits`,
     # and `exponent` from Decimal.as_tuple() directly.
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9823f6d95c
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,30 @@
+from decimal import Decimal
+from django.conf import settings
+from django.template.defaultfilters import floatformat
+
+# Configure minimal Django settings
+if not settings.configured:
+    settings.configure(
+        USE_I18N=False,
+        USE_L10N=False,
+        USE_TZ=False,
+    )
+
+# Test cases
+test_cases = [
+    ('0.00', 0),              # Original failing case
+    (Decimal('0.00'), 0),     # Original failing case
+    ('0.00', 2),             # Positive precision
+    ('0.00', -2),            # Negative precision
+    ('1.23', 0),             # Non-zero value
+    ('0.01', 0),             # Small non-zero value
+    ('0.00000', 0),          # Multiple trailing zeros
+    (Decimal('0'), 0),       # Integer zero
+]
+
+for value, precision in test_cases:
+    try:
+        result = floatformat(value, precision)
+        print(f"Success: floatformat({value}, {precision}) = {result}")
+    except ValueError as e:
+        print(f"Error: floatformat({value}, {precision}) raised ValueError: {e}")
\ No newline at end of file
