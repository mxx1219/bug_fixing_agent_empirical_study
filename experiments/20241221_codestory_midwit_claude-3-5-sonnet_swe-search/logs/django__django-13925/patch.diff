diff --git a/django/db/models/base.py b/django/db/models/base.py
index 4038859cfa..1a383446de 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1297,6 +1297,10 @@ class Model(metaclass=ModelBase):
 
     @classmethod
     def _check_default_pk(cls):
+        # Skip the warning if the model inherits its primary key from a parent model
+        if cls._meta.parents:
+            return []
+
         if (
             cls._meta.pk.auto_created and
             not settings.is_overridden('DEFAULT_AUTO_FIELD') and
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..70f74b9c5a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,72 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+from django.core.management import call_command
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+        DEFAULT_AUTO_FIELD='django.db.models.AutoField'
+    )
+    django.setup()
+
+def check_model_warnings(model_class, model_name):
+    errors = model_class.check()
+    w042_warnings = [e for e in errors if e.id == 'models.W042']
+    print(f"\nChecking {model_name}:")
+    print(f"Found {len(w042_warnings)} W042 warnings:")
+    for warning in w042_warnings:
+        print(warning)
+    return len(w042_warnings)
+
+# Test Case 1: Model with explicit primary key
+class ExplicitPKModel(models.Model):
+    id = models.AutoField(primary_key=True)
+    name = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'auth'
+
+# Test Case 2: Model with auto-created primary key
+class AutoPKModel(models.Model):
+    name = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'auth'
+
+# Test Case 3: Model inheriting from a model with explicit primary key
+class ChildOfExplicitPK(ExplicitPKModel):
+    description = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'auth'
+
+# Test Case 4: Model inheriting from a model with auto-created primary key
+class ChildOfAutoPK(AutoPKModel):
+    description = models.CharField(max_length=100)
+    class Meta:
+        app_label = 'auth'
+
+# Run tests
+print("\nTesting different model configurations:")
+print("-" * 50)
+
+explicit_pk_warnings = check_model_warnings(ExplicitPKModel, "ExplicitPKModel")
+auto_pk_warnings = check_model_warnings(AutoPKModel, "AutoPKModel")
+child_explicit_warnings = check_model_warnings(ChildOfExplicitPK, "ChildOfExplicitPK")
+child_auto_warnings = check_model_warnings(ChildOfAutoPK, "ChildOfAutoPK")
+
+print("\nSummary:")
+print("-" * 50)
+print(f"ExplicitPKModel warnings: {explicit_pk_warnings}")
+print(f"AutoPKModel warnings: {auto_pk_warnings}")
+print(f"ChildOfExplicitPK warnings: {child_explicit_warnings}")
+print(f"ChildOfAutoPK warnings: {child_auto_warnings}")
\ No newline at end of file
