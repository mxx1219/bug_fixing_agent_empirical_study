diff --git a/django/urls/base.py b/django/urls/base.py
index 0e1c3d909c..6c2c2c93ba 100644
--- a/django/urls/base.py
+++ b/django/urls/base.py
@@ -172,7 +172,9 @@ def translate_url(url, lang_code):
         to_be_reversed = "%s:%s" % (match.namespace, match.url_name) if match.namespace else match.url_name
         with override(lang_code):
             try:
-                url = reverse(to_be_reversed, args=match.args, kwargs=match.kwargs)
+                # Filter out None values from kwargs
+                kwargs = {k: v for k, v in match.kwargs.items() if v is not None}
+                url = reverse(to_be_reversed, args=match.args, kwargs=kwargs)
             except NoReverseMatch:
                 pass
             else:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..8eee8033a9
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,36 @@
+from django.conf import settings
+from django.urls import path, include, re_path
+from django.urls.base import translate_url
+from django.utils.translation import gettext_lazy as _
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    USE_I18N=True,
+    LANGUAGES=[('en', 'English'), ('es', 'Spanish')],
+    ROOT_URLCONF=__name__,
+)
+
+# Define a simple view
+def dummy_view(request, param1=None, param2=None):
+    return None
+
+# URL patterns with optional named groups
+urlpatterns = [
+    re_path(r'^test/(?P<param1>\w+)(?:/(?P<param2>\w+))?/$', dummy_view, name='test_url'),
+]
+
+def main():
+    # Test URL with missing optional parameter
+    original_url = '/test/value1/'
+    translated_url = translate_url(original_url, 'es')
+    print(f"Original URL: {original_url}")
+    print(f"Translated URL: {translated_url}")
+    
+    # This should maintain the same URL structure (just potentially translated parts)
+    # but currently might generate an incorrect URL due to None values in kwargs
+
+if __name__ == '__main__':
+    import django
+    django.setup()
+    main()
\ No newline at end of file
