diff --git a/django/db/backends/postgresql/client.py b/django/db/backends/postgresql/client.py
index 4c9bd63546..3b5ddafaca 100644
--- a/django/db/backends/postgresql/client.py
+++ b/django/db/backends/postgresql/client.py
@@ -32,9 +32,9 @@ class DatabaseClient(BaseDatabaseClient):
             args += ["-h", host]
         if port:
             args += ["-p", str(port)]
+        args.extend(parameters)
         if dbname:
             args += [dbname]
-        args.extend(parameters)
 
         env = {}
         if passwd:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..8b354cf04e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,36 @@
+from django.db.backends.postgresql.client import DatabaseClient
+
+def test_case(name, settings_dict, parameters):
+    print(f"\nTest case: {name}")
+    args, env = DatabaseClient.settings_to_cmd_args_env(settings_dict, parameters)
+    print("Generated command:", ' '.join(args))
+    print("Environment:", env)
+    print("Args order:", args)
+
+# Test 1: No database name (should default to 'postgres')
+test_case("No database name", {
+    'USER': 'test_user',
+    'HOST': 'localhost',
+}, ['-c', 'SELECT version();'])
+
+# Test 2: Using service instead of database name
+test_case("Using service", {
+    'USER': 'test_user',
+    'HOST': 'localhost',
+    'OPTIONS': {
+        'service': 'my_service'
+    }
+}, ['-c', 'SELECT version();'])
+
+# Test 3: Using SSL options
+test_case("Using SSL options", {
+    'NAME': 'test_db',
+    'USER': 'test_user',
+    'HOST': 'localhost',
+    'OPTIONS': {
+        'sslmode': 'verify-full',
+        'sslcert': '/path/to/cert',
+        'sslkey': '/path/to/key',
+        'sslrootcert': '/path/to/root/cert',
+    }
+}, ['-c', 'SELECT version();'])
\ No newline at end of file
