diff --git a/astropy/utils/introspection.py b/astropy/utils/introspection.py
index 3e784f9fc3..e0a36b8e22 100644
--- a/astropy/utils/introspection.py
+++ b/astropy/utils/introspection.py
@@ -6,7 +6,7 @@
 import inspect
 import types
 import importlib
-from distutils.version import LooseVersion
+from packaging.version import parse as parse_version
 
 
 __all__ = ['resolve_name', 'minversion', 'find_current_module',
@@ -140,9 +140,9 @@ def minversion(module, version, inclusive=True, version_path='__version__'):
         have_version = resolve_name(module.__name__, version_path)
 
     if inclusive:
-        return LooseVersion(have_version) >= LooseVersion(version)
+        return parse_version(have_version) >= parse_version(version)
     else:
-        return LooseVersion(have_version) > LooseVersion(version)
+        return parse_version(have_version) > parse_version(version)
 
 
 def find_current_module(depth=1, finddiff=False):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..86c683ede6
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,20 @@
+from astropy.utils import minversion
+
+def test_version_comparison(module_name, version_str, expected=None):
+    try:
+        result = minversion(module_name, version_str)
+        print(f"Testing {module_name} >= {version_str}: {result}")
+        if expected is not None and result != expected:
+            print(f"WARNING: Expected {expected}, got {result}")
+    except Exception as e:
+        print(f"Error testing {version_str}: {str(e)}")
+
+# Test various version formats
+print("Testing various version formats...")
+test_version_comparison('numpy', '1.14dev')  # Previously failing case
+test_version_comparison('numpy', '1.14.3')   # Regular version
+test_version_comparison('numpy', '1.14')     # Simple version
+test_version_comparison('numpy', '1.14rc1')  # Release candidate
+test_version_comparison('numpy', '1.14.dev0') # Development version
+test_version_comparison('numpy', '1.14a1')   # Alpha version
+test_version_comparison('numpy', '1.14b1')   # Beta version
\ No newline at end of file
