diff --git a/astropy/io/ascii/html.py b/astropy/io/ascii/html.py
index 266cf229cc..709aed0cd8 100644
--- a/astropy/io/ascii/html.py
+++ b/astropy/io/ascii/html.py
@@ -430,14 +430,25 @@ class HTML(core.BaseReader):
                                     # Split up multicolumns into separate columns
                                     new_col = Column([el[i] for el in col])
 
-                                    new_col_iter_str_vals = self.fill_values(
-                                        col, new_col.info.iter_str_vals())
+                                    # Apply format if specified for this column
+                                    if col.info.name in self.data.formats:
+                                        format_func = self.data.formats[col.info.name]
+                                        new_col_iter_str_vals = self.fill_values(
+                                            col, (str(format_func(x[i])) for x in col))
+                                    else:
+                                        new_col_iter_str_vals = self.fill_values(
+                                            col, new_col.info.iter_str_vals())
                                     col_str_iters.append(new_col_iter_str_vals)
                                     new_cols_escaped.append(col_escaped)
                                     new_cols.append(new_col)
                             else:
 
-                                col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())
+                                # Apply format if specified for this column
+                                if col.info.name in self.data.formats:
+                                    format_func = self.data.formats[col.info.name]
+                                    col_iter_str_vals = self.fill_values(col, (str(format_func(x)) for x in col))
+                                else:
+                                    col_iter_str_vals = self.fill_values(col, col.info.iter_str_vals())
                                 col_str_iters.append(col_iter_str_vals)
 
                                 new_cols_escaped.append(col_escaped)
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a04fa95f9c
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,16 @@
+from astropy.table import Table
+from io import StringIO
+
+# generate table
+t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+tc = t.copy()  # copy table
+
+print("Testing HTML output:")
+with StringIO() as sp:
+    tc.write(sp, format="html", formats={"a": lambda x: f"{x:.2e}"})
+    print(sp.getvalue())
+
+print("\nTesting CSV output for comparison:")
+with StringIO() as sp:
+    tc.write(sp, format="csv", formats={"a": lambda x: f"{x:.2e}"})
+    print(sp.getvalue())
\ No newline at end of file
diff --git a/test_html_format.py b/test_html_format.py
new file mode 100644
index 0000000000..6d714ce227
--- /dev/null
+++ b/test_html_format.py
@@ -0,0 +1,28 @@
+from astropy.table import Table
+from io import StringIO
+
+# Test case 1: Basic table with format
+def test_basic_format():
+    t = Table([(1.23875234858e-24, 3.2348748432e-15), (2, 4)], names=('a', 'b'))
+    with StringIO() as sp:
+        t.write(sp, format="html", formats={"a": lambda x: f"{x:.2e}"})
+        output = sp.getvalue()
+        print("Test case 1 - Basic format:")
+        print(output)
+        assert "1.24e-24" in output
+        assert "3.23e-15" in output
+
+# Test case 2: Multi-dimensional column
+def test_multidim_format():
+    t = Table([[(1.23875234858e-24, 2.0), (3.2348748432e-15, 4.0)]], names=['a'])
+    with StringIO() as sp:
+        t.write(sp, format="html", formats={"a": lambda x: tuple(f"{v:.2e}" for v in x)})
+        output = sp.getvalue()
+        print("\nTest case 2 - Multidimensional format:")
+        print(output)
+        assert "1.24e-24" in output
+        assert "3.23e-15" in output
+
+if __name__ == "__main__":
+    test_basic_format()
+    test_multidim_format()
\ No newline at end of file
