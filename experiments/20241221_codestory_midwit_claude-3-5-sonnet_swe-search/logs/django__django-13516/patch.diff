diff --git a/django/core/management/base.py b/django/core/management/base.py
index e6cbf8c64f..ff1f04f0eb 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -149,6 +149,13 @@ class OutputWrapper(TextIOBase):
             msg += ending
         style_func = style_func or self.style_func
         self._out.write(style_func(msg))
+        
+    def flush(self):
+        """
+        Flush the underlying output stream.
+        """
+        if hasattr(self._out, 'flush'):
+            self._out.flush()
 
 
 class BaseCommand:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..8bbe841e1e
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,21 @@
+from django.core.management.base import BaseCommand, OutputWrapper
+import sys
+import time
+
+# Create a test command that simulates a long-running migration
+class TestCommand(BaseCommand):
+    def handle(self, *args, **options):
+        self.stdout.write("Operations to perform:", ending="\n")
+        self.stdout.write(" Apply all migrations: myapp", ending="\n")
+        self.stdout.write("Running migrations:", ending="\n")
+        self.stdout.write("  Applying myapp.0002_auto_20200817_1030...", ending="")
+        self.stdout.flush()  # This flush should make the text appear immediately
+        
+        # Simulate long running operation
+        time.sleep(2)
+        
+        self.stdout.write(" OK", ending="\n")
+
+# Run the test
+cmd = TestCommand(stdout=sys.stdout, stderr=sys.stderr)
+cmd.handle()
\ No newline at end of file
