diff --git a/astropy/io/fits/connect.py b/astropy/io/fits/connect.py
index 4b6150f4ac..1f51fe4835 100644
--- a/astropy/io/fits/connect.py
+++ b/astropy/io/fits/connect.py
@@ -69,7 +69,7 @@ def is_fits(origin, filepath, fileobj, *args, **kwargs):
             (".fits", ".fits.gz", ".fit", ".fit.gz", ".fts", ".fts.gz")
         ):
             return True
-    return isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
+    return len(args) > 0 and isinstance(args[0], (HDUList, TableHDU, BinTableHDU, GroupsHDU))
 
 
 def _decode_mixins(tbl):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..b063e02465
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,18 @@
+from astropy.io.registry import identify_format
+from astropy.table import Table
+from astropy.io.fits import HDUList, TableHDU, BinTableHDU, GroupsHDU
+
+# Test 1: Non-FITS file extension (previously failing case)
+print("Test 1: Non-FITS file extension")
+result = identify_format("write", Table, "bububu.ecsv", None, [], {})
+print(f"Result: {result}")
+
+# Test 2: FITS file extension
+print("\nTest 2: FITS file extension")
+result = identify_format("write", Table, "test.fits", None, [], {})
+print(f"Result: {result}")
+
+# Test 3: With HDUList argument
+print("\nTest 3: With HDUList argument")
+result = identify_format("write", Table, None, None, [HDUList()], {})
+print(f"Result: {result}")
\ No newline at end of file
