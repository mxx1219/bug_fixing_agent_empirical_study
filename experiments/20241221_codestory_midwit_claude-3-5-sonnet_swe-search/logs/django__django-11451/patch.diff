diff --git a/django/contrib/auth/backends.py b/django/contrib/auth/backends.py
index f4b1722757..1c1cec8b33 100644
--- a/django/contrib/auth/backends.py
+++ b/django/contrib/auth/backends.py
@@ -39,6 +39,8 @@ class ModelBackend(BaseBackend):
     def authenticate(self, request, username=None, password=None, **kwargs):
         if username is None:
             username = kwargs.get(UserModel.USERNAME_FIELD)
+        if username is None or password is None:
+            return None
         try:
             user = UserModel._default_manager.get_by_natural_key(username)
         except UserModel.DoesNotExist:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..34f12de550
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,46 @@
+import os
+import django
+from django.conf import settings
+from django.contrib.auth import authenticate
+from django.contrib.auth import get_user_model
+from django.db import connection
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+        ],
+        PASSWORD_HASHERS=['django.contrib.auth.hashers.MD5PasswordHasher'],
+        AUTHENTICATION_BACKENDS=['django.contrib.auth.backends.ModelBackend'],
+    )
+    django.setup()
+
+# Create tables
+from django.core.management import call_command
+call_command('migrate', verbosity=0)
+
+User = get_user_model()
+
+# Create a test user
+User.objects.create_user(username='testuser', password='testpass')
+
+# Clear connection queries
+connection.queries_log.clear()
+
+print("Testing authentication with None username...")
+# Try to authenticate with None username
+user = authenticate(request=None, username=None, password=None)
+
+# Print the queries that were executed
+print("\nQueries executed:")
+for query in connection.queries:
+    print(f"sql = {query['sql']}")
+    print(f"params = {query['params']}\n")
\ No newline at end of file
