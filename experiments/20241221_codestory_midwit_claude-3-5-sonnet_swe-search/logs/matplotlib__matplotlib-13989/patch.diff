diff --git a/edge_cases.py b/edge_cases.py
new file mode 100644
index 0000000000..cb7e53d438
--- /dev/null
+++ b/edge_cases.py
@@ -0,0 +1,30 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+# Set random seed for reproducibility
+np.random.seed(42)
+
+# Test case 1: Different range values
+plt.figure(figsize=(12, 8))
+plt.subplot(221)
+_, bins, _ = plt.hist(np.random.rand(100), bins=10, range=(-1, 2), density=True)
+plt.title('Range=(-1,2)\nFirst bin: {:.2f}, Last bin: {:.2f}'.format(bins[0], bins[-1]))
+
+# Test case 2: Different bin sizes
+plt.subplot(222)
+_, bins, _ = plt.hist(np.random.rand(100), bins=5, range=(0, 1), density=True)
+plt.title('5 bins\nFirst bin: {:.2f}, Last bin: {:.2f}'.format(bins[0], bins[-1]))
+
+# Test case 3: Different data distributions
+plt.subplot(223)
+data = np.concatenate([np.random.normal(0, 1, 100), np.random.normal(4, 1.5, 50)])
+_, bins, _ = plt.hist(data, bins='auto', range=(-2, 6), density=True)
+plt.title('Mixed normal distributions\nFirst bin: {:.2f}, Last bin: {:.2f}'.format(bins[0], bins[-1]))
+
+# Test case 4: Edge case with all data outside range
+plt.subplot(224)
+_, bins, _ = plt.hist(np.random.uniform(10, 20, 100), bins='auto', range=(0, 1), density=True)
+plt.title('Data outside range\nFirst bin: {:.2f}, Last bin: {:.2f}'.format(bins[0], bins[-1]))
+
+plt.tight_layout()
+plt.show()
\ No newline at end of file
diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py
index 4b73d52293..bc5461ad9f 100644
--- a/lib/matplotlib/axes/_axes.py
+++ b/lib/matplotlib/axes/_axes.py
@@ -6686,7 +6686,7 @@ optional.
 
         density = bool(density) or bool(normed)
         if density and not stacked:
-            hist_kwargs = dict(density=density)
+            hist_kwargs['density'] = density
 
         # List to store all the top coordinates of the histograms
         tops = []
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..be98d80ea4
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,22 @@
+import matplotlib.pyplot as plt
+import numpy as np
+
+# Set random seed for reproducibility
+np.random.seed(42)
+
+# Create histogram with density=True and range=(0,1)
+_, bins, _ = plt.hist(np.random.rand(10), "auto", range=(0, 1), density=True)
+print("Bins with density=True:")
+print(bins)
+print("First bin:", bins[0])
+print("Last bin:", bins[-1])
+
+plt.figure()  # Create new figure
+# Create histogram with density=False and range=(0,1) for comparison
+_, bins, _ = plt.hist(np.random.rand(10), "auto", range=(0, 1), density=False)
+print("\nBins with density=False:")
+print(bins)
+print("First bin:", bins[0])
+print("Last bin:", bins[-1])
+
+plt.show()
\ No newline at end of file
