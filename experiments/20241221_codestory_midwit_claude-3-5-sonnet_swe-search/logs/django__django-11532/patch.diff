diff --git a/django/core/mail/message.py b/django/core/mail/message.py
index e393b4cf5c..83dc8bf68b 100644
--- a/django/core/mail/message.py
+++ b/django/core/mail/message.py
@@ -257,7 +257,12 @@ class EmailMessage:
             msg['Date'] = formatdate(localtime=settings.EMAIL_USE_LOCALTIME)
         if 'message-id' not in header_names:
             # Use cached DNS_NAME for performance
-            msg['Message-ID'] = make_msgid(domain=DNS_NAME)
+            dns_name = str(DNS_NAME)
+            try:
+                dns_name.encode('ascii')
+            except UnicodeEncodeError:
+                dns_name = dns_name.encode('idna').decode('ascii')
+            msg['Message-ID'] = make_msgid(domain=dns_name)
         for name, value in self.extra_headers.items():
             if name.lower() != 'from':  # From is already handled
                 msg[name] = value
diff --git a/django/core/mail/utils.py b/django/core/mail/utils.py
index d18dfe4667..09dcc04c33 100644
--- a/django/core/mail/utils.py
+++ b/django/core/mail/utils.py
@@ -13,7 +13,13 @@ class CachedDnsName:
 
     def get_fqdn(self):
         if not hasattr(self, '_fqdn'):
-            self._fqdn = socket.getfqdn()
+            fqdn = socket.getfqdn()
+            # Convert to punycode if the hostname contains non-ASCII characters
+            try:
+                fqdn.encode('ascii')
+            except UnicodeEncodeError:
+                fqdn = fqdn.encode('idna').decode('ascii')
+            self._fqdn = fqdn
         return self._fqdn
 
 
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..3cf8ba6ee7
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,29 @@
+from unittest.mock import patch
+from django.core.mail import EmailMessage
+from django.conf import settings
+from django.test.utils import setup_test_environment
+
+def configure_settings():
+    settings.configure(
+        DEBUG=True,
+        EMAIL_USE_LOCALTIME=False,
+        DEFAULT_CHARSET='utf-8',
+        DEFAULT_FROM_EMAIL='webmaster@localhost',
+    )
+    setup_test_environment()
+
+def test_unicode_dns():
+    with patch("django.core.mail.utils.DNS_NAME.get_fqdn", return_value="漢字"):
+        email = EmailMessage('subject', '', 'from@example.com', ['to@example.com'])
+        email.encoding = 'iso-8859-1'
+        message = email.message()
+        message_id = message['Message-ID']
+        print("Message-ID:", message_id)
+        if 'xn--' in message_id:  # Check if punycode conversion worked
+            print("Success: Domain was properly converted to punycode")
+        else:
+            print("Failed: Domain was not converted to punycode")
+
+if __name__ == "__main__":
+    configure_settings()
+    test_unicode_dns()
\ No newline at end of file
