diff --git a/lib/matplotlib/scale.py b/lib/matplotlib/scale.py
index b482a664b7..885d3d9bb8 100644
--- a/lib/matplotlib/scale.py
+++ b/lib/matplotlib/scale.py
@@ -419,14 +419,20 @@ class LogScale(ScaleBase):
 
     def limit_range_for_scale(self, vmin, vmax, minpos):
         """
-        Limit the domain to positive values.
+        Limit the domain to positive values while preserving the order of limits.
         """
         if not np.isfinite(minpos):
             minpos = 1e-300  # This value should rarely if ever
-                             # end up with a visible effect.
-
-        return (minpos if vmin <= 0 else vmin,
-                minpos if vmax <= 0 else vmax)
+                            # end up with a visible effect.
+        
+        # Handle inverted limits while maintaining positivity constraint
+        if vmax < vmin:
+            vmin_new = minpos if vmax <= 0 else vmax
+            vmax_new = minpos if vmin <= 0 else vmin
+            return vmin_new, vmax_new
+        else:
+            return (minpos if vmin <= 0 else vmin,
+                   minpos if vmax <= 0 else vmax)
 
 
 class FuncScaleLog(LogScale):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a282cc68f0
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,47 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+# Test case 1: Original reproduction
+y = np.linspace(1000e2, 1, 100)
+x = np.exp(-np.linspace(0, 1, y.size))
+
+plt.figure(figsize=(12, 8))
+
+plt.subplot(221)
+ax = plt.gca()
+ax.plot(x, y)
+ax.set_yscale('linear')
+ax.set_ylim(y.max(), y.min())
+plt.title('Linear Scale (Original)')
+
+plt.subplot(222)
+ax = plt.gca()
+ax.plot(x, y)
+ax.set_yscale('log')
+ax.set_ylim(y.max(), y.min())
+plt.title('Log Scale (Original)')
+
+# Test case 2: Edge case with very small values
+y2 = np.linspace(1e-5, 1e-10, 100)
+x2 = np.linspace(0, 1, 100)
+
+plt.subplot(223)
+ax = plt.gca()
+ax.plot(x2, y2)
+ax.set_yscale('log')
+ax.set_ylim(y2.max(), y2.min())
+plt.title('Log Scale (Small Values)')
+
+# Test case 3: Multiple orders of magnitude
+y3 = np.logspace(5, -5, 100)
+x3 = np.linspace(0, 1, 100)
+
+plt.subplot(224)
+ax = plt.gca()
+ax.plot(x3, y3)
+ax.set_yscale('log')
+ax.set_ylim(y3.max(), y3.min())
+plt.title('Log Scale (Wide Range)')
+
+plt.tight_layout()
+plt.show()
\ No newline at end of file
