diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index a44adfc760..347baf3d64 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -425,7 +425,7 @@ class SQLCompiler:
                 # If the columns list is limited, then all combined queries
                 # must have the same columns list. Set the selects defined on
                 # the query on all combined queries, if not already set.
-                if not compiler.query.values_select and self.query.values_select:
+                if self.query.values_select:
                     compiler.query.set_values((
                         *self.query.extra_select,
                         *self.query.values_select,
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..b659ed50bd
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,46 @@
+from django.conf import settings
+from django.db import models
+import os
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': ':memory:',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.contenttypes',
+            'django.contrib.auth',
+        ],
+    )
+
+import django
+django.setup()
+
+# Define the model
+class ReservedName(models.Model):
+    name = models.CharField(max_length=100)
+    order = models.IntegerField()
+
+    class Meta:
+        app_label = 'reproduce_error'
+
+# Create tables
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(ReservedName)
+
+# Create test data and run test
+ReservedName.objects.create(name='a', order=2)
+qs1 = ReservedName.objects.all()
+
+# First query with name and order
+result1 = qs1.union(qs1).values_list('name', 'order').get()
+print("First query (name, order):", result1)
+
+# Second query with just order
+result2 = qs1.union(qs1).values_list('order').get()
+print("Second query (order):", result2)
\ No newline at end of file
