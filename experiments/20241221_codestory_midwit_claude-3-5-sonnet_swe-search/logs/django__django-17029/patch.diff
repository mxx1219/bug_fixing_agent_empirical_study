diff --git a/django/apps/registry.py b/django/apps/registry.py
index 0683f3ad3c..481dd1fc86 100644
--- a/django/apps/registry.py
+++ b/django/apps/registry.py
@@ -376,6 +376,7 @@ class Apps:
         # Call expire cache on each model. This will purge
         # the relation tree and the fields cache.
         self.get_models.cache_clear()
+        self.get_swappable_settings_name.cache_clear()
         if self.ready:
             # Circumvent self.get_models() to prevent that the cache is refilled.
             # This particularly prevents that an empty value is cached while cloning.
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9a6c955ef2
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,37 @@
+import os
+import django
+from django.conf import settings
+
+# Configure minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+    ],
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+
+django.setup()
+
+from django.apps import apps
+
+# First call to get_swappable_settings_name
+result1 = apps.get_swappable_settings_name("auth.User")
+print("First call result:", result1)
+
+# Clear the cache
+apps.clear_cache()
+
+# Second call to get_swappable_settings_name
+# If the cache wasn't cleared, this will use the cached value
+result2 = apps.get_swappable_settings_name("auth.User")
+print("Second call result (after clear_cache):", result2)
+
+# To verify the cache is working, we can check the cache info
+cache_info = apps.get_swappable_settings_name.cache_info()
+print("\nCache info:", cache_info)
\ No newline at end of file
