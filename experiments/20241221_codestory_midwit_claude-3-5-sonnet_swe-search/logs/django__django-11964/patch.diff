diff --git a/django/db/models/enums.py b/django/db/models/enums.py
index bbe362a6ab..7a3ae04c5a 100644
--- a/django/db/models/enums.py
+++ b/django/db/models/enums.py
@@ -65,7 +65,9 @@ class Choices(enum.Enum, metaclass=ChoicesMeta):
 
 class IntegerChoices(int, Choices):
     """Class for creating enumerated integer choices."""
-    pass
+
+    def __str__(self):
+        return str(self.value)
 
 
 class TextChoices(str, Choices):
@@ -73,3 +75,6 @@ class TextChoices(str, Choices):
 
     def _generate_next_value_(name, start, count, last_values):
         return name
+
+    def __str__(self):
+        return str(self.value)
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9a4e35e1b0
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,36 @@
+# Configure Django settings
+import django
+from django.conf import settings
+settings.configure(
+    DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+    INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
+)
+django.setup()
+
+from django.db import models
+from django.utils.translation import gettext_lazy as _
+
+# Define our models
+class MyTextChoice(models.TextChoices):
+    FIRST_CHOICE = "first", _("The first choice, it is")
+    SECOND_CHOICE = "second", _("The second choice, it is")
+
+class MyIntChoice(models.IntegerChoices):
+    ONE = 1, _("The first choice, it is")
+    TWO = 2, _("The second choice, it is")
+
+# Test TextChoices string conversion
+text_choice = MyTextChoice.FIRST_CHOICE
+print("TextChoices Test:")
+print(f"String representation: {str(text_choice)}")
+print(f"Raw value: {text_choice.value}")
+print(f"Is instance of str? {isinstance(text_choice, str)}")
+print(f"Direct comparison: {'first' == str(text_choice)}")
+
+# Test IntegerChoices string conversion
+int_choice = MyIntChoice.ONE
+print("\nIntegerChoices Test:")
+print(f"String representation: {str(int_choice)}")
+print(f"Raw value: {int_choice.value}")
+print(f"Is instance of int? {isinstance(int_choice, int)}")
+print(f"Direct comparison: {1 == int_choice}")
\ No newline at end of file
