diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py
index 97977d72ef..bf9c2acd26 100644
--- a/django/db/migrations/autodetector.py
+++ b/django/db/migrations/autodetector.py
@@ -96,7 +96,7 @@ class MigrationAutodetector:
         for name, field in sorted(fields.items()):
             deconstruction = self.deep_deconstruct(field)
             if field.remote_field and field.remote_field.model:
-                del deconstruction[2]['to']
+                deconstruction[2].pop('to', None)
             fields_def.append(deconstruction)
         return fields_def
 
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..eba09adffa
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,41 @@
+import os
+import django
+from django.db import models
+from django.db.migrations.autodetector import MigrationAutodetector
+from django.db.migrations.state import ModelState, ProjectState
+from django.apps import apps
+from django.conf import settings
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3'}},
+        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
+    )
+    django.setup()
+
+class CustomFKField(models.ForeignKey):
+    def __init__(self, *args, **kwargs):
+        kwargs['to'] = 'testapp.HardcodedModel'
+        super().__init__(*args, **kwargs)
+
+    def deconstruct(self):
+        name, path, args, kwargs = super().deconstruct()
+        del kwargs["to"]
+        return name, path, args, kwargs
+
+def test_reproduction():
+    before = ProjectState()
+    before.add_model(ModelState('testapp', 'HardcodedModel', []))
+    after = ProjectState()
+    after.add_model(ModelState('testapp', 'HardcodedModel', []))
+    after.add_model(ModelState('testapp', 'TestModel', [('custom', CustomFKField(on_delete=models.CASCADE))]))
+    try:
+        changes = MigrationAutodetector(before, after)._detect_changes()
+        print("Test completed successfully - no KeyError was raised")
+    except KeyError as e:
+        print(f"Test failed - KeyError was raised: {e}")
+        exit(1)
+
+if __name__ == "__main__":
+    test_reproduction()
\ No newline at end of file
