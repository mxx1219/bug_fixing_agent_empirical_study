diff --git a/django/utils/dateformat.py b/django/utils/dateformat.py
index afd36d79e0..3e23eea42f 100644
--- a/django/utils/dateformat.py
+++ b/django/utils/dateformat.py
@@ -325,8 +325,8 @@ class DateFormat(TimeFormat):
         return self.data.isocalendar()[1]
 
     def y(self):
-        "Year, 2 digits; e.g. '99'"
-        return str(self.data.year)[2:]
+        "Year, 2 digits with leading zeros; e.g. '99'"
+        return '%02d' % (self.data.year % 100)
 
     def Y(self):
         "Year, 4 digits; e.g. '1999'"
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..80f8500c56
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,24 @@
+import datetime
+from django.conf import settings
+settings.configure()
+from django.utils import dateformat
+
+def test_year(year):
+    test_date = datetime.datetime(year, 4, 5, 6, 7)
+    django_result = dateformat.format(test_date, "y")
+    python_result = test_date.strftime("%y")
+    print(f"\nTesting year {year}:")
+    print(f"Django's output: '{django_result}'")
+    print(f"Python's output: '{python_result}'")
+    print(f"Match? {django_result == python_result}")
+    return django_result == python_result
+
+# Test various edge cases
+test_years = [5, 45, 123, 999, 2023]
+all_passed = True
+
+for year in test_years:
+    if not test_year(year):
+        all_passed = False
+
+print("\nOverall test result:", "PASSED" if all_passed else "FAILED")
\ No newline at end of file
