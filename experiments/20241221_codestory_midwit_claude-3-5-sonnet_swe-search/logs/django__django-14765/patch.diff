diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py
index 088f5c41f0..1d30c7a20d 100644
--- a/django/db/migrations/state.py
+++ b/django/db/migrations/state.py
@@ -92,7 +92,8 @@ class ProjectState:
         self.models = models or {}
         # Apps to include from main registry, usually unmigrated ones
         if real_apps:
-            self.real_apps = real_apps if isinstance(real_apps, set) else set(real_apps)
+            assert isinstance(real_apps, set), "real_apps must be a set"
+            self.real_apps = real_apps
         else:
             self.real_apps = set()
         self.is_delayed = False
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..fd5a04ac8a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,15 @@
+from django.db.migrations.state import ProjectState
+
+# Current behavior - accepts non-set types and converts them
+real_apps = ['auth', 'contenttypes']  # passing a list instead of a set
+state = ProjectState(real_apps=real_apps)
+print(f"Type of real_apps after initialization: {type(state.real_apps)}")
+print(f"Value of real_apps after initialization: {state.real_apps}")
+
+# After our change, this should raise an AssertionError
+print("\nTrying with list instead of set (should fail after our changes):")
+try:
+    state = ProjectState(real_apps=['auth', 'contenttypes'])
+    print("No assertion error - this is wrong!")
+except AssertionError as e:
+    print("Got expected AssertionError - this is correct!")
\ No newline at end of file
