diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py
index d9fb088350..2933146c9f 100644
--- a/django/core/management/commands/runserver.py
+++ b/django/core/management/commands/runserver.py
@@ -51,6 +51,10 @@ class Command(BaseCommand):
             '--noreload', action='store_false', dest='use_reloader',
             help='Tells Django to NOT use the auto-reloader.',
         )
+        parser.add_argument(
+            '--skip-checks', action='store_true',
+            help='Skip system checks.',
+        )
 
     def execute(self, *args, **options):
         if options['no_color']:
@@ -114,11 +118,12 @@ class Command(BaseCommand):
         shutdown_message = options.get('shutdown_message', '')
         quit_command = 'CTRL-BREAK' if sys.platform == 'win32' else 'CONTROL-C'
 
-        self.stdout.write("Performing system checks...\n\n")
-        self.check(display_num_errors=True)
-        # Need to check migrations here, so can't use the
-        # requires_migrations_check attribute.
-        self.check_migrations()
+        if not options.get('skip_checks', False):
+            self.stdout.write("Performing system checks...\n\n")
+            self.check(display_num_errors=True)
+            # Need to check migrations here, so can't use the
+            # requires_migrations_check attribute.
+            self.check_migrations()
         now = datetime.now().strftime('%B %d, %Y - %X')
         self.stdout.write(now)
         self.stdout.write((
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2630622234
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,44 @@
+import os
+import sys
+import django
+from django.core.management import execute_from_command_line
+from django.conf import settings
+from django.urls import path
+
+def dummy_view(request):
+    from django.http import HttpResponse
+    return HttpResponse("Hello, World!")
+
+urlpatterns = [
+    path('', dummy_view),
+]
+
+def main():
+    # Configure settings before django.setup()
+    if not settings.configured:
+        settings.configure(
+            DEBUG=True,
+            INSTALLED_APPS=['django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions'],
+            DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+            ROOT_URLCONF=__name__,  # Use this module as the ROOT_URLCONF
+            SECRET_KEY='dummy-key-for-test',
+        )
+    
+    django.setup()
+    
+    # First run with normal checks
+    print("Running server with checks (default behavior):")
+    try:
+        execute_from_command_line(['manage.py', 'runserver', '--noreload'])
+    except KeyboardInterrupt:
+        print("\nServer stopped.")
+    
+    # Then try with --skip-checks
+    print("\nRunning server with --skip-checks:")
+    try:
+        execute_from_command_line(['manage.py', 'runserver', '--noreload', '--skip-checks'])
+    except KeyboardInterrupt:
+        print("\nServer stopped.")
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
