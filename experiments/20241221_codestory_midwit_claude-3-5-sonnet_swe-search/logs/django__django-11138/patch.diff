diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py
index 50f85e0621..73d65677a8 100644
--- a/django/db/backends/mysql/operations.py
+++ b/django/db/backends/mysql/operations.py
@@ -70,7 +70,13 @@ class DatabaseOperations(BaseDatabaseOperations):
 
     def _convert_field_to_tz(self, field_name, tzname):
         if settings.USE_TZ:
-            field_name = "CONVERT_TZ(%s, 'UTC', '%s')" % (field_name, tzname)
+            # Get the database timezone setting
+            db_timezone = self.connection.settings_dict.get('TIME_ZONE')
+            # If database timezone is not set, fall back to UTC
+            source_tz = db_timezone if db_timezone else 'UTC'
+            # Skip conversion if source and target timezones are the same
+            if source_tz != tzname:
+                field_name = "CONVERT_TZ(%s, '%s', '%s')" % (field_name, source_tz, tzname)
         return field_name
 
     def datetime_cast_date_sql(self, field_name, tzname):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..02fdc54298
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,48 @@
+import os
+import django
+from django.conf import settings
+from django.db import models
+from django.utils import timezone
+import datetime
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    USE_TZ=True,
+    TIME_ZONE='Europe/Paris',
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.mysql',
+            'NAME': 'test_db',
+            'USER': 'test_user',
+            'PASSWORD': 'test_pass',
+            'TIME_ZONE': 'Europe/Paris',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ]
+)
+
+django.setup()
+
+# Create a test model
+class TestModel(models.Model):
+    datetime_field = models.DateTimeField()
+
+    class Meta:
+        app_label = 'reproduce_error'
+
+# Create a datetime in Paris timezone
+dt = timezone.make_aware(datetime.datetime(2017, 7, 6, 20, 50))
+print(f"Created datetime: {dt}")
+
+# Get the SQL for date lookup
+from django.db import connection
+compiler = TestModel.objects.filter(datetime_field__date=dt.date()).query.get_compiler(connection=connection)
+sql, params = compiler.as_sql()
+print("\nGenerated SQL:")
+print(sql % tuple(params))
+
+print("\nIssue: The SQL uses CONVERT_TZ with 'UTC' as source timezone instead of using database timezone 'Europe/Paris'")
\ No newline at end of file
