diff --git a/django/db/models/manager.py b/django/db/models/manager.py
index e37e56cd17..80de70c730 100644
--- a/django/db/models/manager.py
+++ b/django/db/models/manager.py
@@ -81,12 +81,12 @@ class BaseManager:
     @classmethod
     def _get_queryset_methods(cls, queryset_class):
         def create_method(name, method):
+            from functools import wraps
+            
             def manager_method(self, *args, **kwargs):
                 return getattr(self.get_queryset(), name)(*args, **kwargs)
 
-            manager_method.__name__ = method.__name__
-            manager_method.__doc__ = method.__doc__
-            return manager_method
+            return wraps(method)(manager_method)
 
         new_methods = {}
         for name, method in inspect.getmembers(
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..02449d90e9
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+import inspect
+from django.conf import settings
+from django.db import models
+
+# Configure Django settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+)
+
+import django
+django.setup()
+
+class Person(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'auth'  # Using an existing app for simplicity
+
+# Print the actual signature
+print("Current signature:", inspect.signature(Person.objects.bulk_create))
+
+# Get the original signature from QuerySet for comparison
+from django.db.models.query import QuerySet
+print("Expected signature:", inspect.signature(QuerySet.bulk_create))
\ No newline at end of file
