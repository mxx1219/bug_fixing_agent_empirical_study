diff --git a/django/template/engine.py b/django/template/engine.py
index dfaa67ba12..ff9ce58d59 100644
--- a/django/template/engine.py
+++ b/django/template/engine.py
@@ -160,7 +160,7 @@ class Engine:
         if isinstance(context, Context):
             return t.render(context)
         else:
-            return t.render(Context(context))
+            return t.render(Context(context, autoescape=self.autoescape))
 
     def select_template(self, template_name_list):
         """
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..cfb8f767bc
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,29 @@
+from django.template import Engine
+from django.template.context import Context
+import os
+
+# Get current directory
+current_dir = os.getcwd()
+
+# Create an engine with autoescape=False and current directory as template dir
+engine = Engine(
+    autoescape=False,
+    dirs=[current_dir],
+)
+
+# Create context with a name that includes HTML
+context_dict = {'name': '<em>World</em>'}
+
+# Create a template string and save it to a file
+template_content = "Hello <b>{{ name }}</b>!"
+with open('test_template.html', 'w') as f:
+    f.write(template_content)
+
+# Test render_to_string with the template file
+result = engine.render_to_string('test_template.html', context_dict)
+print("Result with render_to_string():", result)
+
+# For comparison, using template.render() with explicit autoescape=False
+template = engine.get_template('test_template.html')
+result_direct = template.render(Context(context_dict, autoescape=False))
+print("Result with explicit Context(autoescape=False):", result_direct)
\ No newline at end of file
