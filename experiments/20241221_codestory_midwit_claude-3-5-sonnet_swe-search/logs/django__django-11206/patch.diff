diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..507c3ca55a 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -27,9 +27,14 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
     # sign
     sign = ''
     if isinstance(number, Decimal):
+        _, digits, exponent = number.as_tuple()
+        # When decimal_pos is specified and the number is smaller than what can be represented
+        # with the given decimal positions, return "0" with the appropriate number of zeros
+        if decimal_pos is not None and exponent < -decimal_pos:
+            return '0' + decimal_sep + '0' * decimal_pos
+
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
-        _, digits, exponent = number.as_tuple()
         if abs(exponent) + len(digits) > 200:
             number = '{:e}'.format(number)
             coefficient, exponent = number.split('e')
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a667653dc7
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,45 @@
+from decimal import Decimal
+from django.conf import settings
+from django.utils.numberformat import format as nformat
+
+# Configure Django settings
+settings.configure(
+    USE_L10N=False,
+    USE_THOUSAND_SEPARATOR=False,
+)
+
+# Test case 1: Number that should show as 0.00
+print("Test 1 - 1e-199:")
+result = nformat(Decimal('1e-199'), '.', decimal_pos=2)
+print(f"Expected: '0.00'")
+print(f"Got:      '{result}'")
+
+# Test case 2: Number that currently shows in exponential notation
+print("\nTest 2 - 1e-200:")
+result = nformat(Decimal('1e-200'), '.', decimal_pos=2)
+print(f"Expected: '0.00'")
+print(f"Got:      '{result}'")
+
+# Test case 3: Small number with more decimal places
+print("\nTest 3 - 1e-5 with 4 decimal places:")
+result = nformat(Decimal('1e-5'), '.', decimal_pos=4)
+print(f"Expected: '0.0000'")
+print(f"Got:      '{result}'")
+
+# Edge case 1: Negative small number
+print("\nEdge case 1 - -1e-200 with 2 decimal places:")
+result = nformat(Decimal('-1e-200'), '.', decimal_pos=2)
+print(f"Expected: '0.00'")
+print(f"Got:      '{result}'")
+
+# Edge case 2: Number exactly at the decimal_pos threshold
+print("\nEdge case 2 - 1e-2 with 2 decimal places:")
+result = nformat(Decimal('1e-2'), '.', decimal_pos=2)
+print(f"Expected: '0.01'")
+print(f"Got:      '{result}'")
+
+# Edge case 3: Large number (should still use scientific notation)
+print("\nEdge case 3 - 1e200:")
+result = nformat(Decimal('1e200'), '.', decimal_pos=2)
+print(f"Expected: Should use scientific notation")
+print(f"Got:      '{result}'")
\ No newline at end of file
