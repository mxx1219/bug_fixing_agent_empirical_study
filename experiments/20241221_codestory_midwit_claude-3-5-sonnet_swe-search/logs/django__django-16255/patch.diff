diff --git a/django/contrib/sitemaps/__init__.py b/django/contrib/sitemaps/__init__.py
index 27756d9d96..b40ad806ed 100644
--- a/django/contrib/sitemaps/__init__.py
+++ b/django/contrib/sitemaps/__init__.py
@@ -168,7 +168,7 @@ class Sitemap:
         if callable(self.lastmod):
             try:
                 return max([self.lastmod(item) for item in self.items()])
-            except TypeError:
+            except (TypeError, ValueError):
                 return None
         else:
             return self.lastmod
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9c614d1c1a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,49 @@
+from django.conf import settings
+from django.contrib.sitemaps import Sitemap
+from django.contrib.sitemaps.views import index, sitemap
+from django.core.handlers.wsgi import WSGIRequest
+from django.http import HttpRequest
+from django.urls import path
+from django.test import RequestFactory
+import os
+
+# Configure minimal Django settings
+settings.configure(
+    DEBUG=True,
+    SECRET_KEY='dummy-key',
+    ROOT_URLCONF=__name__,
+    ALLOWED_HOSTS=['testserver'],
+    INSTALLED_APPS=[
+        'django.contrib.sitemaps',
+    ],
+)
+
+# Define a Sitemap class with no items but with lastmod
+class EmptySitemap(Sitemap):
+    def items(self):
+        return []  # Return empty list to trigger the issue
+        
+    def lastmod(self, obj):
+        return None  # This won't be called but needs to be defined
+
+# URL configuration
+sitemaps = {'empty': EmptySitemap()}
+urlpatterns = [
+    path('sitemap.xml', index, {'sitemaps': sitemaps}),
+    path('sitemap-<section>.xml', sitemap, {'sitemaps': sitemaps}, name='django.contrib.sitemaps.views.sitemap'),
+]
+
+if __name__ == '__main__':
+    import django
+    django.setup()
+    
+    # Create a test request
+    factory = RequestFactory()
+    request = factory.get('/sitemap.xml')
+    
+    # Try to get the sitemap
+    try:
+        response = index(request, sitemaps=sitemaps)
+        print("Success! The error has been fixed.")
+    except ValueError as e:
+        print("Error still exists:", str(e))
\ No newline at end of file
