diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 59a4a0364d..c4b8e21068 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -420,9 +420,9 @@ class AdminSite:
     def catch_all_view(self, request, url):
         if settings.APPEND_SLASH and not url.endswith('/'):
             urlconf = getattr(request, 'urlconf', None)
-            path = '%s/' % request.path_info
+            path = '%s/' % request.path
             try:
-                match = resolve(path, urlconf)
+                match = resolve(request.path_info + '/', urlconf)
             except Resolver404:
                 pass
             else:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..b16dad911a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,41 @@
+from django.test import RequestFactory
+from django.conf import settings
+from django.contrib.admin import AdminSite
+from django.urls import path
+from django.http import HttpResponse
+
+def dummy_view(request):
+    return HttpResponse("Test")
+
+# Create URLconf
+urlpatterns = [
+    path('test/', dummy_view, name='test'),
+]
+
+# Setup minimal Django settings
+settings.configure(
+    DEBUG=True,
+    APPEND_SLASH=True,
+    FORCE_SCRIPT_NAME='/admin',
+    ROOT_URLCONF=__name__,
+    MIDDLEWARE=[],
+)
+
+# Create a request factory
+factory = RequestFactory()
+
+# Create a request with FORCE_SCRIPT_NAME
+request = factory.get('/test')
+request.path = '/admin/test'  # Full path with script name
+request.path_info = '/test'   # Path without script name
+
+# Create admin site instance
+site = AdminSite()
+
+# Try the catch_all_view
+try:
+    response = site.catch_all_view(request, 'test')
+    print(f"Redirect URL: {response['Location']}")
+    print("ISSUE: The redirect URL doesn't include FORCE_SCRIPT_NAME")
+except Exception as e:
+    print(f"Error: {e}")
\ No newline at end of file
