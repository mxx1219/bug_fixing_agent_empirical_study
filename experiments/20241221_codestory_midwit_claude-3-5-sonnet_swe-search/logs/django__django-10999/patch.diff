diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py
index 8d08b7d1d3..a037758784 100644
--- a/django/utils/dateparse.py
+++ b/django/utils/dateparse.py
@@ -29,7 +29,7 @@ datetime_re = re.compile(
 standard_duration_re = re.compile(
     r'^'
     r'(?:(?P<days>-?\d+) (days?, )?)?'
-    r'((?:(?P<hours>-?\d+):)(?=\d+:\d+))?'
+    r'((?:(?P<hours>-?\d+):)(?=-?\d+:-?\d+))?'
     r'(?:(?P<minutes>-?\d+):)?'
     r'(?P<seconds>-?\d+)'
     r'(?:\.(?P<microseconds>\d{1,6})\d{0,6})?'
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..9558e93baf
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,18 @@
+from django.utils.dateparse import parse_duration
+
+def test_parse_duration():
+    # This should work but fails with the current regex
+    test_value = "-2:-3:-4"
+    result = parse_duration(test_value)
+    print(f"Testing negative duration '{test_value}':")
+    print(f"Result: {result}")
+    print()
+
+    # This is a positive case that works
+    test_value = "2:3:4"
+    result = parse_duration(test_value)
+    print(f"Testing positive duration '{test_value}':")
+    print(f"Result: {result}")
+
+if __name__ == "__main__":
+    test_parse_duration()
\ No newline at end of file
