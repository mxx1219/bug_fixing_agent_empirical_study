diff --git a/django/utils/html.py b/django/utils/html.py
index 9c519978f5..4ea59b47a1 100644
--- a/django/utils/html.py
+++ b/django/utils/html.py
@@ -2,6 +2,7 @@
 
 import json
 import re
+from html import escape as html_escape
 from html.parser import HTMLParser
 from urllib.parse import (
     parse_qsl, quote, unquote, urlencode, urlsplit, urlunsplit,
@@ -24,15 +25,6 @@ word_split_re = re.compile(r'''([\s<>"']+)''')
 simple_url_re = re.compile(r'^https?://\[?\w', re.IGNORECASE)
 simple_url_2_re = re.compile(r'^www\.|^(?!http)\w[^@]+\.(com|edu|gov|int|mil|net|org)($|/.*)$', re.IGNORECASE)
 
-_html_escapes = {
-    ord('&'): '&amp;',
-    ord('<'): '&lt;',
-    ord('>'): '&gt;',
-    ord('"'): '&quot;',
-    ord("'"): '&#39;',
-}
-
-
 @keep_lazy(str, SafeString)
 def escape(text):
     """
@@ -42,8 +34,12 @@ def escape(text):
     Always escape input, even if it's already escaped and marked as such.
     This may result in double-escaping. If this is a concern, use
     conditional_escape() instead.
+
+    Note: This implementation uses Python's stdlib html.escape() function,
+    which escapes single quotes as &#x27; rather than &#39;. These values
+    are functionally equivalent in HTML.
     """
-    return mark_safe(str(text).translate(_html_escapes))
+    return mark_safe(html_escape(str(text)))
 
 
 _js_escapes = {
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..c742487297
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,56 @@
+import timeit
+
+# Test with Django's current implementation
+setup_django = '''
+from django.utils.html import escape
+copyright = "© 2023 Example Corp & Associates"
+'''
+
+# Test with Python's stdlib implementation
+setup_stdlib = '''
+from html import escape
+copyright = "© 2023 Example Corp & Associates"
+'''
+
+# Run timing tests
+django_time = timeit.repeat(
+    'escape(copyright)',
+    setup=setup_django,
+    number=50000,
+    repeat=5
+)
+
+stdlib_time = timeit.repeat(
+    'escape(copyright)',
+    setup=setup_stdlib,
+    number=50000,
+    repeat=5
+)
+
+print("Django implementation:")
+print(f"Best time: {min(django_time)/50000:.3f} usec per loop")
+
+print("\nPython stdlib implementation:")
+print(f"Best time: {min(stdlib_time)/50000:.3f} usec per loop")
+
+# Test equivalence
+from django.utils.html import escape as django_escape
+from html import escape as stdlib_escape
+
+test_strings = [
+    "Hello & World",
+    "<script>alert('xss')</script>",
+    "Quote's & \"doubles\"",
+    "Mixed <b>tags</b> & entities",
+    "Special chars: & < > ' \"",
+]
+
+print("\nTesting output equivalence:")
+for s in test_strings:
+    django_result = django_escape(s)
+    stdlib_result = stdlib_escape(s)
+    print(f"\nInput: {s}")
+    print(f"Django:  {django_result}")
+    print(f"Stdlib:  {stdlib_result}")
+    if django_result != stdlib_result:
+        print("*** DIFFERENCE DETECTED ***")
\ No newline at end of file
