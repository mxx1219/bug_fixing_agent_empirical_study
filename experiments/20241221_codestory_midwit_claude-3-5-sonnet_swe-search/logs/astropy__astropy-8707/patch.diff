diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 8c1ac5d738..564ac2cab8 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -547,13 +547,20 @@ class Card(_Verify):
     @classmethod
     def fromstring(cls, image):
         """
-        Construct a `Card` object from a (raw) string. It will pad the string
+        Construct a `Card` object from a (raw) string or bytes. It will pad the string
         if it is not the length of a card image (80 columns).  If the card
         image is longer than 80 columns, assume it contains ``CONTINUE``
         card(s).
+
+        Parameters
+        ----------
+        image : str or bytes
+            A string or bytes containing the card image.
         """
 
         card = cls()
+        if isinstance(image, bytes):
+            image = image.decode('ascii')
         card._image = _pad(image)
         card._verified = False
         return card
diff --git a/astropy/io/fits/header.py b/astropy/io/fits/header.py
index ad07e6d52d..5eb0f7b77e 100644
--- a/astropy/io/fits/header.py
+++ b/astropy/io/fits/header.py
@@ -329,15 +329,15 @@ class Header:
     @classmethod
     def fromstring(cls, data, sep=''):
         """
-        Creates an HDU header from a byte string containing the entire header
-        data.
+        Creates an HDU header from a byte string or unicode string containing 
+        the entire header data.
 
         Parameters
         ----------
-        data : str
-           String containing the entire header.
+        data : str or bytes
+           String or bytes containing the entire header.
 
-        sep : str, optional
+        sep : str or bytes, optional
             The string separating cards from each other, such as a newline.  By
             default there is no card separator (as is the case in a raw FITS
             file).
@@ -350,6 +350,12 @@ class Header:
 
         cards = []
 
+        # Convert bytes to str if necessary
+        if isinstance(data, bytes):
+            data = data.decode('ascii')
+        if isinstance(sep, bytes):
+            sep = sep.decode('ascii')
+
         # If the card separator contains characters that may validly appear in
         # a card, the only way to unambiguously distinguish between cards is to
         # require that they be Card.length long.  However, if the separator
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..e9e14b7bd8
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,19 @@
+from astropy.io.fits import Header
+
+# Create a bytes string that would be a valid FITS header
+header_bytes = b'SIMPLE  =                    T / file does conform to FITS standard             '
+
+try:
+    # This should work but currently raises an error
+    header = Header.fromstring(header_bytes)
+    print("Success! Header accepts bytes input")
+except Exception as e:
+    print(f"Error: {e}")
+
+# Show that it works with str
+header_str = 'SIMPLE  =                    T / file does conform to FITS standard             '
+try:
+    header = Header.fromstring(header_str)
+    print("Success! Header accepts str input")
+except Exception as e:
+    print(f"Error: {e}")
\ No newline at end of file
