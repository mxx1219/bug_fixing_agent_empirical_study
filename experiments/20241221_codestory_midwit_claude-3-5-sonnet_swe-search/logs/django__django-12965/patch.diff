diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 29e33c075f..7c8b5afd24 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -1423,8 +1423,15 @@ class SQLDeleteCompiler(SQLCompiler):
         Create the SQL for this query. Return the SQL string and list of
         parameters.
         """
-        if self.single_alias:
+        # If we're operating on a single table with no conditions,
+        # we can use a simple DELETE without a subquery
+        self.query.get_initial_alias()  # Ensure initial alias is set up
+        if (len(self.query.alias_map) == 1 and
+            not self.query.where.children and
+            not getattr(self.query, 'select_for_update', False)):
             return self._as_sql(self.query)
+            
+        # For all other cases, use a subquery to ensure we have the correct rows
         innerq = self.query.clone()
         innerq.__class__ = Query
         innerq.clear_select_clause()
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..f53baaf0d1
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,50 @@
+from django.db import models, connection
+from django.conf import settings
+from django.db.models.sql import DeleteQuery, Query
+from django.db.models import Q
+import os
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+)
+
+import django
+django.setup()
+
+# Create a test model
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    
+    class Meta:
+        app_label = 'testapp'
+
+def show_delete_sql(query, description):
+    """Show the SQL that would be generated for a delete operation"""
+    compiler = query.get_compiler(connection=connection)
+    sql, params = compiler.as_sql()
+    print(f"\nGenerated DELETE SQL for {description}:")
+    print(sql % tuple(params) if params else sql)
+
+print("\nTesting DELETE SQL generation...")
+
+# Test 1: Simple delete all
+query = DeleteQuery(TestModel)
+show_delete_sql(query, "simple delete all")
+
+# Test 2: Delete with where clause
+qs = TestModel.objects.filter(name='test')
+query = DeleteQuery(TestModel)
+query.where = qs.query.where
+show_delete_sql(query, "delete with where clause")
\ No newline at end of file
