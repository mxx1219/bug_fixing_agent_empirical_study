diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py
index 5289ef34a0..c36b5c6b1c 100644
--- a/django/template/defaultfilters.py
+++ b/django/template/defaultfilters.py
@@ -498,6 +498,17 @@ def safeseq(value):
     return [mark_safe(obj) for obj in value]
 
 
+@register.filter(is_safe=True)
+def escapeseq(value):
+    """
+    Escape each element in the sequence individually, after converting them to
+    strings. Return a list with the results. This is useful when the list items
+    need to be escaped before being joined or otherwise processed, particularly
+    when autoescape is off.
+    """
+    return [conditional_escape(obj) for obj in value]
+
+
 @register.filter(is_safe=True)
 @stringfilter
 def striptags(value):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..c55ba2005b
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,64 @@
+from django.template import Template, Context
+from django.conf import settings
+import django
+
+# Configure minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+    TEMPLATES=[{
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [],
+        },
+    }]
+)
+
+django.setup()
+
+def test_template(template_str, context_dict):
+    template = Template(template_str)
+    context = Context(context_dict)
+    return template.render(context)
+
+# Test cases
+test_cases = [
+    # Basic test with HTML special characters
+    {
+        'template': '{% autoescape off %}{{ some_list|escapeseq|join:", " }}{% endautoescape %}',
+        'context': {'some_list': ['<script>', '&special', '"quote"']},
+        'description': 'Basic test with HTML special characters (autoescape off)'
+    },
+    # Test with autoescape on
+    {
+        'template': '{{ some_list|escapeseq|join:", " }}',
+        'context': {'some_list': ['<script>', '&special', '"quote"']},
+        'description': 'Test with autoescape on'
+    },
+    # Test with mixed safe and unsafe content
+    {
+        'template': '{% autoescape off %}{{ some_list|escapeseq|join:", " }}{% endautoescape %}',
+        'context': {'some_list': ['<b>bold</b>', 'normal', '<i>italic</i>']},
+        'description': 'Test with mixed HTML content'
+    },
+    # Test with non-string objects
+    {
+        'template': '{% autoescape off %}{{ some_list|escapeseq|join:", " }}{% endautoescape %}',
+        'context': {'some_list': [42, '<script>', True]},
+        'description': 'Test with non-string objects'
+    }
+]
+
+# Run tests
+for test in test_cases:
+    print(f"\nRunning: {test['description']}")
+    try:
+        result = test_template(test['template'], test['context'])
+        print(f"Input: {test['context']['some_list']}")
+        print(f"Output: {result}")
+    except Exception as e:
+        print(f"Error: {str(e)}")
\ No newline at end of file
