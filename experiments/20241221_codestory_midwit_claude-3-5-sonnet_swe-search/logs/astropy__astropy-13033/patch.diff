diff --git a/astropy/timeseries/core.py b/astropy/timeseries/core.py
index c279f35f87..1f69cb391e 100644
--- a/astropy/timeseries/core.py
+++ b/astropy/timeseries/core.py
@@ -66,19 +66,24 @@ class BaseTimeSeries(QTable):
             else:
                 required_columns = self._required_columns
 
-            plural = 's' if len(required_columns) > 1 else ''
-
+            # First check if all required columns are present
+            missing_columns = [col for col in required_columns if col not in self.colnames]
+            if missing_columns:
+                plural = 's' if len(missing_columns) > 1 else ''
+                missing_str = "', '".join(missing_columns)
+                raise ValueError(f"{self.__class__.__name__} object is invalid - missing required column{plural}: '{missing_str}'")
+
+            # Then check if they are in the correct order
             if not self._required_columns_relax and len(self.colnames) == 0:
-
+                plural = 's' if len(required_columns) > 1 else ''
                 raise ValueError("{} object is invalid - expected '{}' "
                                  "as the first column{} but time series has no columns"
                                  .format(self.__class__.__name__, required_columns[0], plural))
 
             elif self.colnames[:len(required_columns)] != required_columns:
-
-                raise ValueError("{} object is invalid - expected '{}' "
-                                 "as the first column{} but found '{}'"
-                                 .format(self.__class__.__name__, required_columns[0], plural, self.colnames[0]))
+                plural = 's' if len(required_columns) > 1 else ''
+                raise ValueError("{} object is invalid - columns must be in order: '{}'"
+                                 .format(self.__class__.__name__, "', '".join(required_columns)))
 
             if (self._required_columns_relax
                     and self._required_columns == self.colnames[:len(self._required_columns)]):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..03d6e4d978
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+import numpy as np
+from astropy.time import Time
+from astropy.timeseries import TimeSeries
+
+time = Time(np.arange(100000, 100003), format='jd')
+ts = TimeSeries(time=time, data={"flux": [99.9, 99.8, 99.7]})
+ts._required_columns = ["time", "flux"]
+ts.remove_column("flux")
\ No newline at end of file
