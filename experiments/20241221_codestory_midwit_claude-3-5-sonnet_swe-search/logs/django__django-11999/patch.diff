diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index ee45bb941e..42d1e169d3 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -763,8 +763,11 @@ class Field(RegisterLookupMixin):
             if not getattr(cls, self.attname, None):
                 setattr(cls, self.attname, self.descriptor_class(self))
         if self.choices is not None:
-            setattr(cls, 'get_%s_display' % self.name,
-                    partialmethod(cls._get_FIELD_display, field=self))
+            display_method_name = 'get_%s_display' % self.name
+            # Only set the display method if it hasn't been explicitly defined
+            if not hasattr(cls, display_method_name):
+                setattr(cls, display_method_name,
+                        partialmethod(cls._get_FIELD_display, field=self))
 
     def get_filter_kwargs_for_object(self, obj):
         """
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..01bd63d2a3
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,40 @@
+from django.db import models
+from django.conf import settings
+import os
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+    DEFAULT_AUTO_FIELD='django.db.models.AutoField',
+)
+
+import django
+django.setup()
+
+class FooBar(models.Model):
+    class Meta:
+        app_label = 'testapp'
+        
+    foo_bar = models.CharField("foo", max_length=10, choices=[(1, 'foo'), (2, 'bar')])
+    
+    def __str__(self):
+        return self.get_foo_bar_display()
+    
+    def get_foo_bar_display(self):
+        return "something"
+
+# Create an instance and test
+instance = FooBar(foo_bar='1')
+print("Display value:", instance.__str__())
+print("Expected: 'something'")
\ No newline at end of file
