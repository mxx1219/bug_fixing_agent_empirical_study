diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py
index 01422066a6..a46c57cd53 100644
--- a/django/contrib/messages/storage/base.py
+++ b/django/contrib/messages/storage/base.py
@@ -38,7 +38,7 @@ class Message:
 
     @property
     def level_tag(self):
-        return LEVEL_TAGS.get(self.level, '')
+        return utils.get_level_tags().get(self.level, '')
 
 
 class BaseStorage:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..24c69fa83a
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,47 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+
+from django.conf import settings
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+        'django.contrib.messages',
+    ],
+)
+
+import django
+django.setup()
+
+from django.test import TestCase, override_settings
+from django.contrib.messages import constants
+from django.contrib.messages.storage.base import Message
+
+class MessageLevelTagTest(TestCase):
+    def test_level_tag_with_override_settings(self):
+        # Create a message with WARNING level
+        message = Message(level=constants.WARNING, message="Test message")
+        
+        # By default, WARNING level has tag 'warning'
+        self.assertEqual(message.level_tag, 'warning')
+        
+        # Override the MESSAGE_TAGS setting
+        with override_settings(MESSAGE_TAGS={constants.WARNING: 'custom_warning'}):
+            # This will fail because LEVEL_TAGS is not updated
+            self.assertEqual(message.level_tag, 'custom_warning')
+
+if __name__ == '__main__':
+    import django
+    django.setup()
+    
+    # Run the test
+    from django.test.runner import DiscoverRunner
+    test_runner = DiscoverRunner(verbosity=2)
+    test_runner.run_tests(['__main__'])
\ No newline at end of file
