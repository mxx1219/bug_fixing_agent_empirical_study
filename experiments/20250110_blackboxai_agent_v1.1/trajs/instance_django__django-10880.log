

TASK:


Query syntax error with condition and distinct combination
Description
	
A Count annotation containing both a Case condition and a distinct=True param produces a query error on Django 2.2 (whatever the db backend). A space is missing at least (... COUNT(DISTINCTCASE WHEN ...).



============================================================



ACTION:

THOUGHT: I'll help you implement the necessary changes following the steps you outlined. Let's start:

1. First, let's explore the repository structure:
CODE:
get_repo_structure("/workspace/django__django__3.0")

============================================================



OBSERVATION:

/workspace/django__django__3.0:
AUTHORS
CONTRIBUTING.rst
Django.egg-info
Gruntfile.js
INSTALL
LICENSE
LICENSE.python
MANIFEST.in
README.rst
django
docs
extras
js_tests
package.json
scripts
setup.cfg
setup.py
tests
tox.ini

/workspace/django__django__3.0/Django.egg-info:
PKG-INFO
SOURCES.txt
dependency_links.txt
entry_points.txt
not-zip-safe
requires.txt
top_level.txt

/workspace/django__django__3.0/django:
__init__.py
__main__.py
__pycache__
apps
bin
conf
contrib
core
db
dispatch
forms
http
middleware
shortcuts.py
template
templatetags
test
urls
utils
views

/workspace/django__django__3.0/django/__pycache__:
__init__.cpython-36.pyc

/workspace/django__django__3.0/django/apps:
__init__.py
config.py
registry.py

/workspace/django__django__3.0/django/bin:
django-admin.py

/workspace/django__django__3.0/django/conf:
__init__.py
app_template
global_settings.py
locale
project_template
urls

/workspace/django__django__3.0/django/conf/app_template:
__init__.py-tpl
admin.py-tpl
apps.py-tpl
migrations
models.py-tpl
tests.py-tpl
views.py-tpl

/workspace/django__django__3.0/django/conf/app_template/migrations:
__init__.py-tpl

/workspace/django__django__3.0/django/conf/locale:
__init__.py
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
de_CH
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_NI
es_PR
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/conf/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ar:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/az:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/bg:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/bn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/bs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ca:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/cs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/cy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/da:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/de_CH:
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/el:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/en:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/en_AU:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/en_GB:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/eo:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/es:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/es_AR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/es_CO:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/es_MX:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/es_NI:
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/es_PR:
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/et:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/eu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/fa:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/fi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/fy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ga:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/gd:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/gl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/he:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/hi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/hr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/hu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/id:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/is:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/it:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ja:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ka:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/km:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/kn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ko:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/lt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/lv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/mk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ml:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/mn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/nb:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/nl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/nn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/pl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/pt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/pt_BR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ro:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ru:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sq:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sr_Latn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ta:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/te:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/th:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/tr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/uk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/conf/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/vi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/zh_Hans:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/locale/zh_Hant:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/django/conf/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/conf/project_template:
manage.py-tpl
project_name

/workspace/django__django__3.0/django/conf/project_template/project_name:
__init__.py-tpl
settings.py-tpl
urls.py-tpl
wsgi.py-tpl

/workspace/django__django__3.0/django/conf/urls:
__init__.py
i18n.py
static.py

/workspace/django__django__3.0/django/contrib:
__init__.py
admin
admindocs
auth
contenttypes
flatpages
gis
humanize
messages
postgres
redirects
sessions
sitemaps
sites
staticfiles
syndication

/workspace/django__django__3.0/django/contrib/admin:
__init__.py
actions.py
apps.py
bin
checks.py
decorators.py
exceptions.py
filters.py
forms.py
helpers.py
locale
migrations
models.py
options.py
sites.py
static
templates
templatetags
tests.py
utils.py
views
widgets.py

/workspace/django__django__3.0/django/contrib/admin/bin:
compress.py

/workspace/django__django__3.0/django/contrib/admin/locale:
af
am
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/admin/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/af/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/am:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/am/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admin/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ar/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ast/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/az/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/be/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/bg/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/bn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/br/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/bs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ca/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/cs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/cy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/da/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/de/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/dsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/el/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/en/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/en_AU/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/en_GB/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/eo/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/es/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/es_AR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/es_CO/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/es_MX/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/es_VE/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/et/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/eu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/fa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/fi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/fr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/fy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ga/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/gd/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/gl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/he/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/hi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/hr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/hsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/hu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/hy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ia/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/id/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/io/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/is/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/it/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ja/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ka/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/kab/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/kk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/km/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/kn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ko/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/lb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/lt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/lv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/mk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ml/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/mn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/mr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/my/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/nb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ne/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/nl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/nn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/os/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/pa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/pl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/pt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/pt_BR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ro/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ru/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sq/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/sw/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ta/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/te/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/th/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/tr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/tt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/udm/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/uk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/ur/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/vi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admin/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.0/django/contrib/admin/migrations:
0001_initial.py
0002_logentry_remove_auto_add.py
0003_logentry_add_action_flag_choices.py
__init__.py

/workspace/django__django__3.0/django/contrib/admin/static:
admin

/workspace/django__django__3.0/django/contrib/admin/static/admin:
css
fonts
img
js

/workspace/django__django__3.0/django/contrib/admin/static/admin/css:
autocomplete.css
base.css
changelists.css
dashboard.css
fonts.css
forms.css
login.css
responsive.css
responsive_rtl.css
rtl.css
vendor
widgets.css

/workspace/django__django__3.0/django/contrib/admin/static/admin/css/vendor:
select2

/workspace/django__django__3.0/django/contrib/admin/static/admin/css/vendor/select2:
LICENSE-SELECT2.md
select2.css
select2.min.css

/workspace/django__django__3.0/django/contrib/admin/static/admin/fonts:
LICENSE.txt
README.txt
Roboto-Bold-webfont.woff
Roboto-Light-webfont.woff
Roboto-Regular-webfont.woff

/workspace/django__django__3.0/django/contrib/admin/static/admin/img:
LICENSE
README.txt
calendar-icons.svg
gis
icon-addlink.svg
icon-alert.svg
icon-calendar.svg
icon-changelink.svg
icon-clock.svg
icon-deletelink.svg
icon-no.svg
icon-unknown-alt.svg
icon-unknown.svg
icon-viewlink.svg
icon-yes.svg
inline-delete.svg
search.svg
selector-icons.svg
sorting-icons.svg
tooltag-add.svg
tooltag-arrowright.svg

/workspace/django__django__3.0/django/contrib/admin/static/admin/img/gis:
move_vertex_off.svg
move_vertex_on.svg

/workspace/django__django__3.0/django/contrib/admin/static/admin/js:
SelectBox.js
SelectFilter2.js
actions.js
actions.min.js
admin
autocomplete.js
calendar.js
cancel.js
change_form.js
collapse.js
collapse.min.js
core.js
inlines.js
inlines.min.js
jquery.init.js
popup_response.js
prepopulate.js
prepopulate.min.js
prepopulate_init.js
timeparse.js
urlify.js
vendor

/workspace/django__django__3.0/django/contrib/admin/static/admin/js/admin:
DateTimeShortcuts.js
RelatedObjectLookups.js

/workspace/django__django__3.0/django/contrib/admin/static/admin/js/vendor:
jquery
select2
xregexp

/workspace/django__django__3.0/django/contrib/admin/static/admin/js/vendor/jquery:
LICENSE.txt
jquery.js
jquery.min.js

/workspace/django__django__3.0/django/contrib/admin/static/admin/js/vendor/select2:
LICENSE.md
i18n
select2.full.js
select2.full.min.js

/workspace/django__django__3.0/django/contrib/admin/static/admin/js/vendor/select2/i18n:
ar.js
az.js
bg.js
ca.js
cs.js
da.js
de.js
el.js
en.js
es.js
et.js
eu.js
fa.js
fi.js
fr.js
gl.js
he.js
hi.js
hr.js
hu.js
id.js
is.js
it.js
ja.js
km.js
ko.js
lt.js
lv.js
mk.js
ms.js
nb.js
nl.js
pl.js
pt-BR.js
pt.js
ro.js
ru.js
sk.js
sr-Cyrl.js
sr.js
sv.js
th.js
tr.js
uk.js
vi.js
zh-CN.js
zh-TW.js

/workspace/django__django__3.0/django/contrib/admin/static/admin/js/vendor/xregexp:
LICENSE.txt
xregexp.js
xregexp.min.js

/workspace/django__django__3.0/django/contrib/admin/templates:
admin
registration

/workspace/django__django__3.0/django/contrib/admin/templates/admin:
404.html
500.html
actions.html
app_index.html
auth
base.html
base_site.html
change_form.html
change_form_object_tools.html
change_list.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
delete_confirmation.html
delete_selected_confirmation.html
edit_inline
filter.html
includes
index.html
invalid_setup.html
login.html
object_history.html
pagination.html
popup_response.html
prepopulated_fields_js.html
search_form.html
submit_line.html
widgets

/workspace/django__django__3.0/django/contrib/admin/templates/admin/auth:
user

/workspace/django__django__3.0/django/contrib/admin/templates/admin/auth/user:
add_form.html
change_password.html

/workspace/django__django__3.0/django/contrib/admin/templates/admin/edit_inline:
stacked.html
tabular.html

/workspace/django__django__3.0/django/contrib/admin/templates/admin/includes:
fieldset.html
object_delete_summary.html

/workspace/django__django__3.0/django/contrib/admin/templates/admin/widgets:
clearable_file_input.html
foreign_key_raw_id.html
many_to_many_raw_id.html
radio.html
related_widget_wrapper.html
split_datetime.html
url.html

/workspace/django__django__3.0/django/contrib/admin/templates/registration:
logged_out.html
password_change_done.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html

/workspace/django__django__3.0/django/contrib/admin/templatetags:
__init__.py
admin_list.py
admin_modify.py
admin_urls.py
base.py
log.py

/workspace/django__django__3.0/django/contrib/admin/views:
__init__.py
autocomplete.py
decorators.py
main.py

/workspace/django__django__3.0/django/contrib/admindocs:
__init__.py
apps.py
locale
middleware.py
templates
urls.py
utils.py
views.py

/workspace/django__django__3.0/django/contrib/admindocs/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/admindocs/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/admindocs/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/admindocs/templates:
admin_doc

/workspace/django__django__3.0/django/contrib/admindocs/templates/admin_doc:
bookmarklets.html
index.html
missing_docutils.html
model_detail.html
model_index.html
template_detail.html
template_filter_index.html
template_tag_index.html
view_detail.html
view_index.html

/workspace/django__django__3.0/django/contrib/auth:
__init__.py
admin.py
apps.py
backends.py
base_user.py
checks.py
common-passwords.txt.gz
context_processors.py
decorators.py
forms.py
handlers
hashers.py
locale
management
middleware.py
migrations
mixins.py
models.py
password_validation.py
signals.py
templates
tokens.py
urls.py
validators.py
views.py

/workspace/django__django__3.0/django/contrib/auth/handlers:
__init__.py
modwsgi.py

/workspace/django__django__3.0/django/contrib/auth/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/auth/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/auth/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/auth/management:
__init__.py
commands

/workspace/django__django__3.0/django/contrib/auth/management/commands:
changepassword.py
createsuperuser.py

/workspace/django__django__3.0/django/contrib/auth/migrations:
0001_initial.py
0002_alter_permission_name_max_length.py
0003_alter_user_email_max_length.py
0004_alter_user_username_opts.py
0005_alter_user_last_login_null.py
0006_require_contenttypes_0002.py
0007_alter_validators_add_error_messages.py
0008_alter_user_username_max_length.py
0009_alter_user_last_name_max_length.py
0010_alter_group_name_max_length.py
0011_update_proxy_permissions.py
__init__.py

/workspace/django__django__3.0/django/contrib/auth/templates:
auth
registration

/workspace/django__django__3.0/django/contrib/auth/templates/auth:
widgets

/workspace/django__django__3.0/django/contrib/auth/templates/auth/widgets:
read_only_password_hash.html

/workspace/django__django__3.0/django/contrib/auth/templates/registration:
password_reset_subject.txt

/workspace/django__django__3.0/django/contrib/contenttypes:
__init__.py
admin.py
apps.py
checks.py
fields.py
forms.py
locale
management
migrations
models.py
views.py

/workspace/django__django__3.0/django/contrib/contenttypes/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/contenttypes/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/contenttypes/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/contenttypes/management:
__init__.py
commands

/workspace/django__django__3.0/django/contrib/contenttypes/management/commands:
remove_stale_contenttypes.py

/workspace/django__django__3.0/django/contrib/contenttypes/migrations:
0001_initial.py
0002_remove_content_type_name.py
__init__.py

/workspace/django__django__3.0/django/contrib/flatpages:
__init__.py
admin.py
apps.py
forms.py
locale
middleware.py
migrations
models.py
sitemaps.py
templatetags
urls.py
views.py

/workspace/django__django__3.0/django/contrib/flatpages/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/flatpages/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/flatpages/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/flatpages/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/django/contrib/flatpages/templatetags:
__init__.py
flatpages.py

/workspace/django__django__3.0/django/contrib/gis:
__init__.py
admin
apps.py
db
feeds.py
forms
gdal
geoip2
geometry.py
geos
locale
management
measure.py
ptr.py
serializers
shortcuts.py
sitemaps
static
templates
utils
views.py

/workspace/django__django__3.0/django/contrib/gis/admin:
__init__.py
options.py
widgets.py

/workspace/django__django__3.0/django/contrib/gis/db:
__init__.py
backends
models

/workspace/django__django__3.0/django/contrib/gis/db/backends:
__init__.py
base
mysql
oracle
postgis
spatialite
utils.py

/workspace/django__django__3.0/django/contrib/gis/db/backends/base:
__init__.py
adapter.py
features.py
models.py
operations.py

/workspace/django__django__3.0/django/contrib/gis/db/backends/mysql:
__init__.py
base.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__3.0/django/contrib/gis/db/backends/oracle:
__init__.py
adapter.py
base.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__3.0/django/contrib/gis/db/backends/postgis:
__init__.py
adapter.py
base.py
const.py
features.py
introspection.py
models.py
operations.py
pgraster.py
schema.py

/workspace/django__django__3.0/django/contrib/gis/db/backends/spatialite:
__init__.py
adapter.py
base.py
client.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__3.0/django/contrib/gis/db/models:
__init__.py
aggregates.py
fields.py
functions.py
lookups.py
proxy.py
sql

/workspace/django__django__3.0/django/contrib/gis/db/models/sql:
__init__.py
conversion.py

/workspace/django__django__3.0/django/contrib/gis/forms:
__init__.py
fields.py
widgets.py

/workspace/django__django__3.0/django/contrib/gis/gdal:
LICENSE
__init__.py
base.py
datasource.py
driver.py
envelope.py
error.py
feature.py
field.py
geometries.py
geomtype.py
layer.py
libgdal.py
prototypes
raster
srs.py

/workspace/django__django__3.0/django/contrib/gis/gdal/prototypes:
__init__.py
ds.py
errcheck.py
generation.py
geom.py
raster.py
srs.py

/workspace/django__django__3.0/django/contrib/gis/gdal/raster:
__init__.py
band.py
base.py
const.py
source.py

/workspace/django__django__3.0/django/contrib/gis/geoip2:
__init__.py
base.py
resources.py

/workspace/django__django__3.0/django/contrib/gis/geos:
LICENSE
__init__.py
base.py
collections.py
coordseq.py
error.py
factory.py
geometry.py
io.py
libgeos.py
linestring.py
mutable_list.py
point.py
polygon.py
prepared.py
prototypes

/workspace/django__django__3.0/django/contrib/gis/geos/prototypes:
__init__.py
coordseq.py
errcheck.py
geom.py
io.py
misc.py
predicates.py
prepared.py
threadsafe.py
topology.py

/workspace/django__django__3.0/django/contrib/gis/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/gis/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/gis/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/gis/management:
commands

/workspace/django__django__3.0/django/contrib/gis/management/commands:
inspectdb.py
ogrinspect.py

/workspace/django__django__3.0/django/contrib/gis/serializers:
__init__.py
geojson.py

/workspace/django__django__3.0/django/contrib/gis/sitemaps:
__init__.py
kml.py
views.py

/workspace/django__django__3.0/django/contrib/gis/static:
gis

/workspace/django__django__3.0/django/contrib/gis/static/gis:
css
img
js

/workspace/django__django__3.0/django/contrib/gis/static/gis/css:
ol3.css

/workspace/django__django__3.0/django/contrib/gis/static/gis/img:
draw_line_off.svg
draw_line_on.svg
draw_point_off.svg
draw_point_on.svg
draw_polygon_off.svg
draw_polygon_on.svg

/workspace/django__django__3.0/django/contrib/gis/static/gis/js:
OLMapWidget.js

/workspace/django__django__3.0/django/contrib/gis/templates:
gis

/workspace/django__django__3.0/django/contrib/gis/templates/gis:
admin
kml
openlayers-osm.html
openlayers.html

/workspace/django__django__3.0/django/contrib/gis/templates/gis/admin:
openlayers.html
openlayers.js
osm.html
osm.js

/workspace/django__django__3.0/django/contrib/gis/templates/gis/kml:
base.kml
placemarks.kml

/workspace/django__django__3.0/django/contrib/gis/utils:
__init__.py
layermapping.py
ogrinfo.py
ogrinspect.py
srs.py

/workspace/django__django__3.0/django/contrib/humanize:
__init__.py
apps.py
locale
templatetags

/workspace/django__django__3.0/django/contrib/humanize/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/humanize/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/humanize/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/humanize/templatetags:
__init__.py
humanize.py

/workspace/django__django__3.0/django/contrib/messages:
__init__.py
api.py
apps.py
constants.py
context_processors.py
middleware.py
storage
utils.py
views.py

/workspace/django__django__3.0/django/contrib/messages/storage:
__init__.py
base.py
cookie.py
fallback.py
session.py

/workspace/django__django__3.0/django/contrib/postgres:
__init__.py
aggregates
apps.py
fields
forms
functions.py
indexes.py
jinja2
locale
lookups.py
operations.py
search.py
serializers.py
signals.py
templates
utils.py
validators.py

/workspace/django__django__3.0/django/contrib/postgres/aggregates:
__init__.py
general.py
mixins.py
statistics.py

/workspace/django__django__3.0/django/contrib/postgres/fields:
__init__.py
array.py
citext.py
hstore.py
jsonb.py
mixins.py
ranges.py
utils.py

/workspace/django__django__3.0/django/contrib/postgres/forms:
__init__.py
array.py
hstore.py
jsonb.py
ranges.py

/workspace/django__django__3.0/django/contrib/postgres/jinja2:
postgres

/workspace/django__django__3.0/django/contrib/postgres/jinja2/postgres:
widgets

/workspace/django__django__3.0/django/contrib/postgres/jinja2/postgres/widgets:
split_array.html

/workspace/django__django__3.0/django/contrib/postgres/locale:
ar
az
be
bg
ca
cs
da
de
dsb
el
en
eo
es
es_AR
es_CO
es_MX
et
eu
fa
fi
fr
gd
gl
he
hr
hsb
hu
hy
ia
id
is
it
ja
ka
kk
ko
lt
lv
mk
mn
nb
ne
nl
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sv
tr
uk
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/postgres/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/postgres/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/postgres/templates:
postgres

/workspace/django__django__3.0/django/contrib/postgres/templates/postgres:
widgets

/workspace/django__django__3.0/django/contrib/postgres/templates/postgres/widgets:
split_array.html

/workspace/django__django__3.0/django/contrib/redirects:
__init__.py
admin.py
apps.py
locale
middleware.py
migrations
models.py

/workspace/django__django__3.0/django/contrib/redirects/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/redirects/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/uz:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/redirects/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/redirects/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/django/contrib/sessions:
__init__.py
apps.py
backends
base_session.py
exceptions.py
locale
management
middleware.py
migrations
models.py
serializers.py

/workspace/django__django__3.0/django/contrib/sessions/backends:
__init__.py
base.py
cache.py
cached_db.py
db.py
file.py
signed_cookies.py

/workspace/django__django__3.0/django/contrib/sessions/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/sessions/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/uz:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sessions/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sessions/management:
commands

/workspace/django__django__3.0/django/contrib/sessions/management/commands:
clearsessions.py

/workspace/django__django__3.0/django/contrib/sessions/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/django/contrib/sitemaps:
__init__.py
apps.py
management
templates
views.py

/workspace/django__django__3.0/django/contrib/sitemaps/management:
commands

/workspace/django__django__3.0/django/contrib/sitemaps/management/commands:
ping_google.py

/workspace/django__django__3.0/django/contrib/sitemaps/templates:
sitemap.xml
sitemap_index.xml

/workspace/django__django__3.0/django/contrib/sites:
__init__.py
admin.py
apps.py
locale
management.py
managers.py
middleware.py
migrations
models.py
requests.py
shortcuts.py

/workspace/django__django__3.0/django/contrib/sites/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__3.0/django/contrib/sites/locale/af:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ar:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ast:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/az:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/be:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/bg:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/bn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/br:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/bs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ca:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/cs:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/cy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/da:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/el:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/eo:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/et:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/eu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/fa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/fi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/fy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ga:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/gd:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/gl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/he:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/hi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/hu:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/hy:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ia:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/id:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/io:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/is:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/it:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ka:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/kab:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/kk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/km:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/kn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/lb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/lt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/lv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/mk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ml:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/mn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/mr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/my:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/nb:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ne:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/nn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/os:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/pa:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/pl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ro:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sl:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sq:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sv:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/sw:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ta:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/te:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/th:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/tr:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/tt:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/udm:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/uk:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/ur:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/uz:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/vi:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.0/django/contrib/sites/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/django/contrib/sites/migrations:
0001_initial.py
0002_alter_domain_unique.py
__init__.py

/workspace/django__django__3.0/django/contrib/staticfiles:
__init__.py
apps.py
checks.py
finders.py
handlers.py
management
storage.py
testing.py
urls.py
utils.py
views.py

/workspace/django__django__3.0/django/contrib/staticfiles/management:
commands

/workspace/django__django__3.0/django/contrib/staticfiles/management/commands:
collectstatic.py
findstatic.py
runserver.py

/workspace/django__django__3.0/django/contrib/syndication:
__init__.py
apps.py
views.py

/workspace/django__django__3.0/django/core:
__init__.py
cache
checks
exceptions.py
files
handlers
mail
management
paginator.py
serializers
servers
signals.py
signing.py
validators.py
wsgi.py

/workspace/django__django__3.0/django/core/cache:
__init__.py
backends
utils.py

/workspace/django__django__3.0/django/core/cache/backends:
__init__.py
base.py
db.py
dummy.py
filebased.py
locmem.py
memcached.py

/workspace/django__django__3.0/django/core/checks:
__init__.py
caches.py
compatibility
database.py
messages.py
model_checks.py
registry.py
security
templates.py
translation.py
urls.py

/workspace/django__django__3.0/django/core/checks/compatibility:
__init__.py

/workspace/django__django__3.0/django/core/checks/security:
__init__.py
base.py
csrf.py
sessions.py

/workspace/django__django__3.0/django/core/files:
__init__.py
base.py
images.py
locks.py
move.py
storage.py
temp.py
uploadedfile.py
uploadhandler.py
utils.py

/workspace/django__django__3.0/django/core/handlers:
__init__.py
base.py
exception.py
wsgi.py

/workspace/django__django__3.0/django/core/mail:
__init__.py
backends
message.py
utils.py

/workspace/django__django__3.0/django/core/mail/backends:
__init__.py
base.py
console.py
dummy.py
filebased.py
locmem.py
smtp.py

/workspace/django__django__3.0/django/core/management:
__init__.py
base.py
color.py
commands
sql.py
templates.py
utils.py

/workspace/django__django__3.0/django/core/management/commands:
check.py
compilemessages.py
createcachetable.py
dbshell.py
diffsettings.py
dumpdata.py
flush.py
inspectdb.py
loaddata.py
makemessages.py
makemigrations.py
migrate.py
runserver.py
sendtestemail.py
shell.py
showmigrations.py
sqlflush.py
sqlmigrate.py
sqlsequencereset.py
squashmigrations.py
startapp.py
startproject.py
test.py
testserver.py

/workspace/django__django__3.0/django/core/serializers:
__init__.py
base.py
json.py
python.py
pyyaml.py
xml_serializer.py

/workspace/django__django__3.0/django/core/servers:
__init__.py
basehttp.py

/workspace/django__django__3.0/django/db:
__init__.py
backends
migrations
models
transaction.py
utils.py

/workspace/django__django__3.0/django/db/backends:
__init__.py
base
ddl_references.py
dummy
mysql
oracle
postgresql
signals.py
sqlite3
utils.py

/workspace/django__django__3.0/django/db/backends/base:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__3.0/django/db/backends/dummy:
__init__.py
base.py
features.py

/workspace/django__django__3.0/django/db/backends/mysql:
__init__.py
base.py
client.py
compiler.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__3.0/django/db/backends/oracle:
__init__.py
base.py
client.py
compiler.py
creation.py
features.py
functions.py
introspection.py
operations.py
schema.py
utils.py
validation.py

/workspace/django__django__3.0/django/db/backends/postgresql:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py
utils.py

/workspace/django__django__3.0/django/db/backends/sqlite3:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__3.0/django/db/migrations:
__init__.py
autodetector.py
exceptions.py
executor.py
graph.py
loader.py
migration.py
operations
optimizer.py
questioner.py
recorder.py
serializer.py
state.py
topological_sort.py
utils.py
writer.py

/workspace/django__django__3.0/django/db/migrations/operations:
__init__.py
base.py
fields.py
models.py
special.py
utils.py

/workspace/django__django__3.0/django/db/models:
__init__.py
aggregates.py
base.py
constants.py
constraints.py
deletion.py
expressions.py
fields
functions
indexes.py
lookups.py
manager.py
options.py
query.py
query_utils.py
signals.py
sql
utils.py

/workspace/django__django__3.0/django/db/models/fields:
__init__.py
files.py
mixins.py
proxy.py
related.py
related_descriptors.py
related_lookups.py
reverse_related.py

/workspace/django__django__3.0/django/db/models/functions:
__init__.py
comparison.py
datetime.py
math.py
mixins.py
text.py
window.py

/workspace/django__django__3.0/django/db/models/sql:
__init__.py
compiler.py
constants.py
datastructures.py
query.py
subqueries.py
where.py

/workspace/django__django__3.0/django/dispatch:
__init__.py
dispatcher.py
license.txt

/workspace/django__django__3.0/django/forms:
__init__.py
boundfield.py
fields.py
forms.py
formsets.py
jinja2
models.py
renderers.py
templates
utils.py
widgets.py

/workspace/django__django__3.0/django/forms/jinja2:
django

/workspace/django__django__3.0/django/forms/jinja2/django:
forms

/workspace/django__django__3.0/django/forms/jinja2/django/forms:
widgets

/workspace/django__django__3.0/django/forms/jinja2/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__3.0/django/forms/templates:
django

/workspace/django__django__3.0/django/forms/templates/django:
forms

/workspace/django__django__3.0/django/forms/templates/django/forms:
widgets

/workspace/django__django__3.0/django/forms/templates/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__3.0/django/http:
__init__.py
cookie.py
multipartparser.py
request.py
response.py

/workspace/django__django__3.0/django/middleware:
__init__.py
cache.py
clickjacking.py
common.py
csrf.py
gzip.py
http.py
locale.py
security.py

/workspace/django__django__3.0/django/template:
__init__.py
backends
base.py
context.py
context_processors.py
defaultfilters.py
defaulttags.py
engine.py
exceptions.py
library.py
loader.py
loader_tags.py
loaders
response.py
smartif.py
utils.py

/workspace/django__django__3.0/django/template/backends:
__init__.py
base.py
django.py
dummy.py
jinja2.py
utils.py

/workspace/django__django__3.0/django/template/loaders:
__init__.py
app_directories.py
base.py
cached.py
filesystem.py
locmem.py

/workspace/django__django__3.0/django/templatetags:
__init__.py
cache.py
i18n.py
l10n.py
static.py
tz.py

/workspace/django__django__3.0/django/test:
__init__.py
client.py
html.py
runner.py
selenium.py
signals.py
testcases.py
utils.py

/workspace/django__django__3.0/django/urls:
__init__.py
base.py
conf.py
converters.py
exceptions.py
resolvers.py
utils.py

/workspace/django__django__3.0/django/utils:
__init__.py
__pycache__
_os.py
archive.py
autoreload.py
baseconv.py
cache.py
crypto.py
datastructures.py
dateformat.py
dateparse.py
dates.py
datetime_safe.py
deconstruct.py
decorators.py
deprecation.py
duration.py
encoding.py
feedgenerator.py
formats.py
functional.py
hashable.py
html.py
http.py
inspect.py
ipv6.py
itercompat.py
jslex.py
log.py
lorem_ipsum.py
lru_cache.py
module_loading.py
numberformat.py
regex_helper.py
safestring.py
six.py
termcolors.py
text.py
timesince.py
timezone.py
translation
tree.py
version.py
xmlutils.py

/workspace/django__django__3.0/django/utils/__pycache__:
__init__.cpython-36.pyc
version.cpython-36.pyc

/workspace/django__django__3.0/django/utils/translation:
__init__.py
reloader.py
template.py
trans_null.py
trans_real.py

/workspace/django__django__3.0/django/views:
__init__.py
csrf.py
debug.py
decorators
defaults.py
generic
i18n.py
static.py
templates

/workspace/django__django__3.0/django/views/decorators:
__init__.py
cache.py
clickjacking.py
csrf.py
debug.py
gzip.py
http.py
vary.py

/workspace/django__django__3.0/django/views/generic:
__init__.py
base.py
dates.py
detail.py
edit.py
list.py

/workspace/django__django__3.0/django/views/templates:
default_urlconf.html
technical_404.html
technical_500.html
technical_500.txt

/workspace/django__django__3.0/docs:
Makefile
README
_ext
_theme
conf.py
contents.txt
faq
glossary.txt
howto
index.txt
internals
intro
make.bat
man
misc
ref
releases
spelling_wordlist
topics

/workspace/django__django__3.0/docs/_ext:
djangodocs.py

/workspace/django__django__3.0/docs/_theme:
djangodocs
djangodocs-epub

/workspace/django__django__3.0/docs/_theme/djangodocs:
genindex.html
layout.html
modindex.html
search.html
static
theme.conf

/workspace/django__django__3.0/docs/_theme/djangodocs/static:
console-tabs.css
default.css
djangodocs.css
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
fontawesome
homepage.css
reset-fonts-grids.css

/workspace/django__django__3.0/docs/_theme/djangodocs/static/fontawesome:
LICENSE.txt
README.md
css
webfonts

/workspace/django__django__3.0/docs/_theme/djangodocs/static/fontawesome/css:
fa-brands.min.css

/workspace/django__django__3.0/docs/_theme/djangodocs/static/fontawesome/webfonts:
fa-brands-400.eot
fa-brands-400.svg
fa-brands-400.ttf
fa-brands-400.woff
fa-brands-400.woff2

/workspace/django__django__3.0/docs/_theme/djangodocs-epub:
epub-cover.html
static
theme.conf

/workspace/django__django__3.0/docs/_theme/djangodocs-epub/static:
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
epub.css

/workspace/django__django__3.0/docs/faq:
admin.txt
contributing.txt
general.txt
help.txt
index.txt
install.txt
models.txt
troubleshooting.txt
usage.txt

/workspace/django__django__3.0/docs/howto:
auth-remote-user.txt
custom-file-storage.txt
custom-lookups.txt
custom-management-commands.txt
custom-model-fields.txt
custom-template-tags.txt
deployment
error-reporting.txt
index.txt
initial-data.txt
jython.txt
legacy-databases.txt
outputting-csv.txt
outputting-pdf.txt
overriding-templates.txt
static-files
upgrade-version.txt
windows.txt
writing-migrations.txt

/workspace/django__django__3.0/docs/howto/deployment:
checklist.txt
index.txt
wsgi

/workspace/django__django__3.0/docs/howto/deployment/wsgi:
apache-auth.txt
gunicorn.txt
index.txt
modwsgi.txt
uwsgi.txt

/workspace/django__django__3.0/docs/howto/static-files:
deployment.txt
index.txt

/workspace/django__django__3.0/docs/internals:
_images
contributing
deprecation.txt
git.txt
howto-release-django.txt
index.txt
mailing-lists.txt
organization.txt
release-process.txt
security.txt

/workspace/django__django__3.0/docs/internals/_images:
triage_process.graffle
triage_process.pdf
triage_process.svg

/workspace/django__django__3.0/docs/internals/contributing:
bugs-and-features.txt
committing-code.txt
index.txt
localizing.txt
new-contributors.txt
triaging-tickets.txt
writing-code
writing-documentation.txt

/workspace/django__django__3.0/docs/internals/contributing/writing-code:
coding-style.txt
index.txt
javascript.txt
submitting-patches.txt
unit-tests.txt
working-with-git.txt

/workspace/django__django__3.0/docs/intro:
_images
contributing.txt
index.txt
install.txt
overview.txt
reusable-apps.txt
tutorial01.txt
tutorial02.txt
tutorial03.txt
tutorial04.txt
tutorial05.txt
tutorial06.txt
tutorial07.txt
whatsnext.txt

/workspace/django__django__3.0/docs/intro/_images:
admin01.png
admin02.png
admin03t.png
admin04t.png
admin05t.png
admin06t.png
admin07.png
admin08t.png
admin09.png
admin10t.png
admin11t.png
admin12t.png
admin13t.png
admin14t.png

/workspace/django__django__3.0/docs/man:
django-admin.1

/workspace/django__django__3.0/docs/misc:
api-stability.txt
design-philosophies.txt
distributions.txt
index.txt

/workspace/django__django__3.0/docs/ref:
applications.txt
checks.txt
class-based-views
clickjacking.txt
contrib
csrf.txt
databases.txt
django-admin.txt
exceptions.txt
files
forms
index.txt
middleware.txt
migration-operations.txt
models
request-response.txt
schema-editor.txt
settings.txt
signals.txt
template-response.txt
templates
unicode.txt
urlresolvers.txt
urls.txt
utils.txt
validators.txt
views.txt

/workspace/django__django__3.0/docs/ref/class-based-views:
base.txt
flattened-index.txt
generic-date-based.txt
generic-display.txt
generic-editing.txt
index.txt
mixins-date-based.txt
mixins-editing.txt
mixins-multiple-object.txt
mixins-simple.txt
mixins-single-object.txt
mixins.txt

/workspace/django__django__3.0/docs/ref/contrib:
admin
auth.txt
contenttypes.txt
flatpages.txt
gis
humanize.txt
index.txt
messages.txt
postgres
redirects.txt
sitemaps.txt
sites.txt
staticfiles.txt
syndication.txt

/workspace/django__django__3.0/docs/ref/contrib/admin:
_images
actions.txt
admindocs.txt
index.txt
javascript.txt

/workspace/django__django__3.0/docs/ref/contrib/admin/_images:
actions-as-modeladmin-methods.png
adding-actions-to-the-modeladmin.png
admin-actions.png
fieldsets.png
list_filter.png
raw_id_fields.png

/workspace/django__django__3.0/docs/ref/contrib/gis:
admin.txt
commands.txt
db-api.txt
deployment.txt
feeds.txt
forms-api.txt
functions.txt
gdal.txt
geoip2.txt
geoquerysets.txt
geos.txt
index.txt
install
layermapping.txt
measure.txt
model-api.txt
ogrinspect.txt
serializers.txt
sitemaps.txt
testing.txt
tutorial.txt
utils.txt

/workspace/django__django__3.0/docs/ref/contrib/gis/install:
geolibs.txt
index.txt
postgis.txt
spatialite.txt

/workspace/django__django__3.0/docs/ref/contrib/postgres:
aggregates.txt
fields.txt
forms.txt
functions.txt
index.txt
indexes.txt
lookups.txt
operations.txt
search.txt
validators.txt

/workspace/django__django__3.0/docs/ref/files:
file.txt
index.txt
storage.txt
uploads.txt

/workspace/django__django__3.0/docs/ref/forms:
api.txt
fields.txt
formsets.txt
index.txt
models.txt
renderers.txt
validation.txt
widgets.txt

/workspace/django__django__3.0/docs/ref/models:
class.txt
conditional-expressions.txt
constraints.txt
database-functions.txt
expressions.txt
fields.txt
index.txt
indexes.txt
instances.txt
lookups.txt
meta.txt
options.txt
querysets.txt
relations.txt

/workspace/django__django__3.0/docs/ref/templates:
api.txt
builtins.txt
index.txt
language.txt

/workspace/django__django__3.0/docs/releases:
0.95.txt
0.96.txt
1.0-porting-guide.txt
1.0.1.txt
1.0.2.txt
1.0.txt
1.1.2.txt
1.1.3.txt
1.1.4.txt
1.1.txt
1.10.1.txt
1.10.2.txt
1.10.3.txt
1.10.4.txt
1.10.5.txt
1.10.6.txt
1.10.7.txt
1.10.8.txt
1.10.txt
1.11.1.txt
1.11.10.txt
1.11.11.txt
1.11.12.txt
1.11.13.txt
1.11.14.txt
1.11.15.txt
1.11.16.txt
1.11.17.txt
1.11.18.txt
1.11.2.txt
1.11.3.txt
1.11.4.txt
1.11.5.txt
1.11.6.txt
1.11.7.txt
1.11.8.txt
1.11.9.txt
1.11.txt
1.2.1.txt
1.2.2.txt
1.2.3.txt
1.2.4.txt
1.2.5.txt
1.2.6.txt
1.2.7.txt
1.2.txt
1.3.1.txt
1.3.2.txt
1.3.3.txt
1.3.4.txt
1.3.5.txt
1.3.6.txt
1.3.7.txt
1.3.txt
1.4.1.txt
1.4.10.txt
1.4.11.txt
1.4.12.txt
1.4.13.txt
1.4.14.txt
1.4.15.txt
1.4.16.txt
1.4.17.txt
1.4.18.txt
1.4.19.txt
1.4.2.txt
1.4.20.txt
1.4.21.txt
1.4.22.txt
1.4.3.txt
1.4.4.txt
1.4.5.txt
1.4.6.txt
1.4.7.txt
1.4.8.txt
1.4.9.txt
1.4.txt
1.5.1.txt
1.5.10.txt
1.5.11.txt
1.5.12.txt
1.5.2.txt
1.5.3.txt
1.5.4.txt
1.5.5.txt
1.5.6.txt
1.5.7.txt
1.5.8.txt
1.5.9.txt
1.5.txt
1.6.1.txt
1.6.10.txt
1.6.11.txt
1.6.2.txt
1.6.3.txt
1.6.4.txt
1.6.5.txt
1.6.6.txt
1.6.7.txt
1.6.8.txt
1.6.9.txt
1.6.txt
1.7.1.txt
1.7.10.txt
1.7.11.txt
1.7.2.txt
1.7.3.txt
1.7.4.txt
1.7.5.txt
1.7.6.txt
1.7.7.txt
1.7.8.txt
1.7.9.txt
1.7.txt
1.8.1.txt
1.8.10.txt
1.8.11.txt
1.8.12.txt
1.8.13.txt
1.8.14.txt
1.8.15.txt
1.8.16.txt
1.8.17.txt
1.8.18.txt
1.8.19.txt
1.8.2.txt
1.8.3.txt
1.8.4.txt
1.8.5.txt
1.8.6.txt
1.8.7.txt
1.8.8.txt
1.8.9.txt
1.8.txt
1.9.1.txt
1.9.10.txt
1.9.11.txt
1.9.12.txt
1.9.13.txt
1.9.2.txt
1.9.3.txt
1.9.4.txt
1.9.5.txt
1.9.6.txt
1.9.7.txt
1.9.8.txt
1.9.9.txt
1.9.txt
2.0.1.txt
2.0.10.txt
2.0.2.txt
2.0.3.txt
2.0.4.txt
2.0.5.txt
2.0.6.txt
2.0.7.txt
2.0.8.txt
2.0.9.txt
2.0.txt
2.1.1.txt
2.1.2.txt
2.1.3.txt
2.1.4.txt
2.1.5.txt
2.1.6.txt
2.1.txt
2.2.txt
3.0.txt
index.txt
security.txt

/workspace/django__django__3.0/docs/topics:
_images
auth
cache.txt
checks.txt
class-based-views
conditional-view-processing.txt
db
email.txt
external-packages.txt
files.txt
forms
http
i18n
index.txt
install.txt
logging.txt
migrations.txt
pagination.txt
performance.txt
security.txt
serialization.txt
settings.txt
signals.txt
signing.txt
templates.txt
testing

/workspace/django__django__3.0/docs/topics/_images:
postmortem.png
template-lines.png

/workspace/django__django__3.0/docs/topics/auth:
customizing.txt
default.txt
index.txt
passwords.txt

/workspace/django__django__3.0/docs/topics/class-based-views:
generic-display.txt
generic-editing.txt
index.txt
intro.txt
mixins.txt

/workspace/django__django__3.0/docs/topics/db:
aggregation.txt
examples
index.txt
instrumentation.txt
managers.txt
models.txt
multi-db.txt
optimization.txt
queries.txt
search.txt
sql.txt
tablespaces.txt
transactions.txt

/workspace/django__django__3.0/docs/topics/db/examples:
index.txt
many_to_many.txt
many_to_one.txt
one_to_one.txt

/workspace/django__django__3.0/docs/topics/forms:
formsets.txt
index.txt
media.txt
modelforms.txt

/workspace/django__django__3.0/docs/topics/http:
_images
decorators.txt
file-uploads.txt
generic-views.txt
index.txt
middleware.txt
sessions.txt
shortcuts.txt
urls.txt
views.txt

/workspace/django__django__3.0/docs/topics/http/_images:
middleware.pdf

/workspace/django__django__3.0/docs/topics/i18n:
formatting.txt
index.txt
timezones.txt
translation.txt

/workspace/django__django__3.0/docs/topics/testing:
_images
advanced.txt
index.txt
overview.txt
tools.txt

/workspace/django__django__3.0/docs/topics/testing/_images:
django_unittest_classes_hierarchy.graffle
django_unittest_classes_hierarchy.pdf
django_unittest_classes_hierarchy.svg

/workspace/django__django__3.0/extras:
Makefile
README.TXT
django_bash_completion

/workspace/django__django__3.0/js_tests:
admin
gis
qunit
tests.html

/workspace/django__django__3.0/js_tests/admin:
DateTimeShortcuts.test.js
RelatedObjectLookups.test.js
SelectBox.test.js
SelectFilter2.test.js
URLify.test.js
actions.test.js
core.test.js
inlines.test.js
jsi18n-mocks.test.js
timeparse.test.js

/workspace/django__django__3.0/js_tests/gis:
mapwidget.test.js

/workspace/django__django__3.0/js_tests/qunit:
qunit.css
qunit.js

/workspace/django__django__3.0/scripts:
manage_translations.py
rpm-install.sh

/workspace/django__django__3.0/tests:
README.rst
absolute_url_overrides
admin_autodiscover
admin_changelist
admin_checks
admin_custom_urls
admin_default_site
admin_docs
admin_filters
admin_inlines
admin_ordering
admin_registration
admin_scripts
admin_utils
admin_views
admin_widgets
aggregation
aggregation_regress
annotations
app_loading
apps
auth_tests
backends
base
bash_completion
basic
builtin_server
bulk_create
cache
check_framework
choices
conditional_processing
constraints
contenttypes_tests
context_processors
csrf_tests
custom_columns
custom_lookups
custom_managers
custom_methods
custom_migration_operations
custom_pk
datatypes
dates
datetimes
db_functions
db_typecasts
db_utils
dbshell
decorators
defer
defer_regress
delete
delete_regress
deprecation
dispatch
distinct_on_fields
empty
expressions
expressions_case
expressions_window
extra_regress
field_deconstruction
field_defaults
field_subclassing
file_storage
file_uploads
files
filtered_relation
fixtures
fixtures_model_package
fixtures_regress
flatpages_tests
force_insert_update
foreign_object
forms_tests
from_db_value
generic_inline_admin
generic_relations
generic_relations_regress
generic_views
get_earliest_or_latest
get_object_or_404
get_or_create
gis_tests
handlers
httpwrappers
humanize_tests
i18n
import_error_package
indexes
inline_formsets
inspectdb
introspection
invalid_models_tests
known_related_objects
logging_tests
lookup
m2m_and_m2o
m2m_intermediary
m2m_multiple
m2m_recursive
m2m_regress
m2m_signals
m2m_through
m2m_through_regress
m2o_recursive
mail
managers_regress
many_to_many
many_to_one
many_to_one_null
max_lengths
messages_tests
middleware
middleware_exceptions
migrate_signals
migration_test_data_persistence
migrations
migrations2
model_fields
model_forms
model_formsets
model_formsets_regress
model_indexes
model_inheritance
model_inheritance_regress
model_meta
model_options
model_package
model_regress
modeladmin
multiple_database
mutually_referential
nested_foreign_keys
no_models
null_fk
null_fk_ordering
null_queries
one_to_one
or_lookups
order_with_respect_to
ordering
pagination
postgres_tests
prefetch_related
project_template
properties
proxy_model_inheritance
proxy_models
queries
queryset_pickle
raw_query
redirects_tests
requests
requirements
reserved_names
resolve_url
responses
reverse_lookup
runtests.py
save_delete_hooks
schema
select_for_update
select_related
select_related_onetoone
select_related_regress
serializers
servers
sessions_tests
settings_tests
shell
shortcuts
signals
signed_cookies_tests
signing
sitemaps_tests
sites_framework
sites_tests
staticfiles_tests
str
string_lookup
swappable_models
syndication_tests
template_backends
template_loader
template_tests
templates
test_client
test_client_regress
test_exceptions
test_runner
test_runner_apps
test_sqlite.py
test_utils
timezones
transaction_hooks
transactions
unmanaged_models
update
update_only_fields
urlpatterns
urlpatterns_reverse
urls.py
user_commands
utils_tests
validation
validators
version
view_tests
wsgi

/workspace/django__django__3.0/tests/absolute_url_overrides:
__init__.py
tests.py

/workspace/django__django__3.0/tests/admin_autodiscover:
__init__.py
admin.py
models.py
tests.py

/workspace/django__django__3.0/tests/admin_changelist:
__init__.py
admin.py
models.py
test_date_hierarchy.py
tests.py
urls.py

/workspace/django__django__3.0/tests/admin_checks:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/admin_custom_urls:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/admin_default_site:
__init__.py
apps.py
sites.py
tests.py

/workspace/django__django__3.0/tests/admin_docs:
__init__.py
evilfile.txt
models.py
namespace_urls.py
test_middleware.py
test_utils.py
test_views.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/admin_filters:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/admin_inlines:
__init__.py
admin.py
models.py
test_templates.py
tests.py
urls.py

/workspace/django__django__3.0/tests/admin_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/admin_registration:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/admin_scripts:
__init__.py
another_app_waiting_migration
app_raising_messages
app_raising_warning
app_waiting_migration
app_with_import
broken_app
complex_app
configured_settings_manage.py
custom_templates
management
simple_app
tests.py
urls.py

/workspace/django__django__3.0/tests/admin_scripts/another_app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/admin_scripts/another_app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/admin_scripts/app_raising_messages:
__init__.py
models.py

/workspace/django__django__3.0/tests/admin_scripts/app_raising_warning:
__init__.py
models.py

/workspace/django__django__3.0/tests/admin_scripts/app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/admin_scripts/app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/admin_scripts/app_with_import:
__init__.py
models.py

/workspace/django__django__3.0/tests/admin_scripts/broken_app:
__init__.py
models.py

/workspace/django__django__3.0/tests/admin_scripts/complex_app:
__init__.py
admin
management
models

/workspace/django__django__3.0/tests/admin_scripts/complex_app/admin:
__init__.py
foo.py

/workspace/django__django__3.0/tests/admin_scripts/complex_app/management:
commands

/workspace/django__django__3.0/tests/admin_scripts/complex_app/management/commands:
duplicate.py

/workspace/django__django__3.0/tests/admin_scripts/complex_app/models:
__init__.py
bar.py
foo.py

/workspace/django__django__3.0/tests/admin_scripts/custom_templates:
app_template
project_template
project_template.tgz

/workspace/django__django__3.0/tests/admin_scripts/custom_templates/app_template:
__init__.py
api.py

/workspace/django__django__3.0/tests/admin_scripts/custom_templates/project_template:
additional_dir
manage.py-tpl
project_name
ticket-18091-non-ascii-template.txt
ticket-19397-binary-file.ico

/workspace/django__django__3.0/tests/admin_scripts/custom_templates/project_template/additional_dir:
Procfile
additional_file.py
extra.py
localized.py
requirements.txt

/workspace/django__django__3.0/tests/admin_scripts/custom_templates/project_template/project_name:
__init__.py
settings.py

/workspace/django__django__3.0/tests/admin_scripts/management:
commands

/workspace/django__django__3.0/tests/admin_scripts/management/commands:
app_command.py
base_command.py
custom_startproject.py
label_command.py
noargs_command.py

/workspace/django__django__3.0/tests/admin_scripts/simple_app:
__init__.py
management
models.py

/workspace/django__django__3.0/tests/admin_scripts/simple_app/management:
commands

/workspace/django__django__3.0/tests/admin_scripts/simple_app/management/commands:
duplicate.py

/workspace/django__django__3.0/tests/admin_utils:
__init__.py
admin.py
models.py
test_logentry.py
tests.py
urls.py

/workspace/django__django__3.0/tests/admin_views:
__init__.py
admin.py
custom_has_permission_admin.py
customadmin.py
forms.py
models.py
templates
test_actions.py
test_adminsite.py
test_autocomplete_view.py
test_forms.py
test_multidb.py
test_templatetags.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/admin_views/templates:
admin
custom_filter_template.html

/workspace/django__django__3.0/tests/admin_views/templates/admin:
admin_views
base_site.html

/workspace/django__django__3.0/tests/admin_views/templates/admin/admin_views:
article

/workspace/django__django__3.0/tests/admin_views/templates/admin/admin_views/article:
actions.html
change_form_object_tools.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
pagination.html
prepopulated_fields_js.html
search_form.html
submit_line.html

/workspace/django__django__3.0/tests/admin_widgets:
__init__.py
models.py
test_autocomplete_widget.py
tests.py
urls.py
widgetadmin.py

/workspace/django__django__3.0/tests/aggregation:
__init__.py
models.py
test_filter_argument.py
tests.py

/workspace/django__django__3.0/tests/aggregation_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/annotations:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/app_loading:
__init__.py
eggs
not_installed
tests.py

/workspace/django__django__3.0/tests/app_loading/eggs:
brokenapp.egg
modelapp.egg
nomodelapp.egg
omelet.egg

/workspace/django__django__3.0/tests/app_loading/not_installed:
__init__.py
models.py

/workspace/django__django__3.0/tests/apps:
__init__.py
apps.py
default_config_app
models.py
namespace_package_base
namespace_package_other_base
tests.py

/workspace/django__django__3.0/tests/apps/default_config_app:
__init__.py
apps.py

/workspace/django__django__3.0/tests/apps/namespace_package_base:
nsapp

/workspace/django__django__3.0/tests/apps/namespace_package_base/nsapp:
apps.py

/workspace/django__django__3.0/tests/apps/namespace_package_other_base:
nsapp

/workspace/django__django__3.0/tests/apps/namespace_package_other_base/nsapp:

/workspace/django__django__3.0/tests/auth_tests:
__init__.py
backend_alias.py
client.py
common-passwords-custom.txt
fixtures
models
settings.py
templates
test_admin_multidb.py
test_auth_backends.py
test_basic.py
test_checks.py
test_context_processors.py
test_decorators.py
test_forms.py
test_handlers.py
test_hashers.py
test_management.py
test_middleware.py
test_migrations.py
test_mixins.py
test_models.py
test_remote_user.py
test_remote_user_deprecation.py
test_signals.py
test_templates.py
test_tokens.py
test_validators.py
test_views.py
urls.py
urls_admin.py
urls_custom_user_admin.py

/workspace/django__django__3.0/tests/auth_tests/fixtures:
natural.json
regular.json

/workspace/django__django__3.0/tests/auth_tests/models:
__init__.py
custom_permissions.py
custom_user.py
invalid_models.py
is_active.py
minimal.py
no_password.py
proxy.py
uuid_pk.py
with_custom_email_field.py
with_foreign_key.py
with_integer_username.py
with_last_login_attr.py

/workspace/django__django__3.0/tests/auth_tests/templates:
context_processors
registration

/workspace/django__django__3.0/tests/auth_tests/templates/context_processors:
auth_attrs_access.html
auth_attrs_messages.html
auth_attrs_no_access.html
auth_attrs_perm_in_perms.html
auth_attrs_perms.html
auth_attrs_test_access.html
auth_attrs_user.html

/workspace/django__django__3.0/tests/auth_tests/templates/registration:
html_password_reset_email.html
logged_out.html
login.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html
password_reset_subject.txt

/workspace/django__django__3.0/tests/backends:
__init__.py
base
models.py
mysql
oracle
postgresql
sqlite
test_ddl_references.py
test_utils.py
tests.py

/workspace/django__django__3.0/tests/backends/base:
__init__.py
test_base.py
test_creation.py
test_features.py
test_operations.py
test_schema.py

/workspace/django__django__3.0/tests/backends/mysql:
__init__.py
test_creation.py
test_features.py
test_schema.py
tests.py

/workspace/django__django__3.0/tests/backends/oracle:
__init__.py
test_creation.py
test_introspection.py
test_operations.py
tests.py

/workspace/django__django__3.0/tests/backends/postgresql:
__init__.py
test_creation.py
test_introspection.py
test_server_side_cursors.py
tests.py

/workspace/django__django__3.0/tests/backends/sqlite:
__init__.py
test_introspection.py
tests.py

/workspace/django__django__3.0/tests/base:
__init__.py
models.py

/workspace/django__django__3.0/tests/bash_completion:
__init__.py
management
tests.py

/workspace/django__django__3.0/tests/bash_completion/management:
commands

/workspace/django__django__3.0/tests/bash_completion/management/commands:
test_command.py

/workspace/django__django__3.0/tests/basic:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/builtin_server:
__init__.py
tests.py

/workspace/django__django__3.0/tests/bulk_create:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/cache:
__init__.py
closeable_cache.py
liberal_backend.py
models.py
tests.py

/workspace/django__django__3.0/tests/check_framework:
__init__.py
models.py
test_caches.py
test_database.py
test_model_checks.py
test_model_field_deprecation.py
test_multi_db.py
test_security.py
test_templates.py
test_translation.py
test_urls.py
tests.py
urls

/workspace/django__django__3.0/tests/check_framework/urls:
__init__.py
bad_error_handlers.py
beginning_with_slash.py
contains_tuple.py
good_error_handlers.py
include_contains_tuple.py
include_with_dollar.py
name_with_colon.py
no_warnings.py
no_warnings_i18n.py
non_unique_namespaces.py
path_compatibility
unique_namespaces.py
warning_in_include.py

/workspace/django__django__3.0/tests/check_framework/urls/path_compatibility:
__init__.py
beginning_with_caret.py
contains_re_named_group.py
ending_with_dollar.py

/workspace/django__django__3.0/tests/choices:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/conditional_processing:
__init__.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/constraints:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/contenttypes_tests:
__init__.py
models.py
operations_migrations
test_checks.py
test_fields.py
test_management.py
test_models.py
test_operations.py
test_order_with_respect_to.py
test_views.py
urls.py

/workspace/django__django__3.0/tests/contenttypes_tests/operations_migrations:
0001_initial.py
0002_rename_foo.py
__init__.py

/workspace/django__django__3.0/tests/context_processors:
__init__.py
models.py
templates
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/context_processors/templates:
context_processors

/workspace/django__django__3.0/tests/context_processors/templates/context_processors:
debug.html
request_attrs.html

/workspace/django__django__3.0/tests/csrf_tests:
__init__.py
csrf_token_error_handler_urls.py
test_context_processor.py
tests.py
views.py

/workspace/django__django__3.0/tests/custom_columns:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/custom_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/custom_managers:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/custom_methods:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/custom_migration_operations:
__init__.py
more_operations.py
operations.py

/workspace/django__django__3.0/tests/custom_pk:
__init__.py
fields.py
models.py
tests.py

/workspace/django__django__3.0/tests/datatypes:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/dates:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/datetimes:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/db_functions:
__init__.py
comparison
datetime
math
models.py
tests.py
text
window

/workspace/django__django__3.0/tests/db_functions/comparison:
__init__.py
test_cast.py
test_coalesce.py
test_greatest.py
test_least.py
test_nullif.py

/workspace/django__django__3.0/tests/db_functions/datetime:
__init__.py
test_extract_trunc.py
test_now.py

/workspace/django__django__3.0/tests/db_functions/math:
__init__.py
test_abs.py
test_acos.py
test_asin.py
test_atan.py
test_atan2.py
test_ceil.py
test_cos.py
test_cot.py
test_degrees.py
test_exp.py
test_floor.py
test_ln.py
test_log.py
test_mod.py
test_pi.py
test_power.py
test_radians.py
test_round.py
test_sin.py
test_sqrt.py
test_tan.py

/workspace/django__django__3.0/tests/db_functions/text:
__init__.py
test_chr.py
test_concat.py
test_left.py
test_length.py
test_lower.py
test_ord.py
test_pad.py
test_repeat.py
test_replace.py
test_reverse.py
test_right.py
test_strindex.py
test_substr.py
test_trim.py
test_upper.py

/workspace/django__django__3.0/tests/db_functions/window:
__init__.py
test_validation.py

/workspace/django__django__3.0/tests/db_typecasts:
__init__.py
tests.py

/workspace/django__django__3.0/tests/db_utils:
__init__.py
tests.py

/workspace/django__django__3.0/tests/dbshell:
__init__.py
test_mysql.py
test_oracle.py
test_postgresql_psycopg2.py

/workspace/django__django__3.0/tests/decorators:
__init__.py
tests.py

/workspace/django__django__3.0/tests/defer:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/defer_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/delete:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/delete_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/deprecation:
__init__.py
tests.py

/workspace/django__django__3.0/tests/dispatch:
__init__.py
tests.py

/workspace/django__django__3.0/tests/distinct_on_fields:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/empty:
__init__.py
models.py
no_models
tests.py

/workspace/django__django__3.0/tests/empty/no_models:
__init__.py

/workspace/django__django__3.0/tests/expressions:
__init__.py
models.py
test_queryset_values.py
tests.py

/workspace/django__django__3.0/tests/expressions_case:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/expressions_window:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/extra_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/field_deconstruction:
__init__.py
tests.py

/workspace/django__django__3.0/tests/field_defaults:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/field_subclassing:
__init__.py
fields.py
tests.py

/workspace/django__django__3.0/tests/file_storage:
__init__.py
models.py
test_generate_filename.py
tests.py
urls.py

/workspace/django__django__3.0/tests/file_uploads:
__init__.py
models.py
tests.py
uploadhandler.py
urls.py
views.py

/workspace/django__django__3.0/tests/files:
__init__.py
brokenimg.png
magic.png
test.png
test.webp
test1.png
tests.py

/workspace/django__django__3.0/tests/filtered_relation:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/fixtures:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.0/tests/fixtures/fixtures:
db_fixture_1.default.json
db_fixture_2.default.json.gz
db_fixture_3.nosuchdb.json
fixture1.json
fixture2.json
fixture2.xml
fixture3.xml
fixture4.json.zip
fixture5.json.gz
fixture5.json.zip
fixture6.json
fixture7.xml
fixture8.json
fixture9.xml
fixture_with[special]chars.json
forward_reference_fk.json
forward_reference_m2m.json
invalid.json
null_character_in_field_value.json

/workspace/django__django__3.0/tests/fixtures_model_package:
__init__.py
fixtures
models
tests.py

/workspace/django__django__3.0/tests/fixtures_model_package/fixtures:
fixture1.json
fixture2.json
fixture2.xml

/workspace/django__django__3.0/tests/fixtures_model_package/models:
__init__.py

/workspace/django__django__3.0/tests/fixtures_regress:
__init__.py
fixtures
fixtures_1
fixtures_2
models.py
tests.py

/workspace/django__django__3.0/tests/fixtures_regress/fixtures:
absolute.json
animal.xml
bad_fix.ture1.unkn
bad_fixture2.xml
big-fixture.json
empty.json
feature.json
forward_ref.json
forward_ref_bad_data.json
forward_ref_lookup.json
m2mtoself.json
model-inheritance.json
nk-inheritance.json
nk-inheritance2.xml
non_natural_1.json
non_natural_2.xml
path.containing.dots.json
pretty.xml
sequence.json
sequence_extra.json
sequence_extra_xml.xml
special-article.json
thingy.json

/workspace/django__django__3.0/tests/fixtures_regress/fixtures_1:
forward_ref_1.json
inner

/workspace/django__django__3.0/tests/fixtures_regress/fixtures_1/inner:
absolute.json

/workspace/django__django__3.0/tests/fixtures_regress/fixtures_2:
forward_ref_2.json

/workspace/django__django__3.0/tests/flatpages_tests:
__init__.py
settings.py
templates
test_csrf.py
test_forms.py
test_middleware.py
test_models.py
test_sitemaps.py
test_templatetags.py
test_views.py
urls.py

/workspace/django__django__3.0/tests/flatpages_tests/templates:
flatpages
registration

/workspace/django__django__3.0/tests/flatpages_tests/templates/flatpages:
default.html

/workspace/django__django__3.0/tests/flatpages_tests/templates/registration:
login.html

/workspace/django__django__3.0/tests/force_insert_update:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/foreign_object:
__init__.py
models
test_agnostic_order_trimjoin.py
test_empty_join.py
test_forms.py
tests.py

/workspace/django__django__3.0/tests/foreign_object/models:
__init__.py
article.py
customers.py
empty_join.py
person.py

/workspace/django__django__3.0/tests/forms_tests:
__init__.py
field_tests
jinja2
models.py
templates
tests
urls.py
views.py
widget_tests

/workspace/django__django__3.0/tests/forms_tests/field_tests:
__init__.py
filepathfield_test_dir
test_base.py
test_booleanfield.py
test_charfield.py
test_choicefield.py
test_combofield.py
test_datefield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_emailfield.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_multiplechoicefield.py
test_multivaluefield.py
test_nullbooleanfield.py
test_regexfield.py
test_slugfield.py
test_splitdatetimefield.py
test_timefield.py
test_typedchoicefield.py
test_typedmultiplechoicefield.py
test_urlfield.py
test_uuidfield.py

/workspace/django__django__3.0/tests/forms_tests/field_tests/filepathfield_test_dir:
README
__init__.py
a.py
ab.py
b.py
c
h
j

/workspace/django__django__3.0/tests/forms_tests/field_tests/filepathfield_test_dir/c:
__init__.py
d.py
e.py
f

/workspace/django__django__3.0/tests/forms_tests/field_tests/filepathfield_test_dir/c/f:
__init__.py
g.py

/workspace/django__django__3.0/tests/forms_tests/field_tests/filepathfield_test_dir/h:
__init__.py

/workspace/django__django__3.0/tests/forms_tests/field_tests/filepathfield_test_dir/j:
__init__.py

/workspace/django__django__3.0/tests/forms_tests/jinja2:
forms_tests

/workspace/django__django__3.0/tests/forms_tests/jinja2/forms_tests:
custom_widget.html

/workspace/django__django__3.0/tests/forms_tests/templates:
forms_tests

/workspace/django__django__3.0/tests/forms_tests/templates/forms_tests:
article_form.html
custom_widget.html

/workspace/django__django__3.0/tests/forms_tests/tests:
__init__.py
filepath_test_files
test_error_messages.py
test_forms.py
test_formsets.py
test_i18n.py
test_input_formats.py
test_media.py
test_renderers.py
test_utils.py
test_validators.py
test_widgets.py
tests.py

/workspace/django__django__3.0/tests/forms_tests/tests/filepath_test_files:
1x1.bmp
1x1.png
directory
fake-image.jpg
real-text-file.txt

/workspace/django__django__3.0/tests/forms_tests/tests/filepath_test_files/directory:

/workspace/django__django__3.0/tests/forms_tests/widget_tests:
__init__.py
base.py
test_checkboxinput.py
test_checkboxselectmultiple.py
test_clearablefileinput.py
test_dateinput.py
test_datetimeinput.py
test_fileinput.py
test_hiddeninput.py
test_input.py
test_multiplehiddeninput.py
test_multiwidget.py
test_nullbooleanselect.py
test_numberinput.py
test_passwordinput.py
test_radioselect.py
test_select.py
test_selectdatewidget.py
test_selectmultiple.py
test_splitdatetimewidget.py
test_splithiddendatetimewidget.py
test_textarea.py
test_textinput.py
test_timeinput.py
test_widget.py

/workspace/django__django__3.0/tests/from_db_value:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/generic_inline_admin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/generic_relations:
__init__.py
models.py
test_forms.py
tests.py

/workspace/django__django__3.0/tests/generic_relations_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/generic_views:
__init__.py
forms.py
jinja2
models.py
templates
test_base.py
test_dates.py
test_detail.py
test_edit.py
test_list.py
urls.py
views.py

/workspace/django__django__3.0/tests/generic_views/jinja2:
generic_views

/workspace/django__django__3.0/tests/generic_views/jinja2/generic_views:
using.html

/workspace/django__django__3.0/tests/generic_views/templates:
generic_views
registration

/workspace/django__django__3.0/tests/generic_views/templates/generic_views:
about.html
apple_detail.html
artist_detail.html
artist_form.html
author_confirm_delete.html
author_detail.html
author_form.html
author_list.html
author_objects.html
author_view.html
book_archive.html
book_archive_day.html
book_archive_month.html
book_archive_week.html
book_archive_year.html
book_detail.html
book_list.html
confirm_delete.html
detail.html
form.html
list.html
page_template.html
robots.txt
using.html

/workspace/django__django__3.0/tests/generic_views/templates/registration:
login.html

/workspace/django__django__3.0/tests/get_earliest_or_latest:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/get_object_or_404:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/get_or_create:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/gis_tests:
__init__.py
admin.py
data
distapp
gdal_tests
geo3d
geoadmin
geoapp
geogapp
geos_tests
gis_migrations
inspectapp
layermap
maps
models.py
rasterapp
relatedapp
test_data.py
test_fields.py
test_geoforms.py
test_geoip2.py
test_gis_tests_utils.py
test_measure.py
test_ptr.py
test_spatialrefsys.py
tests.py
utils.py

/workspace/django__django__3.0/tests/gis_tests/data:
__init__.py
ch-city
cities
counties
gas_lines
geometries.json
interstates
invalid
rasters
test_point
test_poly
test_vrt
texas.dbf

/workspace/django__django__3.0/tests/gis_tests/data/ch-city:
ch-city.dbf
ch-city.prj
ch-city.shp
ch-city.shx

/workspace/django__django__3.0/tests/gis_tests/data/cities:
cities.dbf
cities.prj
cities.shp
cities.shx

/workspace/django__django__3.0/tests/gis_tests/data/counties:
counties.dbf
counties.shp
counties.shx

/workspace/django__django__3.0/tests/gis_tests/data/gas_lines:
gas_leitung.dbf
gas_leitung.prj
gas_leitung.shp
gas_leitung.shx

/workspace/django__django__3.0/tests/gis_tests/data/interstates:
interstates.dbf
interstates.prj
interstates.shp
interstates.shx

/workspace/django__django__3.0/tests/gis_tests/data/invalid:
emptypoints.dbf
emptypoints.shp
emptypoints.shx

/workspace/django__django__3.0/tests/gis_tests/data/rasters:
__init__.py
raster.numpy.txt
raster.tif
textrasters.py

/workspace/django__django__3.0/tests/gis_tests/data/test_point:
test_point.dbf
test_point.prj
test_point.shp
test_point.shx

/workspace/django__django__3.0/tests/gis_tests/data/test_poly:
test_poly.dbf
test_poly.prj
test_poly.shp
test_poly.shx

/workspace/django__django__3.0/tests/gis_tests/data/test_vrt:
test_vrt.csv
test_vrt.vrt

/workspace/django__django__3.0/tests/gis_tests/distapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.0/tests/gis_tests/distapp/fixtures:
initial.json

/workspace/django__django__3.0/tests/gis_tests/gdal_tests:
__init__.py
test_driver.py
test_ds.py
test_envelope.py
test_geom.py
test_raster.py
test_srs.py

/workspace/django__django__3.0/tests/gis_tests/geo3d:
__init__.py
models.py
tests.py
views.py

/workspace/django__django__3.0/tests/gis_tests/geoadmin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/gis_tests/geoapp:
__init__.py
feeds.py
fixtures
models.py
sitemaps.py
test_expressions.py
test_feeds.py
test_functions.py
test_regress.py
test_serializers.py
test_sitemaps.py
tests.py
urls.py

/workspace/django__django__3.0/tests/gis_tests/geoapp/fixtures:
initial.json.gz

/workspace/django__django__3.0/tests/gis_tests/geogapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.0/tests/gis_tests/geogapp/fixtures:
initial.json

/workspace/django__django__3.0/tests/gis_tests/geos_tests:
__init__.py
test_coordseq.py
test_geos.py
test_geos_mutation.py
test_io.py
test_mutable_list.py

/workspace/django__django__3.0/tests/gis_tests/gis_migrations:
__init__.py
migrations
test_commands.py
test_operations.py

/workspace/django__django__3.0/tests/gis_tests/gis_migrations/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/gis_tests/inspectapp:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/gis_tests/layermap:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/gis_tests/maps:
__init__.py

/workspace/django__django__3.0/tests/gis_tests/rasterapp:
__init__.py
models.py
test_rasterfield.py

/workspace/django__django__3.0/tests/gis_tests/relatedapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.0/tests/gis_tests/relatedapp/fixtures:
initial.json

/workspace/django__django__3.0/tests/handlers:
__init__.py
templates
test_exception.py
tests.py
tests_custom_error_handlers.py
urls.py
views.py

/workspace/django__django__3.0/tests/handlers/templates:
test_handler.html

/workspace/django__django__3.0/tests/httpwrappers:
__init__.py
abc.txt
tests.py

/workspace/django__django__3.0/tests/humanize_tests:
__init__.py
tests.py

/workspace/django__django__3.0/tests/i18n:
__init__.py
commands
contenttypes
exclude
forms.py
models.py
other
other2
patterns
project_dir
resolution
sampleproject
territorial_fallback
test_compilation.py
test_extraction.py
test_management.py
test_percents.py
tests.py
urls.py
urls_default_unprefixed.py
utils.py

/workspace/django__django__3.0/tests/i18n/commands:
__init__.py
app_with_locale
code.sample
ignore_dir
javascript.js
locale
media_root
not_utf8.sample
someapp
static
templates

/workspace/django__django__3.0/tests/i18n/commands/app_with_locale:
locale

/workspace/django__django__3.0/tests/i18n/commands/app_with_locale/locale:
ru

/workspace/django__django__3.0/tests/i18n/commands/app_with_locale/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/app_with_locale/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/ignore_dir:
ignored.html

/workspace/django__django__3.0/tests/i18n/commands/locale:
en
es_AR
fr
hr
ja
ko
pt_BR
ru
xxx

/workspace/django__django__3.0/tests/i18n/commands/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/es_AR/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/hr:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/hr/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/ja:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/ja/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/ko:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/ko/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/pt_BR/LC_MESSAGES:
django.pristine

/workspace/django__django__3.0/tests/i18n/commands/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/commands/locale/xxx:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/commands/locale/xxx/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/commands/media_root:
media_ignored.html

/workspace/django__django__3.0/tests/i18n/commands/someapp:
static

/workspace/django__django__3.0/tests/i18n/commands/someapp/static:
javascript.js

/workspace/django__django__3.0/tests/i18n/commands/static:
javascript_ignored.js
static_ignored.html

/workspace/django__django__3.0/tests/i18n/commands/templates:
comments.thtml
empty.html
plural.djtpl
subdir
template_with_error.tpl
test.html
xxx_ignored.html

/workspace/django__django__3.0/tests/i18n/commands/templates/subdir:
ignored.html

/workspace/django__django__3.0/tests/i18n/contenttypes:
__init__.py
locale
tests.py

/workspace/django__django__3.0/tests/i18n/contenttypes/locale:
en
fr

/workspace/django__django__3.0/tests/i18n/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/exclude:
__init__.py
canned_locale

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale:
en
fr
it

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale/en:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale/en/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale/it:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/exclude/canned_locale/it/LC_MESSAGES:
django.po

/workspace/django__django__3.0/tests/i18n/other:
__init__.py
locale

/workspace/django__django__3.0/tests/i18n/other/locale:
__init__.py
de
fr

/workspace/django__django__3.0/tests/i18n/other/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/tests/i18n/other/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/other/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.0/tests/i18n/other/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/other2:
__init__.py
locale

/workspace/django__django__3.0/tests/i18n/other2/locale:
__init__.py
de

/workspace/django__django__3.0/tests/i18n/other2/locale/de:
__init__.py
formats.py

/workspace/django__django__3.0/tests/i18n/patterns:
__init__.py
locale
templates
tests.py
urls

/workspace/django__django__3.0/tests/i18n/patterns/locale:
en
nl
pt_BR

/workspace/django__django__3.0/tests/i18n/patterns/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/patterns/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/patterns/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/patterns/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/patterns/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/patterns/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/patterns/templates:
404.html
dummy.html

/workspace/django__django__3.0/tests/i18n/patterns/urls:
__init__.py
default.py
disabled.py
included.py
namespace.py
path_unused.py
wrong.py
wrong_namespace.py

/workspace/django__django__3.0/tests/i18n/project_dir:
__init__.py
app_no_locale
app_with_locale
project_locale

/workspace/django__django__3.0/tests/i18n/project_dir/app_no_locale:
__init__.py
models.py

/workspace/django__django__3.0/tests/i18n/project_dir/app_with_locale:
__init__.py
locale
models.py

/workspace/django__django__3.0/tests/i18n/project_dir/app_with_locale/locale:

/workspace/django__django__3.0/tests/i18n/project_dir/project_locale:

/workspace/django__django__3.0/tests/i18n/resolution:
__init__.py
locale

/workspace/django__django__3.0/tests/i18n/resolution/locale:
de

/workspace/django__django__3.0/tests/i18n/resolution/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/resolution/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/sampleproject:
locale
manage.py
sampleproject
templates
update_catalogs.py

/workspace/django__django__3.0/tests/i18n/sampleproject/locale:
fr

/workspace/django__django__3.0/tests/i18n/sampleproject/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/sampleproject/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/sampleproject/sampleproject:
__init__.py
settings.py

/workspace/django__django__3.0/tests/i18n/sampleproject/templates:
percents.html

/workspace/django__django__3.0/tests/i18n/territorial_fallback:
__init__.py
locale

/workspace/django__django__3.0/tests/i18n/territorial_fallback/locale:
de
de_DE

/workspace/django__django__3.0/tests/i18n/territorial_fallback/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/territorial_fallback/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/i18n/territorial_fallback/locale/de_DE:
LC_MESSAGES

/workspace/django__django__3.0/tests/i18n/territorial_fallback/locale/de_DE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/import_error_package:
__init__.py

/workspace/django__django__3.0/tests/indexes:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/inline_formsets:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/inspectdb:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/introspection:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/invalid_models_tests:
__init__.py
test_backend_specific.py
test_custom_fields.py
test_deprecated_fields.py
test_models.py
test_ordinary_fields.py
test_relative_fields.py

/workspace/django__django__3.0/tests/known_related_objects:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/logging_tests:
__init__.py
logconfig.py
tests.py
urls.py
urls_i18n.py
views.py

/workspace/django__django__3.0/tests/lookup:
__init__.py
models.py
test_decimalfield.py
test_lookups.py
test_timefield.py
tests.py

/workspace/django__django__3.0/tests/m2m_and_m2o:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_intermediary:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_multiple:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_signals:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_through:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/m2m_through_regress:
__init__.py
fixtures
models.py
test_multitable.py
tests.py

/workspace/django__django__3.0/tests/m2m_through_regress/fixtures:
m2m_through.json

/workspace/django__django__3.0/tests/m2o_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/mail:
__init__.py
attachments
custombackend.py
test_sendtestemail.py
tests.py

/workspace/django__django__3.0/tests/mail/attachments:
file.eml
file.png
file.txt
file_png
file_png.txt
file_txt
file_txt.png

/workspace/django__django__3.0/tests/managers_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/many_to_many:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/many_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/many_to_one_null:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/max_lengths:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/messages_tests:
__init__.py
base.py
test_api.py
test_cookie.py
test_fallback.py
test_middleware.py
test_mixins.py
test_session.py
urls.py

/workspace/django__django__3.0/tests/middleware:
__init__.py
cond_get_urls.py
extra_urls.py
test_security.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/middleware_exceptions:
__init__.py
middleware.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/migrate_signals:
__init__.py
custom_migrations
models.py
tests.py

/workspace/django__django__3.0/tests/migrate_signals/custom_migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migration_test_data_persistence:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__3.0/tests/migration_test_data_persistence/migrations:
0001_initial.py
0002_add_book.py
__init__.py

/workspace/django__django__3.0/tests/migrations:
__init__.py
deprecated_field_migrations
faulty_migrations
migrations_test_apps
models.py
related_models_app
routers.py
test_add_many_to_many_field_initial
test_auto_now_add
test_autodetector.py
test_base.py
test_commands.py
test_deprecated_fields.py
test_exceptions.py
test_executor.py
test_graph.py
test_loader.py
test_migrations
test_migrations_atomic_operation
test_migrations_backwards_deps_1
test_migrations_bad_pyc
test_migrations_clashing_prefix
test_migrations_conflict
test_migrations_custom_user
test_migrations_empty
test_migrations_fake_split_initial
test_migrations_first
test_migrations_initial_false
test_migrations_no_ancestor
test_migrations_no_changes
test_migrations_no_default
test_migrations_no_init
test_migrations_non_atomic
test_migrations_order
test_migrations_plan
test_migrations_private
test_migrations_run_before
test_migrations_squashed
test_migrations_squashed_complex
test_migrations_squashed_complex_multi_apps
test_migrations_squashed_erroneous
test_migrations_squashed_extra
test_migrations_squashed_ref_squashed
test_migrations_unmigdep
test_multidb.py
test_operations.py
test_optimizer.py
test_questioner.py
test_state.py
test_writer.py

/workspace/django__django__3.0/tests/migrations/deprecated_field_migrations:
0001_initial.py
0002_remove_ipaddressfield_ip.py
__init__.py

/workspace/django__django__3.0/tests/migrations/faulty_migrations:
__init__.py
file.py
namespace

/workspace/django__django__3.0/tests/migrations/faulty_migrations/namespace:
foo

/workspace/django__django__3.0/tests/migrations/faulty_migrations/namespace/foo:
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps:
__init__.py
alter_fk
conflicting_app_with_dependencies
lookuperror_a
lookuperror_b
lookuperror_c
migrated_app
migrated_unapplied_app
mutate_state_a
mutate_state_b
normal
unmigrated_app
unmigrated_app_simple
unmigrated_app_syncdb
unspecified_app_with_conflict
with_package_model
without_init_file

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/alter_fk:
__init__.py
author_app
book_app

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/alter_fk/author_app:
__init__.py
migrations

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/alter_fk/author_app/migrations:
0001_initial.py
0002_alter_id.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/alter_fk/book_app:
__init__.py
migrations

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/alter_fk/book_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies:
__init__.py
migrations

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/lookuperror_a:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/lookuperror_a/migrations:
0001_initial.py
0002_a2.py
0003_a3.py
0004_a4.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/lookuperror_b:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/lookuperror_b/migrations:
0001_initial.py
0002_b2.py
0003_b3.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/lookuperror_c:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/lookuperror_c/migrations:
0001_initial.py
0002_c2.py
0003_c3.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/migrated_app:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/migrated_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/migrated_unapplied_app:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/mutate_state_a:
__init__.py
migrations

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/mutate_state_a/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/mutate_state_b:
__init__.py
migrations

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/mutate_state_b/migrations:
0001_initial.py
0002_add_field.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/normal:
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/unmigrated_app:
__init__.py
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/unmigrated_app_simple:
__init__.py
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/unmigrated_app_syncdb:
__init__.py
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/unspecified_app_with_conflict:
__init__.py
migrations
models.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/with_package_model:
__init__.py
models

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/with_package_model/models:
__init__.py

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/without_init_file:
__init__.py
migrations

/workspace/django__django__3.0/tests/migrations/migrations_test_apps/without_init_file/migrations:

/workspace/django__django__3.0/tests/migrations/related_models_app:
__init__.py

/workspace/django__django__3.0/tests/migrations/test_add_many_to_many_field_initial:
0001_initial.py
0002_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_auto_now_add:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_atomic_operation:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_backwards_deps_1:
0001_initial.py
0002_second.py

/workspace/django__django__3.0/tests/migrations/test_migrations_bad_pyc:
0001_initial.pyc-tpl
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_clashing_prefix:
__init__.py
a.py
ab.py

/workspace/django__django__3.0/tests/migrations/test_migrations_conflict:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_custom_user:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_empty:
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_fake_split_initial:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_first:
__init__.py
second.py
thefirst.py

/workspace/django__django__3.0/tests/migrations/test_migrations_initial_false:
0001_not_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_no_ancestor:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_no_changes:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_no_default:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_no_init:

/workspace/django__django__3.0/tests/migrations/test_migrations_non_atomic:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_order:
0001.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_plan:
0001_initial.py
0002_second.py
0003_third.py
0004_fourth.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_private:
0001_initial.py
__init__.py
_util.py
~util.py

/workspace/django__django__3.0/tests/migrations/test_migrations_run_before:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed:
0001_initial.py
0001_squashed_0002.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_complex:
1_auto.py
2_auto.py
3_auto.py
3_squashed_5.py
4_auto.py
5_auto.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_complex_multi_apps:
__init__.py
app1
app2

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_complex_multi_apps/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_complex_multi_apps/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_erroneous:
1_auto.py
2_auto.py
3_squashed_5.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_extra:
0001_initial.py
0001_squashed_0002.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_ref_squashed:
__init__.py
app1
app2

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_ref_squashed/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_squashed_ref_squashed/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__3.0/tests/migrations/test_migrations_unmigdep:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations2:
__init__.py
models.py
test_migrations_2
test_migrations_2_first
test_migrations_2_no_deps

/workspace/django__django__3.0/tests/migrations2/test_migrations_2:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/migrations2/test_migrations_2_first:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__3.0/tests/migrations2/test_migrations_2_no_deps:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/model_fields:
4x8.png
8x4.png
__init__.py
models.py
test_binaryfield.py
test_booleanfield.py
test_charfield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_field_flags.py
test_filefield.py
test_floatfield.py
test_foreignkey.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_manytomanyfield.py
test_promises.py
test_slugfield.py
test_textfield.py
test_uuid.py
tests.py

/workspace/django__django__3.0/tests/model_forms:
__init__.py
models.py
test.png
test2.png
test_modelchoicefield.py
test_uuid.py
tests.py

/workspace/django__django__3.0/tests/model_formsets:
__init__.py
models.py
test_uuid.py
tests.py

/workspace/django__django__3.0/tests/model_formsets_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/model_indexes:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/model_inheritance:
__init__.py
models.py
test_abstract_inheritance.py
tests.py

/workspace/django__django__3.0/tests/model_inheritance_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/model_meta:
__init__.py
models.py
results.py
tests.py

/workspace/django__django__3.0/tests/model_options:
__init__.py
models
test_default_related_name.py
test_tablespaces.py

/workspace/django__django__3.0/tests/model_options/models:
__init__.py
default_related_name.py
tablespaces.py

/workspace/django__django__3.0/tests/model_package:
__init__.py
models
tests.py

/workspace/django__django__3.0/tests/model_package/models:
__init__.py
article.py
publication.py

/workspace/django__django__3.0/tests/model_regress:
__init__.py
models.py
test_pickle.py
test_state.py
tests.py

/workspace/django__django__3.0/tests/modeladmin:
__init__.py
models.py
test_actions.py
test_checks.py
tests.py

/workspace/django__django__3.0/tests/multiple_database:
__init__.py
fixtures
models.py
routers.py
tests.py

/workspace/django__django__3.0/tests/multiple_database/fixtures:
multidb-common.json
multidb.default.json
multidb.other.json
pets.json

/workspace/django__django__3.0/tests/mutually_referential:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/nested_foreign_keys:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/no_models:
__init__.py
tests.py

/workspace/django__django__3.0/tests/null_fk:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/null_fk_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/null_queries:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/one_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/or_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/order_with_respect_to:
__init__.py
base_tests.py
models.py
tests.py

/workspace/django__django__3.0/tests/ordering:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/pagination:
__init__.py
custom.py
models.py
tests.py

/workspace/django__django__3.0/tests/postgres_tests:
__init__.py
array_default_migrations
array_index_migrations
fields.py
migrations
models.py
test_aggregates.py
test_apps.py
test_array.py
test_bulk_update.py
test_citext.py
test_functions.py
test_hstore.py
test_indexes.py
test_introspection.py
test_json.py
test_ranges.py
test_search.py
test_signals.py
test_trigram.py
test_unaccent.py

/workspace/django__django__3.0/tests/postgres_tests/array_default_migrations:
0001_initial.py
0002_integerarraymodel_field_2.py
__init__.py

/workspace/django__django__3.0/tests/postgres_tests/array_index_migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/postgres_tests/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__3.0/tests/prefetch_related:
__init__.py
models.py
test_prefetch_related_objects.py
test_uuid.py
tests.py

/workspace/django__django__3.0/tests/project_template:
__init__.py
test_settings.py
urls.py
views.py

/workspace/django__django__3.0/tests/properties:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/proxy_model_inheritance:
__init__.py
app1
app2
models.py
tests.py

/workspace/django__django__3.0/tests/proxy_model_inheritance/app1:
__init__.py
models.py

/workspace/django__django__3.0/tests/proxy_model_inheritance/app2:
__init__.py
models.py

/workspace/django__django__3.0/tests/proxy_models:
__init__.py
admin.py
fixtures
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/proxy_models/fixtures:
mypeople.json

/workspace/django__django__3.0/tests/queries:
__init__.py
models.py
test_bulk_update.py
test_explain.py
test_iterator.py
test_q.py
test_qs_combinators.py
test_query.py
tests.py

/workspace/django__django__3.0/tests/queryset_pickle:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/raw_query:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/redirects_tests:
__init__.py
tests.py
urls.py

/workspace/django__django__3.0/tests/requests:
__init__.py
test_data_upload_settings.py
tests.py

/workspace/django__django__3.0/tests/requirements:
mysql.txt
oracle.txt
postgres.txt
py3.txt

/workspace/django__django__3.0/tests/reserved_names:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/resolve_url:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/responses:
__init__.py
test_cookie.py
test_fileresponse.py
tests.py

/workspace/django__django__3.0/tests/reverse_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/save_delete_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/schema:
__init__.py
fields.py
models.py
test_logging.py
tests.py

/workspace/django__django__3.0/tests/select_for_update:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/select_related:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/select_related_onetoone:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/select_related_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/serializers:
__init__.py
models
test_data.py
test_deserializedobject.py
test_json.py
test_natural.py
test_xml.py
test_yaml.py
tests.py

/workspace/django__django__3.0/tests/serializers/models:
__init__.py
base.py
data.py
multi_table.py
natural.py

/workspace/django__django__3.0/tests/servers:
__init__.py
another_app
fixtures
media
models.py
static
test_basehttp.py
test_liveserverthread.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/servers/another_app:
__init__.py
static

/workspace/django__django__3.0/tests/servers/another_app/static:
another_app

/workspace/django__django__3.0/tests/servers/another_app/static/another_app:
another_app_static_file.txt

/workspace/django__django__3.0/tests/servers/fixtures:
testdata.json

/workspace/django__django__3.0/tests/servers/media:
example_media_file.txt

/workspace/django__django__3.0/tests/servers/static:
example_static_file.txt

/workspace/django__django__3.0/tests/sessions_tests:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/settings_tests:
__init__.py
test_file_charset.py
tests.py

/workspace/django__django__3.0/tests/shell:
__init__.py
tests.py

/workspace/django__django__3.0/tests/shortcuts:
__init__.py
jinja2
templates
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/shortcuts/jinja2:
shortcuts

/workspace/django__django__3.0/tests/shortcuts/jinja2/shortcuts:
using.html

/workspace/django__django__3.0/tests/shortcuts/templates:
shortcuts

/workspace/django__django__3.0/tests/shortcuts/templates/shortcuts:
render_test.html
using.html

/workspace/django__django__3.0/tests/signals:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/signed_cookies_tests:
__init__.py
tests.py

/workspace/django__django__3.0/tests/signing:
__init__.py
tests.py

/workspace/django__django__3.0/tests/sitemaps_tests:
__init__.py
base.py
models.py
templates
test_generic.py
test_http.py
test_https.py
test_management.py
test_utils.py
urls

/workspace/django__django__3.0/tests/sitemaps_tests/templates:
custom_sitemap.xml
custom_sitemap_index.xml

/workspace/django__django__3.0/tests/sitemaps_tests/urls:
__init__.py
empty.py
http.py
https.py
index_only.py

/workspace/django__django__3.0/tests/sites_framework:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__3.0/tests/sites_framework/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.0/tests/sites_tests:
__init__.py
tests.py

/workspace/django__django__3.0/tests/staticfiles_tests:
__init__.py
apps
cases.py
project
settings.py
storage.py
test_checks.py
test_finders.py
test_forms.py
test_liveserver.py
test_management.py
test_storage.py
test_templatetags.py
test_utils.py
test_views.py
urls

/workspace/django__django__3.0/tests/staticfiles_tests/apps:
__init__.py
no_label
staticfiles_config.py
test

/workspace/django__django__3.0/tests/staticfiles_tests/apps/no_label:
__init__.py
static

/workspace/django__django__3.0/tests/staticfiles_tests/apps/no_label/static:
file2.txt

/workspace/django__django__3.0/tests/staticfiles_tests/apps/test:
__init__.py
otherdir
static

/workspace/django__django__3.0/tests/staticfiles_tests/apps/test/otherdir:
odfile.txt

/workspace/django__django__3.0/tests/staticfiles_tests/apps/test/static:
test

/workspace/django__django__3.0/tests/staticfiles_tests/apps/test/static/test:
%2F.txt
CVS
file.txt
file1.txt
nonascii.css
test.ignoreme
vendor
window.png
⊗.txt

/workspace/django__django__3.0/tests/staticfiles_tests/apps/test/static/test/vendor:
module.js

/workspace/django__django__3.0/tests/staticfiles_tests/project:
documents
faulty
loop
prefixed
site_media

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents:
absolute_root.css
cached
styles_root.css
subdir
test
test.txt

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/cached:
absolute.css
css
img
import.css
other.css
relative.css
styles.css
styles_insensitive.css
test.js
url.css

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/cached/css:
fonts
fragments.css
ignored.css
img
window.css

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/cached/css/fonts:
font.eot
font.svg

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/cached/css/img:
window.png

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/cached/img:
relative.png

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/subdir:
test.txt

/workspace/django__django__3.0/tests/staticfiles_tests/project/documents/test:
backup~
camelCase.txt
file.txt

/workspace/django__django__3.0/tests/staticfiles_tests/project/faulty:
faulty.css

/workspace/django__django__3.0/tests/staticfiles_tests/project/loop:
bar.css
foo.css

/workspace/django__django__3.0/tests/staticfiles_tests/project/prefixed:
test.txt

/workspace/django__django__3.0/tests/staticfiles_tests/project/site_media:
media
static

/workspace/django__django__3.0/tests/staticfiles_tests/project/site_media/media:
media-file.txt

/workspace/django__django__3.0/tests/staticfiles_tests/project/site_media/static:
testfile.txt

/workspace/django__django__3.0/tests/staticfiles_tests/urls:
__init__.py
default.py
helper.py

/workspace/django__django__3.0/tests/str:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/string_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/swappable_models:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/syndication_tests:
__init__.py
feeds.py
models.py
templates
tests.py
urls.py

/workspace/django__django__3.0/tests/syndication_tests/templates:
syndication

/workspace/django__django__3.0/tests/syndication_tests/templates/syndication:
description.html
description_context.html
title.html
title_context.html

/workspace/django__django__3.0/tests/template_backends:
__init__.py
apps
forbidden
jinja2
template_strings
templates
test_django.py
test_dummy.py
test_jinja2.py
test_utils.py

/workspace/django__django__3.0/tests/template_backends/apps:
__init__.py
good
importerror

/workspace/django__django__3.0/tests/template_backends/apps/good:
__init__.py
templatetags

/workspace/django__django__3.0/tests/template_backends/apps/good/templatetags:
__init__.py
empty.py
good_tags.py
override.py
subpackage

/workspace/django__django__3.0/tests/template_backends/apps/good/templatetags/subpackage:
__init__.py
tags.py

/workspace/django__django__3.0/tests/template_backends/apps/importerror:
__init__.py
templatetags

/workspace/django__django__3.0/tests/template_backends/apps/importerror/templatetags:
__init__.py
broken_tags.py

/workspace/django__django__3.0/tests/template_backends/forbidden:
template_backends

/workspace/django__django__3.0/tests/template_backends/forbidden/template_backends:
hello.html

/workspace/django__django__3.0/tests/template_backends/jinja2:
template_backends

/workspace/django__django__3.0/tests/template_backends/jinja2/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html
syntax_error2.html

/workspace/django__django__3.0/tests/template_backends/template_strings:
template_backends

/workspace/django__django__3.0/tests/template_backends/template_strings/template_backends:
csrf.html
hello.html

/workspace/django__django__3.0/tests/template_backends/templates:
template_backends

/workspace/django__django__3.0/tests/template_backends/templates/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html

/workspace/django__django__3.0/tests/template_loader:
__init__.py
template_strings
templates
tests.py

/workspace/django__django__3.0/tests/template_loader/template_strings:
template_loader

/workspace/django__django__3.0/tests/template_loader/template_strings/template_loader:
hello.html

/workspace/django__django__3.0/tests/template_loader/templates:
template_loader

/workspace/django__django__3.0/tests/template_loader/templates/template_loader:
goodbye.html
hello.html
request.html

/workspace/django__django__3.0/tests/template_tests:
__init__.py
alternate_urls.py
annotated_tag_function.py
broken_tag.py
eggs
filter_tests
jinja2
other_templates
recursive_templates
relative_templates
syntax_tests
templates
templatetags
test_base.py
test_callables.py
test_context.py
test_custom.py
test_engine.py
test_extends.py
test_extends_relative.py
test_library.py
test_loaders.py
test_logging.py
test_nodelist.py
test_origin.py
test_parser.py
test_response.py
test_smartif.py
tests.py
urls.py
utils.py
views.py

/workspace/django__django__3.0/tests/template_tests/eggs:
tagsegg.egg

/workspace/django__django__3.0/tests/template_tests/filter_tests:
__init__.py
test_add.py
test_addslashes.py
test_autoescape.py
test_capfirst.py
test_center.py
test_chaining.py
test_cut.py
test_date.py
test_default.py
test_default_if_none.py
test_dictsort.py
test_dictsortreversed.py
test_divisibleby.py
test_escape.py
test_escapejs.py
test_filesizeformat.py
test_first.py
test_floatformat.py
test_force_escape.py
test_get_digit.py
test_iriencode.py
test_join.py
test_json_script.py
test_last.py
test_length.py
test_length_is.py
test_linebreaks.py
test_linebreaksbr.py
test_linenumbers.py
test_ljust.py
test_lower.py
test_make_list.py
test_phone2numeric.py
test_pluralize.py
test_random.py
test_rjust.py
test_safe.py
test_safeseq.py
test_slice.py
test_slugify.py
test_stringformat.py
test_striptags.py
test_time.py
test_timesince.py
test_timeuntil.py
test_title.py
test_truncatechars.py
test_truncatechars_html.py
test_truncatewords.py
test_truncatewords_html.py
test_unordered_list.py
test_upper.py
test_urlencode.py
test_urlize.py
test_urlizetrunc.py
test_wordcount.py
test_wordwrap.py
test_yesno.py
timezone_utils.py

/workspace/django__django__3.0/tests/template_tests/jinja2:
template_tests

/workspace/django__django__3.0/tests/template_tests/jinja2/template_tests:
using.html

/workspace/django__django__3.0/tests/template_tests/other_templates:
priority
test_dirs.html

/workspace/django__django__3.0/tests/template_tests/other_templates/priority:
foo.html

/workspace/django__django__3.0/tests/template_tests/recursive_templates:
fs
fs2
fs3

/workspace/django__django__3.0/tests/template_tests/recursive_templates/fs:
extend-missing.html
one.html
other-recursive.html
recursive.html
self.html
three.html
two.html

/workspace/django__django__3.0/tests/template_tests/recursive_templates/fs2:
recursive.html

/workspace/django__django__3.0/tests/template_tests/recursive_templates/fs3:
recursive.html

/workspace/django__django__3.0/tests/template_tests/relative_templates:
dir1
error_extends.html
error_include.html
one.html
three.html
two.html

/workspace/django__django__3.0/tests/template_tests/relative_templates/dir1:
dir2
looped.html
one.html
one1.html
one2.html
one3.html
three.html
two.html

/workspace/django__django__3.0/tests/template_tests/relative_templates/dir1/dir2:
inc1.html
inc2.html
include_content.html
one.html

/workspace/django__django__3.0/tests/template_tests/syntax_tests:
__init__.py
i18n
test_autoescape.py
test_basic.py
test_builtins.py
test_cache.py
test_comment.py
test_cycle.py
test_exceptions.py
test_extends.py
test_filter_syntax.py
test_filter_tag.py
test_firstof.py
test_for.py
test_if.py
test_if_changed.py
test_if_equal.py
test_include.py
test_invalid_string.py
test_list_index.py
test_load.py
test_lorem.py
test_multiline.py
test_named_endblock.py
test_now.py
test_numpy.py
test_regroup.py
test_resetcycle.py
test_setup.py
test_simple_tag.py
test_spaceless.py
test_static.py
test_template_tag.py
test_url.py
test_verbatim.py
test_width_ratio.py
test_with.py

/workspace/django__django__3.0/tests/template_tests/syntax_tests/i18n:
__init__.py
base.py
test_blocktrans.py
test_filters.py
test_get_available_languages.py
test_get_current_language.py
test_get_current_language_bidi.py
test_get_language_info.py
test_get_language_info_list.py
test_language.py
test_trans.py
test_underscore_syntax.py

/workspace/django__django__3.0/tests/template_tests/templates:
27584_child.html
27584_parent.html
27956_child.html
27956_parent.html
broken_base.html
first
include_tpl.html
included_base.html
included_content.html
inclusion.html
inclusion_base.html
inclusion_extends1.html
inclusion_extends2.html
index.html
priority
recursive_include.html
response.html
second
ssi include with spaces.html
ssi_include.html
template_tests
test_context.html
test_context_stack.html
test_extends_error.html
test_incl_tag_use_l10n.html
test_include_error.html

/workspace/django__django__3.0/tests/template_tests/templates/first:
test.html

/workspace/django__django__3.0/tests/template_tests/templates/priority:
foo.html

/workspace/django__django__3.0/tests/template_tests/templates/second:
test.html

/workspace/django__django__3.0/tests/template_tests/templates/template_tests:
using.html

/workspace/django__django__3.0/tests/template_tests/templatetags:
__init__.py
bad_tag.py
custom.py
inclusion.py
subpackage
tag_27584.py
testtags.py

/workspace/django__django__3.0/tests/template_tests/templatetags/subpackage:
__init__.py
echo.py

/workspace/django__django__3.0/tests/templates:
base.html
comments
custom_admin
extended.html
form_view.html
login.html
views

/workspace/django__django__3.0/tests/templates/comments:
comment_notification_email.txt

/workspace/django__django__3.0/tests/templates/custom_admin:
add_form.html
app_index.html
change_form.html
change_list.html
delete_confirmation.html
delete_selected_confirmation.html
index.html
login.html
logout.html
object_history.html
password_change_done.html
password_change_form.html
popup_response.html

/workspace/django__django__3.0/tests/templates/views:
article_archive_day.html
article_archive_month.html
article_confirm_delete.html
article_detail.html
article_form.html
article_list.html
datearticle_archive_month.html
urlarticle_detail.html
urlarticle_form.html

/workspace/django__django__3.0/tests/test_client:
__init__.py
auth_backends.py
test_conditional_content_removal.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/test_client_regress:
__init__.py
auth_backends.py
bad_templates
context_processors.py
models.py
session.py
templates
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/test_client_regress/bad_templates:
404.html

/workspace/django__django__3.0/tests/test_client_regress/templates:
request_context.html
unicode.html

/workspace/django__django__3.0/tests/test_exceptions:
__init__.py
test_validation_error.py

/workspace/django__django__3.0/tests/test_runner:
__init__.py
models.py
runner.py
test_debug_sql.py
test_discover_runner.py
test_parallel.py
tests.py

/workspace/django__django__3.0/tests/test_runner_apps:
__init__.py
databases
sample
simple
tagged

/workspace/django__django__3.0/tests/test_runner_apps/databases:
__init__.py
tests.py

/workspace/django__django__3.0/tests/test_runner_apps/sample:
__init__.py
doctests.py
empty.py
pattern_tests.py
tests
tests_sample.py

/workspace/django__django__3.0/tests/test_runner_apps/sample/tests:
__init__.py
tests.py

/workspace/django__django__3.0/tests/test_runner_apps/simple:
__init__.py
tests.py

/workspace/django__django__3.0/tests/test_runner_apps/tagged:
__init__.py
tests.py
tests_inheritance.py

/workspace/django__django__3.0/tests/test_utils:
__init__.py
fixtures
models.py
templates
test_deprecated_features.py
test_testcase.py
test_transactiontestcase.py
tests.py
urls.py
views.py

/workspace/django__django__3.0/tests/test_utils/fixtures:
should_not_be_loaded.json

/workspace/django__django__3.0/tests/test_utils/templates:
template_used

/workspace/django__django__3.0/tests/test_utils/templates/template_used:
alternative.html
base.html
extends.html
include.html

/workspace/django__django__3.0/tests/timezones:
__init__.py
admin.py
forms.py
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/transaction_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/transactions:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/unmanaged_models:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/update:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/update_only_fields:
__init__.py
models.py
tests.py

/workspace/django__django__3.0/tests/urlpatterns:
__init__.py
converter_urls.py
converters.py
included_urls.py
more_urls.py
path_base64_urls.py
path_dynamic_urls.py
path_urls.py
test_resolvers.py
tests.py
views.py

/workspace/django__django__3.0/tests/urlpatterns_reverse:
__init__.py
erroneous_urls.py
extra_urls.py
included_app_urls.py
included_named_urls.py
included_named_urls2.py
included_namespace_urls.py
included_no_kwargs_urls.py
included_urls.py
included_urls2.py
method_view_urls.py
middleware.py
named_urls.py
named_urls_conflict.py
namespace_urls.py
nested_urls.py
no_urls.py
nonimported_module.py
reverse_lazy_urls.py
test_localeregexdescriptor.py
tests.py
translations
urlconf_inner.py
urlconf_outer.py
urls.py
urls_error_handlers.py
urls_error_handlers_callables.py
urls_without_handlers.py
utils.py
views.py
views_broken.py

/workspace/django__django__3.0/tests/urlpatterns_reverse/translations:
__init__.py
locale

/workspace/django__django__3.0/tests/urlpatterns_reverse/translations/locale:
__init__.py
de
fr

/workspace/django__django__3.0/tests/urlpatterns_reverse/translations/locale/de:
LC_MESSAGES
__init__.py

/workspace/django__django__3.0/tests/urlpatterns_reverse/translations/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/urlpatterns_reverse/translations/locale/fr:
LC_MESSAGES
__init__.py

/workspace/django__django__3.0/tests/urlpatterns_reverse/translations/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/user_commands:
__init__.py
eggs
management
models.py
tests.py
urls.py

/workspace/django__django__3.0/tests/user_commands/eggs:
basic.egg

/workspace/django__django__3.0/tests/user_commands/management:
commands

/workspace/django__django__3.0/tests/user_commands/management/commands:
common_args.py
dance.py
hal.py
no_translations.py
required_option.py
reverse_url.py
set_option.py
subparser.py
transaction.py

/workspace/django__django__3.0/tests/utils_tests:
__init__.py
archives
eggs
files
models.py
test_archive.py
test_autoreload.py
test_baseconv.py
test_crypto.py
test_datastructures.py
test_dateformat.py
test_dateparse.py
test_datetime_safe.py
test_decorators.py
test_duration.py
test_encoding.py
test_feedgenerator.py
test_functional.py
test_hashable.py
test_html.py
test_http.py
test_inspect.py
test_ipv6.py
test_jslex.py
test_lazyobject.py
test_lorem_ipsum.py
test_module
test_module_loading.py
test_no_submodule.py
test_numberformat.py
test_os_utils.py
test_regex_helper.py
test_safestring.py
test_simplelazyobject.py
test_termcolors.py
test_text.py
test_timesince.py
test_timezone.py
test_tree.py

/workspace/django__django__3.0/tests/utils_tests/archives:
foobar.tar
foobar.tar.bz2
foobar.tar.gz
foobar.zip
leadpath_foobar.tar
leadpath_foobar.tar.bz2
leadpath_foobar.tar.gz
leadpath_foobar.zip

/workspace/django__django__3.0/tests/utils_tests/eggs:
test_egg.egg

/workspace/django__django__3.0/tests/utils_tests/files:
strip_tags1.html
strip_tags2.txt

/workspace/django__django__3.0/tests/utils_tests/test_module:
__init__.py
another_bad_module.py
another_good_module.py
bad_module.py
child_module
good_module.py

/workspace/django__django__3.0/tests/utils_tests/test_module/child_module:
__init__.py
grandchild_module.py

/workspace/django__django__3.0/tests/validation:
__init__.py
models.py
test_custom_messages.py
test_error_messages.py
test_picklable.py
test_unique.py
test_validators.py
tests.py

/workspace/django__django__3.0/tests/validators:
__init__.py
invalid_urls.txt
tests.py
valid_urls.txt

/workspace/django__django__3.0/tests/version:
__init__.py
tests.py

/workspace/django__django__3.0/tests/view_tests:
__init__.py
app0
app1
app2
app3
app4
app5
default_urls.py
generic_urls.py
locale
media
models.py
regression_21530_urls.py
templates
templatetags
tests
urls.py
views.py

/workspace/django__django__3.0/tests/view_tests/app0:
__init__.py
locale

/workspace/django__django__3.0/tests/view_tests/app0/locale:
en

/workspace/django__django__3.0/tests/view_tests/app0/locale/en:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/app0/locale/en/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/app1:
__init__.py
locale

/workspace/django__django__3.0/tests/view_tests/app1/locale:
fr

/workspace/django__django__3.0/tests/view_tests/app1/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/app1/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/app2:
__init__.py
locale

/workspace/django__django__3.0/tests/view_tests/app2/locale:
fr

/workspace/django__django__3.0/tests/view_tests/app2/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/app2/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/app3:
__init__.py
locale

/workspace/django__django__3.0/tests/view_tests/app3/locale:
es_AR

/workspace/django__django__3.0/tests/view_tests/app3/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/app3/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/app4:
__init__.py
locale

/workspace/django__django__3.0/tests/view_tests/app4/locale:
es_AR

/workspace/django__django__3.0/tests/view_tests/app4/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/app4/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/app5:
__init__.py
locale

/workspace/django__django__3.0/tests/view_tests/app5/locale:
fr

/workspace/django__django__3.0/tests/view_tests/app5/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/app5/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/locale:
de
en_GB
es
fr
nl
pt
ru

/workspace/django__django__3.0/tests/view_tests/locale/de:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/de/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/en_GB/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/locale/es:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/es/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/locale/fr:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/locale/nl:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.0/tests/view_tests/locale/pt:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/pt/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/locale/ru:
LC_MESSAGES

/workspace/django__django__3.0/tests/view_tests/locale/ru/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.0/tests/view_tests/media:
%2F.txt
file.txt
file.txt.gz
file.unknown
long-line.txt
subdir

/workspace/django__django__3.0/tests/view_tests/media/subdir:
visible

/workspace/django__django__3.0/tests/view_tests/templates:
debug
jsi18n-multi-catalogs.html
jsi18n.html

/workspace/django__django__3.0/tests/view_tests/templates/debug:
template_error.html
template_exception.html

/workspace/django__django__3.0/tests/view_tests/templatetags:
__init__.py
debugtags.py

/workspace/django__django__3.0/tests/view_tests/tests:
__init__.py
test_csrf.py
test_debug.py
test_defaults.py
test_i18n.py
test_json.py
test_specials.py
test_static.py

/workspace/django__django__3.0/tests/wsgi:
__init__.py
tests.py
urls.py
wsgi.py

[Select the relevant files and use repo map to get highlevel representation and structure of repo]


============================================================



ACTION:

THOUGHT: Based on the PR description, the issue is related to a query syntax error when using Count annotation with both Case condition and distinct=True parameter. This suggests we should focus on the query generation part of Django's ORM, specifically in the db/models directory.

Let me first create a script to reproduce the error:
CODE:
CODE = """
from django.db import models
from django.db.models import Case, Count, When, Value

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100)
    status = models.BooleanField(default=False)

    class Meta:
        app_label = 'test_app'

# Reproduce the query
qs = TestModel.objects.annotate(
    count=Count(
        Case(
            When(status=True, then=Value(1)),
        ),
        distinct=True
    )
)

# Print the generated SQL
print(qs.query)
"""
create_file('reproduce_error.py', CODE)

============================================================



OBSERVATION:

[File reproduce_error.py created.]
[File: /workspace/reproduce_error.py (24 lines total after edit)]
1|
2|from django.db import models
3|from django.db.models import Case, Count, When, Value
4|
5|# Test model
6|class TestModel(models.Model):
7|    name = models.CharField(max_length=100)
8|    status = models.BooleanField(default=False)
9|
10|    class Meta:
11|        app_label = 'test_app'
12|
13|# Reproduce the query
14|qs = TestModel.objects.annotate(
15|    count=Count(
16|        Case(
17|            When(status=True, then=Value(1)),
18|        ),
19|        distinct=True
20|    )
21|)
22|
23|# Print the generated SQL
24|print(qs.query)
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's try to run this script to see the error. We'll need to set up Django settings first:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_settings')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': ':memory:',
    }
}

INSTALLED_APPS = [
    'test_app',
]

SECRET_KEY = 'dummy'
"""
create_file('test_settings.py', CODE)

============================================================



OBSERVATION:

[File test_settings.py created.]
[File: /workspace/test_settings.py (16 lines total after edit)]
1|
2|import os
3|os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_settings')
4|
5|DATABASES = {
6|    'default': {
7|        'ENGINE': 'django.db.backends.sqlite3',
8|        'NAME': ':memory:',
9|    }
10|}
11|
12|INSTALLED_APPS = [
13|    'test_app',
14|]
15|
16|SECRET_KEY = 'dummy'
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Now let's run the script to reproduce the error:
COMMAND:
python3 reproduce_error.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce_error.py", line 6, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 99, in __new__
    app_config = apps.get_containing_app_config(module)
  File "/testbed/django/apps/registry.py", line 252, in get_containing_app_config
    self.check_apps_ready()
  File "/testbed/django/apps/registry.py", line 134, in check_apps_ready
    settings.INSTALLED_APPS
  File "/testbed/django/conf/__init__.py", line 76, in __getattr__
    self._setup(name)
  File "/testbed/django/conf/__init__.py", line 61, in _setup
    % (desc, ENVIRONMENT_VARIABLE))
django.core.exceptions.ImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.


============================================================



ACTION:

THOUGHT: I see the issue. We need to configure Django settings before importing models. Let's modify the reproduce script:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings before importing models
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=['test_app'],
    SECRET_KEY='dummy'
)
django.setup()

from django.db import models
from django.db.models import Case, Count, When, Value

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100)
    status = models.BooleanField(default=False)

    class Meta:
        app_label = 'test_app'

# Reproduce the query
qs = TestModel.objects.annotate(
    count=Count(
        Case(
            When(status=True, then=Value(1)),
        ),
        distinct=True
    )
)

# Print the generated SQL
print(qs.query)
"""
create_file('reproduce_error.py', CODE)

============================================================



OBSERVATION:

[File reproduce_error.py already exists and File overwritten.]
[File: /workspace/reproduce_error.py (41 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings before importing models
7|settings.configure(
8|    DATABASES={
9|        'default': {
10|            'ENGINE': 'django.db.backends.sqlite3',
11|            'NAME': ':memory:',
12|        }
13|    },
14|    INSTALLED_APPS=['test_app'],
15|    SECRET_KEY='dummy'
16|)
17|django.setup()
18|
19|from django.db import models
20|from django.db.models import Case, Count, When, Value
21|
22|# Test model
23|class TestModel(models.Model):
24|    name = models.CharField(max_length=100)
25|    status = models.BooleanField(default=False)
26|
27|    class Meta:
28|        app_label = 'test_app'
29|
30|# Reproduce the query
31|qs = TestModel.objects.annotate(
32|    count=Count(
33|        Case(
34|            When(status=True, then=Value(1)),
35|        ),
36|        distinct=True
37|    )
38|)
39|
40|# Print the generated SQL
41|print(qs.query)
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Now let's run the script again to see the generated SQL and identify where the space is missing:
COMMAND:
python3 reproduce_error.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce_error.py", line 17, in <module>
    django.setup()
  File "/testbed/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/testbed/django/apps/registry.py", line 91, in populate
    app_config = AppConfig.create(entry)
  File "/testbed/django/apps/config.py", line 90, in create
    module = import_module(entry)
  File "/opt/miniconda3/envs/testbed/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 994, in _gcd_import
  File "<frozen importlib._bootstrap>", line 971, in _find_and_load
  File "<frozen importlib._bootstrap>", line 953, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'test_app'


============================================================



ACTION:

THOUGHT: I see the issue. We need to create a minimal test app structure. Let's modify our approach:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings before importing models
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=[
        'django.contrib.contenttypes',
        'django.contrib.auth',
    ],
    SECRET_KEY='dummy'
)
django.setup()

from django.db import models, connection
from django.db.models import Case, Count, When, Value

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100)
    status = models.BooleanField(default=False)

    class Meta:
        # Use managed = False to avoid table creation
        managed = False
        app_label = 'reproduce_error'

# Create the query
qs = TestModel.objects.annotate(
    count=Count(
        Case(
            When(status=True, then=Value(1)),
        ),
        distinct=True
    )
)

# Get the raw SQL query
print("Generated SQL:")
print(str(qs.query))
"""
create_file('reproduce_error.py', CODE)

============================================================



OBSERVATION:

[File reproduce_error.py already exists and File overwritten.]
[File: /workspace/reproduce_error.py (47 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings before importing models
7|settings.configure(
8|    DATABASES={
9|        'default': {
10|            'ENGINE': 'django.db.backends.sqlite3',
11|            'NAME': ':memory:',
12|        }
13|    },
14|    INSTALLED_APPS=[
15|        'django.contrib.contenttypes',
16|        'django.contrib.auth',
17|    ],
18|    SECRET_KEY='dummy'
19|)
20|django.setup()
21|
22|from django.db import models, connection
23|from django.db.models import Case, Count, When, Value
24|
25|# Test model
26|class TestModel(models.Model):
27|    name = models.CharField(max_length=100)
28|    status = models.BooleanField(default=False)
29|
30|    class Meta:
31|        # Use managed = False to avoid table creation
32|        managed = False
33|        app_label = 'reproduce_error'
34|
35|# Create the query
36|qs = TestModel.objects.annotate(
37|    count=Count(
38|        Case(
39|            When(status=True, then=Value(1)),
40|        ),
41|        distinct=True
42|    )
43|)
44|
45|# Get the raw SQL query
46|print("Generated SQL:")
47|print(str(qs.query))
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the script to see the generated SQL and identify where the space is missing:
COMMAND:
python3 reproduce_error.py

============================================================



OBSERVATION:

Generated SQL:
SELECT "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status", COUNT(DISTINCTCASE WHEN "reproduce_error_testmodel"."status" = True THEN 1 ELSE NULL END) AS "count" FROM "reproduce_error_testmodel" GROUP BY "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status"


============================================================



ACTION:

THOUGHT: Now I can see the issue clearly. In the generated SQL, there's no space between `DISTINCT` and `CASE` keywords:
```sql
COUNT(DISTINCTCASE WHEN ...)
```
It should be:
```sql
COUNT(DISTINCT CASE WHEN ...)
```

Let me check the Django source code to find where this SQL is being generated. This is likely in the database backend's SQL compiler or aggregation handling code.
CODE:
open_file('/workspace/django__django__3.0/django/db/models/aggregates.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/aggregates.py (155 lines total)]
1|"""
2|Classes to represent the definitions of aggregate functions.
3|"""
4|from django.core.exceptions import FieldError
5|from django.db.models.expressions import Case, Func, Star, When
6|from django.db.models.fields import IntegerField
7|from django.db.models.functions.mixins import (
8|    FixDurationInputMixin, NumericOutputFieldMixin,
9|)
10|
11|__all__ = [
12|    'Aggregate', 'Avg', 'Count', 'Max', 'Min', 'StdDev', 'Sum', 'Variance',
13|]
14|
15|
16|class Aggregate(Func):
17|    template = '%(function)s(%(distinct)s%(expressions)s)'
18|    contains_aggregate = True
19|    name = None
20|    filter_template = '%s FILTER (WHERE %%(filter)s)'
21|    window_compatible = True
22|    allow_distinct = False
23|
24|    def __init__(self, *expressions, distinct=False, filter=None, **extra):
25|        if distinct and not self.allow_distinct:
26|            raise TypeError("%s does not allow distinct." % self.__class__.__name__)
27|        self.distinct = distinct
28|        self.filter = filter
29|        super().__init__(*expressions, **extra)
30|
31|    def get_source_fields(self):
32|        # Don't return the filter expression since it's not a source field.
33|        return [e._output_field_or_none for e in super().get_source_expressions()]
34|
35|    def get_source_expressions(self):
36|        source_expressions = super().get_source_expressions()
37|        if self.filter:
38|            return source_expressions + [self.filter]
39|        return source_expressions
40|
41|    def set_source_expressions(self, exprs):
42|        self.filter = self.filter and exprs.pop()
43|        return super().set_source_expressions(exprs)
44|
45|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
46|        # Aggregates are not allowed in UPDATE queries, so ignore for_save
47|        c = super().resolve_expression(query, allow_joins, reuse, summarize)
48|        c.filter = c.filter and c.filter.resolve_expression(query, allow_joins, reuse, summarize)
49|        if not summarize:
50|            # Call Aggregate.get_source_expressions() to avoid
51|            # returning self.filter and including that in this loop.
52|            expressions = super(Aggregate, c).get_source_expressions()
53|            for index, expr in enumerate(expressions):
54|                if expr.contains_aggregate:
55|                    before_resolved = self.get_source_expressions()[index]
56|                    name = before_resolved.name if hasattr(before_resolved, 'name') else repr(before_resolved)
57|                    raise FieldError("Cannot compute %s('%s'): '%s' is an aggregate" % (c.name, name, name))
58|        return c
59|
60|    @property
61|    def default_alias(self):
62|        expressions = self.get_source_expressions()
63|        if len(expressions) == 1 and hasattr(expressions[0], 'name'):
64|            return '%s__%s' % (expressions[0].name, self.name.lower())
65|        raise TypeError("Complex expressions require an alias")
66|
67|    def get_group_by_cols(self):
68|        return []
69|
70|    def as_sql(self, compiler, connection, **extra_context):
71|        extra_context['distinct'] = 'DISTINCT' if self.distinct else ''
72|        if self.filter:
73|            if connection.features.supports_aggregate_filter_clause:
74|                filter_sql, filter_params = self.filter.as_sql(compiler, connection)
75|                template = self.filter_template % extra_context.get('template', self.template)
76|                sql, params = super().as_sql(
77|                    compiler, connection, template=template, filter=filter_sql,
78|                    **extra_context
79|                )
80|                return sql, params + filter_params
81|            else:
82|                copy = self.copy()
83|                copy.filter = None
84|                source_expressions = copy.get_source_expressions()
85|                condition = When(self.filter, then=source_expressions[0])
86|                copy.set_source_expressions([Case(condition)] + source_expressions[1:])
87|                return super(Aggregate, copy).as_sql(compiler, connection, **extra_context)
88|        return super().as_sql(compiler, connection, **extra_context)
89|
90|    def _get_repr_options(self):
91|        options = super()._get_repr_options()
92|        if self.distinct:
93|            options['distinct'] = self.distinct
94|        if self.filter:
95|            options['filter'] = self.filter
96|        return options
97|
98|
99|class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
100|    function = 'AVG'
101|    name = 'Avg'
102|
103|
104|class Count(Aggregate):
105|    function = 'COUNT'
106|    name = 'Count'
107|    output_field = IntegerField()
108|    allow_distinct = True
109|
110|    def __init__(self, expression, filter=None, **extra):
111|        if expression == '*':
112|            expression = Star()
113|        if isinstance(expression, Star) and filter is not None:
114|            raise ValueError('Star cannot be used with filter. Please specify a field.')
115|        super().__init__(expression, filter=filter, **extra)
116|
117|    def convert_value(self, value, expression, connection):
118|        return 0 if value is None else value
119|
120|
121|class Max(Aggregate):
122|    function = 'MAX'
123|    name = 'Max'
124|
125|
126|class Min(Aggregate):
127|    function = 'MIN'
128|    name = 'Min'
129|
130|
131|class StdDev(NumericOutputFieldMixin, Aggregate):
132|    name = 'StdDev'
133|
134|    def __init__(self, expression, sample=False, **extra):
135|        self.function = 'STDDEV_SAMP' if sample else 'STDDEV_POP'
136|        super().__init__(expression, **extra)
137|
138|    def _get_repr_options(self):
139|        return {**super()._get_repr_options(), 'sample': self.function == 'STDDEV_SAMP'}
140|
141|
142|class Sum(FixDurationInputMixin, Aggregate):
143|    function = 'SUM'
144|    name = 'Sum'
145|
146|
147|class Variance(NumericOutputFieldMixin, Aggregate):
148|    name = 'Variance'
149|
150|    def __init__(self, expression, sample=False, **extra):
151|        self.function = 'VAR_SAMP' if sample else 'VAR_POP'
152|        super().__init__(expression, **extra)
153|
154|    def _get_repr_options(self):
155|        return {**super()._get_repr_options(), 'sample': self.function == 'VAR_SAMP'}


============================================================



ACTION:

THOUGHT: I see the issue. In the `Aggregate` class, the SQL template is defined as:
```python
template = '%(function)s(%(distinct)s%(expressions)s)'
```

And in the `as_sql` method:
```python
extra_context['distinct'] = 'DISTINCT' if self.distinct else ''
```

The issue is that there's no space being added between `DISTINCT` and the expressions when both are present. Let me check the base `Func` class to see how expressions are handled:
CODE:
open_file('/workspace/django__django__3.0/django/db/models/expressions.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/expressions.py (1355 lines total)]
1|import copy
2|import datetime
3|import inspect
4|from decimal import Decimal
5|
6|from django.core.exceptions import EmptyResultSet, FieldError
7|from django.db import connection
8|from django.db.models import fields
9|from django.db.models.query_utils import Q
10|from django.utils.deconstruct import deconstructible
11|from django.utils.functional import cached_property
12|from django.utils.hashable import make_hashable
13|
14|
15|class SQLiteNumericMixin:
16|    """
17|    Some expressions with output_field=DecimalField() must be cast to
18|    numeric to be properly filtered.
19|    """
20|    def as_sqlite(self, compiler, connection, **extra_context):
21|        sql, params = self.as_sql(compiler, connection, **extra_context)
22|        try:
23|            if self.output_field.get_internal_type() == 'DecimalField':
24|                sql = 'CAST(%s AS NUMERIC)' % sql
25|        except FieldError:
26|            pass
27|        return sql, params
28|
29|
30|class Combinable:
31|    """
32|    Provide the ability to combine one or two objects with
33|    some connector. For example F('foo') + F('bar').
34|    """
35|
36|    # Arithmetic connectors
37|    ADD = '+'
38|    SUB = '-'
39|    MUL = '*'
40|    DIV = '/'
41|    POW = '^'
42|    # The following is a quoted % operator - it is quoted because it can be
43|    # used in strings that also have parameter substitution.
44|    MOD = '%%'
45|
46|    # Bitwise operators - note that these are generated by .bitand()
47|    # and .bitor(), the '&' and '|' are reserved for boolean operator
48|    # usage.
49|    BITAND = '&'
50|    BITOR = '|'
51|    BITLEFTSHIFT = '<<'
52|    BITRIGHTSHIFT = '>>'
53|
54|    def _combine(self, other, connector, reversed):
55|        if not hasattr(other, 'resolve_expression'):
56|            # everything must be resolvable to an expression
57|            if isinstance(other, datetime.timedelta):
58|                other = DurationValue(other, output_field=fields.DurationField())
59|            else:
60|                other = Value(other)
61|
62|        if reversed:
63|            return CombinedExpression(other, connector, self)
64|        return CombinedExpression(self, connector, other)
65|
66|    #############
67|    # OPERATORS #
68|    #############
69|
70|    def __neg__(self):
71|        return self._combine(-1, self.MUL, False)
72|
73|    def __add__(self, other):
74|        return self._combine(other, self.ADD, False)
75|
76|    def __sub__(self, other):
77|        return self._combine(other, self.SUB, False)
78|
79|    def __mul__(self, other):
80|        return self._combine(other, self.MUL, False)
81|
82|    def __truediv__(self, other):
83|        return self._combine(other, self.DIV, False)
84|
85|    def __mod__(self, other):
86|        return self._combine(other, self.MOD, False)
87|
88|    def __pow__(self, other):
89|        return self._combine(other, self.POW, False)
90|
91|    def __and__(self, other):
92|        raise NotImplementedError(
93|            "Use .bitand() and .bitor() for bitwise logical operations."
94|        )
95|
96|    def bitand(self, other):
97|        return self._combine(other, self.BITAND, False)
98|
99|    def bitleftshift(self, other):
100|        return self._combine(other, self.BITLEFTSHIFT, False)
101|
102|    def bitrightshift(self, other):
103|        return self._combine(other, self.BITRIGHTSHIFT, False)
104|
105|    def __or__(self, other):
106|        raise NotImplementedError(
107|            "Use .bitand() and .bitor() for bitwise logical operations."
108|        )
109|
110|    def bitor(self, other):
111|        return self._combine(other, self.BITOR, False)
112|
113|    def __radd__(self, other):
114|        return self._combine(other, self.ADD, True)
115|
116|    def __rsub__(self, other):
117|        return self._combine(other, self.SUB, True)
118|
119|    def __rmul__(self, other):
120|        return self._combine(other, self.MUL, True)
121|
122|    def __rtruediv__(self, other):
123|        return self._combine(other, self.DIV, True)
124|
125|    def __rmod__(self, other):
126|        return self._combine(other, self.MOD, True)
127|
128|    def __rpow__(self, other):
129|        return self._combine(other, self.POW, True)
130|
131|    def __rand__(self, other):
132|        raise NotImplementedError(
133|            "Use .bitand() and .bitor() for bitwise logical operations."
134|        )
135|
136|    def __ror__(self, other):
137|        raise NotImplementedError(
138|            "Use .bitand() and .bitor() for bitwise logical operations."
139|        )
140|
141|
142|@deconstructible
143|class BaseExpression:
144|    """Base class for all query expressions."""
145|
146|    # aggregate specific fields
147|    is_summary = False
148|    _output_field_resolved_to_none = False
149|    # Can the expression be used in a WHERE clause?
150|    filterable = True
151|    # Can the expression can be used as a source expression in Window?
152|    window_compatible = False
153|
154|    def __init__(self, output_field=None):
155|        if output_field is not None:
156|            self.output_field = output_field
157|
158|    def __getstate__(self):
159|        state = self.__dict__.copy()
160|        state.pop('convert_value', None)
161|        return state
162|
163|    def get_db_converters(self, connection):
164|        return (
165|            []
166|            if self.convert_value is self._convert_value_noop else
167|            [self.convert_value]
168|        ) + self.output_field.get_db_converters(connection)
169|
170|    def get_source_expressions(self):
171|        return []
172|
173|    def set_source_expressions(self, exprs):
174|        assert not exprs
175|
176|    def _parse_expressions(self, *expressions):
177|        return [
178|            arg if hasattr(arg, 'resolve_expression') else (
179|                F(arg) if isinstance(arg, str) else Value(arg)
180|            ) for arg in expressions
181|        ]
182|
183|    def as_sql(self, compiler, connection):
184|        """
185|        Responsible for returning a (sql, [params]) tuple to be included
186|        in the current query.
187|
188|        Different backends can provide their own implementation, by
189|        providing an `as_{vendor}` method and patching the Expression:
190|
191|        ```
192|        def override_as_sql(self, compiler, connection):
193|            # custom logic
194|            return super().as_sql(compiler, connection)
195|        setattr(Expression, 'as_' + connection.vendor, override_as_sql)
196|        ```
197|
198|        Arguments:
199|         * compiler: the query compiler responsible for generating the query.
200|           Must have a compile method, returning a (sql, [params]) tuple.
201|           Calling compiler(value) will return a quoted `value`.
202|
203|         * connection: the database connection used for the current query.
204|
205|        Return: (sql, params)
206|          Where `sql` is a string containing ordered sql parameters to be
207|          replaced with the elements of the list `params`.
208|        """
209|        raise NotImplementedError("Subclasses must implement as_sql()")
210|
211|    @cached_property
212|    def contains_aggregate(self):
213|        return any(expr and expr.contains_aggregate for expr in self.get_source_expressions())
214|
215|    @cached_property
216|    def contains_over_clause(self):
217|        return any(expr and expr.contains_over_clause for expr in self.get_source_expressions())
218|
219|    @cached_property
220|    def contains_column_references(self):
221|        return any(expr and expr.contains_column_references for expr in self.get_source_expressions())
222|
223|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
224|        """
225|        Provide the chance to do any preprocessing or validation before being
226|        added to the query.
227|
228|        Arguments:
229|         * query: the backend query implementation
230|         * allow_joins: boolean allowing or denying use of joins
231|           in this query
232|         * reuse: a set of reusable joins for multijoins
233|         * summarize: a terminal aggregate clause
234|         * for_save: whether this expression about to be used in a save or update
235|
236|        Return: an Expression to be added to the query.
237|        """
238|        c = self.copy()
239|        c.is_summary = summarize
240|        c.set_source_expressions([
241|            expr.resolve_expression(query, allow_joins, reuse, summarize)
242|            if expr else None
243|            for expr in c.get_source_expressions()
244|        ])
245|        return c
246|
247|    def _prepare(self, field):
248|        """Hook used by Lookup.get_prep_lookup() to do custom preparation."""
249|        return self
250|
251|    @property
252|    def field(self):
253|        return self.output_field
254|
255|    @cached_property
256|    def output_field(self):
257|        """Return the output type of this expressions."""
258|        output_field = self._resolve_output_field()
259|        if output_field is None:
260|            self._output_field_resolved_to_none = True
261|            raise FieldError('Cannot resolve expression type, unknown output_field')
262|        return output_field
263|
264|    @cached_property
265|    def _output_field_or_none(self):
266|        """
267|        Return the output field of this expression, or None if
268|        _resolve_output_field() didn't return an output type.
269|        """
270|        try:
271|            return self.output_field
272|        except FieldError:
273|            if not self._output_field_resolved_to_none:
274|                raise
275|
276|    def _resolve_output_field(self):
277|        """
278|        Attempt to infer the output type of the expression. If the output
279|        fields of all source fields match then, simply infer the same type
280|        here. This isn't always correct, but it makes sense most of the time.
281|
282|        Consider the difference between `2 + 2` and `2 / 3`. Inferring
283|        the type here is a convenience for the common case. The user should
284|        supply their own output_field with more complex computations.
285|
286|        If a source's output field resolves to None, exclude it from this check.
287|        If all sources are None, then an error is raised higher up the stack in
288|        the output_field property.
289|        """
290|        sources_iter = (source for source in self.get_source_fields() if source is not None)
291|        for output_field in sources_iter:
292|            if any(not isinstance(output_field, source.__class__) for source in sources_iter):
293|                raise FieldError('Expression contains mixed types. You must set output_field.')
294|            return output_field
295|
296|    @staticmethod
297|    def _convert_value_noop(value, expression, connection):
298|        return value
299|
300|    @cached_property
301|    def convert_value(self):
302|        """
303|        Expressions provide their own converters because users have the option
304|        of manually specifying the output_field which may be a different type
305|        from the one the database returns.
306|        """
307|        field = self.output_field
308|        internal_type = field.get_internal_type()
309|        if internal_type == 'FloatField':
310|            return lambda value, expression, connection: None if value is None else float(value)
311|        elif internal_type.endswith('IntegerField'):
312|            return lambda value, expression, connection: None if value is None else int(value)
313|        elif internal_type == 'DecimalField':
314|            return lambda value, expression, connection: None if value is None else Decimal(value)
315|        return self._convert_value_noop
316|
317|    def get_lookup(self, lookup):
318|        return self.output_field.get_lookup(lookup)
319|
320|    def get_transform(self, name):
321|        return self.output_field.get_transform(name)
322|
323|    def relabeled_clone(self, change_map):
324|        clone = self.copy()
325|        clone.set_source_expressions([
326|            e.relabeled_clone(change_map) if e is not None else None
327|            for e in self.get_source_expressions()
328|        ])
329|        return clone
330|
331|    def copy(self):
332|        return copy.copy(self)
333|
334|    def get_group_by_cols(self):
335|        if not self.contains_aggregate:
336|            return [self]
337|        cols = []
338|        for source in self.get_source_expressions():
339|            cols.extend(source.get_group_by_cols())
340|        return cols
341|
342|    def get_source_fields(self):
343|        """Return the underlying field types used by this aggregate."""
344|        return [e._output_field_or_none for e in self.get_source_expressions()]
345|
346|    def asc(self, **kwargs):
347|        return OrderBy(self, **kwargs)
348|
349|    def desc(self, **kwargs):
350|        return OrderBy(self, descending=True, **kwargs)
351|
352|    def reverse_ordering(self):
353|        return self
354|
355|    def flatten(self):
356|        """
357|        Recursively yield this expression and all subexpressions, in
358|        depth-first order.
359|        """
360|        yield self
361|        for expr in self.get_source_expressions():
362|            if expr:
363|                yield from expr.flatten()
364|
365|    @cached_property
366|    def identity(self):
367|        constructor_signature = inspect.signature(self.__init__)
368|        args, kwargs = self._constructor_args
369|        signature = constructor_signature.bind_partial(*args, **kwargs)
370|        signature.apply_defaults()
371|        arguments = signature.arguments.items()
372|        identity = [self.__class__]
373|        for arg, value in arguments:
374|            if isinstance(value, fields.Field):
375|                value = type(value)
376|            else:
377|                value = make_hashable(value)
378|            identity.append((arg, value))
379|        return tuple(identity)
380|
381|    def __eq__(self, other):
382|        return isinstance(other, BaseExpression) and other.identity == self.identity
383|
384|    def __hash__(self):
385|        return hash(self.identity)
386|
387|
388|class Expression(BaseExpression, Combinable):
389|    """An expression that can be combined with other expressions."""
390|    pass
391|
392|
393|class CombinedExpression(SQLiteNumericMixin, Expression):
394|
395|    def __init__(self, lhs, connector, rhs, output_field=None):
396|        super().__init__(output_field=output_field)
397|        self.connector = connector
398|        self.lhs = lhs
399|        self.rhs = rhs
400|
401|    def __repr__(self):
402|        return "<{}: {}>".format(self.__class__.__name__, self)
403|
404|    def __str__(self):
405|        return "{} {} {}".format(self.lhs, self.connector, self.rhs)
406|
407|    def get_source_expressions(self):
408|        return [self.lhs, self.rhs]
409|
410|    def set_source_expressions(self, exprs):
411|        self.lhs, self.rhs = exprs
412|
413|    def as_sql(self, compiler, connection):
414|        try:
415|            lhs_output = self.lhs.output_field
416|        except FieldError:
417|            lhs_output = None
418|        try:
419|            rhs_output = self.rhs.output_field
420|        except FieldError:
421|            rhs_output = None
422|        if (not connection.features.has_native_duration_field and
423|                ((lhs_output and lhs_output.get_internal_type() == 'DurationField') or
424|                 (rhs_output and rhs_output.get_internal_type() == 'DurationField'))):
425|            return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
426|        if (lhs_output and rhs_output and self.connector == self.SUB and
427|            lhs_output.get_internal_type() in {'DateField', 'DateTimeField', 'TimeField'} and
428|                lhs_output.get_internal_type() == rhs_output.get_internal_type()):
429|            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
430|        expressions = []
431|        expression_params = []
432|        sql, params = compiler.compile(self.lhs)
433|        expressions.append(sql)
434|        expression_params.extend(params)
435|        sql, params = compiler.compile(self.rhs)
436|        expressions.append(sql)
437|        expression_params.extend(params)
438|        # order of precedence
439|        expression_wrapper = '(%s)'
440|        sql = connection.ops.combine_expression(self.connector, expressions)
441|        return expression_wrapper % sql, expression_params
442|
443|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
444|        c = self.copy()
445|        c.is_summary = summarize
446|        c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
447|        c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
448|        return c
449|
450|
451|class DurationExpression(CombinedExpression):
452|    def compile(self, side, compiler, connection):
453|        if not isinstance(side, DurationValue):
454|            try:
455|                output = side.output_field
456|            except FieldError:
457|                pass
458|            else:
459|                if output.get_internal_type() == 'DurationField':
460|                    sql, params = compiler.compile(side)
461|                    return connection.ops.format_for_duration_arithmetic(sql), params
462|        return compiler.compile(side)
463|
464|    def as_sql(self, compiler, connection):
465|        connection.ops.check_expression_support(self)
466|        expressions = []
467|        expression_params = []
468|        sql, params = self.compile(self.lhs, compiler, connection)
469|        expressions.append(sql)
470|        expression_params.extend(params)
471|        sql, params = self.compile(self.rhs, compiler, connection)
472|        expressions.append(sql)
473|        expression_params.extend(params)
474|        # order of precedence
475|        expression_wrapper = '(%s)'
476|        sql = connection.ops.combine_duration_expression(self.connector, expressions)
477|        return expression_wrapper % sql, expression_params
478|
479|
480|class TemporalSubtraction(CombinedExpression):
481|    output_field = fields.DurationField()
482|
483|    def __init__(self, lhs, rhs):
484|        super().__init__(lhs, self.SUB, rhs)
485|
486|    def as_sql(self, compiler, connection):
487|        connection.ops.check_expression_support(self)
488|        lhs = compiler.compile(self.lhs, connection)
489|        rhs = compiler.compile(self.rhs, connection)
490|        return connection.ops.subtract_temporals(self.lhs.output_field.get_internal_type(), lhs, rhs)
491|
492|
493|@deconstructible
494|class F(Combinable):
495|    """An object capable of resolving references to existing query objects."""
496|    # Can the expression be used in a WHERE clause?
497|    filterable = True
498|
499|    def __init__(self, name):
500|        """
501|        Arguments:
502|         * name: the name of the field this expression references
503|        """
504|        self.name = name
505|
506|    def __repr__(self):
507|        return "{}({})".format(self.__class__.__name__, self.name)
508|
509|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
510|                           summarize=False, for_save=False, simple_col=False):
511|        return query.resolve_ref(self.name, allow_joins, reuse, summarize, simple_col)
512|
513|    def asc(self, **kwargs):
514|        return OrderBy(self, **kwargs)
515|
516|    def desc(self, **kwargs):
517|        return OrderBy(self, descending=True, **kwargs)
518|
519|    def __eq__(self, other):
520|        return self.__class__ == other.__class__ and self.name == other.name
521|
522|    def __hash__(self):
523|        return hash(self.name)
524|
525|
526|class ResolvedOuterRef(F):
527|    """
528|    An object that contains a reference to an outer query.
529|
530|    In this case, the reference to the outer query has been resolved because
531|    the inner query has been used as a subquery.
532|    """
533|    def as_sql(self, *args, **kwargs):
534|        raise ValueError(
535|            'This queryset contains a reference to an outer query and may '
536|            'only be used in a subquery.'
537|        )
538|
539|    def _prepare(self, output_field=None):
540|        return self
541|
542|    def relabeled_clone(self, relabels):
543|        return self
544|
545|
546|class OuterRef(F):
547|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
548|                           summarize=False, for_save=False, simple_col=False):
549|        if isinstance(self.name, self.__class__):
550|            return self.name
551|        return ResolvedOuterRef(self.name)
552|
553|    def _prepare(self, output_field=None):
554|        return self
555|
556|
557|class Func(SQLiteNumericMixin, Expression):
558|    """An SQL function call."""
559|    function = None
560|    template = '%(function)s(%(expressions)s)'
561|    arg_joiner = ', '
562|    arity = None  # The number of arguments the function accepts.
563|
564|    def __init__(self, *expressions, output_field=None, **extra):
565|        if self.arity is not None and len(expressions) != self.arity:
566|            raise TypeError(
567|                "'%s' takes exactly %s %s (%s given)" % (
568|                    self.__class__.__name__,
569|                    self.arity,
570|                    "argument" if self.arity == 1 else "arguments",
571|                    len(expressions),
572|                )
573|            )
574|        super().__init__(output_field=output_field)
575|        self.source_expressions = self._parse_expressions(*expressions)
576|        self.extra = extra
577|
578|    def __repr__(self):
579|        args = self.arg_joiner.join(str(arg) for arg in self.source_expressions)
580|        extra = {**self.extra, **self._get_repr_options()}
581|        if extra:
582|            extra = ', '.join(str(key) + '=' + str(val) for key, val in sorted(extra.items()))
583|            return "{}({}, {})".format(self.__class__.__name__, args, extra)
584|        return "{}({})".format(self.__class__.__name__, args)
585|
586|    def _get_repr_options(self):
587|        """Return a dict of extra __init__() options to include in the repr."""
588|        return {}
589|
590|    def get_source_expressions(self):
591|        return self.source_expressions
592|
593|    def set_source_expressions(self, exprs):
594|        self.source_expressions = exprs
595|
596|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
597|        c = self.copy()
598|        c.is_summary = summarize
599|        for pos, arg in enumerate(c.source_expressions):
600|            c.source_expressions[pos] = arg.resolve_expression(query, allow_joins, reuse, summarize, for_save)
601|        return c
602|
603|    def as_sql(self, compiler, connection, function=None, template=None, arg_joiner=None, **extra_context):
604|        connection.ops.check_expression_support(self)
605|        sql_parts = []
606|        params = []
607|        for arg in self.source_expressions:
608|            arg_sql, arg_params = compiler.compile(arg)
609|            sql_parts.append(arg_sql)
610|            params.extend(arg_params)
611|        data = {**self.extra, **extra_context}
612|        # Use the first supplied value in this order: the parameter to this
613|        # method, a value supplied in __init__()'s **extra (the value in
614|        # `data`), or the value defined on the class.
615|        if function is not None:
616|            data['function'] = function
617|        else:
618|            data.setdefault('function', self.function)
619|        template = template or data.get('template', self.template)
620|        arg_joiner = arg_joiner or data.get('arg_joiner', self.arg_joiner)
621|        data['expressions'] = data['field'] = arg_joiner.join(sql_parts)
622|        return template % data, params
623|
624|    def copy(self):
625|        copy = super().copy()
626|        copy.source_expressions = self.source_expressions[:]
627|        copy.extra = self.extra.copy()
628|        return copy
629|
630|
631|class Value(Expression):
632|    """Represent a wrapped value as a node within an expression."""
633|    def __init__(self, value, output_field=None):
634|        """
635|        Arguments:
636|         * value: the value this expression represents. The value will be
637|           added into the sql parameter list and properly quoted.
638|
639|         * output_field: an instance of the model field type that this
640|           expression will return, such as IntegerField() or CharField().
641|        """
642|        super().__init__(output_field=output_field)
643|        self.value = value
644|
645|    def __repr__(self):
646|        return "{}({})".format(self.__class__.__name__, self.value)
647|
648|    def as_sql(self, compiler, connection):
649|        connection.ops.check_expression_support(self)
650|        val = self.value
651|        output_field = self._output_field_or_none
652|        if output_field is not None:
653|            if self.for_save:
654|                val = output_field.get_db_prep_save(val, connection=connection)
655|            else:
656|                val = output_field.get_db_prep_value(val, connection=connection)
657|            if hasattr(output_field, 'get_placeholder'):
658|                return output_field.get_placeholder(val, compiler, connection), [val]
659|        if val is None:
660|            # cx_Oracle does not always convert None to the appropriate
661|            # NULL type (like in case expressions using numbers), so we
662|            # use a literal SQL NULL
663|            return 'NULL', []
664|        return '%s', [val]
665|
666|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
667|        c = super().resolve_expression(query, allow_joins, reuse, summarize, for_save)
668|        c.for_save = for_save
669|        return c
670|
671|    def get_group_by_cols(self):
672|        return []
673|
674|
675|class DurationValue(Value):
676|    def as_sql(self, compiler, connection):
677|        connection.ops.check_expression_support(self)
678|        if connection.features.has_native_duration_field:
679|            return super().as_sql(compiler, connection)
680|        return connection.ops.date_interval_sql(self.value), []
681|
682|
683|class RawSQL(Expression):
684|    def __init__(self, sql, params, output_field=None):
685|        if output_field is None:
686|            output_field = fields.Field()
687|        self.sql, self.params = sql, params
688|        super().__init__(output_field=output_field)
689|
690|    def __repr__(self):
691|        return "{}({}, {})".format(self.__class__.__name__, self.sql, self.params)
692|
693|    def as_sql(self, compiler, connection):
694|        return '(%s)' % self.sql, self.params
695|
696|    def get_group_by_cols(self):
697|        return [self]
698|
699|
700|class Star(Expression):
701|    def __repr__(self):
702|        return "'*'"
703|
704|    def as_sql(self, compiler, connection):
705|        return '*', []
706|
707|
708|class Random(Expression):
709|    output_field = fields.FloatField()
710|
711|    def __repr__(self):
712|        return "Random()"
713|
714|    def as_sql(self, compiler, connection):
715|        return connection.ops.random_function_sql(), []
716|
717|
718|class Col(Expression):
719|
720|    contains_column_references = True
721|
722|    def __init__(self, alias, target, output_field=None):
723|        if output_field is None:
724|            output_field = target
725|        super().__init__(output_field=output_field)
726|        self.alias, self.target = alias, target
727|
728|    def __repr__(self):
729|        return "{}({}, {})".format(
730|            self.__class__.__name__, self.alias, self.target)
731|
732|    def as_sql(self, compiler, connection):
733|        qn = compiler.quote_name_unless_alias
734|        return "%s.%s" % (qn(self.alias), qn(self.target.column)), []
735|
736|    def relabeled_clone(self, relabels):
737|        return self.__class__(relabels.get(self.alias, self.alias), self.target, self.output_field)
738|
739|    def get_group_by_cols(self):
740|        return [self]
741|
742|    def get_db_converters(self, connection):
743|        if self.target == self.output_field:
744|            return self.output_field.get_db_converters(connection)
745|        return (self.output_field.get_db_converters(connection) +
746|                self.target.get_db_converters(connection))
747|
748|
749|class SimpleCol(Expression):
750|    """
751|    Represents the SQL of a column name without the table name.
752|
753|    This variant of Col doesn't include the table name (or an alias) to
754|    avoid a syntax error in check constraints.
755|    """
756|    contains_column_references = True
757|
758|    def __init__(self, target, output_field=None):
759|        if output_field is None:
760|            output_field = target
761|        super().__init__(output_field=output_field)
762|        self.target = target
763|
764|    def __repr__(self):
765|        return '{}({})'.format(self.__class__.__name__, self.target)
766|
767|    def as_sql(self, compiler, connection):
768|        qn = compiler.quote_name_unless_alias
769|        return qn(self.target.column), []
770|
771|    def get_group_by_cols(self):
772|        return [self]
773|
774|    def get_db_converters(self, connection):
775|        if self.target == self.output_field:
776|            return self.output_field.get_db_converters(connection)
777|        return (
778|            self.output_field.get_db_converters(connection) +
779|            self.target.get_db_converters(connection)
780|        )
781|
782|
783|class Ref(Expression):
784|    """
785|    Reference to column alias of the query. For example, Ref('sum_cost') in
786|    qs.annotate(sum_cost=Sum('cost')) query.
787|    """
788|    def __init__(self, refs, source):
789|        super().__init__()
790|        self.refs, self.source = refs, source
791|
792|    def __repr__(self):
793|        return "{}({}, {})".format(self.__class__.__name__, self.refs, self.source)
794|
795|    def get_source_expressions(self):
796|        return [self.source]
797|
798|    def set_source_expressions(self, exprs):
799|        self.source, = exprs
800|
801|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
802|        # The sub-expression `source` has already been resolved, as this is
803|        # just a reference to the name of `source`.
804|        return self
805|
806|    def relabeled_clone(self, relabels):
807|        return self
808|
809|    def as_sql(self, compiler, connection):
810|        return connection.ops.quote_name(self.refs), []
811|
812|    def get_group_by_cols(self):
813|        return [self]
814|
815|
816|class ExpressionList(Func):
817|    """
818|    An expression containing multiple expressions. Can be used to provide a
819|    list of expressions as an argument to another expression, like an
820|    ordering clause.
821|    """
822|    template = '%(expressions)s'
823|
824|    def __init__(self, *expressions, **extra):
825|        if not expressions:
826|            raise ValueError('%s requires at least one expression.' % self.__class__.__name__)
827|        super().__init__(*expressions, **extra)
828|
829|    def __str__(self):
830|        return self.arg_joiner.join(str(arg) for arg in self.source_expressions)
831|
832|
833|class ExpressionWrapper(Expression):
834|    """
835|    An expression that can wrap another expression so that it can provide
836|    extra context to the inner expression, such as the output_field.
837|    """
838|
839|    def __init__(self, expression, output_field):
840|        super().__init__(output_field=output_field)
841|        self.expression = expression
842|
843|    def set_source_expressions(self, exprs):
844|        self.expression = exprs[0]
845|
846|    def get_source_expressions(self):
847|        return [self.expression]
848|
849|    def as_sql(self, compiler, connection):
850|        return self.expression.as_sql(compiler, connection)
851|
852|    def __repr__(self):
853|        return "{}({})".format(self.__class__.__name__, self.expression)
854|
855|
856|class When(Expression):
857|    template = 'WHEN %(condition)s THEN %(result)s'
858|
859|    def __init__(self, condition=None, then=None, **lookups):
860|        if lookups and condition is None:
861|            condition, lookups = Q(**lookups), None
862|        if condition is None or not getattr(condition, 'conditional', False) or lookups:
863|            raise TypeError("__init__() takes either a Q object or lookups as keyword arguments")
864|        if isinstance(condition, Q) and not condition:
865|            raise ValueError("An empty Q() can't be used as a When() condition.")
866|        super().__init__(output_field=None)
867|        self.condition = condition
868|        self.result = self._parse_expressions(then)[0]
869|
870|    def __str__(self):
871|        return "WHEN %r THEN %r" % (self.condition, self.result)
872|
873|    def __repr__(self):
874|        return "<%s: %s>" % (self.__class__.__name__, self)
875|
876|    def get_source_expressions(self):
877|        return [self.condition, self.result]
878|
879|    def set_source_expressions(self, exprs):
880|        self.condition, self.result = exprs
881|
882|    def get_source_fields(self):
883|        # We're only interested in the fields of the result expressions.
884|        return [self.result._output_field_or_none]
885|
886|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
887|        c = self.copy()
888|        c.is_summary = summarize
889|        if hasattr(c.condition, 'resolve_expression'):
890|            c.condition = c.condition.resolve_expression(query, allow_joins, reuse, summarize, False)
891|        c.result = c.result.resolve_expression(query, allow_joins, reuse, summarize, for_save)
892|        return c
893|
894|    def as_sql(self, compiler, connection, template=None, **extra_context):
895|        connection.ops.check_expression_support(self)
896|        template_params = extra_context
897|        sql_params = []
898|        condition_sql, condition_params = compiler.compile(self.condition)
899|        template_params['condition'] = condition_sql
900|        sql_params.extend(condition_params)
901|        result_sql, result_params = compiler.compile(self.result)
902|        template_params['result'] = result_sql
903|        sql_params.extend(result_params)
904|        template = template or self.template
905|        return template % template_params, sql_params
906|
907|    def get_group_by_cols(self):
908|        # This is not a complete expression and cannot be used in GROUP BY.
909|        cols = []
910|        for source in self.get_source_expressions():
911|            cols.extend(source.get_group_by_cols())
912|        return cols
913|
914|
915|class Case(Expression):
916|    """
917|    An SQL searched CASE expression:
918|
919|        CASE
920|            WHEN n > 0
921|                THEN 'positive'
922|            WHEN n < 0
923|                THEN 'negative'
924|            ELSE 'zero'
925|        END
926|    """
927|    template = 'CASE %(cases)s ELSE %(default)s END'
928|    case_joiner = ' '
929|
930|    def __init__(self, *cases, default=None, output_field=None, **extra):
931|        if not all(isinstance(case, When) for case in cases):
932|            raise TypeError("Positional arguments must all be When objects.")
933|        super().__init__(output_field)
934|        self.cases = list(cases)
935|        self.default = self._parse_expressions(default)[0]
936|        self.extra = extra
937|
938|    def __str__(self):
939|        return "CASE %s, ELSE %r" % (', '.join(str(c) for c in self.cases), self.default)
940|
941|    def __repr__(self):
942|        return "<%s: %s>" % (self.__class__.__name__, self)
943|
944|    def get_source_expressions(self):
945|        return self.cases + [self.default]
946|
947|    def set_source_expressions(self, exprs):
948|        *self.cases, self.default = exprs
949|
950|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
951|        c = self.copy()
952|        c.is_summary = summarize
953|        for pos, case in enumerate(c.cases):
954|            c.cases[pos] = case.resolve_expression(query, allow_joins, reuse, summarize, for_save)
955|        c.default = c.default.resolve_expression(query, allow_joins, reuse, summarize, for_save)
956|        return c
957|
958|    def copy(self):
959|        c = super().copy()
960|        c.cases = c.cases[:]
961|        return c
962|
963|    def as_sql(self, compiler, connection, template=None, case_joiner=None, **extra_context):
964|        connection.ops.check_expression_support(self)
965|        if not self.cases:
966|            return compiler.compile(self.default)
967|        template_params = {**self.extra, **extra_context}
968|        case_parts = []
969|        sql_params = []
970|        for case in self.cases:
971|            try:
972|                case_sql, case_params = compiler.compile(case)
973|            except EmptyResultSet:
974|                continue
975|            case_parts.append(case_sql)
976|            sql_params.extend(case_params)
977|        default_sql, default_params = compiler.compile(self.default)
978|        if not case_parts:
979|            return default_sql, default_params
980|        case_joiner = case_joiner or self.case_joiner
981|        template_params['cases'] = case_joiner.join(case_parts)
982|        template_params['default'] = default_sql
983|        sql_params.extend(default_params)
984|        template = template or template_params.get('template', self.template)
985|        sql = template % template_params
986|        if self._output_field_or_none is not None:
987|            sql = connection.ops.unification_cast_sql(self.output_field) % sql
988|        return sql, sql_params
989|
990|
991|class Subquery(Expression):
992|    """
993|    An explicit subquery. It may contain OuterRef() references to the outer
994|    query which will be resolved when it is applied to that query.
995|    """
996|    template = '(%(subquery)s)'
997|    contains_aggregate = False
998|
999|    def __init__(self, queryset, output_field=None, **extra):
1000|        self.queryset = queryset
(355 more lines below)


============================================================



ACTION:

THOUGHT: Let me scroll down to see the `Func` class definition:
CODE:
scroll_down()

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/expressions.py (1355 lines total)]
(355 more lines above)
356|        """
357|        Recursively yield this expression and all subexpressions, in
358|        depth-first order.
359|        """
360|        yield self
361|        for expr in self.get_source_expressions():
362|            if expr:
363|                yield from expr.flatten()
364|
365|    @cached_property
366|    def identity(self):
367|        constructor_signature = inspect.signature(self.__init__)
368|        args, kwargs = self._constructor_args
369|        signature = constructor_signature.bind_partial(*args, **kwargs)
370|        signature.apply_defaults()
371|        arguments = signature.arguments.items()
372|        identity = [self.__class__]
373|        for arg, value in arguments:
374|            if isinstance(value, fields.Field):
375|                value = type(value)
376|            else:
377|                value = make_hashable(value)
378|            identity.append((arg, value))
379|        return tuple(identity)
380|
381|    def __eq__(self, other):
382|        return isinstance(other, BaseExpression) and other.identity == self.identity
383|
384|    def __hash__(self):
385|        return hash(self.identity)
386|
387|
388|class Expression(BaseExpression, Combinable):
389|    """An expression that can be combined with other expressions."""
390|    pass
391|
392|
393|class CombinedExpression(SQLiteNumericMixin, Expression):
394|
395|    def __init__(self, lhs, connector, rhs, output_field=None):
396|        super().__init__(output_field=output_field)
397|        self.connector = connector
398|        self.lhs = lhs
399|        self.rhs = rhs
400|
401|    def __repr__(self):
402|        return "<{}: {}>".format(self.__class__.__name__, self)
403|
404|    def __str__(self):
405|        return "{} {} {}".format(self.lhs, self.connector, self.rhs)
406|
407|    def get_source_expressions(self):
408|        return [self.lhs, self.rhs]
409|
410|    def set_source_expressions(self, exprs):
411|        self.lhs, self.rhs = exprs
412|
413|    def as_sql(self, compiler, connection):
414|        try:
415|            lhs_output = self.lhs.output_field
416|        except FieldError:
417|            lhs_output = None
418|        try:
419|            rhs_output = self.rhs.output_field
420|        except FieldError:
421|            rhs_output = None
422|        if (not connection.features.has_native_duration_field and
423|                ((lhs_output and lhs_output.get_internal_type() == 'DurationField') or
424|                 (rhs_output and rhs_output.get_internal_type() == 'DurationField'))):
425|            return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
426|        if (lhs_output and rhs_output and self.connector == self.SUB and
427|            lhs_output.get_internal_type() in {'DateField', 'DateTimeField', 'TimeField'} and
428|                lhs_output.get_internal_type() == rhs_output.get_internal_type()):
429|            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
430|        expressions = []
431|        expression_params = []
432|        sql, params = compiler.compile(self.lhs)
433|        expressions.append(sql)
434|        expression_params.extend(params)
435|        sql, params = compiler.compile(self.rhs)
436|        expressions.append(sql)
437|        expression_params.extend(params)
438|        # order of precedence
439|        expression_wrapper = '(%s)'
440|        sql = connection.ops.combine_expression(self.connector, expressions)
441|        return expression_wrapper % sql, expression_params
442|
443|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
444|        c = self.copy()
445|        c.is_summary = summarize
446|        c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
447|        c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
448|        return c
449|
450|
451|class DurationExpression(CombinedExpression):
452|    def compile(self, side, compiler, connection):
453|        if not isinstance(side, DurationValue):
454|            try:
455|                output = side.output_field
456|            except FieldError:
457|                pass
458|            else:
459|                if output.get_internal_type() == 'DurationField':
460|                    sql, params = compiler.compile(side)
461|                    return connection.ops.format_for_duration_arithmetic(sql), params
462|        return compiler.compile(side)
463|
464|    def as_sql(self, compiler, connection):
465|        connection.ops.check_expression_support(self)
466|        expressions = []
467|        expression_params = []
468|        sql, params = self.compile(self.lhs, compiler, connection)
469|        expressions.append(sql)
470|        expression_params.extend(params)
471|        sql, params = self.compile(self.rhs, compiler, connection)
472|        expressions.append(sql)
473|        expression_params.extend(params)
474|        # order of precedence
475|        expression_wrapper = '(%s)'
476|        sql = connection.ops.combine_duration_expression(self.connector, expressions)
477|        return expression_wrapper % sql, expression_params
478|
479|
480|class TemporalSubtraction(CombinedExpression):
481|    output_field = fields.DurationField()
482|
483|    def __init__(self, lhs, rhs):
484|        super().__init__(lhs, self.SUB, rhs)
485|
486|    def as_sql(self, compiler, connection):
487|        connection.ops.check_expression_support(self)
488|        lhs = compiler.compile(self.lhs, connection)
489|        rhs = compiler.compile(self.rhs, connection)
490|        return connection.ops.subtract_temporals(self.lhs.output_field.get_internal_type(), lhs, rhs)
491|
492|
493|@deconstructible
494|class F(Combinable):
495|    """An object capable of resolving references to existing query objects."""
496|    # Can the expression be used in a WHERE clause?
497|    filterable = True
498|
499|    def __init__(self, name):
500|        """
501|        Arguments:
502|         * name: the name of the field this expression references
503|        """
504|        self.name = name
505|
506|    def __repr__(self):
507|        return "{}({})".format(self.__class__.__name__, self.name)
508|
509|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
510|                           summarize=False, for_save=False, simple_col=False):
511|        return query.resolve_ref(self.name, allow_joins, reuse, summarize, simple_col)
512|
513|    def asc(self, **kwargs):
514|        return OrderBy(self, **kwargs)
515|
516|    def desc(self, **kwargs):
517|        return OrderBy(self, descending=True, **kwargs)
518|
519|    def __eq__(self, other):
520|        return self.__class__ == other.__class__ and self.name == other.name
521|
522|    def __hash__(self):
523|        return hash(self.name)
524|
525|
526|class ResolvedOuterRef(F):
527|    """
528|    An object that contains a reference to an outer query.
529|
530|    In this case, the reference to the outer query has been resolved because
531|    the inner query has been used as a subquery.
532|    """
533|    def as_sql(self, *args, **kwargs):
534|        raise ValueError(
535|            'This queryset contains a reference to an outer query and may '
536|            'only be used in a subquery.'
537|        )
538|
539|    def _prepare(self, output_field=None):
540|        return self
541|
542|    def relabeled_clone(self, relabels):
543|        return self
544|
545|
546|class OuterRef(F):
547|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
548|                           summarize=False, for_save=False, simple_col=False):
549|        if isinstance(self.name, self.__class__):
550|            return self.name
551|        return ResolvedOuterRef(self.name)
552|
553|    def _prepare(self, output_field=None):
554|        return self
555|
556|
557|class Func(SQLiteNumericMixin, Expression):
558|    """An SQL function call."""
559|    function = None
560|    template = '%(function)s(%(expressions)s)'
561|    arg_joiner = ', '
562|    arity = None  # The number of arguments the function accepts.
563|
564|    def __init__(self, *expressions, output_field=None, **extra):
565|        if self.arity is not None and len(expressions) != self.arity:
566|            raise TypeError(
567|                "'%s' takes exactly %s %s (%s given)" % (
568|                    self.__class__.__name__,
569|                    self.arity,
570|                    "argument" if self.arity == 1 else "arguments",
571|                    len(expressions),
572|                )
573|            )
574|        super().__init__(output_field=output_field)
575|        self.source_expressions = self._parse_expressions(*expressions)
576|        self.extra = extra
577|
578|    def __repr__(self):
579|        args = self.arg_joiner.join(str(arg) for arg in self.source_expressions)
580|        extra = {**self.extra, **self._get_repr_options()}
581|        if extra:
582|            extra = ', '.join(str(key) + '=' + str(val) for key, val in sorted(extra.items()))
583|            return "{}({}, {})".format(self.__class__.__name__, args, extra)
584|        return "{}({})".format(self.__class__.__name__, args)
585|
586|    def _get_repr_options(self):
587|        """Return a dict of extra __init__() options to include in the repr."""
588|        return {}
589|
590|    def get_source_expressions(self):
591|        return self.source_expressions
592|
593|    def set_source_expressions(self, exprs):
594|        self.source_expressions = exprs
595|
596|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
597|        c = self.copy()
598|        c.is_summary = summarize
599|        for pos, arg in enumerate(c.source_expressions):
600|            c.source_expressions[pos] = arg.resolve_expression(query, allow_joins, reuse, summarize, for_save)
601|        return c
602|
603|    def as_sql(self, compiler, connection, function=None, template=None, arg_joiner=None, **extra_context):
604|        connection.ops.check_expression_support(self)
605|        sql_parts = []
606|        params = []
607|        for arg in self.source_expressions:
608|            arg_sql, arg_params = compiler.compile(arg)
609|            sql_parts.append(arg_sql)
610|            params.extend(arg_params)
611|        data = {**self.extra, **extra_context}
612|        # Use the first supplied value in this order: the parameter to this
613|        # method, a value supplied in __init__()'s **extra (the value in
614|        # `data`), or the value defined on the class.
615|        if function is not None:
616|            data['function'] = function
617|        else:
618|            data.setdefault('function', self.function)
619|        template = template or data.get('template', self.template)
620|        arg_joiner = arg_joiner or data.get('arg_joiner', self.arg_joiner)
621|        data['expressions'] = data['field'] = arg_joiner.join(sql_parts)
622|        return template % data, params
623|
624|    def copy(self):
625|        copy = super().copy()
626|        copy.source_expressions = self.source_expressions[:]
627|        copy.extra = self.extra.copy()
628|        return copy
629|
630|
631|class Value(Expression):
632|    """Represent a wrapped value as a node within an expression."""
633|    def __init__(self, value, output_field=None):
634|        """
635|        Arguments:
636|         * value: the value this expression represents. The value will be
637|           added into the sql parameter list and properly quoted.
638|
639|         * output_field: an instance of the model field type that this
640|           expression will return, such as IntegerField() or CharField().
641|        """
642|        super().__init__(output_field=output_field)
643|        self.value = value
644|
645|    def __repr__(self):
646|        return "{}({})".format(self.__class__.__name__, self.value)
647|
648|    def as_sql(self, compiler, connection):
649|        connection.ops.check_expression_support(self)
650|        val = self.value
651|        output_field = self._output_field_or_none
652|        if output_field is not None:
653|            if self.for_save:
654|                val = output_field.get_db_prep_save(val, connection=connection)
655|            else:
656|                val = output_field.get_db_prep_value(val, connection=connection)
657|            if hasattr(output_field, 'get_placeholder'):
658|                return output_field.get_placeholder(val, compiler, connection), [val]
659|        if val is None:
660|            # cx_Oracle does not always convert None to the appropriate
661|            # NULL type (like in case expressions using numbers), so we
662|            # use a literal SQL NULL
663|            return 'NULL', []
664|        return '%s', [val]
665|
666|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
667|        c = super().resolve_expression(query, allow_joins, reuse, summarize, for_save)
668|        c.for_save = for_save
669|        return c
670|
671|    def get_group_by_cols(self):
672|        return []
673|
674|
675|class DurationValue(Value):
676|    def as_sql(self, compiler, connection):
677|        connection.ops.check_expression_support(self)
678|        if connection.features.has_native_duration_field:
679|            return super().as_sql(compiler, connection)
680|        return connection.ops.date_interval_sql(self.value), []
681|
682|
683|class RawSQL(Expression):
684|    def __init__(self, sql, params, output_field=None):
685|        if output_field is None:
686|            output_field = fields.Field()
687|        self.sql, self.params = sql, params
688|        super().__init__(output_field=output_field)
689|
690|    def __repr__(self):
691|        return "{}({}, {})".format(self.__class__.__name__, self.sql, self.params)
692|
693|    def as_sql(self, compiler, connection):
694|        return '(%s)' % self.sql, self.params
695|
696|    def get_group_by_cols(self):
697|        return [self]
698|
699|
700|class Star(Expression):
701|    def __repr__(self):
702|        return "'*'"
703|
704|    def as_sql(self, compiler, connection):
705|        return '*', []
706|
707|
708|class Random(Expression):
709|    output_field = fields.FloatField()
710|
711|    def __repr__(self):
712|        return "Random()"
713|
714|    def as_sql(self, compiler, connection):
715|        return connection.ops.random_function_sql(), []
716|
717|
718|class Col(Expression):
719|
720|    contains_column_references = True
721|
722|    def __init__(self, alias, target, output_field=None):
723|        if output_field is None:
724|            output_field = target
725|        super().__init__(output_field=output_field)
726|        self.alias, self.target = alias, target
727|
728|    def __repr__(self):
729|        return "{}({}, {})".format(
730|            self.__class__.__name__, self.alias, self.target)
731|
732|    def as_sql(self, compiler, connection):
733|        qn = compiler.quote_name_unless_alias
734|        return "%s.%s" % (qn(self.alias), qn(self.target.column)), []
735|
736|    def relabeled_clone(self, relabels):
737|        return self.__class__(relabels.get(self.alias, self.alias), self.target, self.output_field)
738|
739|    def get_group_by_cols(self):
740|        return [self]
741|
742|    def get_db_converters(self, connection):
743|        if self.target == self.output_field:
744|            return self.output_field.get_db_converters(connection)
745|        return (self.output_field.get_db_converters(connection) +
746|                self.target.get_db_converters(connection))
747|
748|
749|class SimpleCol(Expression):
750|    """
751|    Represents the SQL of a column name without the table name.
752|
753|    This variant of Col doesn't include the table name (or an alias) to
754|    avoid a syntax error in check constraints.
755|    """
756|    contains_column_references = True
757|
758|    def __init__(self, target, output_field=None):
759|        if output_field is None:
760|            output_field = target
761|        super().__init__(output_field=output_field)
762|        self.target = target
763|
764|    def __repr__(self):
765|        return '{}({})'.format(self.__class__.__name__, self.target)
766|
767|    def as_sql(self, compiler, connection):
768|        qn = compiler.quote_name_unless_alias
769|        return qn(self.target.column), []
770|
771|    def get_group_by_cols(self):
772|        return [self]
773|
774|    def get_db_converters(self, connection):
775|        if self.target == self.output_field:
776|            return self.output_field.get_db_converters(connection)
777|        return (
778|            self.output_field.get_db_converters(connection) +
779|            self.target.get_db_converters(connection)
780|        )
781|
782|
783|class Ref(Expression):
784|    """
785|    Reference to column alias of the query. For example, Ref('sum_cost') in
786|    qs.annotate(sum_cost=Sum('cost')) query.
787|    """
788|    def __init__(self, refs, source):
789|        super().__init__()
790|        self.refs, self.source = refs, source
791|
792|    def __repr__(self):
793|        return "{}({}, {})".format(self.__class__.__name__, self.refs, self.source)
794|
795|    def get_source_expressions(self):
796|        return [self.source]
797|
798|    def set_source_expressions(self, exprs):
799|        self.source, = exprs
800|
801|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
802|        # The sub-expression `source` has already been resolved, as this is
803|        # just a reference to the name of `source`.
804|        return self
805|
806|    def relabeled_clone(self, relabels):
807|        return self
808|
809|    def as_sql(self, compiler, connection):
810|        return connection.ops.quote_name(self.refs), []
811|
812|    def get_group_by_cols(self):
813|        return [self]
814|
815|
816|class ExpressionList(Func):
817|    """
818|    An expression containing multiple expressions. Can be used to provide a
819|    list of expressions as an argument to another expression, like an
820|    ordering clause.
821|    """
822|    template = '%(expressions)s'
823|
824|    def __init__(self, *expressions, **extra):
825|        if not expressions:
826|            raise ValueError('%s requires at least one expression.' % self.__class__.__name__)
827|        super().__init__(*expressions, **extra)
828|
829|    def __str__(self):
830|        return self.arg_joiner.join(str(arg) for arg in self.source_expressions)
831|
832|
833|class ExpressionWrapper(Expression):
834|    """
835|    An expression that can wrap another expression so that it can provide
836|    extra context to the inner expression, such as the output_field.
837|    """
838|
839|    def __init__(self, expression, output_field):
840|        super().__init__(output_field=output_field)
841|        self.expression = expression
842|
843|    def set_source_expressions(self, exprs):
844|        self.expression = exprs[0]
845|
846|    def get_source_expressions(self):
847|        return [self.expression]
848|
849|    def as_sql(self, compiler, connection):
850|        return self.expression.as_sql(compiler, connection)
851|
852|    def __repr__(self):
853|        return "{}({})".format(self.__class__.__name__, self.expression)
854|
855|
856|class When(Expression):
857|    template = 'WHEN %(condition)s THEN %(result)s'
858|
859|    def __init__(self, condition=None, then=None, **lookups):
860|        if lookups and condition is None:
861|            condition, lookups = Q(**lookups), None
862|        if condition is None or not getattr(condition, 'conditional', False) or lookups:
863|            raise TypeError("__init__() takes either a Q object or lookups as keyword arguments")
864|        if isinstance(condition, Q) and not condition:
865|            raise ValueError("An empty Q() can't be used as a When() condition.")
866|        super().__init__(output_field=None)
867|        self.condition = condition
868|        self.result = self._parse_expressions(then)[0]
869|
870|    def __str__(self):
871|        return "WHEN %r THEN %r" % (self.condition, self.result)
872|
873|    def __repr__(self):
874|        return "<%s: %s>" % (self.__class__.__name__, self)
875|
876|    def get_source_expressions(self):
877|        return [self.condition, self.result]
878|
879|    def set_source_expressions(self, exprs):
880|        self.condition, self.result = exprs
881|
882|    def get_source_fields(self):
883|        # We're only interested in the fields of the result expressions.
884|        return [self.result._output_field_or_none]
885|
886|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
887|        c = self.copy()
888|        c.is_summary = summarize
889|        if hasattr(c.condition, 'resolve_expression'):
890|            c.condition = c.condition.resolve_expression(query, allow_joins, reuse, summarize, False)
891|        c.result = c.result.resolve_expression(query, allow_joins, reuse, summarize, for_save)
892|        return c
893|
894|    def as_sql(self, compiler, connection, template=None, **extra_context):
895|        connection.ops.check_expression_support(self)
896|        template_params = extra_context
897|        sql_params = []
898|        condition_sql, condition_params = compiler.compile(self.condition)
899|        template_params['condition'] = condition_sql
900|        sql_params.extend(condition_params)
901|        result_sql, result_params = compiler.compile(self.result)
902|        template_params['result'] = result_sql
903|        sql_params.extend(result_params)
904|        template = template or self.template
905|        return template % template_params, sql_params
906|
907|    def get_group_by_cols(self):
908|        # This is not a complete expression and cannot be used in GROUP BY.
909|        cols = []
910|        for source in self.get_source_expressions():
911|            cols.extend(source.get_group_by_cols())
912|        return cols
913|
914|
915|class Case(Expression):
916|    """
917|    An SQL searched CASE expression:
918|
919|        CASE
920|            WHEN n > 0
921|                THEN 'positive'
922|            WHEN n < 0
923|                THEN 'negative'
924|            ELSE 'zero'
925|        END
926|    """
927|    template = 'CASE %(cases)s ELSE %(default)s END'
928|    case_joiner = ' '
929|
930|    def __init__(self, *cases, default=None, output_field=None, **extra):
931|        if not all(isinstance(case, When) for case in cases):
932|            raise TypeError("Positional arguments must all be When objects.")
933|        super().__init__(output_field)
934|        self.cases = list(cases)
935|        self.default = self._parse_expressions(default)[0]
936|        self.extra = extra
937|
938|    def __str__(self):
939|        return "CASE %s, ELSE %r" % (', '.join(str(c) for c in self.cases), self.default)
940|
941|    def __repr__(self):
942|        return "<%s: %s>" % (self.__class__.__name__, self)
943|
944|    def get_source_expressions(self):
945|        return self.cases + [self.default]
946|
947|    def set_source_expressions(self, exprs):
948|        *self.cases, self.default = exprs
949|
950|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
951|        c = self.copy()
952|        c.is_summary = summarize
953|        for pos, case in enumerate(c.cases):
954|            c.cases[pos] = case.resolve_expression(query, allow_joins, reuse, summarize, for_save)
955|        c.default = c.default.resolve_expression(query, allow_joins, reuse, summarize, for_save)
956|        return c
957|
958|    def copy(self):
959|        c = super().copy()
960|        c.cases = c.cases[:]
961|        return c
962|
963|    def as_sql(self, compiler, connection, template=None, case_joiner=None, **extra_context):
964|        connection.ops.check_expression_support(self)
965|        if not self.cases:
966|            return compiler.compile(self.default)
967|        template_params = {**self.extra, **extra_context}
968|        case_parts = []
969|        sql_params = []
970|        for case in self.cases:
971|            try:
972|                case_sql, case_params = compiler.compile(case)
973|            except EmptyResultSet:
974|                continue
975|            case_parts.append(case_sql)
976|            sql_params.extend(case_params)
977|        default_sql, default_params = compiler.compile(self.default)
978|        if not case_parts:
979|            return default_sql, default_params
980|        case_joiner = case_joiner or self.case_joiner
981|        template_params['cases'] = case_joiner.join(case_parts)
982|        template_params['default'] = default_sql
983|        sql_params.extend(default_params)
984|        template = template or template_params.get('template', self.template)
985|        sql = template % template_params
986|        if self._output_field_or_none is not None:
987|            sql = connection.ops.unification_cast_sql(self.output_field) % sql
988|        return sql, sql_params
989|
990|
991|class Subquery(Expression):
992|    """
993|    An explicit subquery. It may contain OuterRef() references to the outer
994|    query which will be resolved when it is applied to that query.
995|    """
996|    template = '(%(subquery)s)'
997|    contains_aggregate = False
998|
999|    def __init__(self, queryset, output_field=None, **extra):
1000|        self.queryset = queryset
1001|        self.extra = extra
1002|        super().__init__(output_field)
1003|
1004|    def _resolve_output_field(self):
1005|        if len(self.queryset.query.select) == 1:
1006|            return self.queryset.query.select[0].field
1007|        return super()._resolve_output_field()
1008|
1009|    def copy(self):
1010|        clone = super().copy()
1011|        clone.queryset = clone.queryset.all()
1012|        return clone
1013|
1014|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
1015|        clone = self.copy()
1016|        clone.is_summary = summarize
1017|        clone.queryset.query.bump_prefix(query)
1018|
1019|        # Need to recursively resolve these.
1020|        def resolve_all(child):
1021|            if hasattr(child, 'children'):
1022|                [resolve_all(_child) for _child in child.children]
1023|            if hasattr(child, 'rhs'):
1024|                child.rhs = resolve(child.rhs)
1025|
1026|        def resolve(child):
1027|            if hasattr(child, 'resolve_expression'):
1028|                resolved = child.resolve_expression(
1029|                    query=query, allow_joins=allow_joins, reuse=reuse,
1030|                    summarize=summarize, for_save=for_save,
1031|                )
1032|                # Add table alias to the parent query's aliases to prevent
1033|                # quoting.
1034|                if hasattr(resolved, 'alias') and resolved.alias != resolved.target.model._meta.db_table:
1035|                    clone.queryset.query.external_aliases.add(resolved.alias)
1036|                return resolved
1037|            return child
1038|
1039|        resolve_all(clone.queryset.query.where)
1040|
1041|        for key, value in clone.queryset.query.annotations.items():
1042|            if isinstance(value, Subquery):
1043|                clone.queryset.query.annotations[key] = resolve(value)
1044|
1045|        return clone
1046|
1047|    def get_source_expressions(self):
1048|        return [
1049|            x for x in [
1050|                getattr(expr, 'lhs', None)
1051|                for expr in self.queryset.query.where.children
1052|            ] if x
1053|        ]
1054|
1055|    def relabeled_clone(self, change_map):
1056|        clone = self.copy()
1057|        clone.queryset.query = clone.queryset.query.relabeled_clone(change_map)
1058|        clone.queryset.query.external_aliases.update(
1059|            alias for alias in change_map.values()
1060|            if alias not in clone.queryset.query.alias_map
1061|        )
1062|        return clone
1063|
1064|    def as_sql(self, compiler, connection, template=None, **extra_context):
1065|        connection.ops.check_expression_support(self)
1066|        template_params = {**self.extra, **extra_context}
1067|        template_params['subquery'], sql_params = self.queryset.query.get_compiler(connection=connection).as_sql()
1068|
1069|        template = template or template_params.get('template', self.template)
1070|        sql = template % template_params
1071|        return sql, sql_params
1072|
1073|    def _prepare(self, output_field):
1074|        # This method will only be called if this instance is the "rhs" in an
1075|        # expression: the wrapping () must be removed (as the expression that
1076|        # contains this will provide them). SQLite evaluates ((subquery))
1077|        # differently than the other databases.
1078|        if self.template == '(%(subquery)s)':
1079|            clone = self.copy()
1080|            clone.template = '%(subquery)s'
1081|            return clone
1082|        return self
1083|
1084|
1085|class Exists(Subquery):
1086|    template = 'EXISTS(%(subquery)s)'
1087|    output_field = fields.BooleanField()
1088|
1089|    def __init__(self, *args, negated=False, **kwargs):
1090|        self.negated = negated
1091|        super().__init__(*args, **kwargs)
1092|
1093|    def __invert__(self):
1094|        return type(self)(self.queryset, negated=(not self.negated), **self.extra)
1095|
1096|    def resolve_expression(self, query=None, *args, **kwargs):
1097|        # As a performance optimization, remove ordering since EXISTS doesn't
1098|        # care about it, just whether or not a row matches.
1099|        self.queryset = self.queryset.order_by()
1100|        return super().resolve_expression(query, *args, **kwargs)
1101|
1102|    def as_sql(self, compiler, connection, template=None, **extra_context):
1103|        sql, params = super().as_sql(compiler, connection, template, **extra_context)
1104|        if self.negated:
1105|            sql = 'NOT {}'.format(sql)
1106|        return sql, params
1107|
1108|    def as_oracle(self, compiler, connection, template=None, **extra_context):
1109|        # Oracle doesn't allow EXISTS() in the SELECT list, so wrap it with a
1110|        # CASE WHEN expression. Change the template since the When expression
1111|        # requires a left hand side (column) to compare against.
1112|        sql, params = self.as_sql(compiler, connection, template, **extra_context)
1113|        sql = 'CASE WHEN {} THEN 1 ELSE 0 END'.format(sql)
1114|        return sql, params
1115|
1116|
1117|class OrderBy(BaseExpression):
1118|    template = '%(expression)s %(ordering)s'
1119|
1120|    def __init__(self, expression, descending=False, nulls_first=False, nulls_last=False):
1121|        if nulls_first and nulls_last:
1122|            raise ValueError('nulls_first and nulls_last are mutually exclusive')
1123|        self.nulls_first = nulls_first
1124|        self.nulls_last = nulls_last
1125|        self.descending = descending
1126|        if not hasattr(expression, 'resolve_expression'):
1127|            raise ValueError('expression must be an expression type')
1128|        self.expression = expression
1129|
1130|    def __repr__(self):
1131|        return "{}({}, descending={})".format(
1132|            self.__class__.__name__, self.expression, self.descending)
1133|
1134|    def set_source_expressions(self, exprs):
1135|        self.expression = exprs[0]
1136|
1137|    def get_source_expressions(self):
1138|        return [self.expression]
1139|
1140|    def as_sql(self, compiler, connection, template=None, **extra_context):
1141|        if not template:
1142|            if self.nulls_last:
1143|                template = '%s NULLS LAST' % self.template
1144|            elif self.nulls_first:
1145|                template = '%s NULLS FIRST' % self.template
1146|        connection.ops.check_expression_support(self)
1147|        expression_sql, params = compiler.compile(self.expression)
1148|        placeholders = {
1149|            'expression': expression_sql,
1150|            'ordering': 'DESC' if self.descending else 'ASC',
1151|            **extra_context,
1152|        }
1153|        template = template or self.template
1154|        params *= template.count('%(expression)s')
1155|        return (template % placeholders).rstrip(), params
1156|
1157|    def as_sqlite(self, compiler, connection):
1158|        template = None
1159|        if self.nulls_last:
1160|            template = '%(expression)s IS NULL, %(expression)s %(ordering)s'
1161|        elif self.nulls_first:
1162|            template = '%(expression)s IS NOT NULL, %(expression)s %(ordering)s'
1163|        return self.as_sql(compiler, connection, template=template)
1164|
1165|    def as_mysql(self, compiler, connection):
1166|        template = None
1167|        if self.nulls_last:
1168|            template = 'IF(ISNULL(%(expression)s),1,0), %(expression)s %(ordering)s '
1169|        elif self.nulls_first:
1170|            template = 'IF(ISNULL(%(expression)s),0,1), %(expression)s %(ordering)s '
1171|        return self.as_sql(compiler, connection, template=template)
1172|
1173|    def get_group_by_cols(self):
1174|        cols = []
1175|        for source in self.get_source_expressions():
1176|            cols.extend(source.get_group_by_cols())
1177|        return cols
1178|
1179|    def reverse_ordering(self):
1180|        self.descending = not self.descending
1181|        if self.nulls_first or self.nulls_last:
1182|            self.nulls_first = not self.nulls_first
1183|            self.nulls_last = not self.nulls_last
1184|        return self
1185|
1186|    def asc(self):
1187|        self.descending = False
1188|
1189|    def desc(self):
1190|        self.descending = True
1191|
1192|
1193|class Window(Expression):
1194|    template = '%(expression)s OVER (%(window)s)'
1195|    # Although the main expression may either be an aggregate or an
1196|    # expression with an aggregate function, the GROUP BY that will
1197|    # be introduced in the query as a result is not desired.
1198|    contains_aggregate = False
1199|    contains_over_clause = True
1200|    filterable = False
1201|
1202|    def __init__(self, expression, partition_by=None, order_by=None, frame=None, output_field=None):
1203|        self.partition_by = partition_by
1204|        self.order_by = order_by
1205|        self.frame = frame
1206|
1207|        if not getattr(expression, 'window_compatible', False):
1208|            raise ValueError(
1209|                "Expression '%s' isn't compatible with OVER clauses." %
1210|                expression.__class__.__name__
1211|            )
1212|
1213|        if self.partition_by is not None:
1214|            if not isinstance(self.partition_by, (tuple, list)):
1215|                self.partition_by = (self.partition_by,)
1216|            self.partition_by = ExpressionList(*self.partition_by)
1217|
1218|        if self.order_by is not None:
1219|            if isinstance(self.order_by, (list, tuple)):
1220|                self.order_by = ExpressionList(*self.order_by)
1221|            elif not isinstance(self.order_by, BaseExpression):
1222|                raise ValueError(
1223|                    'order_by must be either an Expression or a sequence of '
1224|                    'expressions.'
1225|                )
1226|        super().__init__(output_field=output_field)
1227|        self.source_expression = self._parse_expressions(expression)[0]
1228|
1229|    def _resolve_output_field(self):
1230|        return self.source_expression.output_field
1231|
1232|    def get_source_expressions(self):
1233|        return [self.source_expression, self.partition_by, self.order_by, self.frame]
1234|
1235|    def set_source_expressions(self, exprs):
1236|        self.source_expression, self.partition_by, self.order_by, self.frame = exprs
1237|
1238|    def as_sql(self, compiler, connection, template=None):
1239|        connection.ops.check_expression_support(self)
1240|        expr_sql, params = compiler.compile(self.source_expression)
1241|        window_sql, window_params = [], []
1242|
1243|        if self.partition_by is not None:
1244|            sql_expr, sql_params = self.partition_by.as_sql(
1245|                compiler=compiler, connection=connection,
1246|                template='PARTITION BY %(expressions)s',
1247|            )
1248|            window_sql.extend(sql_expr)
1249|            window_params.extend(sql_params)
1250|
1251|        if self.order_by is not None:
1252|            window_sql.append(' ORDER BY ')
1253|            order_sql, order_params = compiler.compile(self.order_by)
1254|            window_sql.extend(''.join(order_sql))
1255|            window_params.extend(order_params)
1256|
1257|        if self.frame:
1258|            frame_sql, frame_params = compiler.compile(self.frame)
1259|            window_sql.extend(' ' + frame_sql)
1260|            window_params.extend(frame_params)
1261|
1262|        params.extend(window_params)
1263|        template = template or self.template
1264|
1265|        return template % {
1266|            'expression': expr_sql,
1267|            'window': ''.join(window_sql).strip()
1268|        }, params
1269|
1270|    def __str__(self):
1271|        return '{} OVER ({}{}{})'.format(
1272|            str(self.source_expression),
1273|            'PARTITION BY ' + str(self.partition_by) if self.partition_by else '',
1274|            'ORDER BY ' + str(self.order_by) if self.order_by else '',
1275|            str(self.frame or ''),
1276|        )
1277|
1278|    def __repr__(self):
1279|        return '<%s: %s>' % (self.__class__.__name__, self)
1280|
1281|    def get_group_by_cols(self):
1282|        return []
1283|
1284|
1285|class WindowFrame(Expression):
1286|    """
1287|    Model the frame clause in window expressions. There are two types of frame
1288|    clauses which are subclasses, however, all processing and validation (by no
1289|    means intended to be complete) is done here. Thus, providing an end for a
1290|    frame is optional (the default is UNBOUNDED FOLLOWING, which is the last
1291|    row in the frame).
1292|    """
1293|    template = '%(frame_type)s BETWEEN %(start)s AND %(end)s'
1294|
1295|    def __init__(self, start=None, end=None):
1296|        self.start = Value(start)
1297|        self.end = Value(end)
1298|
1299|    def set_source_expressions(self, exprs):
1300|        self.start, self.end = exprs
1301|
1302|    def get_source_expressions(self):
1303|        return [self.start, self.end]
1304|
1305|    def as_sql(self, compiler, connection):
1306|        connection.ops.check_expression_support(self)
1307|        start, end = self.window_frame_start_end(connection, self.start.value, self.end.value)
1308|        return self.template % {
1309|            'frame_type': self.frame_type,
1310|            'start': start,
1311|            'end': end,
1312|        }, []
1313|
1314|    def __repr__(self):
1315|        return '<%s: %s>' % (self.__class__.__name__, self)
1316|
1317|    def get_group_by_cols(self):
1318|        return []
1319|
1320|    def __str__(self):
1321|        if self.start.value is not None and self.start.value < 0:
1322|            start = '%d %s' % (abs(self.start.value), connection.ops.PRECEDING)
1323|        elif self.start.value is not None and self.start.value == 0:
1324|            start = connection.ops.CURRENT_ROW
1325|        else:
1326|            start = connection.ops.UNBOUNDED_PRECEDING
1327|
1328|        if self.end.value is not None and self.end.value > 0:
1329|            end = '%d %s' % (self.end.value, connection.ops.FOLLOWING)
1330|        elif self.end.value is not None and self.end.value == 0:
1331|            end = connection.ops.CURRENT_ROW
1332|        else:
1333|            end = connection.ops.UNBOUNDED_FOLLOWING
1334|        return self.template % {
1335|            'frame_type': self.frame_type,
1336|            'start': start,
1337|            'end': end,
1338|        }
1339|
1340|    def window_frame_start_end(self, connection, start, end):
1341|        raise NotImplementedError('Subclasses must implement window_frame_start_end().')
1342|
1343|
1344|class RowRange(WindowFrame):
1345|    frame_type = 'ROWS'
1346|
1347|    def window_frame_start_end(self, connection, start, end):
1348|        return connection.ops.window_frame_rows_start_end(start, end)
1349|
1350|
1351|class ValueRange(WindowFrame):
1352|    frame_type = 'RANGE'
1353|
1354|    def window_frame_start_end(self, connection, start, end):
1355|        return connection.ops.window_frame_range_start_end(start, end)


============================================================



ACTION:

THOUGHT: Let me scroll up to find the `Func` class:
CODE:
scroll_up()

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/expressions.py (1355 lines total)]
1|import copy
2|import datetime
3|import inspect
4|from decimal import Decimal
5|
6|from django.core.exceptions import EmptyResultSet, FieldError
7|from django.db import connection
8|from django.db.models import fields
9|from django.db.models.query_utils import Q
10|from django.utils.deconstruct import deconstructible
11|from django.utils.functional import cached_property
12|from django.utils.hashable import make_hashable
13|
14|
15|class SQLiteNumericMixin:
16|    """
17|    Some expressions with output_field=DecimalField() must be cast to
18|    numeric to be properly filtered.
19|    """
20|    def as_sqlite(self, compiler, connection, **extra_context):
21|        sql, params = self.as_sql(compiler, connection, **extra_context)
22|        try:
23|            if self.output_field.get_internal_type() == 'DecimalField':
24|                sql = 'CAST(%s AS NUMERIC)' % sql
25|        except FieldError:
26|            pass
27|        return sql, params
28|
29|
30|class Combinable:
31|    """
32|    Provide the ability to combine one or two objects with
33|    some connector. For example F('foo') + F('bar').
34|    """
35|
36|    # Arithmetic connectors
37|    ADD = '+'
38|    SUB = '-'
39|    MUL = '*'
40|    DIV = '/'
41|    POW = '^'
42|    # The following is a quoted % operator - it is quoted because it can be
43|    # used in strings that also have parameter substitution.
44|    MOD = '%%'
45|
46|    # Bitwise operators - note that these are generated by .bitand()
47|    # and .bitor(), the '&' and '|' are reserved for boolean operator
48|    # usage.
49|    BITAND = '&'
50|    BITOR = '|'
51|    BITLEFTSHIFT = '<<'
52|    BITRIGHTSHIFT = '>>'
53|
54|    def _combine(self, other, connector, reversed):
55|        if not hasattr(other, 'resolve_expression'):
56|            # everything must be resolvable to an expression
57|            if isinstance(other, datetime.timedelta):
58|                other = DurationValue(other, output_field=fields.DurationField())
59|            else:
60|                other = Value(other)
61|
62|        if reversed:
63|            return CombinedExpression(other, connector, self)
64|        return CombinedExpression(self, connector, other)
65|
66|    #############
67|    # OPERATORS #
68|    #############
69|
70|    def __neg__(self):
71|        return self._combine(-1, self.MUL, False)
72|
73|    def __add__(self, other):
74|        return self._combine(other, self.ADD, False)
75|
76|    def __sub__(self, other):
77|        return self._combine(other, self.SUB, False)
78|
79|    def __mul__(self, other):
80|        return self._combine(other, self.MUL, False)
81|
82|    def __truediv__(self, other):
83|        return self._combine(other, self.DIV, False)
84|
85|    def __mod__(self, other):
86|        return self._combine(other, self.MOD, False)
87|
88|    def __pow__(self, other):
89|        return self._combine(other, self.POW, False)
90|
91|    def __and__(self, other):
92|        raise NotImplementedError(
93|            "Use .bitand() and .bitor() for bitwise logical operations."
94|        )
95|
96|    def bitand(self, other):
97|        return self._combine(other, self.BITAND, False)
98|
99|    def bitleftshift(self, other):
100|        return self._combine(other, self.BITLEFTSHIFT, False)
101|
102|    def bitrightshift(self, other):
103|        return self._combine(other, self.BITRIGHTSHIFT, False)
104|
105|    def __or__(self, other):
106|        raise NotImplementedError(
107|            "Use .bitand() and .bitor() for bitwise logical operations."
108|        )
109|
110|    def bitor(self, other):
111|        return self._combine(other, self.BITOR, False)
112|
113|    def __radd__(self, other):
114|        return self._combine(other, self.ADD, True)
115|
116|    def __rsub__(self, other):
117|        return self._combine(other, self.SUB, True)
118|
119|    def __rmul__(self, other):
120|        return self._combine(other, self.MUL, True)
121|
122|    def __rtruediv__(self, other):
123|        return self._combine(other, self.DIV, True)
124|
125|    def __rmod__(self, other):
126|        return self._combine(other, self.MOD, True)
127|
128|    def __rpow__(self, other):
129|        return self._combine(other, self.POW, True)
130|
131|    def __rand__(self, other):
132|        raise NotImplementedError(
133|            "Use .bitand() and .bitor() for bitwise logical operations."
134|        )
135|
136|    def __ror__(self, other):
137|        raise NotImplementedError(
138|            "Use .bitand() and .bitor() for bitwise logical operations."
139|        )
140|
141|
142|@deconstructible
143|class BaseExpression:
144|    """Base class for all query expressions."""
145|
146|    # aggregate specific fields
147|    is_summary = False
148|    _output_field_resolved_to_none = False
149|    # Can the expression be used in a WHERE clause?
150|    filterable = True
151|    # Can the expression can be used as a source expression in Window?
152|    window_compatible = False
153|
154|    def __init__(self, output_field=None):
155|        if output_field is not None:
156|            self.output_field = output_field
157|
158|    def __getstate__(self):
159|        state = self.__dict__.copy()
160|        state.pop('convert_value', None)
161|        return state
162|
163|    def get_db_converters(self, connection):
164|        return (
165|            []
166|            if self.convert_value is self._convert_value_noop else
167|            [self.convert_value]
168|        ) + self.output_field.get_db_converters(connection)
169|
170|    def get_source_expressions(self):
171|        return []
172|
173|    def set_source_expressions(self, exprs):
174|        assert not exprs
175|
176|    def _parse_expressions(self, *expressions):
177|        return [
178|            arg if hasattr(arg, 'resolve_expression') else (
179|                F(arg) if isinstance(arg, str) else Value(arg)
180|            ) for arg in expressions
181|        ]
182|
183|    def as_sql(self, compiler, connection):
184|        """
185|        Responsible for returning a (sql, [params]) tuple to be included
186|        in the current query.
187|
188|        Different backends can provide their own implementation, by
189|        providing an `as_{vendor}` method and patching the Expression:
190|
191|        ```
192|        def override_as_sql(self, compiler, connection):
193|            # custom logic
194|            return super().as_sql(compiler, connection)
195|        setattr(Expression, 'as_' + connection.vendor, override_as_sql)
196|        ```
197|
198|        Arguments:
199|         * compiler: the query compiler responsible for generating the query.
200|           Must have a compile method, returning a (sql, [params]) tuple.
201|           Calling compiler(value) will return a quoted `value`.
202|
203|         * connection: the database connection used for the current query.
204|
205|        Return: (sql, params)
206|          Where `sql` is a string containing ordered sql parameters to be
207|          replaced with the elements of the list `params`.
208|        """
209|        raise NotImplementedError("Subclasses must implement as_sql()")
210|
211|    @cached_property
212|    def contains_aggregate(self):
213|        return any(expr and expr.contains_aggregate for expr in self.get_source_expressions())
214|
215|    @cached_property
216|    def contains_over_clause(self):
217|        return any(expr and expr.contains_over_clause for expr in self.get_source_expressions())
218|
219|    @cached_property
220|    def contains_column_references(self):
221|        return any(expr and expr.contains_column_references for expr in self.get_source_expressions())
222|
223|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
224|        """
225|        Provide the chance to do any preprocessing or validation before being
226|        added to the query.
227|
228|        Arguments:
229|         * query: the backend query implementation
230|         * allow_joins: boolean allowing or denying use of joins
231|           in this query
232|         * reuse: a set of reusable joins for multijoins
233|         * summarize: a terminal aggregate clause
234|         * for_save: whether this expression about to be used in a save or update
235|
236|        Return: an Expression to be added to the query.
237|        """
238|        c = self.copy()
239|        c.is_summary = summarize
240|        c.set_source_expressions([
241|            expr.resolve_expression(query, allow_joins, reuse, summarize)
242|            if expr else None
243|            for expr in c.get_source_expressions()
244|        ])
245|        return c
246|
247|    def _prepare(self, field):
248|        """Hook used by Lookup.get_prep_lookup() to do custom preparation."""
249|        return self
250|
251|    @property
252|    def field(self):
253|        return self.output_field
254|
255|    @cached_property
256|    def output_field(self):
257|        """Return the output type of this expressions."""
258|        output_field = self._resolve_output_field()
259|        if output_field is None:
260|            self._output_field_resolved_to_none = True
261|            raise FieldError('Cannot resolve expression type, unknown output_field')
262|        return output_field
263|
264|    @cached_property
265|    def _output_field_or_none(self):
266|        """
267|        Return the output field of this expression, or None if
268|        _resolve_output_field() didn't return an output type.
269|        """
270|        try:
271|            return self.output_field
272|        except FieldError:
273|            if not self._output_field_resolved_to_none:
274|                raise
275|
276|    def _resolve_output_field(self):
277|        """
278|        Attempt to infer the output type of the expression. If the output
279|        fields of all source fields match then, simply infer the same type
280|        here. This isn't always correct, but it makes sense most of the time.
281|
282|        Consider the difference between `2 + 2` and `2 / 3`. Inferring
283|        the type here is a convenience for the common case. The user should
284|        supply their own output_field with more complex computations.
285|
286|        If a source's output field resolves to None, exclude it from this check.
287|        If all sources are None, then an error is raised higher up the stack in
288|        the output_field property.
289|        """
290|        sources_iter = (source for source in self.get_source_fields() if source is not None)
291|        for output_field in sources_iter:
292|            if any(not isinstance(output_field, source.__class__) for source in sources_iter):
293|                raise FieldError('Expression contains mixed types. You must set output_field.')
294|            return output_field
295|
296|    @staticmethod
297|    def _convert_value_noop(value, expression, connection):
298|        return value
299|
300|    @cached_property
301|    def convert_value(self):
302|        """
303|        Expressions provide their own converters because users have the option
304|        of manually specifying the output_field which may be a different type
305|        from the one the database returns.
306|        """
307|        field = self.output_field
308|        internal_type = field.get_internal_type()
309|        if internal_type == 'FloatField':
310|            return lambda value, expression, connection: None if value is None else float(value)
311|        elif internal_type.endswith('IntegerField'):
312|            return lambda value, expression, connection: None if value is None else int(value)
313|        elif internal_type == 'DecimalField':
314|            return lambda value, expression, connection: None if value is None else Decimal(value)
315|        return self._convert_value_noop
316|
317|    def get_lookup(self, lookup):
318|        return self.output_field.get_lookup(lookup)
319|
320|    def get_transform(self, name):
321|        return self.output_field.get_transform(name)
322|
323|    def relabeled_clone(self, change_map):
324|        clone = self.copy()
325|        clone.set_source_expressions([
326|            e.relabeled_clone(change_map) if e is not None else None
327|            for e in self.get_source_expressions()
328|        ])
329|        return clone
330|
331|    def copy(self):
332|        return copy.copy(self)
333|
334|    def get_group_by_cols(self):
335|        if not self.contains_aggregate:
336|            return [self]
337|        cols = []
338|        for source in self.get_source_expressions():
339|            cols.extend(source.get_group_by_cols())
340|        return cols
341|
342|    def get_source_fields(self):
343|        """Return the underlying field types used by this aggregate."""
344|        return [e._output_field_or_none for e in self.get_source_expressions()]
345|
346|    def asc(self, **kwargs):
347|        return OrderBy(self, **kwargs)
348|
349|    def desc(self, **kwargs):
350|        return OrderBy(self, descending=True, **kwargs)
351|
352|    def reverse_ordering(self):
353|        return self
354|
355|    def flatten(self):
356|        """
357|        Recursively yield this expression and all subexpressions, in
358|        depth-first order.
359|        """
360|        yield self
361|        for expr in self.get_source_expressions():
362|            if expr:
363|                yield from expr.flatten()
364|
365|    @cached_property
366|    def identity(self):
367|        constructor_signature = inspect.signature(self.__init__)
368|        args, kwargs = self._constructor_args
369|        signature = constructor_signature.bind_partial(*args, **kwargs)
370|        signature.apply_defaults()
371|        arguments = signature.arguments.items()
372|        identity = [self.__class__]
373|        for arg, value in arguments:
374|            if isinstance(value, fields.Field):
375|                value = type(value)
376|            else:
377|                value = make_hashable(value)
378|            identity.append((arg, value))
379|        return tuple(identity)
380|
381|    def __eq__(self, other):
382|        return isinstance(other, BaseExpression) and other.identity == self.identity
383|
384|    def __hash__(self):
385|        return hash(self.identity)
386|
387|
388|class Expression(BaseExpression, Combinable):
389|    """An expression that can be combined with other expressions."""
390|    pass
391|
392|
393|class CombinedExpression(SQLiteNumericMixin, Expression):
394|
395|    def __init__(self, lhs, connector, rhs, output_field=None):
396|        super().__init__(output_field=output_field)
397|        self.connector = connector
398|        self.lhs = lhs
399|        self.rhs = rhs
400|
401|    def __repr__(self):
402|        return "<{}: {}>".format(self.__class__.__name__, self)
403|
404|    def __str__(self):
405|        return "{} {} {}".format(self.lhs, self.connector, self.rhs)
406|
407|    def get_source_expressions(self):
408|        return [self.lhs, self.rhs]
409|
410|    def set_source_expressions(self, exprs):
411|        self.lhs, self.rhs = exprs
412|
413|    def as_sql(self, compiler, connection):
414|        try:
415|            lhs_output = self.lhs.output_field
416|        except FieldError:
417|            lhs_output = None
418|        try:
419|            rhs_output = self.rhs.output_field
420|        except FieldError:
421|            rhs_output = None
422|        if (not connection.features.has_native_duration_field and
423|                ((lhs_output and lhs_output.get_internal_type() == 'DurationField') or
424|                 (rhs_output and rhs_output.get_internal_type() == 'DurationField'))):
425|            return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
426|        if (lhs_output and rhs_output and self.connector == self.SUB and
427|            lhs_output.get_internal_type() in {'DateField', 'DateTimeField', 'TimeField'} and
428|                lhs_output.get_internal_type() == rhs_output.get_internal_type()):
429|            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
430|        expressions = []
431|        expression_params = []
432|        sql, params = compiler.compile(self.lhs)
433|        expressions.append(sql)
434|        expression_params.extend(params)
435|        sql, params = compiler.compile(self.rhs)
436|        expressions.append(sql)
437|        expression_params.extend(params)
438|        # order of precedence
439|        expression_wrapper = '(%s)'
440|        sql = connection.ops.combine_expression(self.connector, expressions)
441|        return expression_wrapper % sql, expression_params
442|
443|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
444|        c = self.copy()
445|        c.is_summary = summarize
446|        c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
447|        c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
448|        return c
449|
450|
451|class DurationExpression(CombinedExpression):
452|    def compile(self, side, compiler, connection):
453|        if not isinstance(side, DurationValue):
454|            try:
455|                output = side.output_field
456|            except FieldError:
457|                pass
458|            else:
459|                if output.get_internal_type() == 'DurationField':
460|                    sql, params = compiler.compile(side)
461|                    return connection.ops.format_for_duration_arithmetic(sql), params
462|        return compiler.compile(side)
463|
464|    def as_sql(self, compiler, connection):
465|        connection.ops.check_expression_support(self)
466|        expressions = []
467|        expression_params = []
468|        sql, params = self.compile(self.lhs, compiler, connection)
469|        expressions.append(sql)
470|        expression_params.extend(params)
471|        sql, params = self.compile(self.rhs, compiler, connection)
472|        expressions.append(sql)
473|        expression_params.extend(params)
474|        # order of precedence
475|        expression_wrapper = '(%s)'
476|        sql = connection.ops.combine_duration_expression(self.connector, expressions)
477|        return expression_wrapper % sql, expression_params
478|
479|
480|class TemporalSubtraction(CombinedExpression):
481|    output_field = fields.DurationField()
482|
483|    def __init__(self, lhs, rhs):
484|        super().__init__(lhs, self.SUB, rhs)
485|
486|    def as_sql(self, compiler, connection):
487|        connection.ops.check_expression_support(self)
488|        lhs = compiler.compile(self.lhs, connection)
489|        rhs = compiler.compile(self.rhs, connection)
490|        return connection.ops.subtract_temporals(self.lhs.output_field.get_internal_type(), lhs, rhs)
491|
492|
493|@deconstructible
494|class F(Combinable):
495|    """An object capable of resolving references to existing query objects."""
496|    # Can the expression be used in a WHERE clause?
497|    filterable = True
498|
499|    def __init__(self, name):
500|        """
501|        Arguments:
502|         * name: the name of the field this expression references
503|        """
504|        self.name = name
505|
506|    def __repr__(self):
507|        return "{}({})".format(self.__class__.__name__, self.name)
508|
509|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
510|                           summarize=False, for_save=False, simple_col=False):
511|        return query.resolve_ref(self.name, allow_joins, reuse, summarize, simple_col)
512|
513|    def asc(self, **kwargs):
514|        return OrderBy(self, **kwargs)
515|
516|    def desc(self, **kwargs):
517|        return OrderBy(self, descending=True, **kwargs)
518|
519|    def __eq__(self, other):
520|        return self.__class__ == other.__class__ and self.name == other.name
521|
522|    def __hash__(self):
523|        return hash(self.name)
524|
525|
526|class ResolvedOuterRef(F):
527|    """
528|    An object that contains a reference to an outer query.
529|
530|    In this case, the reference to the outer query has been resolved because
531|    the inner query has been used as a subquery.
532|    """
533|    def as_sql(self, *args, **kwargs):
534|        raise ValueError(
535|            'This queryset contains a reference to an outer query and may '
536|            'only be used in a subquery.'
537|        )
538|
539|    def _prepare(self, output_field=None):
540|        return self
541|
542|    def relabeled_clone(self, relabels):
543|        return self
544|
545|
546|class OuterRef(F):
547|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
548|                           summarize=False, for_save=False, simple_col=False):
549|        if isinstance(self.name, self.__class__):
550|            return self.name
551|        return ResolvedOuterRef(self.name)
552|
553|    def _prepare(self, output_field=None):
554|        return self
555|
556|
557|class Func(SQLiteNumericMixin, Expression):
558|    """An SQL function call."""
559|    function = None
560|    template = '%(function)s(%(expressions)s)'
561|    arg_joiner = ', '
562|    arity = None  # The number of arguments the function accepts.
563|
564|    def __init__(self, *expressions, output_field=None, **extra):
565|        if self.arity is not None and len(expressions) != self.arity:
566|            raise TypeError(
567|                "'%s' takes exactly %s %s (%s given)" % (
568|                    self.__class__.__name__,
569|                    self.arity,
570|                    "argument" if self.arity == 1 else "arguments",
571|                    len(expressions),
572|                )
573|            )
574|        super().__init__(output_field=output_field)
575|        self.source_expressions = self._parse_expressions(*expressions)
576|        self.extra = extra
577|
578|    def __repr__(self):
579|        args = self.arg_joiner.join(str(arg) for arg in self.source_expressions)
580|        extra = {**self.extra, **self._get_repr_options()}
581|        if extra:
582|            extra = ', '.join(str(key) + '=' + str(val) for key, val in sorted(extra.items()))
583|            return "{}({}, {})".format(self.__class__.__name__, args, extra)
584|        return "{}({})".format(self.__class__.__name__, args)
585|
586|    def _get_repr_options(self):
587|        """Return a dict of extra __init__() options to include in the repr."""
588|        return {}
589|
590|    def get_source_expressions(self):
591|        return self.source_expressions
592|
593|    def set_source_expressions(self, exprs):
594|        self.source_expressions = exprs
595|
596|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
597|        c = self.copy()
598|        c.is_summary = summarize
599|        for pos, arg in enumerate(c.source_expressions):
600|            c.source_expressions[pos] = arg.resolve_expression(query, allow_joins, reuse, summarize, for_save)
601|        return c
602|
603|    def as_sql(self, compiler, connection, function=None, template=None, arg_joiner=None, **extra_context):
604|        connection.ops.check_expression_support(self)
605|        sql_parts = []
606|        params = []
607|        for arg in self.source_expressions:
608|            arg_sql, arg_params = compiler.compile(arg)
609|            sql_parts.append(arg_sql)
610|            params.extend(arg_params)
611|        data = {**self.extra, **extra_context}
612|        # Use the first supplied value in this order: the parameter to this
613|        # method, a value supplied in __init__()'s **extra (the value in
614|        # `data`), or the value defined on the class.
615|        if function is not None:
616|            data['function'] = function
617|        else:
618|            data.setdefault('function', self.function)
619|        template = template or data.get('template', self.template)
620|        arg_joiner = arg_joiner or data.get('arg_joiner', self.arg_joiner)
621|        data['expressions'] = data['field'] = arg_joiner.join(sql_parts)
622|        return template % data, params
623|
624|    def copy(self):
625|        copy = super().copy()
626|        copy.source_expressions = self.source_expressions[:]
627|        copy.extra = self.extra.copy()
628|        return copy
629|
630|
631|class Value(Expression):
632|    """Represent a wrapped value as a node within an expression."""
633|    def __init__(self, value, output_field=None):
634|        """
635|        Arguments:
636|         * value: the value this expression represents. The value will be
637|           added into the sql parameter list and properly quoted.
638|
639|         * output_field: an instance of the model field type that this
640|           expression will return, such as IntegerField() or CharField().
641|        """
642|        super().__init__(output_field=output_field)
643|        self.value = value
644|
645|    def __repr__(self):
646|        return "{}({})".format(self.__class__.__name__, self.value)
647|
648|    def as_sql(self, compiler, connection):
649|        connection.ops.check_expression_support(self)
650|        val = self.value
651|        output_field = self._output_field_or_none
652|        if output_field is not None:
653|            if self.for_save:
654|                val = output_field.get_db_prep_save(val, connection=connection)
655|            else:
656|                val = output_field.get_db_prep_value(val, connection=connection)
657|            if hasattr(output_field, 'get_placeholder'):
658|                return output_field.get_placeholder(val, compiler, connection), [val]
659|        if val is None:
660|            # cx_Oracle does not always convert None to the appropriate
661|            # NULL type (like in case expressions using numbers), so we
662|            # use a literal SQL NULL
663|            return 'NULL', []
664|        return '%s', [val]
665|
666|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
667|        c = super().resolve_expression(query, allow_joins, reuse, summarize, for_save)
668|        c.for_save = for_save
669|        return c
670|
671|    def get_group_by_cols(self):
672|        return []
673|
674|
675|class DurationValue(Value):
676|    def as_sql(self, compiler, connection):
677|        connection.ops.check_expression_support(self)
678|        if connection.features.has_native_duration_field:
679|            return super().as_sql(compiler, connection)
680|        return connection.ops.date_interval_sql(self.value), []
681|
682|
683|class RawSQL(Expression):
684|    def __init__(self, sql, params, output_field=None):
685|        if output_field is None:
686|            output_field = fields.Field()
687|        self.sql, self.params = sql, params
688|        super().__init__(output_field=output_field)
689|
690|    def __repr__(self):
691|        return "{}({}, {})".format(self.__class__.__name__, self.sql, self.params)
692|
693|    def as_sql(self, compiler, connection):
694|        return '(%s)' % self.sql, self.params
695|
696|    def get_group_by_cols(self):
697|        return [self]
698|
699|
700|class Star(Expression):
701|    def __repr__(self):
702|        return "'*'"
703|
704|    def as_sql(self, compiler, connection):
705|        return '*', []
706|
707|
708|class Random(Expression):
709|    output_field = fields.FloatField()
710|
711|    def __repr__(self):
712|        return "Random()"
713|
714|    def as_sql(self, compiler, connection):
715|        return connection.ops.random_function_sql(), []
716|
717|
718|class Col(Expression):
719|
720|    contains_column_references = True
721|
722|    def __init__(self, alias, target, output_field=None):
723|        if output_field is None:
724|            output_field = target
725|        super().__init__(output_field=output_field)
726|        self.alias, self.target = alias, target
727|
728|    def __repr__(self):
729|        return "{}({}, {})".format(
730|            self.__class__.__name__, self.alias, self.target)
731|
732|    def as_sql(self, compiler, connection):
733|        qn = compiler.quote_name_unless_alias
734|        return "%s.%s" % (qn(self.alias), qn(self.target.column)), []
735|
736|    def relabeled_clone(self, relabels):
737|        return self.__class__(relabels.get(self.alias, self.alias), self.target, self.output_field)
738|
739|    def get_group_by_cols(self):
740|        return [self]
741|
742|    def get_db_converters(self, connection):
743|        if self.target == self.output_field:
744|            return self.output_field.get_db_converters(connection)
745|        return (self.output_field.get_db_converters(connection) +
746|                self.target.get_db_converters(connection))
747|
748|
749|class SimpleCol(Expression):
750|    """
751|    Represents the SQL of a column name without the table name.
752|
753|    This variant of Col doesn't include the table name (or an alias) to
754|    avoid a syntax error in check constraints.
755|    """
756|    contains_column_references = True
757|
758|    def __init__(self, target, output_field=None):
759|        if output_field is None:
760|            output_field = target
761|        super().__init__(output_field=output_field)
762|        self.target = target
763|
764|    def __repr__(self):
765|        return '{}({})'.format(self.__class__.__name__, self.target)
766|
767|    def as_sql(self, compiler, connection):
768|        qn = compiler.quote_name_unless_alias
769|        return qn(self.target.column), []
770|
771|    def get_group_by_cols(self):
772|        return [self]
773|
774|    def get_db_converters(self, connection):
775|        if self.target == self.output_field:
776|            return self.output_field.get_db_converters(connection)
777|        return (
778|            self.output_field.get_db_converters(connection) +
779|            self.target.get_db_converters(connection)
780|        )
781|
782|
783|class Ref(Expression):
784|    """
785|    Reference to column alias of the query. For example, Ref('sum_cost') in
786|    qs.annotate(sum_cost=Sum('cost')) query.
787|    """
788|    def __init__(self, refs, source):
789|        super().__init__()
790|        self.refs, self.source = refs, source
791|
792|    def __repr__(self):
793|        return "{}({}, {})".format(self.__class__.__name__, self.refs, self.source)
794|
795|    def get_source_expressions(self):
796|        return [self.source]
797|
798|    def set_source_expressions(self, exprs):
799|        self.source, = exprs
800|
801|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
802|        # The sub-expression `source` has already been resolved, as this is
803|        # just a reference to the name of `source`.
804|        return self
805|
806|    def relabeled_clone(self, relabels):
807|        return self
808|
809|    def as_sql(self, compiler, connection):
810|        return connection.ops.quote_name(self.refs), []
811|
812|    def get_group_by_cols(self):
813|        return [self]
814|
815|
816|class ExpressionList(Func):
817|    """
818|    An expression containing multiple expressions. Can be used to provide a
819|    list of expressions as an argument to another expression, like an
820|    ordering clause.
821|    """
822|    template = '%(expressions)s'
823|
824|    def __init__(self, *expressions, **extra):
825|        if not expressions:
826|            raise ValueError('%s requires at least one expression.' % self.__class__.__name__)
827|        super().__init__(*expressions, **extra)
828|
829|    def __str__(self):
830|        return self.arg_joiner.join(str(arg) for arg in self.source_expressions)
831|
832|
833|class ExpressionWrapper(Expression):
834|    """
835|    An expression that can wrap another expression so that it can provide
836|    extra context to the inner expression, such as the output_field.
837|    """
838|
839|    def __init__(self, expression, output_field):
840|        super().__init__(output_field=output_field)
841|        self.expression = expression
842|
843|    def set_source_expressions(self, exprs):
844|        self.expression = exprs[0]
845|
846|    def get_source_expressions(self):
847|        return [self.expression]
848|
849|    def as_sql(self, compiler, connection):
850|        return self.expression.as_sql(compiler, connection)
851|
852|    def __repr__(self):
853|        return "{}({})".format(self.__class__.__name__, self.expression)
854|
855|
856|class When(Expression):
857|    template = 'WHEN %(condition)s THEN %(result)s'
858|
859|    def __init__(self, condition=None, then=None, **lookups):
860|        if lookups and condition is None:
861|            condition, lookups = Q(**lookups), None
862|        if condition is None or not getattr(condition, 'conditional', False) or lookups:
863|            raise TypeError("__init__() takes either a Q object or lookups as keyword arguments")
864|        if isinstance(condition, Q) and not condition:
865|            raise ValueError("An empty Q() can't be used as a When() condition.")
866|        super().__init__(output_field=None)
867|        self.condition = condition
868|        self.result = self._parse_expressions(then)[0]
869|
870|    def __str__(self):
871|        return "WHEN %r THEN %r" % (self.condition, self.result)
872|
873|    def __repr__(self):
874|        return "<%s: %s>" % (self.__class__.__name__, self)
875|
876|    def get_source_expressions(self):
877|        return [self.condition, self.result]
878|
879|    def set_source_expressions(self, exprs):
880|        self.condition, self.result = exprs
881|
882|    def get_source_fields(self):
883|        # We're only interested in the fields of the result expressions.
884|        return [self.result._output_field_or_none]
885|
886|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
887|        c = self.copy()
888|        c.is_summary = summarize
889|        if hasattr(c.condition, 'resolve_expression'):
890|            c.condition = c.condition.resolve_expression(query, allow_joins, reuse, summarize, False)
891|        c.result = c.result.resolve_expression(query, allow_joins, reuse, summarize, for_save)
892|        return c
893|
894|    def as_sql(self, compiler, connection, template=None, **extra_context):
895|        connection.ops.check_expression_support(self)
896|        template_params = extra_context
897|        sql_params = []
898|        condition_sql, condition_params = compiler.compile(self.condition)
899|        template_params['condition'] = condition_sql
900|        sql_params.extend(condition_params)
901|        result_sql, result_params = compiler.compile(self.result)
902|        template_params['result'] = result_sql
903|        sql_params.extend(result_params)
904|        template = template or self.template
905|        return template % template_params, sql_params
906|
907|    def get_group_by_cols(self):
908|        # This is not a complete expression and cannot be used in GROUP BY.
909|        cols = []
910|        for source in self.get_source_expressions():
911|            cols.extend(source.get_group_by_cols())
912|        return cols
913|
914|
915|class Case(Expression):
916|    """
917|    An SQL searched CASE expression:
918|
919|        CASE
920|            WHEN n > 0
921|                THEN 'positive'
922|            WHEN n < 0
923|                THEN 'negative'
924|            ELSE 'zero'
925|        END
926|    """
927|    template = 'CASE %(cases)s ELSE %(default)s END'
928|    case_joiner = ' '
929|
930|    def __init__(self, *cases, default=None, output_field=None, **extra):
931|        if not all(isinstance(case, When) for case in cases):
932|            raise TypeError("Positional arguments must all be When objects.")
933|        super().__init__(output_field)
934|        self.cases = list(cases)
935|        self.default = self._parse_expressions(default)[0]
936|        self.extra = extra
937|
938|    def __str__(self):
939|        return "CASE %s, ELSE %r" % (', '.join(str(c) for c in self.cases), self.default)
940|
941|    def __repr__(self):
942|        return "<%s: %s>" % (self.__class__.__name__, self)
943|
944|    def get_source_expressions(self):
945|        return self.cases + [self.default]
946|
947|    def set_source_expressions(self, exprs):
948|        *self.cases, self.default = exprs
949|
950|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
951|        c = self.copy()
952|        c.is_summary = summarize
953|        for pos, case in enumerate(c.cases):
954|            c.cases[pos] = case.resolve_expression(query, allow_joins, reuse, summarize, for_save)
955|        c.default = c.default.resolve_expression(query, allow_joins, reuse, summarize, for_save)
956|        return c
957|
958|    def copy(self):
959|        c = super().copy()
960|        c.cases = c.cases[:]
961|        return c
962|
963|    def as_sql(self, compiler, connection, template=None, case_joiner=None, **extra_context):
964|        connection.ops.check_expression_support(self)
965|        if not self.cases:
966|            return compiler.compile(self.default)
967|        template_params = {**self.extra, **extra_context}
968|        case_parts = []
969|        sql_params = []
970|        for case in self.cases:
971|            try:
972|                case_sql, case_params = compiler.compile(case)
973|            except EmptyResultSet:
974|                continue
975|            case_parts.append(case_sql)
976|            sql_params.extend(case_params)
977|        default_sql, default_params = compiler.compile(self.default)
978|        if not case_parts:
979|            return default_sql, default_params
980|        case_joiner = case_joiner or self.case_joiner
981|        template_params['cases'] = case_joiner.join(case_parts)
982|        template_params['default'] = default_sql
983|        sql_params.extend(default_params)
984|        template = template or template_params.get('template', self.template)
985|        sql = template % template_params
986|        if self._output_field_or_none is not None:
987|            sql = connection.ops.unification_cast_sql(self.output_field) % sql
988|        return sql, sql_params
989|
990|
991|class Subquery(Expression):
992|    """
993|    An explicit subquery. It may contain OuterRef() references to the outer
994|    query which will be resolved when it is applied to that query.
995|    """
996|    template = '(%(subquery)s)'
997|    contains_aggregate = False
998|
999|    def __init__(self, queryset, output_field=None, **extra):
1000|        self.queryset = queryset
(355 more lines below)


============================================================



ACTION:

THOUGHT: Let me scroll up more to find the `Func` class:
CODE:
scroll_up()

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/expressions.py (1355 lines total)]
1|import copy
2|import datetime
3|import inspect
4|from decimal import Decimal
5|
6|from django.core.exceptions import EmptyResultSet, FieldError
7|from django.db import connection
8|from django.db.models import fields
9|from django.db.models.query_utils import Q
10|from django.utils.deconstruct import deconstructible
11|from django.utils.functional import cached_property
12|from django.utils.hashable import make_hashable
13|
14|
15|class SQLiteNumericMixin:
16|    """
17|    Some expressions with output_field=DecimalField() must be cast to
18|    numeric to be properly filtered.
19|    """
20|    def as_sqlite(self, compiler, connection, **extra_context):
21|        sql, params = self.as_sql(compiler, connection, **extra_context)
22|        try:
23|            if self.output_field.get_internal_type() == 'DecimalField':
24|                sql = 'CAST(%s AS NUMERIC)' % sql
25|        except FieldError:
26|            pass
27|        return sql, params
28|
29|
30|class Combinable:
31|    """
32|    Provide the ability to combine one or two objects with
33|    some connector. For example F('foo') + F('bar').
34|    """
35|
36|    # Arithmetic connectors
37|    ADD = '+'
38|    SUB = '-'
39|    MUL = '*'
40|    DIV = '/'
41|    POW = '^'
42|    # The following is a quoted % operator - it is quoted because it can be
43|    # used in strings that also have parameter substitution.
44|    MOD = '%%'
45|
46|    # Bitwise operators - note that these are generated by .bitand()
47|    # and .bitor(), the '&' and '|' are reserved for boolean operator
48|    # usage.
49|    BITAND = '&'
50|    BITOR = '|'
51|    BITLEFTSHIFT = '<<'
52|    BITRIGHTSHIFT = '>>'
53|
54|    def _combine(self, other, connector, reversed):
55|        if not hasattr(other, 'resolve_expression'):
56|            # everything must be resolvable to an expression
57|            if isinstance(other, datetime.timedelta):
58|                other = DurationValue(other, output_field=fields.DurationField())
59|            else:
60|                other = Value(other)
61|
62|        if reversed:
63|            return CombinedExpression(other, connector, self)
64|        return CombinedExpression(self, connector, other)
65|
66|    #############
67|    # OPERATORS #
68|    #############
69|
70|    def __neg__(self):
71|        return self._combine(-1, self.MUL, False)
72|
73|    def __add__(self, other):
74|        return self._combine(other, self.ADD, False)
75|
76|    def __sub__(self, other):
77|        return self._combine(other, self.SUB, False)
78|
79|    def __mul__(self, other):
80|        return self._combine(other, self.MUL, False)
81|
82|    def __truediv__(self, other):
83|        return self._combine(other, self.DIV, False)
84|
85|    def __mod__(self, other):
86|        return self._combine(other, self.MOD, False)
87|
88|    def __pow__(self, other):
89|        return self._combine(other, self.POW, False)
90|
91|    def __and__(self, other):
92|        raise NotImplementedError(
93|            "Use .bitand() and .bitor() for bitwise logical operations."
94|        )
95|
96|    def bitand(self, other):
97|        return self._combine(other, self.BITAND, False)
98|
99|    def bitleftshift(self, other):
100|        return self._combine(other, self.BITLEFTSHIFT, False)
101|
102|    def bitrightshift(self, other):
103|        return self._combine(other, self.BITRIGHTSHIFT, False)
104|
105|    def __or__(self, other):
106|        raise NotImplementedError(
107|            "Use .bitand() and .bitor() for bitwise logical operations."
108|        )
109|
110|    def bitor(self, other):
111|        return self._combine(other, self.BITOR, False)
112|
113|    def __radd__(self, other):
114|        return self._combine(other, self.ADD, True)
115|
116|    def __rsub__(self, other):
117|        return self._combine(other, self.SUB, True)
118|
119|    def __rmul__(self, other):
120|        return self._combine(other, self.MUL, True)
121|
122|    def __rtruediv__(self, other):
123|        return self._combine(other, self.DIV, True)
124|
125|    def __rmod__(self, other):
126|        return self._combine(other, self.MOD, True)
127|
128|    def __rpow__(self, other):
129|        return self._combine(other, self.POW, True)
130|
131|    def __rand__(self, other):
132|        raise NotImplementedError(
133|            "Use .bitand() and .bitor() for bitwise logical operations."
134|        )
135|
136|    def __ror__(self, other):
137|        raise NotImplementedError(
138|            "Use .bitand() and .bitor() for bitwise logical operations."
139|        )
140|
141|
142|@deconstructible
143|class BaseExpression:
144|    """Base class for all query expressions."""
145|
146|    # aggregate specific fields
147|    is_summary = False
148|    _output_field_resolved_to_none = False
149|    # Can the expression be used in a WHERE clause?
150|    filterable = True
151|    # Can the expression can be used as a source expression in Window?
152|    window_compatible = False
153|
154|    def __init__(self, output_field=None):
155|        if output_field is not None:
156|            self.output_field = output_field
157|
158|    def __getstate__(self):
159|        state = self.__dict__.copy()
160|        state.pop('convert_value', None)
161|        return state
162|
163|    def get_db_converters(self, connection):
164|        return (
165|            []
166|            if self.convert_value is self._convert_value_noop else
167|            [self.convert_value]
168|        ) + self.output_field.get_db_converters(connection)
169|
170|    def get_source_expressions(self):
171|        return []
172|
173|    def set_source_expressions(self, exprs):
174|        assert not exprs
175|
176|    def _parse_expressions(self, *expressions):
177|        return [
178|            arg if hasattr(arg, 'resolve_expression') else (
179|                F(arg) if isinstance(arg, str) else Value(arg)
180|            ) for arg in expressions
181|        ]
182|
183|    def as_sql(self, compiler, connection):
184|        """
185|        Responsible for returning a (sql, [params]) tuple to be included
186|        in the current query.
187|
188|        Different backends can provide their own implementation, by
189|        providing an `as_{vendor}` method and patching the Expression:
190|
191|        ```
192|        def override_as_sql(self, compiler, connection):
193|            # custom logic
194|            return super().as_sql(compiler, connection)
195|        setattr(Expression, 'as_' + connection.vendor, override_as_sql)
196|        ```
197|
198|        Arguments:
199|         * compiler: the query compiler responsible for generating the query.
200|           Must have a compile method, returning a (sql, [params]) tuple.
201|           Calling compiler(value) will return a quoted `value`.
202|
203|         * connection: the database connection used for the current query.
204|
205|        Return: (sql, params)
206|          Where `sql` is a string containing ordered sql parameters to be
207|          replaced with the elements of the list `params`.
208|        """
209|        raise NotImplementedError("Subclasses must implement as_sql()")
210|
211|    @cached_property
212|    def contains_aggregate(self):
213|        return any(expr and expr.contains_aggregate for expr in self.get_source_expressions())
214|
215|    @cached_property
216|    def contains_over_clause(self):
217|        return any(expr and expr.contains_over_clause for expr in self.get_source_expressions())
218|
219|    @cached_property
220|    def contains_column_references(self):
221|        return any(expr and expr.contains_column_references for expr in self.get_source_expressions())
222|
223|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
224|        """
225|        Provide the chance to do any preprocessing or validation before being
226|        added to the query.
227|
228|        Arguments:
229|         * query: the backend query implementation
230|         * allow_joins: boolean allowing or denying use of joins
231|           in this query
232|         * reuse: a set of reusable joins for multijoins
233|         * summarize: a terminal aggregate clause
234|         * for_save: whether this expression about to be used in a save or update
235|
236|        Return: an Expression to be added to the query.
237|        """
238|        c = self.copy()
239|        c.is_summary = summarize
240|        c.set_source_expressions([
241|            expr.resolve_expression(query, allow_joins, reuse, summarize)
242|            if expr else None
243|            for expr in c.get_source_expressions()
244|        ])
245|        return c
246|
247|    def _prepare(self, field):
248|        """Hook used by Lookup.get_prep_lookup() to do custom preparation."""
249|        return self
250|
251|    @property
252|    def field(self):
253|        return self.output_field
254|
255|    @cached_property
256|    def output_field(self):
257|        """Return the output type of this expressions."""
258|        output_field = self._resolve_output_field()
259|        if output_field is None:
260|            self._output_field_resolved_to_none = True
261|            raise FieldError('Cannot resolve expression type, unknown output_field')
262|        return output_field
263|
264|    @cached_property
265|    def _output_field_or_none(self):
266|        """
267|        Return the output field of this expression, or None if
268|        _resolve_output_field() didn't return an output type.
269|        """
270|        try:
271|            return self.output_field
272|        except FieldError:
273|            if not self._output_field_resolved_to_none:
274|                raise
275|
276|    def _resolve_output_field(self):
277|        """
278|        Attempt to infer the output type of the expression. If the output
279|        fields of all source fields match then, simply infer the same type
280|        here. This isn't always correct, but it makes sense most of the time.
281|
282|        Consider the difference between `2 + 2` and `2 / 3`. Inferring
283|        the type here is a convenience for the common case. The user should
284|        supply their own output_field with more complex computations.
285|
286|        If a source's output field resolves to None, exclude it from this check.
287|        If all sources are None, then an error is raised higher up the stack in
288|        the output_field property.
289|        """
290|        sources_iter = (source for source in self.get_source_fields() if source is not None)
291|        for output_field in sources_iter:
292|            if any(not isinstance(output_field, source.__class__) for source in sources_iter):
293|                raise FieldError('Expression contains mixed types. You must set output_field.')
294|            return output_field
295|
296|    @staticmethod
297|    def _convert_value_noop(value, expression, connection):
298|        return value
299|
300|    @cached_property
301|    def convert_value(self):
302|        """
303|        Expressions provide their own converters because users have the option
304|        of manually specifying the output_field which may be a different type
305|        from the one the database returns.
306|        """
307|        field = self.output_field
308|        internal_type = field.get_internal_type()
309|        if internal_type == 'FloatField':
310|            return lambda value, expression, connection: None if value is None else float(value)
311|        elif internal_type.endswith('IntegerField'):
312|            return lambda value, expression, connection: None if value is None else int(value)
313|        elif internal_type == 'DecimalField':
314|            return lambda value, expression, connection: None if value is None else Decimal(value)
315|        return self._convert_value_noop
316|
317|    def get_lookup(self, lookup):
318|        return self.output_field.get_lookup(lookup)
319|
320|    def get_transform(self, name):
321|        return self.output_field.get_transform(name)
322|
323|    def relabeled_clone(self, change_map):
324|        clone = self.copy()
325|        clone.set_source_expressions([
326|            e.relabeled_clone(change_map) if e is not None else None
327|            for e in self.get_source_expressions()
328|        ])
329|        return clone
330|
331|    def copy(self):
332|        return copy.copy(self)
333|
334|    def get_group_by_cols(self):
335|        if not self.contains_aggregate:
336|            return [self]
337|        cols = []
338|        for source in self.get_source_expressions():
339|            cols.extend(source.get_group_by_cols())
340|        return cols
341|
342|    def get_source_fields(self):
343|        """Return the underlying field types used by this aggregate."""
344|        return [e._output_field_or_none for e in self.get_source_expressions()]
345|
346|    def asc(self, **kwargs):
347|        return OrderBy(self, **kwargs)
348|
349|    def desc(self, **kwargs):
350|        return OrderBy(self, descending=True, **kwargs)
351|
352|    def reverse_ordering(self):
353|        return self
354|
355|    def flatten(self):
356|        """
357|        Recursively yield this expression and all subexpressions, in
358|        depth-first order.
359|        """
360|        yield self
361|        for expr in self.get_source_expressions():
362|            if expr:
363|                yield from expr.flatten()
364|
365|    @cached_property
366|    def identity(self):
367|        constructor_signature = inspect.signature(self.__init__)
368|        args, kwargs = self._constructor_args
369|        signature = constructor_signature.bind_partial(*args, **kwargs)
370|        signature.apply_defaults()
371|        arguments = signature.arguments.items()
372|        identity = [self.__class__]
373|        for arg, value in arguments:
374|            if isinstance(value, fields.Field):
375|                value = type(value)
376|            else:
377|                value = make_hashable(value)
378|            identity.append((arg, value))
379|        return tuple(identity)
380|
381|    def __eq__(self, other):
382|        return isinstance(other, BaseExpression) and other.identity == self.identity
383|
384|    def __hash__(self):
385|        return hash(self.identity)
386|
387|
388|class Expression(BaseExpression, Combinable):
389|    """An expression that can be combined with other expressions."""
390|    pass
391|
392|
393|class CombinedExpression(SQLiteNumericMixin, Expression):
394|
395|    def __init__(self, lhs, connector, rhs, output_field=None):
396|        super().__init__(output_field=output_field)
397|        self.connector = connector
398|        self.lhs = lhs
399|        self.rhs = rhs
400|
401|    def __repr__(self):
402|        return "<{}: {}>".format(self.__class__.__name__, self)
403|
404|    def __str__(self):
405|        return "{} {} {}".format(self.lhs, self.connector, self.rhs)
406|
407|    def get_source_expressions(self):
408|        return [self.lhs, self.rhs]
409|
410|    def set_source_expressions(self, exprs):
411|        self.lhs, self.rhs = exprs
412|
413|    def as_sql(self, compiler, connection):
414|        try:
415|            lhs_output = self.lhs.output_field
416|        except FieldError:
417|            lhs_output = None
418|        try:
419|            rhs_output = self.rhs.output_field
420|        except FieldError:
421|            rhs_output = None
422|        if (not connection.features.has_native_duration_field and
423|                ((lhs_output and lhs_output.get_internal_type() == 'DurationField') or
424|                 (rhs_output and rhs_output.get_internal_type() == 'DurationField'))):
425|            return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
426|        if (lhs_output and rhs_output and self.connector == self.SUB and
427|            lhs_output.get_internal_type() in {'DateField', 'DateTimeField', 'TimeField'} and
428|                lhs_output.get_internal_type() == rhs_output.get_internal_type()):
429|            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
430|        expressions = []
431|        expression_params = []
432|        sql, params = compiler.compile(self.lhs)
433|        expressions.append(sql)
434|        expression_params.extend(params)
435|        sql, params = compiler.compile(self.rhs)
436|        expressions.append(sql)
437|        expression_params.extend(params)
438|        # order of precedence
439|        expression_wrapper = '(%s)'
440|        sql = connection.ops.combine_expression(self.connector, expressions)
441|        return expression_wrapper % sql, expression_params
442|
443|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
444|        c = self.copy()
445|        c.is_summary = summarize
446|        c.lhs = c.lhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
447|        c.rhs = c.rhs.resolve_expression(query, allow_joins, reuse, summarize, for_save)
448|        return c
449|
450|
451|class DurationExpression(CombinedExpression):
452|    def compile(self, side, compiler, connection):
453|        if not isinstance(side, DurationValue):
454|            try:
455|                output = side.output_field
456|            except FieldError:
457|                pass
458|            else:
459|                if output.get_internal_type() == 'DurationField':
460|                    sql, params = compiler.compile(side)
461|                    return connection.ops.format_for_duration_arithmetic(sql), params
462|        return compiler.compile(side)
463|
464|    def as_sql(self, compiler, connection):
465|        connection.ops.check_expression_support(self)
466|        expressions = []
467|        expression_params = []
468|        sql, params = self.compile(self.lhs, compiler, connection)
469|        expressions.append(sql)
470|        expression_params.extend(params)
471|        sql, params = self.compile(self.rhs, compiler, connection)
472|        expressions.append(sql)
473|        expression_params.extend(params)
474|        # order of precedence
475|        expression_wrapper = '(%s)'
476|        sql = connection.ops.combine_duration_expression(self.connector, expressions)
477|        return expression_wrapper % sql, expression_params
478|
479|
480|class TemporalSubtraction(CombinedExpression):
481|    output_field = fields.DurationField()
482|
483|    def __init__(self, lhs, rhs):
484|        super().__init__(lhs, self.SUB, rhs)
485|
486|    def as_sql(self, compiler, connection):
487|        connection.ops.check_expression_support(self)
488|        lhs = compiler.compile(self.lhs, connection)
489|        rhs = compiler.compile(self.rhs, connection)
490|        return connection.ops.subtract_temporals(self.lhs.output_field.get_internal_type(), lhs, rhs)
491|
492|
493|@deconstructible
494|class F(Combinable):
495|    """An object capable of resolving references to existing query objects."""
496|    # Can the expression be used in a WHERE clause?
497|    filterable = True
498|
499|    def __init__(self, name):
500|        """
501|        Arguments:
502|         * name: the name of the field this expression references
503|        """
504|        self.name = name
505|
506|    def __repr__(self):
507|        return "{}({})".format(self.__class__.__name__, self.name)
508|
509|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
510|                           summarize=False, for_save=False, simple_col=False):
511|        return query.resolve_ref(self.name, allow_joins, reuse, summarize, simple_col)
512|
513|    def asc(self, **kwargs):
514|        return OrderBy(self, **kwargs)
515|
516|    def desc(self, **kwargs):
517|        return OrderBy(self, descending=True, **kwargs)
518|
519|    def __eq__(self, other):
520|        return self.__class__ == other.__class__ and self.name == other.name
521|
522|    def __hash__(self):
523|        return hash(self.name)
524|
525|
526|class ResolvedOuterRef(F):
527|    """
528|    An object that contains a reference to an outer query.
529|
530|    In this case, the reference to the outer query has been resolved because
531|    the inner query has been used as a subquery.
532|    """
533|    def as_sql(self, *args, **kwargs):
534|        raise ValueError(
535|            'This queryset contains a reference to an outer query and may '
536|            'only be used in a subquery.'
537|        )
538|
539|    def _prepare(self, output_field=None):
540|        return self
541|
542|    def relabeled_clone(self, relabels):
543|        return self
544|
545|
546|class OuterRef(F):
547|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
548|                           summarize=False, for_save=False, simple_col=False):
549|        if isinstance(self.name, self.__class__):
550|            return self.name
551|        return ResolvedOuterRef(self.name)
552|
553|    def _prepare(self, output_field=None):
554|        return self
555|
556|
557|class Func(SQLiteNumericMixin, Expression):
558|    """An SQL function call."""
559|    function = None
560|    template = '%(function)s(%(expressions)s)'
561|    arg_joiner = ', '
562|    arity = None  # The number of arguments the function accepts.
563|
564|    def __init__(self, *expressions, output_field=None, **extra):
565|        if self.arity is not None and len(expressions) != self.arity:
566|            raise TypeError(
567|                "'%s' takes exactly %s %s (%s given)" % (
568|                    self.__class__.__name__,
569|                    self.arity,
570|                    "argument" if self.arity == 1 else "arguments",
571|                    len(expressions),
572|                )
573|            )
574|        super().__init__(output_field=output_field)
575|        self.source_expressions = self._parse_expressions(*expressions)
576|        self.extra = extra
577|
578|    def __repr__(self):
579|        args = self.arg_joiner.join(str(arg) for arg in self.source_expressions)
580|        extra = {**self.extra, **self._get_repr_options()}
581|        if extra:
582|            extra = ', '.join(str(key) + '=' + str(val) for key, val in sorted(extra.items()))
583|            return "{}({}, {})".format(self.__class__.__name__, args, extra)
584|        return "{}({})".format(self.__class__.__name__, args)
585|
586|    def _get_repr_options(self):
587|        """Return a dict of extra __init__() options to include in the repr."""
588|        return {}
589|
590|    def get_source_expressions(self):
591|        return self.source_expressions
592|
593|    def set_source_expressions(self, exprs):
594|        self.source_expressions = exprs
595|
596|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
597|        c = self.copy()
598|        c.is_summary = summarize
599|        for pos, arg in enumerate(c.source_expressions):
600|            c.source_expressions[pos] = arg.resolve_expression(query, allow_joins, reuse, summarize, for_save)
601|        return c
602|
603|    def as_sql(self, compiler, connection, function=None, template=None, arg_joiner=None, **extra_context):
604|        connection.ops.check_expression_support(self)
605|        sql_parts = []
606|        params = []
607|        for arg in self.source_expressions:
608|            arg_sql, arg_params = compiler.compile(arg)
609|            sql_parts.append(arg_sql)
610|            params.extend(arg_params)
611|        data = {**self.extra, **extra_context}
612|        # Use the first supplied value in this order: the parameter to this
613|        # method, a value supplied in __init__()'s **extra (the value in
614|        # `data`), or the value defined on the class.
615|        if function is not None:
616|            data['function'] = function
617|        else:
618|            data.setdefault('function', self.function)
619|        template = template or data.get('template', self.template)
620|        arg_joiner = arg_joiner or data.get('arg_joiner', self.arg_joiner)
621|        data['expressions'] = data['field'] = arg_joiner.join(sql_parts)
622|        return template % data, params
623|
624|    def copy(self):
625|        copy = super().copy()
626|        copy.source_expressions = self.source_expressions[:]
627|        copy.extra = self.extra.copy()
628|        return copy
629|
630|
631|class Value(Expression):
632|    """Represent a wrapped value as a node within an expression."""
633|    def __init__(self, value, output_field=None):
634|        """
635|        Arguments:
636|         * value: the value this expression represents. The value will be
637|           added into the sql parameter list and properly quoted.
638|
639|         * output_field: an instance of the model field type that this
640|           expression will return, such as IntegerField() or CharField().
641|        """
642|        super().__init__(output_field=output_field)
643|        self.value = value
644|
645|    def __repr__(self):
646|        return "{}({})".format(self.__class__.__name__, self.value)
647|
648|    def as_sql(self, compiler, connection):
649|        connection.ops.check_expression_support(self)
650|        val = self.value
651|        output_field = self._output_field_or_none
652|        if output_field is not None:
653|            if self.for_save:
654|                val = output_field.get_db_prep_save(val, connection=connection)
655|            else:
656|                val = output_field.get_db_prep_value(val, connection=connection)
657|            if hasattr(output_field, 'get_placeholder'):
658|                return output_field.get_placeholder(val, compiler, connection), [val]
659|        if val is None:
660|            # cx_Oracle does not always convert None to the appropriate
661|            # NULL type (like in case expressions using numbers), so we
662|            # use a literal SQL NULL
663|            return 'NULL', []
664|        return '%s', [val]
665|
666|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
667|        c = super().resolve_expression(query, allow_joins, reuse, summarize, for_save)
668|        c.for_save = for_save
669|        return c
670|
671|    def get_group_by_cols(self):
672|        return []
673|
674|
675|class DurationValue(Value):
676|    def as_sql(self, compiler, connection):
677|        connection.ops.check_expression_support(self)
678|        if connection.features.has_native_duration_field:
679|            return super().as_sql(compiler, connection)
680|        return connection.ops.date_interval_sql(self.value), []
681|
682|
683|class RawSQL(Expression):
684|    def __init__(self, sql, params, output_field=None):
685|        if output_field is None:
686|            output_field = fields.Field()
687|        self.sql, self.params = sql, params
688|        super().__init__(output_field=output_field)
689|
690|    def __repr__(self):
691|        return "{}({}, {})".format(self.__class__.__name__, self.sql, self.params)
692|
693|    def as_sql(self, compiler, connection):
694|        return '(%s)' % self.sql, self.params
695|
696|    def get_group_by_cols(self):
697|        return [self]
698|
699|
700|class Star(Expression):
701|    def __repr__(self):
702|        return "'*'"
703|
704|    def as_sql(self, compiler, connection):
705|        return '*', []
706|
707|
708|class Random(Expression):
709|    output_field = fields.FloatField()
710|
711|    def __repr__(self):
712|        return "Random()"
713|
714|    def as_sql(self, compiler, connection):
715|        return connection.ops.random_function_sql(), []
716|
717|
718|class Col(Expression):
719|
720|    contains_column_references = True
721|
722|    def __init__(self, alias, target, output_field=None):
723|        if output_field is None:
724|            output_field = target
725|        super().__init__(output_field=output_field)
726|        self.alias, self.target = alias, target
727|
728|    def __repr__(self):
729|        return "{}({}, {})".format(
730|            self.__class__.__name__, self.alias, self.target)
731|
732|    def as_sql(self, compiler, connection):
733|        qn = compiler.quote_name_unless_alias
734|        return "%s.%s" % (qn(self.alias), qn(self.target.column)), []
735|
736|    def relabeled_clone(self, relabels):
737|        return self.__class__(relabels.get(self.alias, self.alias), self.target, self.output_field)
738|
739|    def get_group_by_cols(self):
740|        return [self]
741|
742|    def get_db_converters(self, connection):
743|        if self.target == self.output_field:
744|            return self.output_field.get_db_converters(connection)
745|        return (self.output_field.get_db_converters(connection) +
746|                self.target.get_db_converters(connection))
747|
748|
749|class SimpleCol(Expression):
750|    """
751|    Represents the SQL of a column name without the table name.
752|
753|    This variant of Col doesn't include the table name (or an alias) to
754|    avoid a syntax error in check constraints.
755|    """
756|    contains_column_references = True
757|
758|    def __init__(self, target, output_field=None):
759|        if output_field is None:
760|            output_field = target
761|        super().__init__(output_field=output_field)
762|        self.target = target
763|
764|    def __repr__(self):
765|        return '{}({})'.format(self.__class__.__name__, self.target)
766|
767|    def as_sql(self, compiler, connection):
768|        qn = compiler.quote_name_unless_alias
769|        return qn(self.target.column), []
770|
771|    def get_group_by_cols(self):
772|        return [self]
773|
774|    def get_db_converters(self, connection):
775|        if self.target == self.output_field:
776|            return self.output_field.get_db_converters(connection)
777|        return (
778|            self.output_field.get_db_converters(connection) +
779|            self.target.get_db_converters(connection)
780|        )
781|
782|
783|class Ref(Expression):
784|    """
785|    Reference to column alias of the query. For example, Ref('sum_cost') in
786|    qs.annotate(sum_cost=Sum('cost')) query.
787|    """
788|    def __init__(self, refs, source):
789|        super().__init__()
790|        self.refs, self.source = refs, source
791|
792|    def __repr__(self):
793|        return "{}({}, {})".format(self.__class__.__name__, self.refs, self.source)
794|
795|    def get_source_expressions(self):
796|        return [self.source]
797|
798|    def set_source_expressions(self, exprs):
799|        self.source, = exprs
800|
801|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
802|        # The sub-expression `source` has already been resolved, as this is
803|        # just a reference to the name of `source`.
804|        return self
805|
806|    def relabeled_clone(self, relabels):
807|        return self
808|
809|    def as_sql(self, compiler, connection):
810|        return connection.ops.quote_name(self.refs), []
811|
812|    def get_group_by_cols(self):
813|        return [self]
814|
815|
816|class ExpressionList(Func):
817|    """
818|    An expression containing multiple expressions. Can be used to provide a
819|    list of expressions as an argument to another expression, like an
820|    ordering clause.
821|    """
822|    template = '%(expressions)s'
823|
824|    def __init__(self, *expressions, **extra):
825|        if not expressions:
826|            raise ValueError('%s requires at least one expression.' % self.__class__.__name__)
827|        super().__init__(*expressions, **extra)
828|
829|    def __str__(self):
830|        return self.arg_joiner.join(str(arg) for arg in self.source_expressions)
831|
832|
833|class ExpressionWrapper(Expression):
834|    """
835|    An expression that can wrap another expression so that it can provide
836|    extra context to the inner expression, such as the output_field.
837|    """
838|
839|    def __init__(self, expression, output_field):
840|        super().__init__(output_field=output_field)
841|        self.expression = expression
842|
843|    def set_source_expressions(self, exprs):
844|        self.expression = exprs[0]
845|
846|    def get_source_expressions(self):
847|        return [self.expression]
848|
849|    def as_sql(self, compiler, connection):
850|        return self.expression.as_sql(compiler, connection)
851|
852|    def __repr__(self):
853|        return "{}({})".format(self.__class__.__name__, self.expression)
854|
855|
856|class When(Expression):
857|    template = 'WHEN %(condition)s THEN %(result)s'
858|
859|    def __init__(self, condition=None, then=None, **lookups):
860|        if lookups and condition is None:
861|            condition, lookups = Q(**lookups), None
862|        if condition is None or not getattr(condition, 'conditional', False) or lookups:
863|            raise TypeError("__init__() takes either a Q object or lookups as keyword arguments")
864|        if isinstance(condition, Q) and not condition:
865|            raise ValueError("An empty Q() can't be used as a When() condition.")
866|        super().__init__(output_field=None)
867|        self.condition = condition
868|        self.result = self._parse_expressions(then)[0]
869|
870|    def __str__(self):
871|        return "WHEN %r THEN %r" % (self.condition, self.result)
872|
873|    def __repr__(self):
874|        return "<%s: %s>" % (self.__class__.__name__, self)
875|
876|    def get_source_expressions(self):
877|        return [self.condition, self.result]
878|
879|    def set_source_expressions(self, exprs):
880|        self.condition, self.result = exprs
881|
882|    def get_source_fields(self):
883|        # We're only interested in the fields of the result expressions.
884|        return [self.result._output_field_or_none]
885|
886|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
887|        c = self.copy()
888|        c.is_summary = summarize
889|        if hasattr(c.condition, 'resolve_expression'):
890|            c.condition = c.condition.resolve_expression(query, allow_joins, reuse, summarize, False)
891|        c.result = c.result.resolve_expression(query, allow_joins, reuse, summarize, for_save)
892|        return c
893|
894|    def as_sql(self, compiler, connection, template=None, **extra_context):
895|        connection.ops.check_expression_support(self)
896|        template_params = extra_context
897|        sql_params = []
898|        condition_sql, condition_params = compiler.compile(self.condition)
899|        template_params['condition'] = condition_sql
900|        sql_params.extend(condition_params)
901|        result_sql, result_params = compiler.compile(self.result)
902|        template_params['result'] = result_sql
903|        sql_params.extend(result_params)
904|        template = template or self.template
905|        return template % template_params, sql_params
906|
907|    def get_group_by_cols(self):
908|        # This is not a complete expression and cannot be used in GROUP BY.
909|        cols = []
910|        for source in self.get_source_expressions():
911|            cols.extend(source.get_group_by_cols())
912|        return cols
913|
914|
915|class Case(Expression):
916|    """
917|    An SQL searched CASE expression:
918|
919|        CASE
920|            WHEN n > 0
921|                THEN 'positive'
922|            WHEN n < 0
923|                THEN 'negative'
924|            ELSE 'zero'
925|        END
926|    """
927|    template = 'CASE %(cases)s ELSE %(default)s END'
928|    case_joiner = ' '
929|
930|    def __init__(self, *cases, default=None, output_field=None, **extra):
931|        if not all(isinstance(case, When) for case in cases):
932|            raise TypeError("Positional arguments must all be When objects.")
933|        super().__init__(output_field)
934|        self.cases = list(cases)
935|        self.default = self._parse_expressions(default)[0]
936|        self.extra = extra
937|
938|    def __str__(self):
939|        return "CASE %s, ELSE %r" % (', '.join(str(c) for c in self.cases), self.default)
940|
941|    def __repr__(self):
942|        return "<%s: %s>" % (self.__class__.__name__, self)
943|
944|    def get_source_expressions(self):
945|        return self.cases + [self.default]
946|
947|    def set_source_expressions(self, exprs):
948|        *self.cases, self.default = exprs
949|
950|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
951|        c = self.copy()
952|        c.is_summary = summarize
953|        for pos, case in enumerate(c.cases):
954|            c.cases[pos] = case.resolve_expression(query, allow_joins, reuse, summarize, for_save)
955|        c.default = c.default.resolve_expression(query, allow_joins, reuse, summarize, for_save)
956|        return c
957|
958|    def copy(self):
959|        c = super().copy()
960|        c.cases = c.cases[:]
961|        return c
962|
963|    def as_sql(self, compiler, connection, template=None, case_joiner=None, **extra_context):
964|        connection.ops.check_expression_support(self)
965|        if not self.cases:
966|            return compiler.compile(self.default)
967|        template_params = {**self.extra, **extra_context}
968|        case_parts = []
969|        sql_params = []
970|        for case in self.cases:
971|            try:
972|                case_sql, case_params = compiler.compile(case)
973|            except EmptyResultSet:
974|                continue
975|            case_parts.append(case_sql)
976|            sql_params.extend(case_params)
977|        default_sql, default_params = compiler.compile(self.default)
978|        if not case_parts:
979|            return default_sql, default_params
980|        case_joiner = case_joiner or self.case_joiner
981|        template_params['cases'] = case_joiner.join(case_parts)
982|        template_params['default'] = default_sql
983|        sql_params.extend(default_params)
984|        template = template or template_params.get('template', self.template)
985|        sql = template % template_params
986|        if self._output_field_or_none is not None:
987|            sql = connection.ops.unification_cast_sql(self.output_field) % sql
988|        return sql, sql_params
989|
990|
991|class Subquery(Expression):
992|    """
993|    An explicit subquery. It may contain OuterRef() references to the outer
994|    query which will be resolved when it is applied to that query.
995|    """
996|    template = '(%(subquery)s)'
997|    contains_aggregate = False
998|
999|    def __init__(self, queryset, output_field=None, **extra):
1000|        self.queryset = queryset
(355 more lines below)


============================================================



ACTION:

THOUGHT: Let me check the `Func` class in the django/db/models/functions directory since it might be defined there:
CODE:
open_file('/workspace/django__django__3.0/django/db/models/functions/__init__.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/functions/__init__.py (42 lines total)]
1|from .comparison import Cast, Coalesce, Greatest, Least, NullIf
2|from .datetime import (
3|    Extract, ExtractDay, ExtractHour, ExtractIsoYear, ExtractMinute,
4|    ExtractMonth, ExtractQuarter, ExtractSecond, ExtractWeek, ExtractWeekDay,
5|    ExtractYear, Now, Trunc, TruncDate, TruncDay, TruncHour, TruncMinute,
6|    TruncMonth, TruncQuarter, TruncSecond, TruncTime, TruncWeek, TruncYear,
7|)
8|from .math import (
9|    Abs, ACos, ASin, ATan, ATan2, Ceil, Cos, Cot, Degrees, Exp, Floor, Ln, Log,
10|    Mod, Pi, Power, Radians, Round, Sin, Sqrt, Tan,
11|)
12|from .text import (
13|    Chr, Concat, ConcatPair, Left, Length, Lower, LPad, LTrim, Ord, Repeat,
14|    Replace, Reverse, Right, RPad, RTrim, StrIndex, Substr, Trim, Upper,
15|)
16|from .window import (
17|    CumeDist, DenseRank, FirstValue, Lag, LastValue, Lead, NthValue, Ntile,
18|    PercentRank, Rank, RowNumber,
19|)
20|
21|__all__ = [
22|    # comparison and conversion
23|    'Cast', 'Coalesce', 'Greatest', 'Least', 'NullIf',
24|    # datetime
25|    'Extract', 'ExtractDay', 'ExtractHour', 'ExtractMinute', 'ExtractMonth',
26|    'ExtractQuarter', 'ExtractSecond', 'ExtractWeek', 'ExtractWeekDay',
27|    'ExtractIsoYear', 'ExtractYear', 'Now', 'Trunc', 'TruncDate', 'TruncDay',
28|    'TruncHour', 'TruncMinute', 'TruncMonth', 'TruncQuarter', 'TruncSecond',
29|    'TruncMinute', 'TruncMonth', 'TruncQuarter', 'TruncSecond', 'TruncTime',
30|    'TruncWeek', 'TruncYear',
31|    # math
32|    'Abs', 'ACos', 'ASin', 'ATan', 'ATan2', 'Ceil', 'Cos', 'Cot', 'Degrees',
33|    'Exp', 'Floor', 'Ln', 'Log', 'Mod', 'Pi', 'Power', 'Radians', 'Round',
34|    'Sin', 'Sqrt', 'Tan',
35|    # text
36|    'Chr', 'Concat', 'ConcatPair', 'Left', 'Length', 'Lower', 'LPad', 'LTrim',
37|    'Ord', 'Repeat', 'Replace', 'Reverse', 'Right', 'RPad', 'RTrim',
38|    'StrIndex', 'Substr', 'Trim', 'Upper',
39|    # window
40|    'CumeDist', 'DenseRank', 'FirstValue', 'Lag', 'LastValue', 'Lead',
41|    'NthValue', 'Ntile', 'PercentRank', 'Rank', 'RowNumber',
42|]


============================================================



ACTION:

THOUGHT: Let me check back in expressions.py for the `Func` class, it should be there. Let me scroll to find it:
CODE:
search_file('class Func', '/workspace/django__django__3.0/django/db/models/expressions.py')

============================================================



OBSERVATION:

[Found 1 matches for "class Func" in /workspace/django__django__3.0/django/db/models/expressions.py]
Line 557: class Func(SQLiteNumericMixin, Expression):
[End of matches for "class Func" in /workspace/django__django__3.0/django/db/models/expressions.py]


============================================================



ACTION:

THOUGHT: Great, let me look at the `Func` class definition:
CODE:
open_file('/workspace/django__django__3.0/django/db/models/expressions.py', line_number=557, context_lines=50)

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/expressions.py (1355 lines total)]
(456 more lines above)
457|                pass
458|            else:
459|                if output.get_internal_type() == 'DurationField':
460|                    sql, params = compiler.compile(side)
461|                    return connection.ops.format_for_duration_arithmetic(sql), params
462|        return compiler.compile(side)
463|
464|    def as_sql(self, compiler, connection):
465|        connection.ops.check_expression_support(self)
466|        expressions = []
467|        expression_params = []
468|        sql, params = self.compile(self.lhs, compiler, connection)
469|        expressions.append(sql)
470|        expression_params.extend(params)
471|        sql, params = self.compile(self.rhs, compiler, connection)
472|        expressions.append(sql)
473|        expression_params.extend(params)
474|        # order of precedence
475|        expression_wrapper = '(%s)'
476|        sql = connection.ops.combine_duration_expression(self.connector, expressions)
477|        return expression_wrapper % sql, expression_params
478|
479|
480|class TemporalSubtraction(CombinedExpression):
481|    output_field = fields.DurationField()
482|
483|    def __init__(self, lhs, rhs):
484|        super().__init__(lhs, self.SUB, rhs)
485|
486|    def as_sql(self, compiler, connection):
487|        connection.ops.check_expression_support(self)
488|        lhs = compiler.compile(self.lhs, connection)
489|        rhs = compiler.compile(self.rhs, connection)
490|        return connection.ops.subtract_temporals(self.lhs.output_field.get_internal_type(), lhs, rhs)
491|
492|
493|@deconstructible
494|class F(Combinable):
495|    """An object capable of resolving references to existing query objects."""
496|    # Can the expression be used in a WHERE clause?
497|    filterable = True
498|
499|    def __init__(self, name):
500|        """
501|        Arguments:
502|         * name: the name of the field this expression references
503|        """
504|        self.name = name
505|
506|    def __repr__(self):
507|        return "{}({})".format(self.__class__.__name__, self.name)
508|
509|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
510|                           summarize=False, for_save=False, simple_col=False):
511|        return query.resolve_ref(self.name, allow_joins, reuse, summarize, simple_col)
512|
513|    def asc(self, **kwargs):
514|        return OrderBy(self, **kwargs)
515|
516|    def desc(self, **kwargs):
517|        return OrderBy(self, descending=True, **kwargs)
518|
519|    def __eq__(self, other):
520|        return self.__class__ == other.__class__ and self.name == other.name
521|
522|    def __hash__(self):
523|        return hash(self.name)
524|
525|
526|class ResolvedOuterRef(F):
527|    """
528|    An object that contains a reference to an outer query.
529|
530|    In this case, the reference to the outer query has been resolved because
531|    the inner query has been used as a subquery.
532|    """
533|    def as_sql(self, *args, **kwargs):
534|        raise ValueError(
535|            'This queryset contains a reference to an outer query and may '
536|            'only be used in a subquery.'
537|        )
538|
539|    def _prepare(self, output_field=None):
540|        return self
541|
542|    def relabeled_clone(self, relabels):
543|        return self
544|
545|
546|class OuterRef(F):
547|    def resolve_expression(self, query=None, allow_joins=True, reuse=None,
548|                           summarize=False, for_save=False, simple_col=False):
549|        if isinstance(self.name, self.__class__):
550|            return self.name
551|        return ResolvedOuterRef(self.name)
552|
553|    def _prepare(self, output_field=None):
554|        return self
555|
556|
557|class Func(SQLiteNumericMixin, Expression):
558|    """An SQL function call."""
559|    function = None
560|    template = '%(function)s(%(expressions)s)'
561|    arg_joiner = ', '
562|    arity = None  # The number of arguments the function accepts.
563|
564|    def __init__(self, *expressions, output_field=None, **extra):
565|        if self.arity is not None and len(expressions) != self.arity:
566|            raise TypeError(
567|                "'%s' takes exactly %s %s (%s given)" % (
568|                    self.__class__.__name__,
569|                    self.arity,
570|                    "argument" if self.arity == 1 else "arguments",
571|                    len(expressions),
572|                )
573|            )
574|        super().__init__(output_field=output_field)
575|        self.source_expressions = self._parse_expressions(*expressions)
576|        self.extra = extra
577|
578|    def __repr__(self):
579|        args = self.arg_joiner.join(str(arg) for arg in self.source_expressions)
580|        extra = {**self.extra, **self._get_repr_options()}
581|        if extra:
582|            extra = ', '.join(str(key) + '=' + str(val) for key, val in sorted(extra.items()))
583|            return "{}({}, {})".format(self.__class__.__name__, args, extra)
584|        return "{}({})".format(self.__class__.__name__, args)
585|
586|    def _get_repr_options(self):
587|        """Return a dict of extra __init__() options to include in the repr."""
588|        return {}
589|
590|    def get_source_expressions(self):
591|        return self.source_expressions
592|
593|    def set_source_expressions(self, exprs):
594|        self.source_expressions = exprs
595|
596|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
597|        c = self.copy()
598|        c.is_summary = summarize
599|        for pos, arg in enumerate(c.source_expressions):
600|            c.source_expressions[pos] = arg.resolve_expression(query, allow_joins, reuse, summarize, for_save)
601|        return c
602|
603|    def as_sql(self, compiler, connection, function=None, template=None, arg_joiner=None, **extra_context):
604|        connection.ops.check_expression_support(self)
605|        sql_parts = []
606|        params = []
607|        for arg in self.source_expressions:
608|            arg_sql, arg_params = compiler.compile(arg)
609|            sql_parts.append(arg_sql)
610|            params.extend(arg_params)
611|        data = {**self.extra, **extra_context}
612|        # Use the first supplied value in this order: the parameter to this
613|        # method, a value supplied in __init__()'s **extra (the value in
614|        # `data`), or the value defined on the class.
615|        if function is not None:
616|            data['function'] = function
617|        else:
618|            data.setdefault('function', self.function)
619|        template = template or data.get('template', self.template)
620|        arg_joiner = arg_joiner or data.get('arg_joiner', self.arg_joiner)
621|        data['expressions'] = data['field'] = arg_joiner.join(sql_parts)
622|        return template % data, params
623|
624|    def copy(self):
625|        copy = super().copy()
626|        copy.source_expressions = self.source_expressions[:]
627|        copy.extra = self.extra.copy()
628|        return copy
629|
630|
631|class Value(Expression):
632|    """Represent a wrapped value as a node within an expression."""
633|    def __init__(self, value, output_field=None):
634|        """
635|        Arguments:
636|         * value: the value this expression represents. The value will be
637|           added into the sql parameter list and properly quoted.
638|
639|         * output_field: an instance of the model field type that this
640|           expression will return, such as IntegerField() or CharField().
641|        """
642|        super().__init__(output_field=output_field)
643|        self.value = value
644|
645|    def __repr__(self):
646|        return "{}({})".format(self.__class__.__name__, self.value)
647|
648|    def as_sql(self, compiler, connection):
649|        connection.ops.check_expression_support(self)
650|        val = self.value
651|        output_field = self._output_field_or_none
652|        if output_field is not None:
653|            if self.for_save:
654|                val = output_field.get_db_prep_save(val, connection=connection)
655|            else:
656|                val = output_field.get_db_prep_value(val, connection=connection)
657|            if hasattr(output_field, 'get_placeholder'):
(698 more lines below)


============================================================



ACTION:

THOUGHT: Now I understand the issue. The problem is in the `Aggregate` class's template and how it handles the `distinct` parameter. Let me check the `Aggregate` class again:
CODE:
open_file('/workspace/django__django__3.0/django/db/models/aggregates.py', line_number=16, context_lines=60)

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/aggregates.py (155 lines total)]
1|"""
2|Classes to represent the definitions of aggregate functions.
3|"""
4|from django.core.exceptions import FieldError
5|from django.db.models.expressions import Case, Func, Star, When
6|from django.db.models.fields import IntegerField
7|from django.db.models.functions.mixins import (
8|    FixDurationInputMixin, NumericOutputFieldMixin,
9|)
10|
11|__all__ = [
12|    'Aggregate', 'Avg', 'Count', 'Max', 'Min', 'StdDev', 'Sum', 'Variance',
13|]
14|
15|
16|class Aggregate(Func):
17|    template = '%(function)s(%(distinct)s%(expressions)s)'
18|    contains_aggregate = True
19|    name = None
20|    filter_template = '%s FILTER (WHERE %%(filter)s)'
21|    window_compatible = True
22|    allow_distinct = False
23|
24|    def __init__(self, *expressions, distinct=False, filter=None, **extra):
25|        if distinct and not self.allow_distinct:
26|            raise TypeError("%s does not allow distinct." % self.__class__.__name__)
27|        self.distinct = distinct
28|        self.filter = filter
29|        super().__init__(*expressions, **extra)
30|
31|    def get_source_fields(self):
32|        # Don't return the filter expression since it's not a source field.
33|        return [e._output_field_or_none for e in super().get_source_expressions()]
34|
35|    def get_source_expressions(self):
36|        source_expressions = super().get_source_expressions()
37|        if self.filter:
38|            return source_expressions + [self.filter]
39|        return source_expressions
40|
41|    def set_source_expressions(self, exprs):
42|        self.filter = self.filter and exprs.pop()
43|        return super().set_source_expressions(exprs)
44|
45|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
46|        # Aggregates are not allowed in UPDATE queries, so ignore for_save
47|        c = super().resolve_expression(query, allow_joins, reuse, summarize)
48|        c.filter = c.filter and c.filter.resolve_expression(query, allow_joins, reuse, summarize)
49|        if not summarize:
50|            # Call Aggregate.get_source_expressions() to avoid
51|            # returning self.filter and including that in this loop.
52|            expressions = super(Aggregate, c).get_source_expressions()
53|            for index, expr in enumerate(expressions):
54|                if expr.contains_aggregate:
55|                    before_resolved = self.get_source_expressions()[index]
56|                    name = before_resolved.name if hasattr(before_resolved, 'name') else repr(before_resolved)
57|                    raise FieldError("Cannot compute %s('%s'): '%s' is an aggregate" % (c.name, name, name))
58|        return c
59|
60|    @property
61|    def default_alias(self):
62|        expressions = self.get_source_expressions()
63|        if len(expressions) == 1 and hasattr(expressions[0], 'name'):
64|            return '%s__%s' % (expressions[0].name, self.name.lower())
65|        raise TypeError("Complex expressions require an alias")
66|
67|    def get_group_by_cols(self):
68|        return []
69|
70|    def as_sql(self, compiler, connection, **extra_context):
71|        extra_context['distinct'] = 'DISTINCT' if self.distinct else ''
72|        if self.filter:
73|            if connection.features.supports_aggregate_filter_clause:
74|                filter_sql, filter_params = self.filter.as_sql(compiler, connection)
75|                template = self.filter_template % extra_context.get('template', self.template)
76|                sql, params = super().as_sql(
77|                    compiler, connection, template=template, filter=filter_sql,
78|                    **extra_context
79|                )
80|                return sql, params + filter_params
81|            else:
82|                copy = self.copy()
83|                copy.filter = None
84|                source_expressions = copy.get_source_expressions()
85|                condition = When(self.filter, then=source_expressions[0])
86|                copy.set_source_expressions([Case(condition)] + source_expressions[1:])
87|                return super(Aggregate, copy).as_sql(compiler, connection, **extra_context)
88|        return super().as_sql(compiler, connection, **extra_context)
89|
90|    def _get_repr_options(self):
91|        options = super()._get_repr_options()
92|        if self.distinct:
93|            options['distinct'] = self.distinct
94|        if self.filter:
95|            options['filter'] = self.filter
96|        return options
97|
98|
99|class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
100|    function = 'AVG'
101|    name = 'Avg'
102|
103|
104|class Count(Aggregate):
105|    function = 'COUNT'
106|    name = 'Count'
107|    output_field = IntegerField()
108|    allow_distinct = True
109|
110|    def __init__(self, expression, filter=None, **extra):
111|        if expression == '*':
112|            expression = Star()
113|        if isinstance(expression, Star) and filter is not None:
114|            raise ValueError('Star cannot be used with filter. Please specify a field.')
115|        super().__init__(expression, filter=filter, **extra)
116|
117|    def convert_value(self, value, expression, connection):
118|        return 0 if value is None else value
119|
120|
121|class Max(Aggregate):
122|    function = 'MAX'
123|    name = 'Max'
124|
125|
126|class Min(Aggregate):
127|    function = 'MIN'
128|    name = 'Min'
129|
130|
131|class StdDev(NumericOutputFieldMixin, Aggregate):
132|    name = 'StdDev'
133|
134|    def __init__(self, expression, sample=False, **extra):
135|        self.function = 'STDDEV_SAMP' if sample else 'STDDEV_POP'
136|        super().__init__(expression, **extra)
137|
138|    def _get_repr_options(self):
139|        return {**super()._get_repr_options(), 'sample': self.function == 'STDDEV_SAMP'}
140|
141|
142|class Sum(FixDurationInputMixin, Aggregate):
143|    function = 'SUM'
144|    name = 'Sum'
145|
146|
147|class Variance(NumericOutputFieldMixin, Aggregate):
148|    name = 'Variance'
149|
150|    def __init__(self, expression, sample=False, **extra):
151|        self.function = 'VAR_SAMP' if sample else 'VAR_POP'
152|        super().__init__(expression, **extra)
153|
154|    def _get_repr_options(self):
155|        return {**super()._get_repr_options(), 'sample': self.function == 'VAR_SAMP'}


============================================================



OBSERVATION:

Planner Invoked

============================================================



OBSERVATION:

Planner Invoked

============================================================



OBSERVATION:

CONTENT: Please continue working on the task on whatever approach you think is suitable.
If you think you have modified the code in a way that fixes the issue and thoroughly tested the fix (including edge cases and regression), please run the following command: <execute_bash> exit </execute_bash>.
IMPORTANT: YOU SHOULD NEVER ASK FOR HUMAN HELP OR USE THE INTERNET TO SOLVE THIS TASK.


============================================================



ACTION:

THOUGHT: I'll proceed with implementing the fix based on the plan.

First, let me edit the `aggregates.py` file to add a space after 'DISTINCT':
CODE:
DIFF_STRING = '''<<<<<<< SEARCH
        extra_context['distinct'] = 'DISTINCT' if self.distinct else ''
=======
        extra_context['distinct'] = 'DISTINCT ' if self.distinct else ''
>>>>>>> REPLACE'''
edit_file('/workspace/django__django__3.0/django/db/models/aggregates.py', diff_string=DIFF_STRING)

============================================================



OBSERVATION:

[File: /workspace/django__django__3.0/django/db/models/aggregates.py (155 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -41,61 +41,61 @@
     def set_source_expressions(self, exprs):
         self.filter = self.filter and exprs.pop()
         return super().set_source_expressions(exprs)
 
     def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
         # Aggregates are not allowed in UPDATE queries, so ignore for_save
         c = super().resolve_expression(query, allow_joins, reuse, summarize)
         c.filter = c.filter and c.filter.resolve_expression(query, allow_joins, reuse, summarize)
         if not summarize:
             # Call Aggregate.get_source_expressions() to avoid
             # returning self.filter and including that in this loop.
             expressions = super(Aggregate, c).get_source_expressions()
             for index, expr in enumerate(expressions):
                 if expr.contains_aggregate:
                     before_resolved = self.get_source_expressions()[index]
                     name = before_resolved.name if hasattr(before_resolved, 'name') else repr(before_resolved)
                     raise FieldError("Cannot compute %s('%s'): '%s' is an aggregate" % (c.name, name, name))
         return c
 
     @property
     def default_alias(self):
         expressions = self.get_source_expressions()
         if len(expressions) == 1 and hasattr(expressions[0], 'name'):
             return '%s__%s' % (expressions[0].name, self.name.lower())
         raise TypeError("Complex expressions require an alias")
 
     def get_group_by_cols(self):
         return []
 
     def as_sql(self, compiler, connection, **extra_context):
-        extra_context['distinct'] = 'DISTINCT' if self.distinct else ''
+        extra_context['distinct'] = 'DISTINCT ' if self.distinct else ''
         if self.filter:
             if connection.features.supports_aggregate_filter_clause:
                 filter_sql, filter_params = self.filter.as_sql(compiler, connection)
                 template = self.filter_template % extra_context.get('template', self.template)
                 sql, params = super().as_sql(
                     compiler, connection, template=template, filter=filter_sql,
                     **extra_context
                 )
                 return sql, params + filter_params
             else:
                 copy = self.copy()
                 copy.filter = None
                 source_expressions = copy.get_source_expressions()
                 condition = When(self.filter, then=source_expressions[0])
                 copy.set_source_expressions([Case(condition)] + source_expressions[1:])
                 return super(Aggregate, copy).as_sql(compiler, connection, **extra_context)
         return super().as_sql(compiler, connection, **extra_context)
 
     def _get_repr_options(self):
         options = super()._get_repr_options()
         if self.distinct:
             options['distinct'] = self.distinct
         if self.filter:
             options['filter'] = self.filter
         return options
 
 
 class Avg(FixDurationInputMixin, NumericOutputFieldMixin, Aggregate):
     function = 'AVG'
     name = 'Avg'
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The changes look correct. Now let's test the fix by running our reproduce script to verify the SQL query has the correct spacing:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings before importing models
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=[
        'django.contrib.contenttypes',
        'django.contrib.auth',
    ],
    SECRET_KEY='dummy'
)
django.setup()

from django.db import models
from django.db.models import Case, Count, When, Value

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100)
    status = models.BooleanField(default=False)

    class Meta:
        managed = False
        app_label = 'reproduce_error'

# Test cases
def test_count_distinct_case():
    # Test Case 1: Count with distinct and Case
    qs1 = TestModel.objects.annotate(
        count=Count(
            Case(
                When(status=True, then=Value(1)),
            ),
            distinct=True
        )
    )
    print("\\nTest Case 1 - Count with distinct and Case:")
    print(str(qs1.query))

    # Test Case 2: Count with distinct but no Case (regression test)
    qs2 = TestModel.objects.annotate(
        count=Count('name', distinct=True)
    )
    print("\\nTest Case 2 - Count with distinct but no Case (regression):")
    print(str(qs2.query))

    # Test Case 3: Count with Case but no distinct (regression test)
    qs3 = TestModel.objects.annotate(
        count=Count(
            Case(
                When(status=True, then=Value(1)),
            )
        )
    )
    print("\\nTest Case 3 - Count with Case but no distinct (regression):")
    print(str(qs3.query))

test_count_distinct_case()
"""
create_file('test_fix.py', CODE)

============================================================



OBSERVATION:

[File test_fix.py created.]
[File: /workspace/test_fix.py (66 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings before importing models
7|settings.configure(
8|    DATABASES={
9|        'default': {
10|            'ENGINE': 'django.db.backends.sqlite3',
11|            'NAME': ':memory:',
12|        }
13|    },
14|    INSTALLED_APPS=[
15|        'django.contrib.contenttypes',
16|        'django.contrib.auth',
17|    ],
18|    SECRET_KEY='dummy'
19|)
20|django.setup()
21|
22|from django.db import models
23|from django.db.models import Case, Count, When, Value
24|
25|# Test model
26|class TestModel(models.Model):
27|    name = models.CharField(max_length=100)
28|    status = models.BooleanField(default=False)
29|
30|    class Meta:
31|        managed = False
32|        app_label = 'reproduce_error'
33|
34|# Test cases
35|def test_count_distinct_case():
36|    # Test Case 1: Count with distinct and Case
37|    qs1 = TestModel.objects.annotate(
38|        count=Count(
39|            Case(
40|                When(status=True, then=Value(1)),
41|            ),
42|            distinct=True
43|        )
44|    )
45|    print("\nTest Case 1 - Count with distinct and Case:")
46|    print(str(qs1.query))
47|
48|    # Test Case 2: Count with distinct but no Case (regression test)
49|    qs2 = TestModel.objects.annotate(
50|        count=Count('name', distinct=True)
51|    )
52|    print("\nTest Case 2 - Count with distinct but no Case (regression):")
53|    print(str(qs2.query))
54|
55|    # Test Case 3: Count with Case but no distinct (regression test)
56|    qs3 = TestModel.objects.annotate(
57|        count=Count(
58|            Case(
59|                When(status=True, then=Value(1)),
60|            )
61|        )
62|    )
63|    print("\nTest Case 3 - Count with Case but no distinct (regression):")
64|    print(str(qs3.query))
65|
66|test_count_distinct_case()
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The test file looks correct. Let's run it to verify our fix and check all test cases:
COMMAND:
python3 test_fix.py

============================================================



OBSERVATION:


Test Case 1 - Count with distinct and Case:
SELECT "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status", COUNT(DISTINCT CASE WHEN "reproduce_error_testmodel"."status" = True THEN 1 ELSE NULL END) AS "count" FROM "reproduce_error_testmodel" GROUP BY "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status"

Test Case 2 - Count with distinct but no Case (regression):
SELECT "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status", COUNT(DISTINCT "reproduce_error_testmodel"."name") AS "count" FROM "reproduce_error_testmodel" GROUP BY "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status"

Test Case 3 - Count with Case but no distinct (regression):
SELECT "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status", COUNT(CASE WHEN "reproduce_error_testmodel"."status" = True THEN 1 ELSE NULL END) AS "count" FROM "reproduce_error_testmodel" GROUP BY "reproduce_error_testmodel"."id", "reproduce_error_testmodel"."name", "reproduce_error_testmodel"."status"



============================================================

