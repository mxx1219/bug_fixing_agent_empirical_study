

TASK:


Cannot override get_FOO_display() in Django 2.2+.
Description
	
I cannot override the get_FIELD_display function on models since version 2.2. It works in version 2.1.
Example:
class FooBar(models.Model):
	foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
	def __str__(self):
		return self.get_foo_bar_display() # This returns 'foo' or 'bar' in 2.2, but 'something' in 2.1
	def get_foo_bar_display(self):
		return "something"
What I expect is that I should be able to override this function.



============================================================



ACTION:

THOUGHT: I'll help you implement the necessary changes following the steps you outlined.

1. First, let's explore the repository structure:
CODE:
get_repo_structure("/workspace/django__django__3.1")

============================================================



OBSERVATION:

/workspace/django__django__3.1:
AUTHORS
CONTRIBUTING.rst
Django.egg-info
FUNDING.yml
Gruntfile.js
INSTALL
LICENSE
LICENSE.python
MANIFEST.in
README.rst
django
docs
extras
js_tests
package.json
scripts
setup.cfg
setup.py
tests
tox.ini

/workspace/django__django__3.1/Django.egg-info:
PKG-INFO
SOURCES.txt
dependency_links.txt
entry_points.txt
not-zip-safe
requires.txt
top_level.txt

/workspace/django__django__3.1/django:
__init__.py
__main__.py
__pycache__
apps
bin
conf
contrib
core
db
dispatch
forms
http
middleware
shortcuts.py
template
templatetags
test
urls
utils
views

/workspace/django__django__3.1/django/__pycache__:
__init__.cpython-36.pyc

/workspace/django__django__3.1/django/apps:
__init__.py
config.py
registry.py

/workspace/django__django__3.1/django/bin:
django-admin.py

/workspace/django__django__3.1/django/conf:
__init__.py
app_template
global_settings.py
locale
project_template
urls

/workspace/django__django__3.1/django/conf/app_template:
__init__.py-tpl
admin.py-tpl
apps.py-tpl
migrations
models.py-tpl
tests.py-tpl
views.py-tpl

/workspace/django__django__3.1/django/conf/app_template/migrations:
__init__.py-tpl

/workspace/django__django__3.1/django/conf/locale:
__init__.py
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
de_CH
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_NI
es_PR
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/conf/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ar:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/az:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/bg:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/bn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/bs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ca:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/cs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/cy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/da:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/de_CH:
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/el:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/en:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/en_AU:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/en_GB:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/eo:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/es:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/es_AR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/es_CO:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/es_MX:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/es_NI:
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/es_PR:
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/et:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/eu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/fa:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/fi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/fy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ga:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/gd:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/gl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/he:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/hi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/hr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/hu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/id:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/is:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/it:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ja:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ka:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/km:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/kn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ko:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/lt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/lv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/mk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ml:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/mn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/nb:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/nl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/nn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/pl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/pt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/pt_BR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ro:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ru:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sq:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sr_Latn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ta:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/te:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/th:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/tr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/uk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/conf/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/vi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/zh_Hans:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/locale/zh_Hant:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/django/conf/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/conf/project_template:
manage.py-tpl
project_name

/workspace/django__django__3.1/django/conf/project_template/project_name:
__init__.py-tpl
asgi.py-tpl
settings.py-tpl
urls.py-tpl
wsgi.py-tpl

/workspace/django__django__3.1/django/conf/urls:
__init__.py
i18n.py
static.py

/workspace/django__django__3.1/django/contrib:
__init__.py
admin
admindocs
auth
contenttypes
flatpages
gis
humanize
messages
postgres
redirects
sessions
sitemaps
sites
staticfiles
syndication

/workspace/django__django__3.1/django/contrib/admin:
__init__.py
actions.py
apps.py
bin
checks.py
decorators.py
exceptions.py
filters.py
forms.py
helpers.py
locale
migrations
models.py
options.py
sites.py
static
templates
templatetags
tests.py
utils.py
views
widgets.py

/workspace/django__django__3.1/django/contrib/admin/bin:
compress.py

/workspace/django__django__3.1/django/contrib/admin/locale:
af
am
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/admin/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/af/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/am:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/am/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admin/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ar/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ast/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/az/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/be/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/bg/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/bn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/br/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/bs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ca/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/cs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/cy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/da/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/de/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/dsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/el/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/en/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/en_AU/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/en_GB/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/eo/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/es/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/es_AR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/es_CO/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/es_MX/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/es_VE/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/et/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/eu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/fa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/fi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/fr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/fy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ga/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/gd/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/gl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/he/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/hi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/hr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/hsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/hu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/hy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ia/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/id/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/io/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/is/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/it/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ja/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ka/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/kab/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/kk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/km/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/kn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ko/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/lb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/lt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/lv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/mk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ml/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/mn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/mr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/my/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/nb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ne/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/nl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/nn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/os/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/pa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/pl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/pt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/pt_BR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ro/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ru/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sq/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/sw/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ta/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/te/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/th/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/tr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/tt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/udm/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/uk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/ur/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/vi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admin/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__3.1/django/contrib/admin/migrations:
0001_initial.py
0002_logentry_remove_auto_add.py
0003_logentry_add_action_flag_choices.py
__init__.py

/workspace/django__django__3.1/django/contrib/admin/static:
admin

/workspace/django__django__3.1/django/contrib/admin/static/admin:
css
fonts
img
js

/workspace/django__django__3.1/django/contrib/admin/static/admin/css:
autocomplete.css
base.css
changelists.css
dashboard.css
fonts.css
forms.css
login.css
responsive.css
responsive_rtl.css
rtl.css
vendor
widgets.css

/workspace/django__django__3.1/django/contrib/admin/static/admin/css/vendor:
select2

/workspace/django__django__3.1/django/contrib/admin/static/admin/css/vendor/select2:
LICENSE-SELECT2.md
select2.css
select2.min.css

/workspace/django__django__3.1/django/contrib/admin/static/admin/fonts:
LICENSE.txt
README.txt
Roboto-Bold-webfont.woff
Roboto-Light-webfont.woff
Roboto-Regular-webfont.woff

/workspace/django__django__3.1/django/contrib/admin/static/admin/img:
LICENSE
README.txt
calendar-icons.svg
gis
icon-addlink.svg
icon-alert.svg
icon-calendar.svg
icon-changelink.svg
icon-clock.svg
icon-deletelink.svg
icon-no.svg
icon-unknown-alt.svg
icon-unknown.svg
icon-viewlink.svg
icon-yes.svg
inline-delete.svg
search.svg
selector-icons.svg
sorting-icons.svg
tooltag-add.svg
tooltag-arrowright.svg

/workspace/django__django__3.1/django/contrib/admin/static/admin/img/gis:
move_vertex_off.svg
move_vertex_on.svg

/workspace/django__django__3.1/django/contrib/admin/static/admin/js:
SelectBox.js
SelectFilter2.js
actions.js
actions.min.js
admin
autocomplete.js
calendar.js
cancel.js
change_form.js
collapse.js
collapse.min.js
core.js
inlines.js
inlines.min.js
jquery.init.js
popup_response.js
prepopulate.js
prepopulate.min.js
prepopulate_init.js
urlify.js
vendor

/workspace/django__django__3.1/django/contrib/admin/static/admin/js/admin:
DateTimeShortcuts.js
RelatedObjectLookups.js

/workspace/django__django__3.1/django/contrib/admin/static/admin/js/vendor:
jquery
select2
xregexp

/workspace/django__django__3.1/django/contrib/admin/static/admin/js/vendor/jquery:
LICENSE.txt
jquery.js
jquery.min.js

/workspace/django__django__3.1/django/contrib/admin/static/admin/js/vendor/select2:
LICENSE.md
i18n
select2.full.js
select2.full.min.js

/workspace/django__django__3.1/django/contrib/admin/static/admin/js/vendor/select2/i18n:
af.js
ar.js
az.js
bg.js
bn.js
bs.js
ca.js
cs.js
da.js
de.js
dsb.js
el.js
en.js
es.js
et.js
eu.js
fa.js
fi.js
fr.js
gl.js
he.js
hi.js
hr.js
hsb.js
hu.js
hy.js
id.js
is.js
it.js
ja.js
ka.js
km.js
ko.js
lt.js
lv.js
mk.js
ms.js
nb.js
ne.js
nl.js
pl.js
ps.js
pt-BR.js
pt.js
ro.js
ru.js
sk.js
sl.js
sq.js
sr-Cyrl.js
sr.js
sv.js
th.js
tk.js
tr.js
uk.js
vi.js
zh-CN.js
zh-TW.js

/workspace/django__django__3.1/django/contrib/admin/static/admin/js/vendor/xregexp:
LICENSE.txt
xregexp.js
xregexp.min.js

/workspace/django__django__3.1/django/contrib/admin/templates:
admin
registration

/workspace/django__django__3.1/django/contrib/admin/templates/admin:
404.html
500.html
actions.html
app_index.html
auth
base.html
base_site.html
change_form.html
change_form_object_tools.html
change_list.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
delete_confirmation.html
delete_selected_confirmation.html
edit_inline
filter.html
includes
index.html
invalid_setup.html
login.html
object_history.html
pagination.html
popup_response.html
prepopulated_fields_js.html
search_form.html
submit_line.html
widgets

/workspace/django__django__3.1/django/contrib/admin/templates/admin/auth:
user

/workspace/django__django__3.1/django/contrib/admin/templates/admin/auth/user:
add_form.html
change_password.html

/workspace/django__django__3.1/django/contrib/admin/templates/admin/edit_inline:
stacked.html
tabular.html

/workspace/django__django__3.1/django/contrib/admin/templates/admin/includes:
fieldset.html
object_delete_summary.html

/workspace/django__django__3.1/django/contrib/admin/templates/admin/widgets:
clearable_file_input.html
foreign_key_raw_id.html
many_to_many_raw_id.html
radio.html
related_widget_wrapper.html
split_datetime.html
url.html

/workspace/django__django__3.1/django/contrib/admin/templates/registration:
logged_out.html
password_change_done.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html

/workspace/django__django__3.1/django/contrib/admin/templatetags:
__init__.py
admin_list.py
admin_modify.py
admin_urls.py
base.py
log.py

/workspace/django__django__3.1/django/contrib/admin/views:
__init__.py
autocomplete.py
decorators.py
main.py

/workspace/django__django__3.1/django/contrib/admindocs:
__init__.py
apps.py
locale
middleware.py
templates
urls.py
utils.py
views.py

/workspace/django__django__3.1/django/contrib/admindocs/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/admindocs/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/admindocs/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/admindocs/templates:
admin_doc

/workspace/django__django__3.1/django/contrib/admindocs/templates/admin_doc:
bookmarklets.html
index.html
missing_docutils.html
model_detail.html
model_index.html
template_detail.html
template_filter_index.html
template_tag_index.html
view_detail.html
view_index.html

/workspace/django__django__3.1/django/contrib/auth:
__init__.py
admin.py
apps.py
backends.py
base_user.py
checks.py
common-passwords.txt.gz
context_processors.py
decorators.py
forms.py
handlers
hashers.py
locale
management
middleware.py
migrations
mixins.py
models.py
password_validation.py
signals.py
templates
tokens.py
urls.py
validators.py
views.py

/workspace/django__django__3.1/django/contrib/auth/handlers:
__init__.py
modwsgi.py

/workspace/django__django__3.1/django/contrib/auth/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/auth/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/auth/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/auth/management:
__init__.py
commands

/workspace/django__django__3.1/django/contrib/auth/management/commands:
changepassword.py
createsuperuser.py

/workspace/django__django__3.1/django/contrib/auth/migrations:
0001_initial.py
0002_alter_permission_name_max_length.py
0003_alter_user_email_max_length.py
0004_alter_user_username_opts.py
0005_alter_user_last_login_null.py
0006_require_contenttypes_0002.py
0007_alter_validators_add_error_messages.py
0008_alter_user_username_max_length.py
0009_alter_user_last_name_max_length.py
0010_alter_group_name_max_length.py
0011_update_proxy_permissions.py
__init__.py

/workspace/django__django__3.1/django/contrib/auth/templates:
auth
registration

/workspace/django__django__3.1/django/contrib/auth/templates/auth:
widgets

/workspace/django__django__3.1/django/contrib/auth/templates/auth/widgets:
read_only_password_hash.html

/workspace/django__django__3.1/django/contrib/auth/templates/registration:
password_reset_subject.txt

/workspace/django__django__3.1/django/contrib/contenttypes:
__init__.py
admin.py
apps.py
checks.py
fields.py
forms.py
locale
management
migrations
models.py
views.py

/workspace/django__django__3.1/django/contrib/contenttypes/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/contenttypes/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/contenttypes/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/contenttypes/management:
__init__.py
commands

/workspace/django__django__3.1/django/contrib/contenttypes/management/commands:
remove_stale_contenttypes.py

/workspace/django__django__3.1/django/contrib/contenttypes/migrations:
0001_initial.py
0002_remove_content_type_name.py
__init__.py

/workspace/django__django__3.1/django/contrib/flatpages:
__init__.py
admin.py
apps.py
forms.py
locale
middleware.py
migrations
models.py
sitemaps.py
templatetags
urls.py
views.py

/workspace/django__django__3.1/django/contrib/flatpages/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/flatpages/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/flatpages/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/flatpages/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/django/contrib/flatpages/templatetags:
__init__.py
flatpages.py

/workspace/django__django__3.1/django/contrib/gis:
__init__.py
admin
apps.py
db
feeds.py
forms
gdal
geoip2
geometry.py
geos
locale
management
measure.py
ptr.py
serializers
shortcuts.py
sitemaps
static
templates
utils
views.py

/workspace/django__django__3.1/django/contrib/gis/admin:
__init__.py
options.py
widgets.py

/workspace/django__django__3.1/django/contrib/gis/db:
__init__.py
backends
models

/workspace/django__django__3.1/django/contrib/gis/db/backends:
__init__.py
base
mysql
oracle
postgis
spatialite
utils.py

/workspace/django__django__3.1/django/contrib/gis/db/backends/base:
__init__.py
adapter.py
features.py
models.py
operations.py

/workspace/django__django__3.1/django/contrib/gis/db/backends/mysql:
__init__.py
base.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__3.1/django/contrib/gis/db/backends/oracle:
__init__.py
adapter.py
base.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__3.1/django/contrib/gis/db/backends/postgis:
__init__.py
adapter.py
base.py
const.py
features.py
introspection.py
models.py
operations.py
pgraster.py
schema.py

/workspace/django__django__3.1/django/contrib/gis/db/backends/spatialite:
__init__.py
adapter.py
base.py
client.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__3.1/django/contrib/gis/db/models:
__init__.py
aggregates.py
fields.py
functions.py
lookups.py
proxy.py
sql

/workspace/django__django__3.1/django/contrib/gis/db/models/sql:
__init__.py
conversion.py

/workspace/django__django__3.1/django/contrib/gis/forms:
__init__.py
fields.py
widgets.py

/workspace/django__django__3.1/django/contrib/gis/gdal:
LICENSE
__init__.py
base.py
datasource.py
driver.py
envelope.py
error.py
feature.py
field.py
geometries.py
geomtype.py
layer.py
libgdal.py
prototypes
raster
srs.py

/workspace/django__django__3.1/django/contrib/gis/gdal/prototypes:
__init__.py
ds.py
errcheck.py
generation.py
geom.py
raster.py
srs.py

/workspace/django__django__3.1/django/contrib/gis/gdal/raster:
__init__.py
band.py
base.py
const.py
source.py

/workspace/django__django__3.1/django/contrib/gis/geoip2:
__init__.py
base.py
resources.py

/workspace/django__django__3.1/django/contrib/gis/geos:
LICENSE
__init__.py
base.py
collections.py
coordseq.py
error.py
factory.py
geometry.py
io.py
libgeos.py
linestring.py
mutable_list.py
point.py
polygon.py
prepared.py
prototypes

/workspace/django__django__3.1/django/contrib/gis/geos/prototypes:
__init__.py
coordseq.py
errcheck.py
geom.py
io.py
misc.py
predicates.py
prepared.py
threadsafe.py
topology.py

/workspace/django__django__3.1/django/contrib/gis/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/gis/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/gis/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/gis/management:
commands

/workspace/django__django__3.1/django/contrib/gis/management/commands:
inspectdb.py
ogrinspect.py

/workspace/django__django__3.1/django/contrib/gis/serializers:
__init__.py
geojson.py

/workspace/django__django__3.1/django/contrib/gis/sitemaps:
__init__.py
kml.py
views.py

/workspace/django__django__3.1/django/contrib/gis/static:
gis

/workspace/django__django__3.1/django/contrib/gis/static/gis:
css
img
js

/workspace/django__django__3.1/django/contrib/gis/static/gis/css:
ol3.css

/workspace/django__django__3.1/django/contrib/gis/static/gis/img:
draw_line_off.svg
draw_line_on.svg
draw_point_off.svg
draw_point_on.svg
draw_polygon_off.svg
draw_polygon_on.svg

/workspace/django__django__3.1/django/contrib/gis/static/gis/js:
OLMapWidget.js

/workspace/django__django__3.1/django/contrib/gis/templates:
gis

/workspace/django__django__3.1/django/contrib/gis/templates/gis:
admin
kml
openlayers-osm.html
openlayers.html

/workspace/django__django__3.1/django/contrib/gis/templates/gis/admin:
openlayers.html
openlayers.js
osm.html
osm.js

/workspace/django__django__3.1/django/contrib/gis/templates/gis/kml:
base.kml
placemarks.kml

/workspace/django__django__3.1/django/contrib/gis/utils:
__init__.py
layermapping.py
ogrinfo.py
ogrinspect.py
srs.py

/workspace/django__django__3.1/django/contrib/humanize:
__init__.py
apps.py
locale
templatetags

/workspace/django__django__3.1/django/contrib/humanize/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
ms
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/humanize/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ms:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ms/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/humanize/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/humanize/templatetags:
__init__.py
humanize.py

/workspace/django__django__3.1/django/contrib/messages:
__init__.py
api.py
apps.py
constants.py
context_processors.py
middleware.py
storage
utils.py
views.py

/workspace/django__django__3.1/django/contrib/messages/storage:
__init__.py
base.py
cookie.py
fallback.py
session.py

/workspace/django__django__3.1/django/contrib/postgres:
__init__.py
aggregates
apps.py
constraints.py
fields
forms
functions.py
indexes.py
jinja2
locale
lookups.py
operations.py
search.py
serializers.py
signals.py
templates
utils.py
validators.py

/workspace/django__django__3.1/django/contrib/postgres/aggregates:
__init__.py
general.py
mixins.py
statistics.py

/workspace/django__django__3.1/django/contrib/postgres/fields:
__init__.py
array.py
citext.py
hstore.py
jsonb.py
ranges.py
utils.py

/workspace/django__django__3.1/django/contrib/postgres/forms:
__init__.py
array.py
hstore.py
jsonb.py
ranges.py

/workspace/django__django__3.1/django/contrib/postgres/jinja2:
postgres

/workspace/django__django__3.1/django/contrib/postgres/jinja2/postgres:
widgets

/workspace/django__django__3.1/django/contrib/postgres/jinja2/postgres/widgets:
split_array.html

/workspace/django__django__3.1/django/contrib/postgres/locale:
af
ar
az
be
bg
ca
cs
da
de
dsb
el
en
eo
es
es_AR
es_CO
es_MX
et
eu
fa
fi
fr
gd
gl
he
hr
hsb
hu
hy
ia
id
is
it
ja
ka
kk
ko
lt
lv
mk
mn
nb
ne
nl
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
tr
uk
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/postgres/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/postgres/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/postgres/templates:
postgres

/workspace/django__django__3.1/django/contrib/postgres/templates/postgres:
widgets

/workspace/django__django__3.1/django/contrib/postgres/templates/postgres/widgets:
split_array.html

/workspace/django__django__3.1/django/contrib/redirects:
__init__.py
admin.py
apps.py
locale
middleware.py
migrations
models.py

/workspace/django__django__3.1/django/contrib/redirects/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/redirects/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/uz:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/redirects/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/redirects/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/django/contrib/sessions:
__init__.py
apps.py
backends
base_session.py
exceptions.py
locale
management
middleware.py
migrations
models.py
serializers.py

/workspace/django__django__3.1/django/contrib/sessions/backends:
__init__.py
base.py
cache.py
cached_db.py
db.py
file.py
signed_cookies.py

/workspace/django__django__3.1/django/contrib/sessions/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/sessions/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/uz:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sessions/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sessions/management:
commands

/workspace/django__django__3.1/django/contrib/sessions/management/commands:
clearsessions.py

/workspace/django__django__3.1/django/contrib/sessions/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/django/contrib/sitemaps:
__init__.py
apps.py
management
templates
views.py

/workspace/django__django__3.1/django/contrib/sitemaps/management:
commands

/workspace/django__django__3.1/django/contrib/sitemaps/management/commands:
ping_google.py

/workspace/django__django__3.1/django/contrib/sitemaps/templates:
sitemap.xml
sitemap_index.xml

/workspace/django__django__3.1/django/contrib/sites:
__init__.py
admin.py
apps.py
locale
management.py
managers.py
middleware.py
migrations
models.py
requests.py
shortcuts.py

/workspace/django__django__3.1/django/contrib/sites/locale:
af
ar
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__3.1/django/contrib/sites/locale/af:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ar:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ast:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/az:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/be:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/bg:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/bn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/br:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/bs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ca:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/cs:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/cy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/da:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/dsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/el:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/en_AU:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/eo:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/es_CO:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/es_MX:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/es_VE:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/et:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/eu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/fa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/fi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/fy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ga:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/gd:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/gl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/he:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/hi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/hsb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/hu:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/hy:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ia:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/id:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/io:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/is:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/it:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ka:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/kab:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/kk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/km:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/kn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/lb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/lt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/lv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/mk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ml:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/mn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/mr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/my:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/nb:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ne:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/nn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/os:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/pa:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/pl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ro:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sl:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sq:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sv:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/sw:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ta:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/te:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/th:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/tr:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/tt:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/udm:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/uk:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/ur:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/uz:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/vi:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__3.1/django/contrib/sites/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/django/contrib/sites/migrations:
0001_initial.py
0002_alter_domain_unique.py
__init__.py

/workspace/django__django__3.1/django/contrib/staticfiles:
__init__.py
apps.py
checks.py
finders.py
handlers.py
management
storage.py
testing.py
urls.py
utils.py
views.py

/workspace/django__django__3.1/django/contrib/staticfiles/management:
commands

/workspace/django__django__3.1/django/contrib/staticfiles/management/commands:
collectstatic.py
findstatic.py
runserver.py

/workspace/django__django__3.1/django/contrib/syndication:
__init__.py
apps.py
views.py

/workspace/django__django__3.1/django/core:
__init__.py
asgi.py
cache
checks
exceptions.py
files
handlers
mail
management
paginator.py
serializers
servers
signals.py
signing.py
validators.py
wsgi.py

/workspace/django__django__3.1/django/core/cache:
__init__.py
backends
utils.py

/workspace/django__django__3.1/django/core/cache/backends:
__init__.py
base.py
db.py
dummy.py
filebased.py
locmem.py
memcached.py

/workspace/django__django__3.1/django/core/checks:
__init__.py
caches.py
compatibility
database.py
messages.py
model_checks.py
registry.py
security
templates.py
translation.py
urls.py

/workspace/django__django__3.1/django/core/checks/compatibility:
__init__.py

/workspace/django__django__3.1/django/core/checks/security:
__init__.py
base.py
csrf.py
sessions.py

/workspace/django__django__3.1/django/core/files:
__init__.py
base.py
images.py
locks.py
move.py
storage.py
temp.py
uploadedfile.py
uploadhandler.py
utils.py

/workspace/django__django__3.1/django/core/handlers:
__init__.py
asgi.py
base.py
exception.py
wsgi.py

/workspace/django__django__3.1/django/core/mail:
__init__.py
backends
message.py
utils.py

/workspace/django__django__3.1/django/core/mail/backends:
__init__.py
base.py
console.py
dummy.py
filebased.py
locmem.py
smtp.py

/workspace/django__django__3.1/django/core/management:
__init__.py
base.py
color.py
commands
sql.py
templates.py
utils.py

/workspace/django__django__3.1/django/core/management/commands:
check.py
compilemessages.py
createcachetable.py
dbshell.py
diffsettings.py
dumpdata.py
flush.py
inspectdb.py
loaddata.py
makemessages.py
makemigrations.py
migrate.py
runserver.py
sendtestemail.py
shell.py
showmigrations.py
sqlflush.py
sqlmigrate.py
sqlsequencereset.py
squashmigrations.py
startapp.py
startproject.py
test.py
testserver.py

/workspace/django__django__3.1/django/core/serializers:
__init__.py
base.py
json.py
python.py
pyyaml.py
xml_serializer.py

/workspace/django__django__3.1/django/core/servers:
__init__.py
basehttp.py

/workspace/django__django__3.1/django/db:
__init__.py
backends
migrations
models
transaction.py
utils.py

/workspace/django__django__3.1/django/db/backends:
__init__.py
base
ddl_references.py
dummy
mysql
oracle
postgresql
signals.py
sqlite3
utils.py

/workspace/django__django__3.1/django/db/backends/base:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__3.1/django/db/backends/dummy:
__init__.py
base.py
features.py

/workspace/django__django__3.1/django/db/backends/mysql:
__init__.py
base.py
client.py
compiler.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__3.1/django/db/backends/oracle:
__init__.py
base.py
client.py
creation.py
features.py
functions.py
introspection.py
operations.py
schema.py
utils.py
validation.py

/workspace/django__django__3.1/django/db/backends/postgresql:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py
utils.py

/workspace/django__django__3.1/django/db/backends/sqlite3:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__3.1/django/db/migrations:
__init__.py
autodetector.py
exceptions.py
executor.py
graph.py
loader.py
migration.py
operations
optimizer.py
questioner.py
recorder.py
serializer.py
state.py
utils.py
writer.py

/workspace/django__django__3.1/django/db/migrations/operations:
__init__.py
base.py
fields.py
models.py
special.py
utils.py

/workspace/django__django__3.1/django/db/models:
__init__.py
aggregates.py
base.py
constants.py
constraints.py
deletion.py
enums.py
expressions.py
fields
functions
indexes.py
lookups.py
manager.py
options.py
query.py
query_utils.py
signals.py
sql
utils.py

/workspace/django__django__3.1/django/db/models/fields:
__init__.py
files.py
mixins.py
proxy.py
related.py
related_descriptors.py
related_lookups.py
reverse_related.py

/workspace/django__django__3.1/django/db/models/functions:
__init__.py
comparison.py
datetime.py
math.py
mixins.py
text.py
window.py

/workspace/django__django__3.1/django/db/models/sql:
__init__.py
compiler.py
constants.py
datastructures.py
query.py
subqueries.py
where.py

/workspace/django__django__3.1/django/dispatch:
__init__.py
dispatcher.py
license.txt

/workspace/django__django__3.1/django/forms:
__init__.py
boundfield.py
fields.py
forms.py
formsets.py
jinja2
models.py
renderers.py
templates
utils.py
widgets.py

/workspace/django__django__3.1/django/forms/jinja2:
django

/workspace/django__django__3.1/django/forms/jinja2/django:
forms

/workspace/django__django__3.1/django/forms/jinja2/django/forms:
widgets

/workspace/django__django__3.1/django/forms/jinja2/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__3.1/django/forms/templates:
django

/workspace/django__django__3.1/django/forms/templates/django:
forms

/workspace/django__django__3.1/django/forms/templates/django/forms:
widgets

/workspace/django__django__3.1/django/forms/templates/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__3.1/django/http:
__init__.py
cookie.py
multipartparser.py
request.py
response.py

/workspace/django__django__3.1/django/middleware:
__init__.py
cache.py
clickjacking.py
common.py
csrf.py
gzip.py
http.py
locale.py
security.py

/workspace/django__django__3.1/django/template:
__init__.py
backends
base.py
context.py
context_processors.py
defaultfilters.py
defaulttags.py
engine.py
exceptions.py
library.py
loader.py
loader_tags.py
loaders
response.py
smartif.py
utils.py

/workspace/django__django__3.1/django/template/backends:
__init__.py
base.py
django.py
dummy.py
jinja2.py
utils.py

/workspace/django__django__3.1/django/template/loaders:
__init__.py
app_directories.py
base.py
cached.py
filesystem.py
locmem.py

/workspace/django__django__3.1/django/templatetags:
__init__.py
cache.py
i18n.py
l10n.py
static.py
tz.py

/workspace/django__django__3.1/django/test:
__init__.py
client.py
html.py
runner.py
selenium.py
signals.py
testcases.py
utils.py

/workspace/django__django__3.1/django/urls:
__init__.py
base.py
conf.py
converters.py
exceptions.py
resolvers.py
utils.py

/workspace/django__django__3.1/django/utils:
__init__.py
__pycache__
_os.py
archive.py
asyncio.py
autoreload.py
baseconv.py
cache.py
crypto.py
datastructures.py
dateformat.py
dateparse.py
dates.py
datetime_safe.py
deconstruct.py
decorators.py
deprecation.py
duration.py
encoding.py
feedgenerator.py
formats.py
functional.py
hashable.py
html.py
http.py
inspect.py
ipv6.py
itercompat.py
jslex.py
log.py
lorem_ipsum.py
module_loading.py
numberformat.py
regex_helper.py
safestring.py
termcolors.py
text.py
timesince.py
timezone.py
topological_sort.py
translation
tree.py
version.py
xmlutils.py

/workspace/django__django__3.1/django/utils/__pycache__:
__init__.cpython-36.pyc
version.cpython-36.pyc

/workspace/django__django__3.1/django/utils/translation:
__init__.py
reloader.py
template.py
trans_null.py
trans_real.py

/workspace/django__django__3.1/django/views:
__init__.py
csrf.py
debug.py
decorators
defaults.py
generic
i18n.py
static.py
templates

/workspace/django__django__3.1/django/views/decorators:
__init__.py
cache.py
clickjacking.py
csrf.py
debug.py
gzip.py
http.py
vary.py

/workspace/django__django__3.1/django/views/generic:
__init__.py
base.py
dates.py
detail.py
edit.py
list.py

/workspace/django__django__3.1/django/views/templates:
default_urlconf.html
technical_404.html
technical_500.html
technical_500.txt

/workspace/django__django__3.1/docs:
Makefile
README
_ext
_theme
conf.py
contents.txt
faq
glossary.txt
howto
index.txt
internals
intro
make.bat
man
misc
ref
releases
spelling_wordlist
topics

/workspace/django__django__3.1/docs/_ext:
djangodocs.py

/workspace/django__django__3.1/docs/_theme:
djangodocs
djangodocs-epub

/workspace/django__django__3.1/docs/_theme/djangodocs:
genindex.html
layout.html
modindex.html
search.html
static
theme.conf

/workspace/django__django__3.1/docs/_theme/djangodocs/static:
console-tabs.css
default.css
djangodocs.css
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
fontawesome
homepage.css
reset-fonts-grids.css

/workspace/django__django__3.1/docs/_theme/djangodocs/static/fontawesome:
LICENSE.txt
README.md
css
webfonts

/workspace/django__django__3.1/docs/_theme/djangodocs/static/fontawesome/css:
fa-brands.min.css

/workspace/django__django__3.1/docs/_theme/djangodocs/static/fontawesome/webfonts:
fa-brands-400.eot
fa-brands-400.svg
fa-brands-400.ttf
fa-brands-400.woff
fa-brands-400.woff2

/workspace/django__django__3.1/docs/_theme/djangodocs-epub:
epub-cover.html
static
theme.conf

/workspace/django__django__3.1/docs/_theme/djangodocs-epub/static:
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
epub.css

/workspace/django__django__3.1/docs/faq:
admin.txt
contributing.txt
general.txt
help.txt
index.txt
install.txt
models.txt
troubleshooting.txt
usage.txt

/workspace/django__django__3.1/docs/howto:
auth-remote-user.txt
custom-file-storage.txt
custom-lookups.txt
custom-management-commands.txt
custom-model-fields.txt
custom-template-tags.txt
deployment
error-reporting.txt
index.txt
initial-data.txt
jython.txt
legacy-databases.txt
outputting-csv.txt
outputting-pdf.txt
overriding-templates.txt
static-files
upgrade-version.txt
windows.txt
writing-migrations.txt

/workspace/django__django__3.1/docs/howto/deployment:
asgi
checklist.txt
index.txt
wsgi

/workspace/django__django__3.1/docs/howto/deployment/asgi:
daphne.txt
index.txt
uvicorn.txt

/workspace/django__django__3.1/docs/howto/deployment/wsgi:
apache-auth.txt
gunicorn.txt
index.txt
modwsgi.txt
uwsgi.txt

/workspace/django__django__3.1/docs/howto/static-files:
deployment.txt
index.txt

/workspace/django__django__3.1/docs/internals:
_images
contributing
deprecation.txt
git.txt
howto-release-django.txt
index.txt
mailing-lists.txt
organization.txt
release-process.txt
security.txt

/workspace/django__django__3.1/docs/internals/_images:
triage_process.graffle
triage_process.pdf
triage_process.svg

/workspace/django__django__3.1/docs/internals/contributing:
bugs-and-features.txt
committing-code.txt
index.txt
localizing.txt
new-contributors.txt
triaging-tickets.txt
writing-code
writing-documentation.txt

/workspace/django__django__3.1/docs/internals/contributing/writing-code:
coding-style.txt
index.txt
javascript.txt
submitting-patches.txt
unit-tests.txt
working-with-git.txt

/workspace/django__django__3.1/docs/intro:
_images
contributing.txt
index.txt
install.txt
overview.txt
reusable-apps.txt
tutorial01.txt
tutorial02.txt
tutorial03.txt
tutorial04.txt
tutorial05.txt
tutorial06.txt
tutorial07.txt
whatsnext.txt

/workspace/django__django__3.1/docs/intro/_images:
admin01.png
admin02.png
admin03t.png
admin04t.png
admin05t.png
admin06t.png
admin07.png
admin08t.png
admin09.png
admin10t.png
admin11t.png
admin12t.png
admin13t.png
admin14t.png

/workspace/django__django__3.1/docs/man:
django-admin.1

/workspace/django__django__3.1/docs/misc:
api-stability.txt
design-philosophies.txt
distributions.txt
index.txt

/workspace/django__django__3.1/docs/ref:
applications.txt
checks.txt
class-based-views
clickjacking.txt
contrib
csrf.txt
databases.txt
django-admin.txt
exceptions.txt
files
forms
index.txt
middleware.txt
migration-operations.txt
models
paginator.txt
request-response.txt
schema-editor.txt
settings.txt
signals.txt
template-response.txt
templates
unicode.txt
urlresolvers.txt
urls.txt
utils.txt
validators.txt
views.txt

/workspace/django__django__3.1/docs/ref/class-based-views:
base.txt
flattened-index.txt
generic-date-based.txt
generic-display.txt
generic-editing.txt
index.txt
mixins-date-based.txt
mixins-editing.txt
mixins-multiple-object.txt
mixins-simple.txt
mixins-single-object.txt
mixins.txt

/workspace/django__django__3.1/docs/ref/contrib:
admin
auth.txt
contenttypes.txt
flatpages.txt
gis
humanize.txt
index.txt
messages.txt
postgres
redirects.txt
sitemaps.txt
sites.txt
staticfiles.txt
syndication.txt

/workspace/django__django__3.1/docs/ref/contrib/admin:
_images
actions.txt
admindocs.txt
index.txt
javascript.txt

/workspace/django__django__3.1/docs/ref/contrib/admin/_images:
actions-as-modeladmin-methods.png
adding-actions-to-the-modeladmin.png
admin-actions.png
fieldsets.png
list_filter.png
raw_id_fields.png

/workspace/django__django__3.1/docs/ref/contrib/gis:
admin.txt
commands.txt
db-api.txt
deployment.txt
feeds.txt
forms-api.txt
functions.txt
gdal.txt
geoip2.txt
geoquerysets.txt
geos.txt
index.txt
install
layermapping.txt
measure.txt
model-api.txt
ogrinspect.txt
serializers.txt
sitemaps.txt
testing.txt
tutorial.txt
utils.txt

/workspace/django__django__3.1/docs/ref/contrib/gis/install:
geolibs.txt
index.txt
postgis.txt
spatialite.txt

/workspace/django__django__3.1/docs/ref/contrib/postgres:
aggregates.txt
constraints.txt
fields.txt
forms.txt
functions.txt
index.txt
indexes.txt
lookups.txt
operations.txt
search.txt
validators.txt

/workspace/django__django__3.1/docs/ref/files:
file.txt
index.txt
storage.txt
uploads.txt

/workspace/django__django__3.1/docs/ref/forms:
api.txt
fields.txt
formsets.txt
index.txt
models.txt
renderers.txt
validation.txt
widgets.txt

/workspace/django__django__3.1/docs/ref/models:
class.txt
conditional-expressions.txt
constraints.txt
database-functions.txt
expressions.txt
fields.txt
index.txt
indexes.txt
instances.txt
lookups.txt
meta.txt
options.txt
querysets.txt
relations.txt

/workspace/django__django__3.1/docs/ref/templates:
api.txt
builtins.txt
index.txt
language.txt

/workspace/django__django__3.1/docs/releases:
0.95.txt
0.96.txt
1.0-porting-guide.txt
1.0.1.txt
1.0.2.txt
1.0.txt
1.1.2.txt
1.1.3.txt
1.1.4.txt
1.1.txt
1.10.1.txt
1.10.2.txt
1.10.3.txt
1.10.4.txt
1.10.5.txt
1.10.6.txt
1.10.7.txt
1.10.8.txt
1.10.txt
1.11.1.txt
1.11.10.txt
1.11.11.txt
1.11.12.txt
1.11.13.txt
1.11.14.txt
1.11.15.txt
1.11.16.txt
1.11.17.txt
1.11.18.txt
1.11.19.txt
1.11.2.txt
1.11.20.txt
1.11.21.txt
1.11.22.txt
1.11.23.txt
1.11.24.txt
1.11.25.txt
1.11.26.txt
1.11.3.txt
1.11.4.txt
1.11.5.txt
1.11.6.txt
1.11.7.txt
1.11.8.txt
1.11.9.txt
1.11.txt
1.2.1.txt
1.2.2.txt
1.2.3.txt
1.2.4.txt
1.2.5.txt
1.2.6.txt
1.2.7.txt
1.2.txt
1.3.1.txt
1.3.2.txt
1.3.3.txt
1.3.4.txt
1.3.5.txt
1.3.6.txt
1.3.7.txt
1.3.txt
1.4.1.txt
1.4.10.txt
1.4.11.txt
1.4.12.txt
1.4.13.txt
1.4.14.txt
1.4.15.txt
1.4.16.txt
1.4.17.txt
1.4.18.txt
1.4.19.txt
1.4.2.txt
1.4.20.txt
1.4.21.txt
1.4.22.txt
1.4.3.txt
1.4.4.txt
1.4.5.txt
1.4.6.txt
1.4.7.txt
1.4.8.txt
1.4.9.txt
1.4.txt
1.5.1.txt
1.5.10.txt
1.5.11.txt
1.5.12.txt
1.5.2.txt
1.5.3.txt
1.5.4.txt
1.5.5.txt
1.5.6.txt
1.5.7.txt
1.5.8.txt
1.5.9.txt
1.5.txt
1.6.1.txt
1.6.10.txt
1.6.11.txt
1.6.2.txt
1.6.3.txt
1.6.4.txt
1.6.5.txt
1.6.6.txt
1.6.7.txt
1.6.8.txt
1.6.9.txt
1.6.txt
1.7.1.txt
1.7.10.txt
1.7.11.txt
1.7.2.txt
1.7.3.txt
1.7.4.txt
1.7.5.txt
1.7.6.txt
1.7.7.txt
1.7.8.txt
1.7.9.txt
1.7.txt
1.8.1.txt
1.8.10.txt
1.8.11.txt
1.8.12.txt
1.8.13.txt
1.8.14.txt
1.8.15.txt
1.8.16.txt
1.8.17.txt
1.8.18.txt
1.8.19.txt
1.8.2.txt
1.8.3.txt
1.8.4.txt
1.8.5.txt
1.8.6.txt
1.8.7.txt
1.8.8.txt
1.8.9.txt
1.8.txt
1.9.1.txt
1.9.10.txt
1.9.11.txt
1.9.12.txt
1.9.13.txt
1.9.2.txt
1.9.3.txt
1.9.4.txt
1.9.5.txt
1.9.6.txt
1.9.7.txt
1.9.8.txt
1.9.9.txt
1.9.txt
2.0.1.txt
2.0.10.txt
2.0.11.txt
2.0.12.txt
2.0.13.txt
2.0.2.txt
2.0.3.txt
2.0.4.txt
2.0.5.txt
2.0.6.txt
2.0.7.txt
2.0.8.txt
2.0.9.txt
2.0.txt
2.1.1.txt
2.1.10.txt
2.1.11.txt
2.1.12.txt
2.1.13.txt
2.1.14.txt
2.1.2.txt
2.1.3.txt
2.1.4.txt
2.1.5.txt
2.1.6.txt
2.1.7.txt
2.1.8.txt
2.1.9.txt
2.1.txt
2.2.1.txt
2.2.2.txt
2.2.3.txt
2.2.4.txt
2.2.5.txt
2.2.6.txt
2.2.7.txt
2.2.txt
3.0.txt
3.1.txt
index.txt
security.txt

/workspace/django__django__3.1/docs/topics:
_images
auth
cache.txt
checks.txt
class-based-views
conditional-view-processing.txt
db
email.txt
external-packages.txt
files.txt
forms
http
i18n
index.txt
install.txt
logging.txt
migrations.txt
pagination.txt
performance.txt
security.txt
serialization.txt
settings.txt
signals.txt
signing.txt
templates.txt
testing

/workspace/django__django__3.1/docs/topics/_images:
postmortem.png
template-lines.png

/workspace/django__django__3.1/docs/topics/auth:
customizing.txt
default.txt
index.txt
passwords.txt

/workspace/django__django__3.1/docs/topics/class-based-views:
generic-display.txt
generic-editing.txt
index.txt
intro.txt
mixins.txt

/workspace/django__django__3.1/docs/topics/db:
aggregation.txt
examples
index.txt
instrumentation.txt
managers.txt
models.txt
multi-db.txt
optimization.txt
queries.txt
search.txt
sql.txt
tablespaces.txt
transactions.txt

/workspace/django__django__3.1/docs/topics/db/examples:
index.txt
many_to_many.txt
many_to_one.txt
one_to_one.txt

/workspace/django__django__3.1/docs/topics/forms:
formsets.txt
index.txt
media.txt
modelforms.txt

/workspace/django__django__3.1/docs/topics/http:
_images
decorators.txt
file-uploads.txt
generic-views.txt
index.txt
middleware.txt
sessions.txt
shortcuts.txt
urls.txt
views.txt

/workspace/django__django__3.1/docs/topics/http/_images:
middleware.pdf

/workspace/django__django__3.1/docs/topics/i18n:
formatting.txt
index.txt
timezones.txt
translation.txt

/workspace/django__django__3.1/docs/topics/testing:
_images
advanced.txt
index.txt
overview.txt
tools.txt

/workspace/django__django__3.1/docs/topics/testing/_images:
django_unittest_classes_hierarchy.graffle
django_unittest_classes_hierarchy.pdf
django_unittest_classes_hierarchy.svg

/workspace/django__django__3.1/extras:
Makefile
README.TXT
django_bash_completion

/workspace/django__django__3.1/js_tests:
admin
gis
qunit
tests.html

/workspace/django__django__3.1/js_tests/admin:
DateTimeShortcuts.test.js
RelatedObjectLookups.test.js
SelectBox.test.js
SelectFilter2.test.js
URLify.test.js
actions.test.js
core.test.js
inlines.test.js
jsi18n-mocks.test.js

/workspace/django__django__3.1/js_tests/gis:
mapwidget.test.js

/workspace/django__django__3.1/js_tests/qunit:
qunit.css
qunit.js

/workspace/django__django__3.1/scripts:
manage_translations.py
rpm-install.sh

/workspace/django__django__3.1/tests:
README.rst
absolute_url_overrides
admin_autodiscover
admin_changelist
admin_checks
admin_custom_urls
admin_default_site
admin_docs
admin_filters
admin_inlines
admin_ordering
admin_registration
admin_scripts
admin_utils
admin_views
admin_widgets
aggregation
aggregation_regress
annotations
app_loading
apps
asgi
async
auth_tests
backends
base
bash_completion
basic
builtin_server
bulk_create
cache
check_framework
conditional_processing
constraints
contenttypes_tests
context_processors
csrf_tests
custom_columns
custom_lookups
custom_managers
custom_methods
custom_migration_operations
custom_pk
datatypes
dates
datetimes
db_functions
db_typecasts
db_utils
dbshell
decorators
defer
defer_regress
delete
delete_regress
deprecation
dispatch
distinct_on_fields
empty
empty_models
expressions
expressions_case
expressions_window
extra_regress
field_deconstruction
field_defaults
field_subclassing
file_storage
file_uploads
files
filtered_relation
fixtures
fixtures_model_package
fixtures_regress
flatpages_tests
force_insert_update
foreign_object
forms_tests
from_db_value
generic_inline_admin
generic_relations
generic_relations_regress
generic_views
get_earliest_or_latest
get_object_or_404
get_or_create
gis_tests
handlers
httpwrappers
humanize_tests
i18n
import_error_package
indexes
inline_formsets
inspectdb
introspection
invalid_models_tests
known_related_objects
logging_tests
lookup
m2m_and_m2o
m2m_intermediary
m2m_multiple
m2m_recursive
m2m_regress
m2m_signals
m2m_through
m2m_through_regress
m2o_recursive
mail
managers_regress
many_to_many
many_to_one
many_to_one_null
max_lengths
messages_tests
middleware
middleware_exceptions
migrate_signals
migration_test_data_persistence
migrations
migrations2
model_enums
model_fields
model_forms
model_formsets
model_formsets_regress
model_indexes
model_inheritance
model_inheritance_regress
model_meta
model_options
model_package
model_regress
modeladmin
multiple_database
mutually_referential
nested_foreign_keys
no_models
null_fk
null_fk_ordering
null_queries
one_to_one
or_lookups
order_with_respect_to
ordering
pagination
postgres_tests
prefetch_related
project_template
properties
proxy_model_inheritance
proxy_models
queries
queryset_pickle
raw_query
redirects_tests
requests
requirements
reserved_names
resolve_url
responses
reverse_lookup
runtests.py
save_delete_hooks
schema
select_for_update
select_related
select_related_onetoone
select_related_regress
serializers
servers
sessions_tests
settings_tests
shell
shortcuts
signals
signed_cookies_tests
signing
sitemaps_tests
sites_framework
sites_tests
staticfiles_tests
str
string_lookup
swappable_models
syndication_tests
template_backends
template_loader
template_tests
templates
test_client
test_client_regress
test_exceptions
test_runner
test_runner_apps
test_sqlite.py
test_utils
timezones
transaction_hooks
transactions
unmanaged_models
update
update_only_fields
urlpatterns
urlpatterns_reverse
urls.py
user_commands
utils_tests
validation
validators
version
view_tests
wsgi

/workspace/django__django__3.1/tests/absolute_url_overrides:
__init__.py
tests.py

/workspace/django__django__3.1/tests/admin_autodiscover:
__init__.py
admin.py
models.py
tests.py

/workspace/django__django__3.1/tests/admin_changelist:
__init__.py
admin.py
models.py
test_date_hierarchy.py
tests.py
urls.py

/workspace/django__django__3.1/tests/admin_checks:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/admin_custom_urls:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/admin_default_site:
__init__.py
apps.py
sites.py
tests.py

/workspace/django__django__3.1/tests/admin_docs:
__init__.py
evilfile.txt
models.py
namespace_urls.py
test_middleware.py
test_utils.py
test_views.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/admin_filters:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/admin_inlines:
__init__.py
admin.py
models.py
test_templates.py
tests.py
urls.py

/workspace/django__django__3.1/tests/admin_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/admin_registration:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/admin_scripts:
__init__.py
another_app_waiting_migration
app_raising_messages
app_raising_warning
app_waiting_migration
app_with_import
broken_app
complex_app
configured_dynamic_settings_manage.py
configured_settings_manage.py
custom_templates
management
simple_app
tests.py
urls.py

/workspace/django__django__3.1/tests/admin_scripts/another_app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/admin_scripts/another_app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/admin_scripts/app_raising_messages:
__init__.py
models.py

/workspace/django__django__3.1/tests/admin_scripts/app_raising_warning:
__init__.py
models.py

/workspace/django__django__3.1/tests/admin_scripts/app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/admin_scripts/app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/admin_scripts/app_with_import:
__init__.py
models.py

/workspace/django__django__3.1/tests/admin_scripts/broken_app:
__init__.py
models.py

/workspace/django__django__3.1/tests/admin_scripts/complex_app:
__init__.py
admin
management
models

/workspace/django__django__3.1/tests/admin_scripts/complex_app/admin:
__init__.py
foo.py

/workspace/django__django__3.1/tests/admin_scripts/complex_app/management:
commands

/workspace/django__django__3.1/tests/admin_scripts/complex_app/management/commands:
duplicate.py

/workspace/django__django__3.1/tests/admin_scripts/complex_app/models:
__init__.py
bar.py
foo.py

/workspace/django__django__3.1/tests/admin_scripts/custom_templates:
app_template
project_template
project_template.tgz

/workspace/django__django__3.1/tests/admin_scripts/custom_templates/app_template:
__init__.py
api.py

/workspace/django__django__3.1/tests/admin_scripts/custom_templates/project_template:
additional_dir
manage.py-tpl
project_name
ticket-18091-non-ascii-template.txt
ticket-19397-binary-file.ico

/workspace/django__django__3.1/tests/admin_scripts/custom_templates/project_template/additional_dir:
Procfile
additional_file.py
extra.py
localized.py
requirements.txt

/workspace/django__django__3.1/tests/admin_scripts/custom_templates/project_template/project_name:
__init__.py
settings.py

/workspace/django__django__3.1/tests/admin_scripts/management:
commands

/workspace/django__django__3.1/tests/admin_scripts/management/commands:
app_command.py
base_command.py
custom_startproject.py
label_command.py
noargs_command.py

/workspace/django__django__3.1/tests/admin_scripts/simple_app:
__init__.py
management
models.py

/workspace/django__django__3.1/tests/admin_scripts/simple_app/management:
commands

/workspace/django__django__3.1/tests/admin_scripts/simple_app/management/commands:
duplicate.py

/workspace/django__django__3.1/tests/admin_utils:
__init__.py
admin.py
models.py
test_logentry.py
tests.py
urls.py

/workspace/django__django__3.1/tests/admin_views:
__init__.py
admin.py
custom_has_permission_admin.py
customadmin.py
forms.py
models.py
templates
test_actions.py
test_adminsite.py
test_autocomplete_view.py
test_forms.py
test_history_view.py
test_multidb.py
test_templatetags.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/admin_views/templates:
admin
custom_filter_template.html

/workspace/django__django__3.1/tests/admin_views/templates/admin:
admin_views
base_site.html

/workspace/django__django__3.1/tests/admin_views/templates/admin/admin_views:
article

/workspace/django__django__3.1/tests/admin_views/templates/admin/admin_views/article:
actions.html
change_form_object_tools.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
pagination.html
prepopulated_fields_js.html
search_form.html
submit_line.html

/workspace/django__django__3.1/tests/admin_widgets:
__init__.py
models.py
test_autocomplete_widget.py
tests.py
urls.py
widgetadmin.py

/workspace/django__django__3.1/tests/aggregation:
__init__.py
models.py
test_filter_argument.py
tests.py

/workspace/django__django__3.1/tests/aggregation_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/annotations:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/app_loading:
__init__.py
eggs
not_installed
tests.py

/workspace/django__django__3.1/tests/app_loading/eggs:
brokenapp.egg
modelapp.egg
nomodelapp.egg
omelet.egg

/workspace/django__django__3.1/tests/app_loading/not_installed:
__init__.py
models.py

/workspace/django__django__3.1/tests/apps:
__init__.py
apps.py
default_config_app
models.py
namespace_package_base
namespace_package_other_base
tests.py

/workspace/django__django__3.1/tests/apps/default_config_app:
__init__.py
apps.py

/workspace/django__django__3.1/tests/apps/namespace_package_base:
nsapp

/workspace/django__django__3.1/tests/apps/namespace_package_base/nsapp:
apps.py

/workspace/django__django__3.1/tests/apps/namespace_package_other_base:
nsapp

/workspace/django__django__3.1/tests/apps/namespace_package_other_base/nsapp:

/workspace/django__django__3.1/tests/asgi:
__init__.py
tests.py
urls.py

/workspace/django__django__3.1/tests/async:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/auth_tests:
__init__.py
backend_alias.py
client.py
common-passwords-custom.txt
fixtures
models
settings.py
templates
test_admin_multidb.py
test_auth_backends.py
test_basic.py
test_checks.py
test_context_processors.py
test_decorators.py
test_forms.py
test_handlers.py
test_hashers.py
test_management.py
test_middleware.py
test_migrations.py
test_mixins.py
test_models.py
test_password_reset_timeout_days.py
test_remote_user.py
test_signals.py
test_templates.py
test_tokens.py
test_validators.py
test_views.py
urls.py
urls_admin.py
urls_custom_user_admin.py

/workspace/django__django__3.1/tests/auth_tests/fixtures:
natural.json
regular.json

/workspace/django__django__3.1/tests/auth_tests/models:
__init__.py
custom_permissions.py
custom_user.py
invalid_models.py
is_active.py
minimal.py
no_password.py
proxy.py
uuid_pk.py
with_custom_email_field.py
with_foreign_key.py
with_integer_username.py
with_last_login_attr.py
with_many_to_many.py

/workspace/django__django__3.1/tests/auth_tests/templates:
context_processors
registration

/workspace/django__django__3.1/tests/auth_tests/templates/context_processors:
auth_attrs_access.html
auth_attrs_messages.html
auth_attrs_no_access.html
auth_attrs_perm_in_perms.html
auth_attrs_perms.html
auth_attrs_test_access.html
auth_attrs_user.html

/workspace/django__django__3.1/tests/auth_tests/templates/registration:
html_password_reset_email.html
logged_out.html
login.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html
password_reset_subject.txt

/workspace/django__django__3.1/tests/backends:
__init__.py
base
models.py
mysql
oracle
postgresql
sqlite
test_ddl_references.py
test_utils.py
tests.py

/workspace/django__django__3.1/tests/backends/base:
__init__.py
test_base.py
test_creation.py
test_features.py
test_operations.py
test_schema.py

/workspace/django__django__3.1/tests/backends/mysql:
__init__.py
test_creation.py
test_features.py
test_introspection.py
test_schema.py
tests.py

/workspace/django__django__3.1/tests/backends/oracle:
__init__.py
test_creation.py
test_introspection.py
test_operations.py
tests.py

/workspace/django__django__3.1/tests/backends/postgresql:
__init__.py
test_creation.py
test_introspection.py
test_server_side_cursors.py
tests.py

/workspace/django__django__3.1/tests/backends/sqlite:
__init__.py
test_introspection.py
tests.py

/workspace/django__django__3.1/tests/base:
__init__.py
models.py

/workspace/django__django__3.1/tests/bash_completion:
__init__.py
management
tests.py

/workspace/django__django__3.1/tests/bash_completion/management:
commands

/workspace/django__django__3.1/tests/bash_completion/management/commands:
test_command.py

/workspace/django__django__3.1/tests/basic:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/builtin_server:
__init__.py
tests.py

/workspace/django__django__3.1/tests/bulk_create:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/cache:
__init__.py
closeable_cache.py
liberal_backend.py
models.py
tests.py

/workspace/django__django__3.1/tests/check_framework:
__init__.py
models.py
test_caches.py
test_database.py
test_model_checks.py
test_model_field_deprecation.py
test_multi_db.py
test_security.py
test_templates.py
test_translation.py
test_urls.py
tests.py
urls

/workspace/django__django__3.1/tests/check_framework/urls:
__init__.py
bad_error_handlers.py
bad_error_handlers_invalid_path.py
beginning_with_slash.py
contains_tuple.py
good_error_handlers.py
include_contains_tuple.py
include_with_dollar.py
name_with_colon.py
no_warnings.py
no_warnings_i18n.py
non_unique_namespaces.py
path_compatibility
unique_namespaces.py
warning_in_include.py

/workspace/django__django__3.1/tests/check_framework/urls/path_compatibility:
__init__.py
beginning_with_caret.py
contains_re_named_group.py
ending_with_dollar.py

/workspace/django__django__3.1/tests/conditional_processing:
__init__.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/constraints:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/contenttypes_tests:
__init__.py
models.py
operations_migrations
test_checks.py
test_fields.py
test_management.py
test_models.py
test_operations.py
test_order_with_respect_to.py
test_views.py
urls.py

/workspace/django__django__3.1/tests/contenttypes_tests/operations_migrations:
0001_initial.py
0002_rename_foo.py
__init__.py

/workspace/django__django__3.1/tests/context_processors:
__init__.py
models.py
templates
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/context_processors/templates:
context_processors

/workspace/django__django__3.1/tests/context_processors/templates/context_processors:
debug.html
request_attrs.html

/workspace/django__django__3.1/tests/csrf_tests:
__init__.py
csrf_token_error_handler_urls.py
test_context_processor.py
tests.py
views.py

/workspace/django__django__3.1/tests/custom_columns:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/custom_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/custom_managers:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/custom_methods:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/custom_migration_operations:
__init__.py
more_operations.py
operations.py

/workspace/django__django__3.1/tests/custom_pk:
__init__.py
fields.py
models.py
tests.py

/workspace/django__django__3.1/tests/datatypes:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/dates:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/datetimes:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/db_functions:
__init__.py
comparison
datetime
math
migrations
models.py
tests.py
text
window

/workspace/django__django__3.1/tests/db_functions/comparison:
__init__.py
test_cast.py
test_coalesce.py
test_greatest.py
test_least.py
test_nullif.py

/workspace/django__django__3.1/tests/db_functions/datetime:
__init__.py
test_extract_trunc.py
test_now.py

/workspace/django__django__3.1/tests/db_functions/math:
__init__.py
test_abs.py
test_acos.py
test_asin.py
test_atan.py
test_atan2.py
test_ceil.py
test_cos.py
test_cot.py
test_degrees.py
test_exp.py
test_floor.py
test_ln.py
test_log.py
test_mod.py
test_pi.py
test_power.py
test_radians.py
test_round.py
test_sign.py
test_sin.py
test_sqrt.py
test_tan.py

/workspace/django__django__3.1/tests/db_functions/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__3.1/tests/db_functions/text:
__init__.py
test_chr.py
test_concat.py
test_left.py
test_length.py
test_lower.py
test_md5.py
test_ord.py
test_pad.py
test_repeat.py
test_replace.py
test_reverse.py
test_right.py
test_sha1.py
test_sha224.py
test_sha256.py
test_sha384.py
test_sha512.py
test_strindex.py
test_substr.py
test_trim.py
test_upper.py

/workspace/django__django__3.1/tests/db_functions/window:
__init__.py
test_validation.py

/workspace/django__django__3.1/tests/db_typecasts:
__init__.py
tests.py

/workspace/django__django__3.1/tests/db_utils:
__init__.py
tests.py

/workspace/django__django__3.1/tests/dbshell:
__init__.py
test_mysql.py
test_oracle.py
test_postgresql.py

/workspace/django__django__3.1/tests/decorators:
__init__.py
tests.py

/workspace/django__django__3.1/tests/defer:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/defer_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/delete:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/delete_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/deprecation:
__init__.py
tests.py

/workspace/django__django__3.1/tests/dispatch:
__init__.py
tests.py

/workspace/django__django__3.1/tests/distinct_on_fields:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/empty:
__init__.py
models.py
no_models
tests.py

/workspace/django__django__3.1/tests/empty/no_models:
__init__.py

/workspace/django__django__3.1/tests/empty_models:
__init__.py
models.py
test_commands.py

/workspace/django__django__3.1/tests/expressions:
__init__.py
models.py
test_deprecation.py
test_queryset_values.py
tests.py

/workspace/django__django__3.1/tests/expressions_case:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/expressions_window:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/extra_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/field_deconstruction:
__init__.py
tests.py

/workspace/django__django__3.1/tests/field_defaults:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/field_subclassing:
__init__.py
fields.py
tests.py

/workspace/django__django__3.1/tests/file_storage:
__init__.py
models.py
test_generate_filename.py
tests.py
urls.py

/workspace/django__django__3.1/tests/file_uploads:
__init__.py
models.py
tests.py
uploadhandler.py
urls.py
views.py

/workspace/django__django__3.1/tests/files:
__init__.py
brokenimg.png
magic.png
test.png
test.webp
test1.png
tests.py

/workspace/django__django__3.1/tests/filtered_relation:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/fixtures:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.1/tests/fixtures/fixtures:
db_fixture_1.default.json
db_fixture_2.default.json.gz
db_fixture_3.nosuchdb.json
fixture1.json
fixture2.json
fixture2.xml
fixture3.xml
fixture4.json.zip
fixture5.json.gz
fixture5.json.zip
fixture6.json
fixture7.xml
fixture8.json
fixture9.xml
fixture_with[special]chars.json
forward_reference_fk.json
forward_reference_m2m.json
invalid.json
null_character_in_field_value.json

/workspace/django__django__3.1/tests/fixtures_model_package:
__init__.py
fixtures
models
tests.py

/workspace/django__django__3.1/tests/fixtures_model_package/fixtures:
fixture1.json
fixture2.json
fixture2.xml

/workspace/django__django__3.1/tests/fixtures_model_package/models:
__init__.py

/workspace/django__django__3.1/tests/fixtures_regress:
__init__.py
fixtures
fixtures_1
fixtures_2
models.py
tests.py

/workspace/django__django__3.1/tests/fixtures_regress/fixtures:
absolute.json
animal.xml
bad_fix.ture1.unkn
bad_fixture2.xml
big-fixture.json
empty.json
feature.json
forward_ref.json
forward_ref_bad_data.json
forward_ref_lookup.json
m2mtoself.json
model-inheritance.json
nk-inheritance.json
nk-inheritance2.xml
non_natural_1.json
non_natural_2.xml
path.containing.dots.json
pretty.xml
sequence.json
sequence_extra.json
sequence_extra_xml.xml
special-article.json
thingy.json

/workspace/django__django__3.1/tests/fixtures_regress/fixtures_1:
forward_ref_1.json
inner

/workspace/django__django__3.1/tests/fixtures_regress/fixtures_1/inner:
absolute.json

/workspace/django__django__3.1/tests/fixtures_regress/fixtures_2:
forward_ref_2.json

/workspace/django__django__3.1/tests/flatpages_tests:
__init__.py
settings.py
templates
test_csrf.py
test_forms.py
test_middleware.py
test_models.py
test_sitemaps.py
test_templatetags.py
test_views.py
urls.py

/workspace/django__django__3.1/tests/flatpages_tests/templates:
flatpages
registration

/workspace/django__django__3.1/tests/flatpages_tests/templates/flatpages:
default.html

/workspace/django__django__3.1/tests/flatpages_tests/templates/registration:
login.html

/workspace/django__django__3.1/tests/force_insert_update:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/foreign_object:
__init__.py
models
test_agnostic_order_trimjoin.py
test_empty_join.py
test_forms.py
tests.py

/workspace/django__django__3.1/tests/foreign_object/models:
__init__.py
article.py
customers.py
empty_join.py
person.py

/workspace/django__django__3.1/tests/forms_tests:
__init__.py
field_tests
jinja2
models.py
templates
tests
urls.py
views.py
widget_tests

/workspace/django__django__3.1/tests/forms_tests/field_tests:
__init__.py
filepathfield_test_dir
test_base.py
test_booleanfield.py
test_charfield.py
test_choicefield.py
test_combofield.py
test_datefield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_emailfield.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_multiplechoicefield.py
test_multivaluefield.py
test_nullbooleanfield.py
test_regexfield.py
test_slugfield.py
test_splitdatetimefield.py
test_timefield.py
test_typedchoicefield.py
test_typedmultiplechoicefield.py
test_urlfield.py
test_uuidfield.py

/workspace/django__django__3.1/tests/forms_tests/field_tests/filepathfield_test_dir:
README
__init__.py
a.py
ab.py
b.py
c
h
j

/workspace/django__django__3.1/tests/forms_tests/field_tests/filepathfield_test_dir/c:
__init__.py
d.py
e.py
f

/workspace/django__django__3.1/tests/forms_tests/field_tests/filepathfield_test_dir/c/f:
__init__.py
g.py

/workspace/django__django__3.1/tests/forms_tests/field_tests/filepathfield_test_dir/h:
__init__.py

/workspace/django__django__3.1/tests/forms_tests/field_tests/filepathfield_test_dir/j:
__init__.py

/workspace/django__django__3.1/tests/forms_tests/jinja2:
forms_tests

/workspace/django__django__3.1/tests/forms_tests/jinja2/forms_tests:
custom_widget.html

/workspace/django__django__3.1/tests/forms_tests/templates:
forms_tests

/workspace/django__django__3.1/tests/forms_tests/templates/forms_tests:
article_form.html
custom_widget.html

/workspace/django__django__3.1/tests/forms_tests/tests:
__init__.py
filepath_test_files
test_error_messages.py
test_forms.py
test_formsets.py
test_i18n.py
test_input_formats.py
test_media.py
test_renderers.py
test_utils.py
test_validators.py
test_widgets.py
tests.py

/workspace/django__django__3.1/tests/forms_tests/tests/filepath_test_files:
1x1.bmp
1x1.png
directory
fake-image.jpg
real-text-file.txt

/workspace/django__django__3.1/tests/forms_tests/tests/filepath_test_files/directory:

/workspace/django__django__3.1/tests/forms_tests/widget_tests:
__init__.py
base.py
test_checkboxinput.py
test_checkboxselectmultiple.py
test_clearablefileinput.py
test_dateinput.py
test_datetimeinput.py
test_fileinput.py
test_hiddeninput.py
test_input.py
test_multiplehiddeninput.py
test_multiwidget.py
test_nullbooleanselect.py
test_numberinput.py
test_passwordinput.py
test_radioselect.py
test_select.py
test_selectdatewidget.py
test_selectmultiple.py
test_splitdatetimewidget.py
test_splithiddendatetimewidget.py
test_textarea.py
test_textinput.py
test_timeinput.py
test_widget.py

/workspace/django__django__3.1/tests/from_db_value:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/generic_inline_admin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/generic_relations:
__init__.py
models.py
test_forms.py
tests.py

/workspace/django__django__3.1/tests/generic_relations_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/generic_views:
__init__.py
forms.py
jinja2
models.py
templates
test_base.py
test_dates.py
test_detail.py
test_edit.py
test_list.py
urls.py
views.py

/workspace/django__django__3.1/tests/generic_views/jinja2:
generic_views

/workspace/django__django__3.1/tests/generic_views/jinja2/generic_views:
using.html

/workspace/django__django__3.1/tests/generic_views/templates:
generic_views
registration

/workspace/django__django__3.1/tests/generic_views/templates/generic_views:
about.html
apple_detail.html
artist_detail.html
artist_form.html
author_confirm_delete.html
author_detail.html
author_form.html
author_list.html
author_objects.html
author_view.html
book_archive.html
book_archive_day.html
book_archive_month.html
book_archive_week.html
book_archive_year.html
book_detail.html
book_list.html
confirm_delete.html
detail.html
form.html
list.html
page_template.html
robots.txt
using.html

/workspace/django__django__3.1/tests/generic_views/templates/registration:
login.html

/workspace/django__django__3.1/tests/get_earliest_or_latest:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/get_object_or_404:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/get_or_create:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/gis_tests:
__init__.py
admin.py
data
distapp
gdal_tests
geo3d
geoadmin
geoapp
geogapp
geos_tests
gis_migrations
inspectapp
layermap
maps
models.py
rasterapp
relatedapp
test_data.py
test_fields.py
test_geoforms.py
test_geoip2.py
test_gis_tests_utils.py
test_measure.py
test_ptr.py
test_spatialrefsys.py
tests.py
utils.py

/workspace/django__django__3.1/tests/gis_tests/data:
__init__.py
ch-city
cities
counties
gas_lines
geometries.json
has_nulls
interstates
invalid
rasters
test_point
test_poly
test_vrt
texas.dbf

/workspace/django__django__3.1/tests/gis_tests/data/ch-city:
ch-city.dbf
ch-city.prj
ch-city.shp
ch-city.shx

/workspace/django__django__3.1/tests/gis_tests/data/cities:
cities.dbf
cities.prj
cities.shp
cities.shx

/workspace/django__django__3.1/tests/gis_tests/data/counties:
counties.dbf
counties.shp
counties.shx

/workspace/django__django__3.1/tests/gis_tests/data/gas_lines:
gas_leitung.dbf
gas_leitung.prj
gas_leitung.shp
gas_leitung.shx

/workspace/django__django__3.1/tests/gis_tests/data/has_nulls:
has_nulls.geojson

/workspace/django__django__3.1/tests/gis_tests/data/interstates:
interstates.dbf
interstates.prj
interstates.shp
interstates.shx

/workspace/django__django__3.1/tests/gis_tests/data/invalid:
emptypoints.dbf
emptypoints.shp
emptypoints.shx

/workspace/django__django__3.1/tests/gis_tests/data/rasters:
__init__.py
raster.numpy.txt
raster.tif
textrasters.py

/workspace/django__django__3.1/tests/gis_tests/data/test_point:
test_point.dbf
test_point.prj
test_point.shp
test_point.shx

/workspace/django__django__3.1/tests/gis_tests/data/test_poly:
test_poly.dbf
test_poly.prj
test_poly.shp
test_poly.shx

/workspace/django__django__3.1/tests/gis_tests/data/test_vrt:
test_vrt.csv
test_vrt.vrt

/workspace/django__django__3.1/tests/gis_tests/distapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.1/tests/gis_tests/distapp/fixtures:
initial.json

/workspace/django__django__3.1/tests/gis_tests/gdal_tests:
__init__.py
test_driver.py
test_ds.py
test_envelope.py
test_geom.py
test_raster.py
test_srs.py

/workspace/django__django__3.1/tests/gis_tests/geo3d:
__init__.py
models.py
tests.py
views.py

/workspace/django__django__3.1/tests/gis_tests/geoadmin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/gis_tests/geoapp:
__init__.py
feeds.py
fixtures
models.py
sitemaps.py
test_expressions.py
test_feeds.py
test_functions.py
test_regress.py
test_serializers.py
test_sitemaps.py
tests.py
urls.py

/workspace/django__django__3.1/tests/gis_tests/geoapp/fixtures:
initial.json.gz

/workspace/django__django__3.1/tests/gis_tests/geogapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.1/tests/gis_tests/geogapp/fixtures:
initial.json

/workspace/django__django__3.1/tests/gis_tests/geos_tests:
__init__.py
test_coordseq.py
test_geos.py
test_geos_mutation.py
test_io.py
test_mutable_list.py

/workspace/django__django__3.1/tests/gis_tests/gis_migrations:
__init__.py
migrations
test_commands.py
test_operations.py

/workspace/django__django__3.1/tests/gis_tests/gis_migrations/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/gis_tests/inspectapp:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/gis_tests/layermap:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/gis_tests/maps:
__init__.py

/workspace/django__django__3.1/tests/gis_tests/rasterapp:
__init__.py
models.py
test_rasterfield.py

/workspace/django__django__3.1/tests/gis_tests/relatedapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__3.1/tests/gis_tests/relatedapp/fixtures:
initial.json

/workspace/django__django__3.1/tests/handlers:
__init__.py
templates
test_exception.py
tests.py
tests_custom_error_handlers.py
urls.py
views.py

/workspace/django__django__3.1/tests/handlers/templates:
test_handler.html

/workspace/django__django__3.1/tests/httpwrappers:
__init__.py
abc.txt
tests.py

/workspace/django__django__3.1/tests/humanize_tests:
__init__.py
tests.py

/workspace/django__django__3.1/tests/i18n:
__init__.py
commands
contenttypes
exclude
forms.py
models.py
other
other2
patterns
project_dir
resolution
sampleproject
territorial_fallback
test_compilation.py
test_extraction.py
test_management.py
test_percents.py
tests.py
urls.py
urls_default_unprefixed.py
utils.py

/workspace/django__django__3.1/tests/i18n/commands:
__init__.py
app_with_locale
code.sample
ignore_dir
javascript.js
locale
media_root
not_utf8.sample
someapp
static
templates

/workspace/django__django__3.1/tests/i18n/commands/app_with_locale:
locale

/workspace/django__django__3.1/tests/i18n/commands/app_with_locale/locale:
ru

/workspace/django__django__3.1/tests/i18n/commands/app_with_locale/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/app_with_locale/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/ignore_dir:
ignored.html

/workspace/django__django__3.1/tests/i18n/commands/locale:
en
es_AR
fr
hr
ja
ko
pt_BR
ru
xxx

/workspace/django__django__3.1/tests/i18n/commands/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/es_AR/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/hr:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/hr/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/ja:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/ja/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/ko:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/ko/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/pt_BR/LC_MESSAGES:
django.pristine

/workspace/django__django__3.1/tests/i18n/commands/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/commands/locale/xxx:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/commands/locale/xxx/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/commands/media_root:
media_ignored.html

/workspace/django__django__3.1/tests/i18n/commands/someapp:
static

/workspace/django__django__3.1/tests/i18n/commands/someapp/static:
javascript.js

/workspace/django__django__3.1/tests/i18n/commands/static:
javascript_ignored.js
static_ignored.html

/workspace/django__django__3.1/tests/i18n/commands/templates:
comments.thtml
empty.html
plural.djtpl
subdir
template_with_error.tpl
test.html
xxx_ignored.html

/workspace/django__django__3.1/tests/i18n/commands/templates/subdir:
ignored.html

/workspace/django__django__3.1/tests/i18n/contenttypes:
__init__.py
locale
tests.py

/workspace/django__django__3.1/tests/i18n/contenttypes/locale:
en
fr

/workspace/django__django__3.1/tests/i18n/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/exclude:
__init__.py
canned_locale

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale:
en
fr
it

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale/en:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale/en/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale/it:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/exclude/canned_locale/it/LC_MESSAGES:
django.po

/workspace/django__django__3.1/tests/i18n/other:
__init__.py
locale

/workspace/django__django__3.1/tests/i18n/other/locale:
__init__.py
de
fr

/workspace/django__django__3.1/tests/i18n/other/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/tests/i18n/other/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/other/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__3.1/tests/i18n/other/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/other2:
__init__.py
locale

/workspace/django__django__3.1/tests/i18n/other2/locale:
__init__.py
de

/workspace/django__django__3.1/tests/i18n/other2/locale/de:
__init__.py
formats.py

/workspace/django__django__3.1/tests/i18n/patterns:
__init__.py
locale
templates
tests.py
urls

/workspace/django__django__3.1/tests/i18n/patterns/locale:
en
nl
pt_BR

/workspace/django__django__3.1/tests/i18n/patterns/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/patterns/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/patterns/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/patterns/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/patterns/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/patterns/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/patterns/templates:
404.html
dummy.html

/workspace/django__django__3.1/tests/i18n/patterns/urls:
__init__.py
default.py
disabled.py
included.py
namespace.py
path_unused.py
wrong.py
wrong_namespace.py

/workspace/django__django__3.1/tests/i18n/project_dir:
__init__.py
app_no_locale
app_with_locale
project_locale

/workspace/django__django__3.1/tests/i18n/project_dir/app_no_locale:
__init__.py
models.py

/workspace/django__django__3.1/tests/i18n/project_dir/app_with_locale:
__init__.py
locale
models.py

/workspace/django__django__3.1/tests/i18n/project_dir/app_with_locale/locale:

/workspace/django__django__3.1/tests/i18n/project_dir/project_locale:

/workspace/django__django__3.1/tests/i18n/resolution:
__init__.py
locale

/workspace/django__django__3.1/tests/i18n/resolution/locale:
de

/workspace/django__django__3.1/tests/i18n/resolution/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/resolution/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/sampleproject:
locale
manage.py
sampleproject
templates
update_catalogs.py

/workspace/django__django__3.1/tests/i18n/sampleproject/locale:
fr

/workspace/django__django__3.1/tests/i18n/sampleproject/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/sampleproject/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/sampleproject/sampleproject:
__init__.py
settings.py

/workspace/django__django__3.1/tests/i18n/sampleproject/templates:
percents.html

/workspace/django__django__3.1/tests/i18n/territorial_fallback:
__init__.py
locale

/workspace/django__django__3.1/tests/i18n/territorial_fallback/locale:
de
de_DE

/workspace/django__django__3.1/tests/i18n/territorial_fallback/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/territorial_fallback/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/i18n/territorial_fallback/locale/de_DE:
LC_MESSAGES

/workspace/django__django__3.1/tests/i18n/territorial_fallback/locale/de_DE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/import_error_package:
__init__.py

/workspace/django__django__3.1/tests/indexes:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/inline_formsets:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/inspectdb:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/introspection:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/invalid_models_tests:
__init__.py
test_backend_specific.py
test_custom_fields.py
test_deprecated_fields.py
test_models.py
test_ordinary_fields.py
test_relative_fields.py

/workspace/django__django__3.1/tests/known_related_objects:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/logging_tests:
__init__.py
logconfig.py
tests.py
urls.py
urls_i18n.py
views.py

/workspace/django__django__3.1/tests/lookup:
__init__.py
models.py
test_decimalfield.py
test_lookups.py
test_timefield.py
tests.py

/workspace/django__django__3.1/tests/m2m_and_m2o:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_intermediary:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_multiple:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_signals:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_through:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/m2m_through_regress:
__init__.py
fixtures
models.py
test_multitable.py
tests.py

/workspace/django__django__3.1/tests/m2m_through_regress/fixtures:
m2m_through.json

/workspace/django__django__3.1/tests/m2o_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/mail:
__init__.py
attachments
custombackend.py
test_sendtestemail.py
tests.py

/workspace/django__django__3.1/tests/mail/attachments:
file.eml
file.png
file.txt
file_png
file_png.txt
file_txt
file_txt.png

/workspace/django__django__3.1/tests/managers_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/many_to_many:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/many_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/many_to_one_null:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/max_lengths:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/messages_tests:
__init__.py
base.py
test_api.py
test_cookie.py
test_fallback.py
test_middleware.py
test_mixins.py
test_session.py
tests.py
urls.py

/workspace/django__django__3.1/tests/middleware:
__init__.py
cond_get_urls.py
extra_urls.py
test_security.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/middleware_exceptions:
__init__.py
middleware.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/migrate_signals:
__init__.py
custom_migrations
models.py
tests.py

/workspace/django__django__3.1/tests/migrate_signals/custom_migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migration_test_data_persistence:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__3.1/tests/migration_test_data_persistence/migrations:
0001_initial.py
0002_add_book.py
__init__.py

/workspace/django__django__3.1/tests/migrations:
__init__.py
deprecated_field_migrations
faulty_migrations
migrations_test_apps
models.py
related_models_app
routers.py
test_add_many_to_many_field_initial
test_auto_now_add
test_autodetector.py
test_base.py
test_commands.py
test_deprecated_fields.py
test_exceptions.py
test_executor.py
test_graph.py
test_loader.py
test_migrations
test_migrations_atomic_operation
test_migrations_backwards_deps_1
test_migrations_bad_pyc
test_migrations_clashing_prefix
test_migrations_conflict
test_migrations_custom_user
test_migrations_empty
test_migrations_fake_split_initial
test_migrations_first
test_migrations_initial_false
test_migrations_namespace_package
test_migrations_no_ancestor
test_migrations_no_changes
test_migrations_no_default
test_migrations_no_init
test_migrations_no_operations
test_migrations_non_atomic
test_migrations_order
test_migrations_plan
test_migrations_private
test_migrations_run_before
test_migrations_squashed
test_migrations_squashed_complex
test_migrations_squashed_complex_multi_apps
test_migrations_squashed_erroneous
test_migrations_squashed_extra
test_migrations_squashed_ref_squashed
test_migrations_unmigdep
test_multidb.py
test_operations.py
test_optimizer.py
test_questioner.py
test_state.py
test_writer.py

/workspace/django__django__3.1/tests/migrations/deprecated_field_migrations:
0001_initial.py
0002_remove_ipaddressfield_ip.py
__init__.py

/workspace/django__django__3.1/tests/migrations/faulty_migrations:
__init__.py
file.py
namespace

/workspace/django__django__3.1/tests/migrations/faulty_migrations/namespace:
foo

/workspace/django__django__3.1/tests/migrations/faulty_migrations/namespace/foo:
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps:
__init__.py
alter_fk
conflicting_app_with_dependencies
lookuperror_a
lookuperror_b
lookuperror_c
migrated_app
migrated_unapplied_app
mutate_state_a
mutate_state_b
normal
unmigrated_app
unmigrated_app_simple
unmigrated_app_syncdb
unspecified_app_with_conflict
with_package_model
without_init_file

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/alter_fk:
__init__.py
author_app
book_app

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/alter_fk/author_app:
__init__.py
migrations

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/alter_fk/author_app/migrations:
0001_initial.py
0002_alter_id.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/alter_fk/book_app:
__init__.py
migrations

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/alter_fk/book_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies:
__init__.py
migrations

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/lookuperror_a:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/lookuperror_a/migrations:
0001_initial.py
0002_a2.py
0003_a3.py
0004_a4.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/lookuperror_b:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/lookuperror_b/migrations:
0001_initial.py
0002_b2.py
0003_b3.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/lookuperror_c:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/lookuperror_c/migrations:
0001_initial.py
0002_c2.py
0003_c3.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/migrated_app:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/migrated_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/migrated_unapplied_app:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/mutate_state_a:
__init__.py
migrations

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/mutate_state_a/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/mutate_state_b:
__init__.py
migrations

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/mutate_state_b/migrations:
0001_initial.py
0002_add_field.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/normal:
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/unmigrated_app:
__init__.py
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/unmigrated_app_simple:
__init__.py
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/unmigrated_app_syncdb:
__init__.py
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/unspecified_app_with_conflict:
__init__.py
migrations
models.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/with_package_model:
__init__.py
models

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/with_package_model/models:
__init__.py

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/without_init_file:
__init__.py
migrations

/workspace/django__django__3.1/tests/migrations/migrations_test_apps/without_init_file/migrations:

/workspace/django__django__3.1/tests/migrations/related_models_app:
__init__.py

/workspace/django__django__3.1/tests/migrations/test_add_many_to_many_field_initial:
0001_initial.py
0002_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_auto_now_add:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_atomic_operation:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_backwards_deps_1:
0001_initial.py
0002_second.py

/workspace/django__django__3.1/tests/migrations/test_migrations_bad_pyc:
0001_initial.pyc-tpl
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_clashing_prefix:
__init__.py
a.py
ab.py

/workspace/django__django__3.1/tests/migrations/test_migrations_conflict:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_custom_user:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_empty:
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_fake_split_initial:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_first:
__init__.py
second.py
thefirst.py

/workspace/django__django__3.1/tests/migrations/test_migrations_initial_false:
0001_not_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_namespace_package:
0001_initial.py

/workspace/django__django__3.1/tests/migrations/test_migrations_no_ancestor:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_no_changes:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_no_default:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_no_init:

/workspace/django__django__3.1/tests/migrations/test_migrations_no_operations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_non_atomic:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_order:
0001.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_plan:
0001_initial.py
0002_second.py
0003_third.py
0004_fourth.py
0005_fifth.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_private:
0001_initial.py
__init__.py
_util.py
~util.py

/workspace/django__django__3.1/tests/migrations/test_migrations_run_before:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed:
0001_initial.py
0001_squashed_0002.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_complex:
1_auto.py
2_auto.py
3_auto.py
3_squashed_5.py
4_auto.py
5_auto.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_complex_multi_apps:
__init__.py
app1
app2

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_complex_multi_apps/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_complex_multi_apps/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_erroneous:
1_auto.py
2_auto.py
3_squashed_5.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_extra:
0001_initial.py
0001_squashed_0002.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_ref_squashed:
__init__.py
app1
app2

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_ref_squashed/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_squashed_ref_squashed/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__3.1/tests/migrations/test_migrations_unmigdep:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations2:
__init__.py
models.py
test_migrations_2
test_migrations_2_first
test_migrations_2_no_deps

/workspace/django__django__3.1/tests/migrations2/test_migrations_2:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/migrations2/test_migrations_2_first:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__3.1/tests/migrations2/test_migrations_2_no_deps:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/model_enums:
__init__.py
tests.py

/workspace/django__django__3.1/tests/model_fields:
4x8.png
8x4.png
__init__.py
models.py
test_autofield.py
test_binaryfield.py
test_booleanfield.py
test_charfield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_field_flags.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_foreignkey.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_manytomanyfield.py
test_promises.py
test_slugfield.py
test_textfield.py
test_uuid.py
tests.py

/workspace/django__django__3.1/tests/model_forms:
__init__.py
models.py
test.png
test2.png
test_modelchoicefield.py
test_uuid.py
tests.py

/workspace/django__django__3.1/tests/model_formsets:
__init__.py
models.py
test_uuid.py
tests.py

/workspace/django__django__3.1/tests/model_formsets_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/model_indexes:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/model_inheritance:
__init__.py
models.py
test_abstract_inheritance.py
tests.py

/workspace/django__django__3.1/tests/model_inheritance_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/model_meta:
__init__.py
models.py
results.py
tests.py

/workspace/django__django__3.1/tests/model_options:
__init__.py
models
test_default_related_name.py
test_tablespaces.py

/workspace/django__django__3.1/tests/model_options/models:
__init__.py
default_related_name.py
tablespaces.py

/workspace/django__django__3.1/tests/model_package:
__init__.py
models
tests.py

/workspace/django__django__3.1/tests/model_package/models:
__init__.py
article.py
publication.py

/workspace/django__django__3.1/tests/model_regress:
__init__.py
models.py
test_pickle.py
test_state.py
tests.py

/workspace/django__django__3.1/tests/modeladmin:
__init__.py
models.py
test_actions.py
test_checks.py
tests.py

/workspace/django__django__3.1/tests/multiple_database:
__init__.py
fixtures
models.py
routers.py
tests.py

/workspace/django__django__3.1/tests/multiple_database/fixtures:
multidb-common.json
multidb.default.json
multidb.other.json
pets.json

/workspace/django__django__3.1/tests/mutually_referential:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/nested_foreign_keys:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/no_models:
__init__.py
tests.py

/workspace/django__django__3.1/tests/null_fk:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/null_fk_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/null_queries:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/one_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/or_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/order_with_respect_to:
__init__.py
base_tests.py
models.py
tests.py

/workspace/django__django__3.1/tests/ordering:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/pagination:
__init__.py
custom.py
models.py
tests.py

/workspace/django__django__3.1/tests/postgres_tests:
__init__.py
array_default_migrations
array_index_migrations
fields.py
integration_settings.py
migrations
models.py
test_aggregates.py
test_apps.py
test_array.py
test_bulk_update.py
test_citext.py
test_constraints.py
test_functions.py
test_hstore.py
test_indexes.py
test_integration.py
test_introspection.py
test_json.py
test_operations.py
test_ranges.py
test_search.py
test_signals.py
test_trigram.py
test_unaccent.py

/workspace/django__django__3.1/tests/postgres_tests/array_default_migrations:
0001_initial.py
0002_integerarraymodel_field_2.py
__init__.py

/workspace/django__django__3.1/tests/postgres_tests/array_index_migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/postgres_tests/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__3.1/tests/prefetch_related:
__init__.py
models.py
test_prefetch_related_objects.py
test_uuid.py
tests.py

/workspace/django__django__3.1/tests/project_template:
__init__.py
test_settings.py
urls.py
views.py

/workspace/django__django__3.1/tests/properties:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/proxy_model_inheritance:
__init__.py
app1
app2
models.py
tests.py

/workspace/django__django__3.1/tests/proxy_model_inheritance/app1:
__init__.py
models.py

/workspace/django__django__3.1/tests/proxy_model_inheritance/app2:
__init__.py
models.py

/workspace/django__django__3.1/tests/proxy_models:
__init__.py
admin.py
fixtures
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/proxy_models/fixtures:
mypeople.json

/workspace/django__django__3.1/tests/queries:
__init__.py
models.py
test_bulk_update.py
test_db_returning.py
test_explain.py
test_iterator.py
test_q.py
test_qs_combinators.py
test_query.py
tests.py

/workspace/django__django__3.1/tests/queryset_pickle:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/raw_query:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/redirects_tests:
__init__.py
tests.py
urls.py

/workspace/django__django__3.1/tests/requests:
__init__.py
test_data_upload_settings.py
tests.py

/workspace/django__django__3.1/tests/requirements:
mysql.txt
oracle.txt
postgres.txt
py3.txt

/workspace/django__django__3.1/tests/reserved_names:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/resolve_url:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/responses:
__init__.py
test_cookie.py
test_fileresponse.py
tests.py

/workspace/django__django__3.1/tests/reverse_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/save_delete_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/schema:
__init__.py
fields.py
models.py
test_logging.py
tests.py

/workspace/django__django__3.1/tests/select_for_update:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/select_related:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/select_related_onetoone:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/select_related_regress:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/serializers:
__init__.py
models
test_data.py
test_deserializedobject.py
test_json.py
test_natural.py
test_xml.py
test_yaml.py
tests.py

/workspace/django__django__3.1/tests/serializers/models:
__init__.py
base.py
data.py
multi_table.py
natural.py

/workspace/django__django__3.1/tests/servers:
__init__.py
another_app
fixtures
media
models.py
static
test_basehttp.py
test_liveserverthread.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/servers/another_app:
__init__.py
static

/workspace/django__django__3.1/tests/servers/another_app/static:
another_app

/workspace/django__django__3.1/tests/servers/another_app/static/another_app:
another_app_static_file.txt

/workspace/django__django__3.1/tests/servers/fixtures:
testdata.json

/workspace/django__django__3.1/tests/servers/media:
example_media_file.txt

/workspace/django__django__3.1/tests/servers/static:
example_static_file.txt

/workspace/django__django__3.1/tests/sessions_tests:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/settings_tests:
__init__.py
tests.py

/workspace/django__django__3.1/tests/shell:
__init__.py
tests.py

/workspace/django__django__3.1/tests/shortcuts:
__init__.py
jinja2
templates
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/shortcuts/jinja2:
shortcuts

/workspace/django__django__3.1/tests/shortcuts/jinja2/shortcuts:
using.html

/workspace/django__django__3.1/tests/shortcuts/templates:
shortcuts

/workspace/django__django__3.1/tests/shortcuts/templates/shortcuts:
render_test.html
using.html

/workspace/django__django__3.1/tests/signals:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/signed_cookies_tests:
__init__.py
tests.py

/workspace/django__django__3.1/tests/signing:
__init__.py
tests.py

/workspace/django__django__3.1/tests/sitemaps_tests:
__init__.py
base.py
models.py
templates
test_generic.py
test_http.py
test_https.py
test_management.py
test_utils.py
urls

/workspace/django__django__3.1/tests/sitemaps_tests/templates:
custom_sitemap.xml
custom_sitemap_index.xml

/workspace/django__django__3.1/tests/sitemaps_tests/urls:
__init__.py
empty.py
http.py
https.py
index_only.py

/workspace/django__django__3.1/tests/sites_framework:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__3.1/tests/sites_framework/migrations:
0001_initial.py
__init__.py

/workspace/django__django__3.1/tests/sites_tests:
__init__.py
tests.py

/workspace/django__django__3.1/tests/staticfiles_tests:
__init__.py
apps
cases.py
project
settings.py
storage.py
test_checks.py
test_finders.py
test_forms.py
test_liveserver.py
test_management.py
test_storage.py
test_templatetags.py
test_utils.py
test_views.py
urls

/workspace/django__django__3.1/tests/staticfiles_tests/apps:
__init__.py
no_label
staticfiles_config.py
test

/workspace/django__django__3.1/tests/staticfiles_tests/apps/no_label:
__init__.py
static

/workspace/django__django__3.1/tests/staticfiles_tests/apps/no_label/static:
file2.txt

/workspace/django__django__3.1/tests/staticfiles_tests/apps/test:
__init__.py
otherdir
static

/workspace/django__django__3.1/tests/staticfiles_tests/apps/test/otherdir:
odfile.txt

/workspace/django__django__3.1/tests/staticfiles_tests/apps/test/static:
test

/workspace/django__django__3.1/tests/staticfiles_tests/apps/test/static/test:
%2F.txt
CVS
file.txt
file1.txt
nonascii.css
test.ignoreme
vendor
window.png
⊗.txt

/workspace/django__django__3.1/tests/staticfiles_tests/apps/test/static/test/vendor:
module.js

/workspace/django__django__3.1/tests/staticfiles_tests/project:
documents
faulty
loop
prefixed
site_media

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents:
absolute_root.css
cached
styles_root.css
subdir
test
test.txt

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/cached:
absolute.css
css
img
import.css
other.css
relative.css
styles.css
styles_insensitive.css
test.js
url.css

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/cached/css:
fonts
fragments.css
ignored.css
img
window.css

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/cached/css/fonts:
font.eot
font.svg

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/cached/css/img:
window.png

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/cached/img:
relative.png

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/subdir:
test.txt

/workspace/django__django__3.1/tests/staticfiles_tests/project/documents/test:
backup~
camelCase.txt
file.txt

/workspace/django__django__3.1/tests/staticfiles_tests/project/faulty:
faulty.css

/workspace/django__django__3.1/tests/staticfiles_tests/project/loop:
bar.css
foo.css

/workspace/django__django__3.1/tests/staticfiles_tests/project/prefixed:
test.txt

/workspace/django__django__3.1/tests/staticfiles_tests/project/site_media:
media
static

/workspace/django__django__3.1/tests/staticfiles_tests/project/site_media/media:
media-file.txt

/workspace/django__django__3.1/tests/staticfiles_tests/project/site_media/static:
testfile.txt

/workspace/django__django__3.1/tests/staticfiles_tests/urls:
__init__.py
default.py
helper.py

/workspace/django__django__3.1/tests/str:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/string_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/swappable_models:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/syndication_tests:
__init__.py
feeds.py
models.py
templates
tests.py
urls.py

/workspace/django__django__3.1/tests/syndication_tests/templates:
syndication

/workspace/django__django__3.1/tests/syndication_tests/templates/syndication:
description.html
description_context.html
title.html
title_context.html

/workspace/django__django__3.1/tests/template_backends:
__init__.py
apps
forbidden
jinja2
template_strings
templates
test_django.py
test_dummy.py
test_jinja2.py
test_utils.py

/workspace/django__django__3.1/tests/template_backends/apps:
__init__.py
good
importerror

/workspace/django__django__3.1/tests/template_backends/apps/good:
__init__.py
templatetags

/workspace/django__django__3.1/tests/template_backends/apps/good/templatetags:
__init__.py
empty.py
good_tags.py
override.py
subpackage

/workspace/django__django__3.1/tests/template_backends/apps/good/templatetags/subpackage:
__init__.py
tags.py

/workspace/django__django__3.1/tests/template_backends/apps/importerror:
__init__.py
templatetags

/workspace/django__django__3.1/tests/template_backends/apps/importerror/templatetags:
__init__.py
broken_tags.py

/workspace/django__django__3.1/tests/template_backends/forbidden:
template_backends

/workspace/django__django__3.1/tests/template_backends/forbidden/template_backends:
hello.html

/workspace/django__django__3.1/tests/template_backends/jinja2:
template_backends

/workspace/django__django__3.1/tests/template_backends/jinja2/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html
syntax_error2.html

/workspace/django__django__3.1/tests/template_backends/template_strings:
template_backends

/workspace/django__django__3.1/tests/template_backends/template_strings/template_backends:
csrf.html
hello.html

/workspace/django__django__3.1/tests/template_backends/templates:
template_backends

/workspace/django__django__3.1/tests/template_backends/templates/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html

/workspace/django__django__3.1/tests/template_loader:
__init__.py
template_strings
templates
tests.py

/workspace/django__django__3.1/tests/template_loader/template_strings:
template_loader

/workspace/django__django__3.1/tests/template_loader/template_strings/template_loader:
hello.html

/workspace/django__django__3.1/tests/template_loader/templates:
template_loader

/workspace/django__django__3.1/tests/template_loader/templates/template_loader:
goodbye.html
hello.html
request.html

/workspace/django__django__3.1/tests/template_tests:
__init__.py
alternate_urls.py
annotated_tag_function.py
broken_tag.py
eggs
filter_tests
jinja2
other_templates
recursive_templates
relative_templates
syntax_tests
templates
templatetags
test_base.py
test_callables.py
test_context.py
test_custom.py
test_engine.py
test_extends.py
test_extends_relative.py
test_library.py
test_loaders.py
test_logging.py
test_nodelist.py
test_origin.py
test_parser.py
test_response.py
test_smartif.py
tests.py
urls.py
utils.py
views.py

/workspace/django__django__3.1/tests/template_tests/eggs:
tagsegg.egg

/workspace/django__django__3.1/tests/template_tests/filter_tests:
__init__.py
test_add.py
test_addslashes.py
test_autoescape.py
test_capfirst.py
test_center.py
test_chaining.py
test_cut.py
test_date.py
test_default.py
test_default_if_none.py
test_dictsort.py
test_dictsortreversed.py
test_divisibleby.py
test_escape.py
test_escapejs.py
test_filesizeformat.py
test_first.py
test_floatformat.py
test_force_escape.py
test_get_digit.py
test_iriencode.py
test_join.py
test_json_script.py
test_last.py
test_length.py
test_length_is.py
test_linebreaks.py
test_linebreaksbr.py
test_linenumbers.py
test_ljust.py
test_lower.py
test_make_list.py
test_phone2numeric.py
test_pluralize.py
test_random.py
test_rjust.py
test_safe.py
test_safeseq.py
test_slice.py
test_slugify.py
test_stringformat.py
test_striptags.py
test_time.py
test_timesince.py
test_timeuntil.py
test_title.py
test_truncatechars.py
test_truncatechars_html.py
test_truncatewords.py
test_truncatewords_html.py
test_unordered_list.py
test_upper.py
test_urlencode.py
test_urlize.py
test_urlizetrunc.py
test_wordcount.py
test_wordwrap.py
test_yesno.py
timezone_utils.py

/workspace/django__django__3.1/tests/template_tests/jinja2:
template_tests

/workspace/django__django__3.1/tests/template_tests/jinja2/template_tests:
using.html

/workspace/django__django__3.1/tests/template_tests/other_templates:
priority
test_dirs.html

/workspace/django__django__3.1/tests/template_tests/other_templates/priority:
foo.html

/workspace/django__django__3.1/tests/template_tests/recursive_templates:
fs
fs2
fs3

/workspace/django__django__3.1/tests/template_tests/recursive_templates/fs:
extend-missing.html
one.html
other-recursive.html
recursive.html
self.html
three.html
two.html

/workspace/django__django__3.1/tests/template_tests/recursive_templates/fs2:
recursive.html

/workspace/django__django__3.1/tests/template_tests/recursive_templates/fs3:
recursive.html

/workspace/django__django__3.1/tests/template_tests/relative_templates:
dir1
error_extends.html
error_include.html
one.html
three.html
two.html

/workspace/django__django__3.1/tests/template_tests/relative_templates/dir1:
dir2
looped.html
one.html
one1.html
one2.html
one3.html
three.html
two.html

/workspace/django__django__3.1/tests/template_tests/relative_templates/dir1/dir2:
inc1.html
inc2.html
include_content.html
one.html

/workspace/django__django__3.1/tests/template_tests/syntax_tests:
__init__.py
i18n
test_autoescape.py
test_basic.py
test_builtins.py
test_cache.py
test_comment.py
test_cycle.py
test_exceptions.py
test_extends.py
test_filter_syntax.py
test_filter_tag.py
test_firstof.py
test_for.py
test_if.py
test_if_changed.py
test_if_equal.py
test_include.py
test_invalid_string.py
test_list_index.py
test_load.py
test_lorem.py
test_multiline.py
test_named_endblock.py
test_now.py
test_numpy.py
test_regroup.py
test_resetcycle.py
test_setup.py
test_simple_tag.py
test_spaceless.py
test_static.py
test_template_tag.py
test_url.py
test_verbatim.py
test_width_ratio.py
test_with.py

/workspace/django__django__3.1/tests/template_tests/syntax_tests/i18n:
__init__.py
base.py
test_blocktrans.py
test_filters.py
test_get_available_languages.py
test_get_current_language.py
test_get_current_language_bidi.py
test_get_language_info.py
test_get_language_info_list.py
test_language.py
test_trans.py
test_underscore_syntax.py

/workspace/django__django__3.1/tests/template_tests/templates:
27584_child.html
27584_parent.html
27956_child.html
27956_parent.html
broken_base.html
first
include_tpl.html
included_base.html
included_content.html
inclusion.html
inclusion_base.html
inclusion_extends1.html
inclusion_extends2.html
index.html
priority
recursive_include.html
response.html
second
ssi include with spaces.html
ssi_include.html
template_tests
test_context.html
test_context_stack.html
test_extends_error.html
test_incl_tag_use_l10n.html
test_include_error.html

/workspace/django__django__3.1/tests/template_tests/templates/first:
test.html

/workspace/django__django__3.1/tests/template_tests/templates/priority:
foo.html

/workspace/django__django__3.1/tests/template_tests/templates/second:
test.html

/workspace/django__django__3.1/tests/template_tests/templates/template_tests:
using.html

/workspace/django__django__3.1/tests/template_tests/templatetags:
__init__.py
bad_tag.py
custom.py
inclusion.py
subpackage
tag_27584.py
testtags.py

/workspace/django__django__3.1/tests/template_tests/templatetags/subpackage:
__init__.py
echo.py

/workspace/django__django__3.1/tests/templates:
base.html
comments
custom_admin
extended.html
form_view.html
login.html
views

/workspace/django__django__3.1/tests/templates/comments:
comment_notification_email.txt

/workspace/django__django__3.1/tests/templates/custom_admin:
add_form.html
app_index.html
change_form.html
change_list.html
delete_confirmation.html
delete_selected_confirmation.html
index.html
login.html
logout.html
object_history.html
password_change_done.html
password_change_form.html
popup_response.html

/workspace/django__django__3.1/tests/templates/views:
article_archive_day.html
article_archive_month.html
article_confirm_delete.html
article_detail.html
article_form.html
article_list.html
datearticle_archive_month.html
urlarticle_detail.html
urlarticle_form.html

/workspace/django__django__3.1/tests/test_client:
__init__.py
auth_backends.py
test_conditional_content_removal.py
test_fakepayload.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/test_client_regress:
__init__.py
auth_backends.py
bad_templates
context_processors.py
models.py
session.py
templates
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/test_client_regress/bad_templates:
404.html

/workspace/django__django__3.1/tests/test_client_regress/templates:
request_context.html
unicode.html

/workspace/django__django__3.1/tests/test_exceptions:
__init__.py
test_validation_error.py

/workspace/django__django__3.1/tests/test_runner:
__init__.py
models.py
runner.py
test_debug_sql.py
test_discover_runner.py
test_parallel.py
tests.py

/workspace/django__django__3.1/tests/test_runner_apps:
__init__.py
databases
sample
simple
tagged

/workspace/django__django__3.1/tests/test_runner_apps/databases:
__init__.py
tests.py

/workspace/django__django__3.1/tests/test_runner_apps/sample:
__init__.py
doctests.py
empty.py
pattern_tests.py
tests
tests_sample.py

/workspace/django__django__3.1/tests/test_runner_apps/sample/tests:
__init__.py
tests.py

/workspace/django__django__3.1/tests/test_runner_apps/simple:
__init__.py
tests.py

/workspace/django__django__3.1/tests/test_runner_apps/tagged:
__init__.py
tests.py
tests_inheritance.py

/workspace/django__django__3.1/tests/test_utils:
__init__.py
fixtures
models.py
templates
test_simpletestcase.py
test_testcase.py
test_transactiontestcase.py
tests.py
urls.py
views.py

/workspace/django__django__3.1/tests/test_utils/fixtures:
should_not_be_loaded.json

/workspace/django__django__3.1/tests/test_utils/templates:
template_used

/workspace/django__django__3.1/tests/test_utils/templates/template_used:
alternative.html
base.html
extends.html
include.html

/workspace/django__django__3.1/tests/timezones:
__init__.py
admin.py
forms.py
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/transaction_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/transactions:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/unmanaged_models:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/update:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/update_only_fields:
__init__.py
models.py
tests.py

/workspace/django__django__3.1/tests/urlpatterns:
__init__.py
converter_urls.py
converters.py
included_urls.py
more_urls.py
path_base64_urls.py
path_dynamic_urls.py
path_urls.py
test_resolvers.py
tests.py
views.py

/workspace/django__django__3.1/tests/urlpatterns_reverse:
__init__.py
erroneous_urls.py
extra_urls.py
included_app_urls.py
included_named_urls.py
included_named_urls2.py
included_namespace_urls.py
included_no_kwargs_urls.py
included_urls.py
included_urls2.py
method_view_urls.py
middleware.py
named_urls.py
named_urls_conflict.py
namespace_urls.py
nested_urls.py
no_urls.py
nonimported_module.py
reverse_lazy_urls.py
test_localeregexdescriptor.py
tests.py
translations
urlconf_inner.py
urlconf_outer.py
urls.py
urls_error_handlers.py
urls_error_handlers_callables.py
urls_without_handlers.py
utils.py
views.py
views_broken.py

/workspace/django__django__3.1/tests/urlpatterns_reverse/translations:
__init__.py
locale

/workspace/django__django__3.1/tests/urlpatterns_reverse/translations/locale:
__init__.py
de
fr

/workspace/django__django__3.1/tests/urlpatterns_reverse/translations/locale/de:
LC_MESSAGES
__init__.py

/workspace/django__django__3.1/tests/urlpatterns_reverse/translations/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/urlpatterns_reverse/translations/locale/fr:
LC_MESSAGES
__init__.py

/workspace/django__django__3.1/tests/urlpatterns_reverse/translations/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/user_commands:
__init__.py
eggs
management
models.py
tests.py
urls.py

/workspace/django__django__3.1/tests/user_commands/eggs:
basic.egg

/workspace/django__django__3.1/tests/user_commands/management:
commands

/workspace/django__django__3.1/tests/user_commands/management/commands:
common_args.py
dance.py
hal.py
mutually_exclusive_required.py
no_translations.py
required_option.py
reverse_url.py
set_option.py
subparser.py
subparser_dest.py
subparser_required.py
transaction.py

/workspace/django__django__3.1/tests/utils_tests:
__init__.py
archives
eggs
files
models.py
test_archive.py
test_autoreload.py
test_baseconv.py
test_crypto.py
test_datastructures.py
test_dateformat.py
test_dateparse.py
test_datetime_safe.py
test_decorators.py
test_duration.py
test_encoding.py
test_encoding_deprecations.py
test_feedgenerator.py
test_functional.py
test_hashable.py
test_html.py
test_http.py
test_inspect.py
test_ipv6.py
test_jslex.py
test_lazyobject.py
test_lorem_ipsum.py
test_module
test_module_loading.py
test_no_submodule.py
test_numberformat.py
test_os_utils.py
test_regex_helper.py
test_safestring.py
test_simplelazyobject.py
test_termcolors.py
test_text.py
test_timesince.py
test_timezone.py
test_topological_sort.py
test_tree.py
utils.py

/workspace/django__django__3.1/tests/utils_tests/archives:
foobar.tar
foobar.tar.bz2
foobar.tar.gz
foobar.tar.lzma
foobar.tar.xz
foobar.zip
leadpath_foobar.tar
leadpath_foobar.tar.bz2
leadpath_foobar.tar.gz
leadpath_foobar.tar.lzma
leadpath_foobar.tar.xz
leadpath_foobar.zip

/workspace/django__django__3.1/tests/utils_tests/eggs:
test_egg.egg

/workspace/django__django__3.1/tests/utils_tests/files:
strip_tags1.html
strip_tags2.txt

/workspace/django__django__3.1/tests/utils_tests/test_module:
__init__.py
another_bad_module.py
another_good_module.py
bad_module.py
child_module
good_module.py

/workspace/django__django__3.1/tests/utils_tests/test_module/child_module:
__init__.py
grandchild_module.py

/workspace/django__django__3.1/tests/validation:
__init__.py
models.py
test_custom_messages.py
test_error_messages.py
test_picklable.py
test_unique.py
test_validators.py
tests.py

/workspace/django__django__3.1/tests/validators:
__init__.py
invalid_urls.txt
tests.py
valid_urls.txt

/workspace/django__django__3.1/tests/version:
__init__.py
tests.py

/workspace/django__django__3.1/tests/view_tests:
__init__.py
app0
app1
app2
app3
app4
app5
default_urls.py
generic_urls.py
locale
media
models.py
regression_21530_urls.py
templates
templatetags
tests
urls.py
views.py

/workspace/django__django__3.1/tests/view_tests/app0:
__init__.py
locale

/workspace/django__django__3.1/tests/view_tests/app0/locale:
en

/workspace/django__django__3.1/tests/view_tests/app0/locale/en:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/app0/locale/en/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/app1:
__init__.py
locale

/workspace/django__django__3.1/tests/view_tests/app1/locale:
fr

/workspace/django__django__3.1/tests/view_tests/app1/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/app1/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/app2:
__init__.py
locale

/workspace/django__django__3.1/tests/view_tests/app2/locale:
fr

/workspace/django__django__3.1/tests/view_tests/app2/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/app2/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/app3:
__init__.py
locale

/workspace/django__django__3.1/tests/view_tests/app3/locale:
es_AR

/workspace/django__django__3.1/tests/view_tests/app3/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/app3/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/app4:
__init__.py
locale

/workspace/django__django__3.1/tests/view_tests/app4/locale:
es_AR

/workspace/django__django__3.1/tests/view_tests/app4/locale/es_AR:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/app4/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/app5:
__init__.py
locale

/workspace/django__django__3.1/tests/view_tests/app5/locale:
fr

/workspace/django__django__3.1/tests/view_tests/app5/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/app5/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/locale:
de
en_GB
es
fr
nl
pt
ru

/workspace/django__django__3.1/tests/view_tests/locale/de:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/de/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/locale/en_GB:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/en_GB/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/locale/es:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/es/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/locale/fr:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/locale/nl:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__3.1/tests/view_tests/locale/pt:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/pt/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/locale/ru:
LC_MESSAGES

/workspace/django__django__3.1/tests/view_tests/locale/ru/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__3.1/tests/view_tests/media:
%2F.txt
file.txt
file.txt.gz
file.unknown
long-line.txt
subdir

/workspace/django__django__3.1/tests/view_tests/media/subdir:
visible

/workspace/django__django__3.1/tests/view_tests/templates:
debug
jsi18n-multi-catalogs.html
jsi18n.html

/workspace/django__django__3.1/tests/view_tests/templates/debug:
template_error.html
template_exception.html

/workspace/django__django__3.1/tests/view_tests/templatetags:
__init__.py
debugtags.py

/workspace/django__django__3.1/tests/view_tests/tests:
__init__.py
test_csrf.py
test_debug.py
test_defaults.py
test_i18n.py
test_json.py
test_specials.py
test_static.py

/workspace/django__django__3.1/tests/wsgi:
__init__.py
tests.py
urls.py
wsgi.py

[Select the relevant files and use repo map to get highlevel representation and structure of repo]


============================================================



ACTION:

THOUGHT: Based on the repository structure and the PR description, this issue is related to Django's model field choices and display methods. The main functionality would be in the Django ORM/models code.

Let's first create a script to reproduce the issue:
CODE:
CODE = """
from django.db import models
from django.utils.translation import gettext_lazy as _

class FooBar(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
    
    def __str__(self):
        return self.get_foo_bar_display()
    
    def get_foo_bar_display(self):
        return "something"

# Test the functionality
if __name__ == "__main__":
    import django
    import os
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_settings')
    django.setup()
    
    # Create test settings
    from django.conf import settings
    if not settings.configured:
        settings.configure(
            DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
            INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
        )
    
    # Create the model
    from django.core.management import call_command
    call_command('migrate', verbosity=0)
    
    # Test the override
    obj = FooBar(foo_bar='1')
    print(f"Display value: {obj}")  # Should print "something" but prints "foo"
"""
create_file("reproduce.py", CODE)

============================================================



OBSERVATION:

[File reproduce.py created.]
[File: /workspace/reproduce.py (35 lines total after edit)]
1|
2|from django.db import models
3|from django.utils.translation import gettext_lazy as _
4|
5|class FooBar(models.Model):
6|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
7|    
8|    def __str__(self):
9|        return self.get_foo_bar_display()
10|    
11|    def get_foo_bar_display(self):
12|        return "something"
13|
14|# Test the functionality
15|if __name__ == "__main__":
16|    import django
17|    import os
18|    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_settings')
19|    django.setup()
20|    
21|    # Create test settings
22|    from django.conf import settings
23|    if not settings.configured:
24|        settings.configure(
25|            DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
26|            INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
27|        )
28|    
29|    # Create the model
30|    from django.core.management import call_command
31|    call_command('migrate', verbosity=0)
32|    
33|    # Test the override
34|    obj = FooBar(foo_bar='1')
35|    print(f"Display value: {obj}")  # Should print "something" but prints "foo"
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the script to reproduce the issue:
COMMAND:
python3 reproduce.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce.py", line 5, in <module>
    class FooBar(models.Model):
  File "/testbed/django/db/models/base.py", line 107, in __new__
    app_config = apps.get_containing_app_config(module)
  File "/testbed/django/apps/registry.py", line 252, in get_containing_app_config
    self.check_apps_ready()
  File "/testbed/django/apps/registry.py", line 134, in check_apps_ready
    settings.INSTALLED_APPS
  File "/testbed/django/conf/__init__.py", line 77, in __getattr__
    self._setup(name)
  File "/testbed/django/conf/__init__.py", line 62, in _setup
    % (desc, ENVIRONMENT_VARIABLE))
django.core.exceptions.ImproperlyConfigured: Requested setting INSTALLED_APPS, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.


============================================================



ACTION:

THOUGHT: The error occurs because we need to configure Django settings before defining the model class. Let me modify the script:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings first
if not settings.configured:
    settings.configure(
        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
    )
    django.setup()

from django.db import models
from django.utils.translation import gettext_lazy as _

class FooBar(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
    
    def __str__(self):
        return self.get_foo_bar_display()
    
    def get_foo_bar_display(self):
        return "something"

if __name__ == "__main__":
    # Create the model
    from django.core.management import call_command
    call_command('migrate', verbosity=0)
    
    # Test the override
    obj = FooBar(foo_bar='1')
    print(f"Display value: {obj}")  # Should print "something" but prints "foo"
"""
create_file("reproduce.py", CODE)

============================================================



OBSERVATION:

[File reproduce.py already exists and File overwritten.]
[File: /workspace/reproduce.py (33 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings first
7|if not settings.configured:
8|    settings.configure(
9|        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
10|        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
11|    )
12|    django.setup()
13|
14|from django.db import models
15|from django.utils.translation import gettext_lazy as _
16|
17|class FooBar(models.Model):
18|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
19|    
20|    def __str__(self):
21|        return self.get_foo_bar_display()
22|    
23|    def get_foo_bar_display(self):
24|        return "something"
25|
26|if __name__ == "__main__":
27|    # Create the model
28|    from django.core.management import call_command
29|    call_command('migrate', verbosity=0)
30|    
31|    # Test the override
32|    obj = FooBar(foo_bar='1')
33|    print(f"Display value: {obj}")  # Should print "something" but prints "foo"
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the modified script to reproduce the issue:
COMMAND:
python3 reproduce.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce.py", line 17, in <module>
    class FooBar(models.Model):
  File "/testbed/django/db/models/base.py", line 115, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class __main__.FooBar doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


============================================================



ACTION:

THOUGHT: We need to add our test app to INSTALLED_APPS. Let me modify the script again:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings first
if not settings.configured:
    settings.configure(
        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
        MIDDLEWARE=[],
    )
    django.setup()

from django.db import models
from django.utils.translation import gettext_lazy as _

class FooBar(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
    
    def __str__(self):
        return self.get_foo_bar_display()
    
    def get_foo_bar_display(self):
        return "something"
        
    class Meta:
        # Add explicit app_label since this is a standalone model
        app_label = 'django.contrib.contenttypes'

if __name__ == "__main__":
    # Create the model
    from django.core.management import call_command
    call_command('migrate', verbosity=0)
    
    # Test the override
    obj = FooBar(foo_bar='1')
    print(f"Display value: {obj}")  # Should print "something" but prints "foo"
"""
create_file("reproduce.py", CODE)

============================================================



OBSERVATION:

[File reproduce.py already exists and File overwritten.]
[File: /workspace/reproduce.py (38 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings first
7|if not settings.configured:
8|    settings.configure(
9|        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
10|        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
11|        MIDDLEWARE=[],
12|    )
13|    django.setup()
14|
15|from django.db import models
16|from django.utils.translation import gettext_lazy as _
17|
18|class FooBar(models.Model):
19|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
20|    
21|    def __str__(self):
22|        return self.get_foo_bar_display()
23|    
24|    def get_foo_bar_display(self):
25|        return "something"
26|        
27|    class Meta:
28|        # Add explicit app_label since this is a standalone model
29|        app_label = 'django.contrib.contenttypes'
30|
31|if __name__ == "__main__":
32|    # Create the model
33|    from django.core.management import call_command
34|    call_command('migrate', verbosity=0)
35|    
36|    # Test the override
37|    obj = FooBar(foo_bar='1')
38|    print(f"Display value: {obj}")  # Should print "something" but prints "foo"
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the modified script to reproduce the issue:
COMMAND:
python3 reproduce.py

============================================================



OBSERVATION:

Display value: 1


============================================================



ACTION:

THOUGHT: Now we've successfully reproduced the issue. The script shows that when we try to override `get_foo_bar_display()`, our custom implementation is not being used. Instead, it's using Django's default implementation.

Let's look at the Django source code to understand how the `get_FOO_display` method is implemented:
CODE:
open_file('/workspace/django__django__3.1/django/db/models/fields/__init__.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__3.1/django/db/models/fields/__init__.py (2421 lines total)]
1|import collections.abc
2|import copy
3|import datetime
4|import decimal
5|import operator
6|import uuid
7|import warnings
8|from base64 import b64decode, b64encode
9|from functools import partialmethod, total_ordering
10|
11|from django import forms
12|from django.apps import apps
13|from django.conf import settings
14|from django.core import checks, exceptions, validators
15|from django.db import connection, connections, router
16|from django.db.models.constants import LOOKUP_SEP
17|from django.db.models.query_utils import DeferredAttribute, RegisterLookupMixin
18|from django.utils import timezone
19|from django.utils.datastructures import DictWrapper
20|from django.utils.dateparse import (
21|    parse_date, parse_datetime, parse_duration, parse_time,
22|)
23|from django.utils.duration import duration_microseconds, duration_string
24|from django.utils.functional import Promise, cached_property
25|from django.utils.ipv6 import clean_ipv6_address
26|from django.utils.itercompat import is_iterable
27|from django.utils.text import capfirst
28|from django.utils.translation import gettext_lazy as _
29|
30|__all__ = [
31|    'AutoField', 'BLANK_CHOICE_DASH', 'BigAutoField', 'BigIntegerField',
32|    'BinaryField', 'BooleanField', 'CharField', 'CommaSeparatedIntegerField',
33|    'DateField', 'DateTimeField', 'DecimalField', 'DurationField',
34|    'EmailField', 'Empty', 'Field', 'FilePathField', 'FloatField',
35|    'GenericIPAddressField', 'IPAddressField', 'IntegerField', 'NOT_PROVIDED',
36|    'NullBooleanField', 'PositiveIntegerField', 'PositiveSmallIntegerField',
37|    'SlugField', 'SmallAutoField', 'SmallIntegerField', 'TextField',
38|    'TimeField', 'URLField', 'UUIDField',
39|]
40|
41|
42|class Empty:
43|    pass
44|
45|
46|class NOT_PROVIDED:
47|    pass
48|
49|
50|# The values to use for "blank" in SelectFields. Will be appended to the start
51|# of most "choices" lists.
52|BLANK_CHOICE_DASH = [("", "---------")]
53|
54|
55|def _load_field(app_label, model_name, field_name):
56|    return apps.get_model(app_label, model_name)._meta.get_field(field_name)
57|
58|
59|# A guide to Field parameters:
60|#
61|#   * name:      The name of the field specified in the model.
62|#   * attname:   The attribute to use on the model object. This is the same as
63|#                "name", except in the case of ForeignKeys, where "_id" is
64|#                appended.
65|#   * db_column: The db_column specified in the model (or None).
66|#   * column:    The database column for this field. This is the same as
67|#                "attname", except if db_column is specified.
68|#
69|# Code that introspects values, or does other dynamic things, should use
70|# attname. For example, this gets the primary key value of object "obj":
71|#
72|#     getattr(obj, opts.pk.attname)
73|
74|def _empty(of_cls):
75|    new = Empty()
76|    new.__class__ = of_cls
77|    return new
78|
79|
80|def return_None():
81|    return None
82|
83|
84|@total_ordering
85|class Field(RegisterLookupMixin):
86|    """Base class for all field types"""
87|
88|    # Designates whether empty strings fundamentally are allowed at the
89|    # database level.
90|    empty_strings_allowed = True
91|    empty_values = list(validators.EMPTY_VALUES)
92|
93|    # These track each time a Field instance is created. Used to retain order.
94|    # The auto_creation_counter is used for fields that Django implicitly
95|    # creates, creation_counter is used for all user-specified fields.
96|    creation_counter = 0
97|    auto_creation_counter = -1
98|    default_validators = []  # Default set of validators
99|    default_error_messages = {
100|        'invalid_choice': _('Value %(value)r is not a valid choice.'),
101|        'null': _('This field cannot be null.'),
102|        'blank': _('This field cannot be blank.'),
103|        'unique': _('%(model_name)s with this %(field_label)s '
104|                    'already exists.'),
105|        # Translators: The 'lookup_type' is one of 'date', 'year' or 'month'.
106|        # Eg: "Title must be unique for pub_date year"
107|        'unique_for_date': _("%(field_label)s must be unique for "
108|                             "%(date_field_label)s %(lookup_type)s."),
109|    }
110|    system_check_deprecated_details = None
111|    system_check_removed_details = None
112|
113|    # Field flags
114|    hidden = False
115|
116|    many_to_many = None
117|    many_to_one = None
118|    one_to_many = None
119|    one_to_one = None
120|    related_model = None
121|
122|    descriptor_class = DeferredAttribute
123|
124|    # Generic field type description, usually overridden by subclasses
125|    def _description(self):
126|        return _('Field of type: %(field_type)s') % {
127|            'field_type': self.__class__.__name__
128|        }
129|    description = property(_description)
130|
131|    def __init__(self, verbose_name=None, name=None, primary_key=False,
132|                 max_length=None, unique=False, blank=False, null=False,
133|                 db_index=False, rel=None, default=NOT_PROVIDED, editable=True,
134|                 serialize=True, unique_for_date=None, unique_for_month=None,
135|                 unique_for_year=None, choices=None, help_text='', db_column=None,
136|                 db_tablespace=None, auto_created=False, validators=(),
137|                 error_messages=None):
138|        self.name = name
139|        self.verbose_name = verbose_name  # May be set by set_attributes_from_name
140|        self._verbose_name = verbose_name  # Store original for deconstruction
141|        self.primary_key = primary_key
142|        self.max_length, self._unique = max_length, unique
143|        self.blank, self.null = blank, null
144|        self.remote_field = rel
145|        self.is_relation = self.remote_field is not None
146|        self.default = default
147|        self.editable = editable
148|        self.serialize = serialize
149|        self.unique_for_date = unique_for_date
150|        self.unique_for_month = unique_for_month
151|        self.unique_for_year = unique_for_year
152|        if isinstance(choices, collections.abc.Iterator):
153|            choices = list(choices)
154|        self.choices = choices
155|        self.help_text = help_text
156|        self.db_index = db_index
157|        self.db_column = db_column
158|        self._db_tablespace = db_tablespace
159|        self.auto_created = auto_created
160|
161|        # Adjust the appropriate creation counter, and save our local copy.
162|        if auto_created:
163|            self.creation_counter = Field.auto_creation_counter
164|            Field.auto_creation_counter -= 1
165|        else:
166|            self.creation_counter = Field.creation_counter
167|            Field.creation_counter += 1
168|
169|        self._validators = list(validators)  # Store for deconstruction later
170|
171|        messages = {}
172|        for c in reversed(self.__class__.__mro__):
173|            messages.update(getattr(c, 'default_error_messages', {}))
174|        messages.update(error_messages or {})
175|        self._error_messages = error_messages  # Store for deconstruction later
176|        self.error_messages = messages
177|
178|    def __str__(self):
179|        """
180|        Return "app_label.model_label.field_name" for fields attached to
181|        models.
182|        """
183|        if not hasattr(self, 'model'):
184|            return super().__str__()
185|        model = self.model
186|        app = model._meta.app_label
187|        return '%s.%s.%s' % (app, model._meta.object_name, self.name)
188|
189|    def __repr__(self):
190|        """Display the module, class, and name of the field."""
191|        path = '%s.%s' % (self.__class__.__module__, self.__class__.__qualname__)
192|        name = getattr(self, 'name', None)
193|        if name is not None:
194|            return '<%s: %s>' % (path, name)
195|        return '<%s>' % path
196|
197|    def check(self, **kwargs):
198|        return [
199|            *self._check_field_name(),
200|            *self._check_choices(),
201|            *self._check_db_index(),
202|            *self._check_null_allowed_for_primary_keys(),
203|            *self._check_backend_specific_checks(**kwargs),
204|            *self._check_validators(),
205|            *self._check_deprecation_details(),
206|        ]
207|
208|    def _check_field_name(self):
209|        """
210|        Check if field name is valid, i.e. 1) does not end with an
211|        underscore, 2) does not contain "__" and 3) is not "pk".
212|        """
213|        if self.name.endswith('_'):
214|            return [
215|                checks.Error(
216|                    'Field names must not end with an underscore.',
217|                    obj=self,
218|                    id='fields.E001',
219|                )
220|            ]
221|        elif LOOKUP_SEP in self.name:
222|            return [
223|                checks.Error(
224|                    'Field names must not contain "%s".' % (LOOKUP_SEP,),
225|                    obj=self,
226|                    id='fields.E002',
227|                )
228|            ]
229|        elif self.name == 'pk':
230|            return [
231|                checks.Error(
232|                    "'pk' is a reserved word that cannot be used as a field name.",
233|                    obj=self,
234|                    id='fields.E003',
235|                )
236|            ]
237|        else:
238|            return []
239|
240|    def _check_choices(self):
241|        if not self.choices:
242|            return []
243|
244|        def is_value(value):
245|            return isinstance(value, (str, Promise)) or not is_iterable(value)
246|
247|        if not is_iterable(self.choices) or isinstance(self.choices, str):
248|            return [
249|                checks.Error(
250|                    "'choices' must be an iterable (e.g., a list or tuple).",
251|                    obj=self,
252|                    id='fields.E004',
253|                )
254|            ]
255|
256|        choice_max_length = 0
257|        # Expect [group_name, [value, display]]
258|        for choices_group in self.choices:
259|            try:
260|                group_name, group_choices = choices_group
261|            except (TypeError, ValueError):
262|                # Containing non-pairs
263|                break
264|            try:
265|                if not all(
266|                    is_value(value) and is_value(human_name)
267|                    for value, human_name in group_choices
268|                ):
269|                    break
270|                if self.max_length is not None and group_choices:
271|                    choice_max_length = max(
272|                        choice_max_length,
273|                        *(len(value) for value, _ in group_choices if isinstance(value, str)),
274|                    )
275|            except (TypeError, ValueError):
276|                # No groups, choices in the form [value, display]
277|                value, human_name = group_name, group_choices
278|                if not is_value(value) or not is_value(human_name):
279|                    break
280|                if self.max_length is not None and isinstance(value, str):
281|                    choice_max_length = max(choice_max_length, len(value))
282|
283|            # Special case: choices=['ab']
284|            if isinstance(choices_group, str):
285|                break
286|        else:
287|            if self.max_length is not None and choice_max_length > self.max_length:
288|                return [
289|                    checks.Error(
290|                        "'max_length' is too small to fit the longest value "
291|                        "in 'choices' (%d characters)." % choice_max_length,
292|                        obj=self,
293|                        id='fields.E009',
294|                    ),
295|                ]
296|            return []
297|
298|        return [
299|            checks.Error(
300|                "'choices' must be an iterable containing "
301|                "(actual value, human readable name) tuples.",
302|                obj=self,
303|                id='fields.E005',
304|            )
305|        ]
306|
307|    def _check_db_index(self):
308|        if self.db_index not in (None, True, False):
309|            return [
310|                checks.Error(
311|                    "'db_index' must be None, True or False.",
312|                    obj=self,
313|                    id='fields.E006',
314|                )
315|            ]
316|        else:
317|            return []
318|
319|    def _check_null_allowed_for_primary_keys(self):
320|        if (self.primary_key and self.null and
321|                not connection.features.interprets_empty_strings_as_nulls):
322|            # We cannot reliably check this for backends like Oracle which
323|            # consider NULL and '' to be equal (and thus set up
324|            # character-based fields a little differently).
325|            return [
326|                checks.Error(
327|                    'Primary keys must not have null=True.',
328|                    hint=('Set null=False on the field, or '
329|                          'remove primary_key=True argument.'),
330|                    obj=self,
331|                    id='fields.E007',
332|                )
333|            ]
334|        else:
335|            return []
336|
337|    def _check_backend_specific_checks(self, **kwargs):
338|        app_label = self.model._meta.app_label
339|        for db in connections:
340|            if router.allow_migrate(db, app_label, model_name=self.model._meta.model_name):
341|                return connections[db].validation.check_field(self, **kwargs)
342|        return []
343|
344|    def _check_validators(self):
345|        errors = []
346|        for i, validator in enumerate(self.validators):
347|            if not callable(validator):
348|                errors.append(
349|                    checks.Error(
350|                        "All 'validators' must be callable.",
351|                        hint=(
352|                            "validators[{i}] ({repr}) isn't a function or "
353|                            "instance of a validator class.".format(
354|                                i=i, repr=repr(validator),
355|                            )
356|                        ),
357|                        obj=self,
358|                        id='fields.E008',
359|                    )
360|                )
361|        return errors
362|
363|    def _check_deprecation_details(self):
364|        if self.system_check_removed_details is not None:
365|            return [
366|                checks.Error(
367|                    self.system_check_removed_details.get(
368|                        'msg',
369|                        '%s has been removed except for support in historical '
370|                        'migrations.' % self.__class__.__name__
371|                    ),
372|                    hint=self.system_check_removed_details.get('hint'),
373|                    obj=self,
374|                    id=self.system_check_removed_details.get('id', 'fields.EXXX'),
375|                )
376|            ]
377|        elif self.system_check_deprecated_details is not None:
378|            return [
379|                checks.Warning(
380|                    self.system_check_deprecated_details.get(
381|                        'msg',
382|                        '%s has been deprecated.' % self.__class__.__name__
383|                    ),
384|                    hint=self.system_check_deprecated_details.get('hint'),
385|                    obj=self,
386|                    id=self.system_check_deprecated_details.get('id', 'fields.WXXX'),
387|                )
388|            ]
389|        return []
390|
391|    def get_col(self, alias, output_field=None):
392|        if output_field is None:
393|            output_field = self
394|        if alias != self.model._meta.db_table or output_field != self:
395|            from django.db.models.expressions import Col
396|            return Col(alias, self, output_field)
397|        else:
398|            return self.cached_col
399|
400|    @cached_property
401|    def cached_col(self):
402|        from django.db.models.expressions import Col
403|        return Col(self.model._meta.db_table, self)
404|
405|    def select_format(self, compiler, sql, params):
406|        """
407|        Custom format for select clauses. For example, GIS columns need to be
408|        selected as AsText(table.col) on MySQL as the table.col data can't be
409|        used by Django.
410|        """
411|        return sql, params
412|
413|    def deconstruct(self):
414|        """
415|        Return enough information to recreate the field as a 4-tuple:
416|
417|         * The name of the field on the model, if contribute_to_class() has
418|           been run.
419|         * The import path of the field, including the class:e.g.
420|           django.db.models.IntegerField This should be the most portable
421|           version, so less specific may be better.
422|         * A list of positional arguments.
423|         * A dict of keyword arguments.
424|
425|        Note that the positional or keyword arguments must contain values of
426|        the following types (including inner values of collection types):
427|
428|         * None, bool, str, int, float, complex, set, frozenset, list, tuple,
429|           dict
430|         * UUID
431|         * datetime.datetime (naive), datetime.date
432|         * top-level classes, top-level functions - will be referenced by their
433|           full import path
434|         * Storage instances - these have their own deconstruct() method
435|
436|        This is because the values here must be serialized into a text format
437|        (possibly new Python code, possibly JSON) and these are the only types
438|        with encoding handlers defined.
439|
440|        There's no need to return the exact way the field was instantiated this
441|        time, just ensure that the resulting field is the same - prefer keyword
442|        arguments over positional ones, and omit parameters with their default
443|        values.
444|        """
445|        # Short-form way of fetching all the default parameters
446|        keywords = {}
447|        possibles = {
448|            "verbose_name": None,
449|            "primary_key": False,
450|            "max_length": None,
451|            "unique": False,
452|            "blank": False,
453|            "null": False,
454|            "db_index": False,
455|            "default": NOT_PROVIDED,
456|            "editable": True,
457|            "serialize": True,
458|            "unique_for_date": None,
459|            "unique_for_month": None,
460|            "unique_for_year": None,
461|            "choices": None,
462|            "help_text": '',
463|            "db_column": None,
464|            "db_tablespace": None,
465|            "auto_created": False,
466|            "validators": [],
467|            "error_messages": None,
468|        }
469|        attr_overrides = {
470|            "unique": "_unique",
471|            "error_messages": "_error_messages",
472|            "validators": "_validators",
473|            "verbose_name": "_verbose_name",
474|            "db_tablespace": "_db_tablespace",
475|        }
476|        equals_comparison = {"choices", "validators"}
477|        for name, default in possibles.items():
478|            value = getattr(self, attr_overrides.get(name, name))
479|            # Unroll anything iterable for choices into a concrete list
480|            if name == "choices" and isinstance(value, collections.abc.Iterable):
481|                value = list(value)
482|            # Do correct kind of comparison
483|            if name in equals_comparison:
484|                if value != default:
485|                    keywords[name] = value
486|            else:
487|                if value is not default:
488|                    keywords[name] = value
489|        # Work out path - we shorten it for known Django core fields
490|        path = "%s.%s" % (self.__class__.__module__, self.__class__.__qualname__)
491|        if path.startswith("django.db.models.fields.related"):
492|            path = path.replace("django.db.models.fields.related", "django.db.models")
493|        elif path.startswith("django.db.models.fields.files"):
494|            path = path.replace("django.db.models.fields.files", "django.db.models")
495|        elif path.startswith("django.db.models.fields.proxy"):
496|            path = path.replace("django.db.models.fields.proxy", "django.db.models")
497|        elif path.startswith("django.db.models.fields"):
498|            path = path.replace("django.db.models.fields", "django.db.models")
499|        # Return basic info - other fields should override this.
500|        return (self.name, path, [], keywords)
501|
502|    def clone(self):
503|        """
504|        Uses deconstruct() to clone a new copy of this Field.
505|        Will not preserve any class attachments/attribute names.
506|        """
507|        name, path, args, kwargs = self.deconstruct()
508|        return self.__class__(*args, **kwargs)
509|
510|    def __eq__(self, other):
511|        # Needed for @total_ordering
512|        if isinstance(other, Field):
513|            return self.creation_counter == other.creation_counter
514|        return NotImplemented
515|
516|    def __lt__(self, other):
517|        # This is needed because bisect does not take a comparison function.
518|        if isinstance(other, Field):
519|            return self.creation_counter < other.creation_counter
520|        return NotImplemented
521|
522|    def __hash__(self):
523|        return hash(self.creation_counter)
524|
525|    def __deepcopy__(self, memodict):
526|        # We don't have to deepcopy very much here, since most things are not
527|        # intended to be altered after initial creation.
528|        obj = copy.copy(self)
529|        if self.remote_field:
530|            obj.remote_field = copy.copy(self.remote_field)
531|            if hasattr(self.remote_field, 'field') and self.remote_field.field is self:
532|                obj.remote_field.field = obj
533|        memodict[id(self)] = obj
534|        return obj
535|
536|    def __copy__(self):
537|        # We need to avoid hitting __reduce__, so define this
538|        # slightly weird copy construct.
539|        obj = Empty()
540|        obj.__class__ = self.__class__
541|        obj.__dict__ = self.__dict__.copy()
542|        return obj
543|
544|    def __reduce__(self):
545|        """
546|        Pickling should return the model._meta.fields instance of the field,
547|        not a new copy of that field. So, use the app registry to load the
548|        model and then the field back.
549|        """
550|        if not hasattr(self, 'model'):
551|            # Fields are sometimes used without attaching them to models (for
552|            # example in aggregation). In this case give back a plain field
553|            # instance. The code below will create a new empty instance of
554|            # class self.__class__, then update its dict with self.__dict__
555|            # values - so, this is very close to normal pickle.
556|            state = self.__dict__.copy()
557|            # The _get_default cached_property can't be pickled due to lambda
558|            # usage.
559|            state.pop('_get_default', None)
560|            return _empty, (self.__class__,), state
561|        return _load_field, (self.model._meta.app_label, self.model._meta.object_name,
562|                             self.name)
563|
564|    def get_pk_value_on_save(self, instance):
565|        """
566|        Hook to generate new PK values on save. This method is called when
567|        saving instances with no primary key value set. If this method returns
568|        something else than None, then the returned value is used when saving
569|        the new instance.
570|        """
571|        if self.default:
572|            return self.get_default()
573|        return None
574|
575|    def to_python(self, value):
576|        """
577|        Convert the input value into the expected Python data type, raising
578|        django.core.exceptions.ValidationError if the data can't be converted.
579|        Return the converted value. Subclasses should override this.
580|        """
581|        return value
582|
583|    @cached_property
584|    def validators(self):
585|        """
586|        Some validators can't be created at field initialization time.
587|        This method provides a way to delay their creation until required.
588|        """
589|        return [*self.default_validators, *self._validators]
590|
591|    def run_validators(self, value):
592|        if value in self.empty_values:
593|            return
594|
595|        errors = []
596|        for v in self.validators:
597|            try:
598|                v(value)
599|            except exceptions.ValidationError as e:
600|                if hasattr(e, 'code') and e.code in self.error_messages:
601|                    e.message = self.error_messages[e.code]
602|                errors.extend(e.error_list)
603|
604|        if errors:
605|            raise exceptions.ValidationError(errors)
606|
607|    def validate(self, value, model_instance):
608|        """
609|        Validate value and raise ValidationError if necessary. Subclasses
610|        should override this to provide validation logic.
611|        """
612|        if not self.editable:
613|            # Skip validation for non-editable fields.
614|            return
615|
616|        if self.choices is not None and value not in self.empty_values:
617|            for option_key, option_value in self.choices:
618|                if isinstance(option_value, (list, tuple)):
619|                    # This is an optgroup, so look inside the group for
620|                    # options.
621|                    for optgroup_key, optgroup_value in option_value:
622|                        if value == optgroup_key:
623|                            return
624|                elif value == option_key:
625|                    return
626|            raise exceptions.ValidationError(
627|                self.error_messages['invalid_choice'],
628|                code='invalid_choice',
629|                params={'value': value},
630|            )
631|
632|        if value is None and not self.null:
633|            raise exceptions.ValidationError(self.error_messages['null'], code='null')
634|
635|        if not self.blank and value in self.empty_values:
636|            raise exceptions.ValidationError(self.error_messages['blank'], code='blank')
637|
638|    def clean(self, value, model_instance):
639|        """
640|        Convert the value's type and run validation. Validation errors
641|        from to_python() and validate() are propagated. Return the correct
642|        value if no error is raised.
643|        """
644|        value = self.to_python(value)
645|        self.validate(value, model_instance)
646|        self.run_validators(value)
647|        return value
648|
649|    def db_type_parameters(self, connection):
650|        return DictWrapper(self.__dict__, connection.ops.quote_name, 'qn_')
651|
652|    def db_check(self, connection):
653|        """
654|        Return the database column check constraint for this field, for the
655|        provided connection. Works the same way as db_type() for the case that
656|        get_internal_type() does not map to a preexisting model field.
657|        """
658|        data = self.db_type_parameters(connection)
659|        try:
660|            return connection.data_type_check_constraints[self.get_internal_type()] % data
661|        except KeyError:
662|            return None
663|
664|    def db_type(self, connection):
665|        """
666|        Return the database column data type for this field, for the provided
667|        connection.
668|        """
669|        # The default implementation of this method looks at the
670|        # backend-specific data_types dictionary, looking up the field by its
671|        # "internal type".
672|        #
673|        # A Field class can implement the get_internal_type() method to specify
674|        # which *preexisting* Django Field class it's most similar to -- i.e.,
675|        # a custom field might be represented by a TEXT column type, which is
676|        # the same as the TextField Django field type, which means the custom
677|        # field's get_internal_type() returns 'TextField'.
678|        #
679|        # But the limitation of the get_internal_type() / data_types approach
680|        # is that it cannot handle database column types that aren't already
681|        # mapped to one of the built-in Django field types. In this case, you
682|        # can implement db_type() instead of get_internal_type() to specify
683|        # exactly which wacky database column type you want to use.
684|        data = self.db_type_parameters(connection)
685|        try:
686|            return connection.data_types[self.get_internal_type()] % data
687|        except KeyError:
688|            return None
689|
690|    def rel_db_type(self, connection):
691|        """
692|        Return the data type that a related field pointing to this field should
693|        use. For example, this method is called by ForeignKey and OneToOneField
694|        to determine its data type.
695|        """
696|        return self.db_type(connection)
697|
698|    def cast_db_type(self, connection):
699|        """Return the data type to use in the Cast() function."""
700|        db_type = connection.ops.cast_data_types.get(self.get_internal_type())
701|        if db_type:
702|            return db_type % self.db_type_parameters(connection)
703|        return self.db_type(connection)
704|
705|    def db_parameters(self, connection):
706|        """
707|        Extension of db_type(), providing a range of different return values
708|        (type, checks). This will look at db_type(), allowing custom model
709|        fields to override it.
710|        """
711|        type_string = self.db_type(connection)
712|        check_string = self.db_check(connection)
713|        return {
714|            "type": type_string,
715|            "check": check_string,
716|        }
717|
718|    def db_type_suffix(self, connection):
719|        return connection.data_types_suffix.get(self.get_internal_type())
720|
721|    def get_db_converters(self, connection):
722|        if hasattr(self, 'from_db_value'):
723|            return [self.from_db_value]
724|        return []
725|
726|    @property
727|    def unique(self):
728|        return self._unique or self.primary_key
729|
730|    @property
731|    def db_tablespace(self):
732|        return self._db_tablespace or settings.DEFAULT_INDEX_TABLESPACE
733|
734|    @property
735|    def db_returning(self):
736|        """
737|        Private API intended only to be used by Django itself. Currently only
738|        the PostgreSQL backend supports returning multiple fields on a model.
739|        """
740|        return False
741|
742|    def set_attributes_from_name(self, name):
743|        self.name = self.name or name
744|        self.attname, self.column = self.get_attname_column()
745|        self.concrete = self.column is not None
746|        if self.verbose_name is None and self.name:
747|            self.verbose_name = self.name.replace('_', ' ')
748|
749|    def contribute_to_class(self, cls, name, private_only=False):
750|        """
751|        Register the field with the model class it belongs to.
752|
753|        If private_only is True, create a separate instance of this field
754|        for every subclass of cls, even if cls is not an abstract model.
755|        """
756|        self.set_attributes_from_name(name)
757|        self.model = cls
758|        cls._meta.add_field(self, private=private_only)
759|        if self.column:
760|            # Don't override classmethods with the descriptor. This means that
761|            # if you have a classmethod and a field with the same name, then
762|            # such fields can't be deferred (we don't have a check for this).
763|            if not getattr(cls, self.attname, None):
764|                setattr(cls, self.attname, self.descriptor_class(self))
765|        if self.choices is not None:
766|            setattr(cls, 'get_%s_display' % self.name,
767|                    partialmethod(cls._get_FIELD_display, field=self))
768|
769|    def get_filter_kwargs_for_object(self, obj):
770|        """
771|        Return a dict that when passed as kwargs to self.model.filter(), would
772|        yield all instances having the same value for this field as obj has.
773|        """
774|        return {self.name: getattr(obj, self.attname)}
775|
776|    def get_attname(self):
777|        return self.name
778|
779|    def get_attname_column(self):
780|        attname = self.get_attname()
781|        column = self.db_column or attname
782|        return attname, column
783|
784|    def get_internal_type(self):
785|        return self.__class__.__name__
786|
787|    def pre_save(self, model_instance, add):
788|        """Return field's value just before saving."""
789|        return getattr(model_instance, self.attname)
790|
791|    def get_prep_value(self, value):
792|        """Perform preliminary non-db specific value checks and conversions."""
793|        if isinstance(value, Promise):
794|            value = value._proxy____cast()
795|        return value
796|
797|    def get_db_prep_value(self, value, connection, prepared=False):
798|        """
799|        Return field's value prepared for interacting with the database backend.
800|
801|        Used by the default implementations of get_db_prep_save().
802|        """
803|        if not prepared:
804|            value = self.get_prep_value(value)
805|        return value
806|
807|    def get_db_prep_save(self, value, connection):
808|        """Return field's value prepared for saving into a database."""
809|        return self.get_db_prep_value(value, connection=connection, prepared=False)
810|
811|    def has_default(self):
812|        """Return a boolean of whether this field has a default value."""
813|        return self.default is not NOT_PROVIDED
814|
815|    def get_default(self):
816|        """Return the default value for this field."""
817|        return self._get_default()
818|
819|    @cached_property
820|    def _get_default(self):
821|        if self.has_default():
822|            if callable(self.default):
823|                return self.default
824|            return lambda: self.default
825|
826|        if not self.empty_strings_allowed or self.null and not connection.features.interprets_empty_strings_as_nulls:
827|            return return_None
828|        return str  # return empty string
829|
830|    def get_choices(self, include_blank=True, blank_choice=BLANK_CHOICE_DASH, limit_choices_to=None, ordering=()):
831|        """
832|        Return choices with a default blank choices included, for use
833|        as <select> choices for this field.
834|        """
835|        if self.choices is not None:
836|            choices = list(self.choices)
837|            if include_blank:
838|                blank_defined = any(choice in ('', None) for choice, _ in self.flatchoices)
839|                if not blank_defined:
840|                    choices = blank_choice + choices
841|            return choices
842|        rel_model = self.remote_field.model
843|        limit_choices_to = limit_choices_to or self.get_limit_choices_to()
844|        choice_func = operator.attrgetter(
845|            self.remote_field.get_related_field().attname
846|            if hasattr(self.remote_field, 'get_related_field')
847|            else 'pk'
848|        )
849|        qs = rel_model._default_manager.complex_filter(limit_choices_to)
850|        if ordering:
851|            qs = qs.order_by(*ordering)
852|        return (blank_choice if include_blank else []) + [
853|            (choice_func(x), str(x)) for x in qs
854|        ]
855|
856|    def value_to_string(self, obj):
857|        """
858|        Return a string value of this field from the passed obj.
859|        This is used by the serialization framework.
860|        """
861|        return str(self.value_from_object(obj))
862|
863|    def _get_flatchoices(self):
864|        """Flattened version of choices tuple."""
865|        if self.choices is None:
866|            return []
867|        flat = []
868|        for choice, value in self.choices:
869|            if isinstance(value, (list, tuple)):
870|                flat.extend(value)
871|            else:
872|                flat.append((choice, value))
873|        return flat
874|    flatchoices = property(_get_flatchoices)
875|
876|    def save_form_data(self, instance, data):
877|        setattr(instance, self.name, data)
878|
879|    def formfield(self, form_class=None, choices_form_class=None, **kwargs):
880|        """Return a django.forms.Field instance for this field."""
881|        defaults = {
882|            'required': not self.blank,
883|            'label': capfirst(self.verbose_name),
884|            'help_text': self.help_text,
885|        }
886|        if self.has_default():
887|            if callable(self.default):
888|                defaults['initial'] = self.default
889|                defaults['show_hidden_initial'] = True
890|            else:
891|                defaults['initial'] = self.get_default()
892|        if self.choices is not None:
893|            # Fields with choices get special treatment.
894|            include_blank = (self.blank or
895|                             not (self.has_default() or 'initial' in kwargs))
896|            defaults['choices'] = self.get_choices(include_blank=include_blank)
897|            defaults['coerce'] = self.to_python
898|            if self.null:
899|                defaults['empty_value'] = None
900|            if choices_form_class is not None:
901|                form_class = choices_form_class
902|            else:
903|                form_class = forms.TypedChoiceField
904|            # Many of the subclass-specific formfield arguments (min_value,
905|            # max_value) don't apply for choice fields, so be sure to only pass
906|            # the values that TypedChoiceField will understand.
907|            for k in list(kwargs):
908|                if k not in ('coerce', 'empty_value', 'choices', 'required',
909|                             'widget', 'label', 'initial', 'help_text',
910|                             'error_messages', 'show_hidden_initial', 'disabled'):
911|                    del kwargs[k]
912|        defaults.update(kwargs)
913|        if form_class is None:
914|            form_class = forms.CharField
915|        return form_class(**defaults)
916|
917|    def value_from_object(self, obj):
918|        """Return the value of this field in the given model instance."""
919|        return getattr(obj, self.attname)
920|
921|
922|class BooleanField(Field):
923|    empty_strings_allowed = False
924|    default_error_messages = {
925|        'invalid': _('“%(value)s” value must be either True or False.'),
926|        'invalid_nullable': _('“%(value)s” value must be either True, False, or None.'),
927|    }
928|    description = _("Boolean (Either True or False)")
929|
930|    def get_internal_type(self):
931|        return "BooleanField"
932|
933|    def to_python(self, value):
934|        if self.null and value in self.empty_values:
935|            return None
936|        if value in (True, False):
937|            # 1/0 are equal to True/False. bool() converts former to latter.
938|            return bool(value)
939|        if value in ('t', 'True', '1'):
940|            return True
941|        if value in ('f', 'False', '0'):
942|            return False
943|        raise exceptions.ValidationError(
944|            self.error_messages['invalid_nullable' if self.null else 'invalid'],
945|            code='invalid',
946|            params={'value': value},
947|        )
948|
949|    def get_prep_value(self, value):
950|        value = super().get_prep_value(value)
951|        if value is None:
952|            return None
953|        return self.to_python(value)
954|
955|    def formfield(self, **kwargs):
956|        if self.choices is not None:
957|            include_blank = not (self.has_default() or 'initial' in kwargs)
958|            defaults = {'choices': self.get_choices(include_blank=include_blank)}
959|        else:
960|            form_class = forms.NullBooleanField if self.null else forms.BooleanField
961|            # In HTML checkboxes, 'required' means "must be checked" which is
962|            # different from the choices case ("must select some value").
963|            # required=False allows unchecked checkboxes.
964|            defaults = {'form_class': form_class, 'required': False}
965|        return super().formfield(**{**defaults, **kwargs})
966|
967|
968|class CharField(Field):
969|    description = _("String (up to %(max_length)s)")
970|
971|    def __init__(self, *args, **kwargs):
972|        super().__init__(*args, **kwargs)
973|        self.validators.append(validators.MaxLengthValidator(self.max_length))
974|
975|    def check(self, **kwargs):
976|        return [
977|            *super().check(**kwargs),
978|            *self._check_max_length_attribute(**kwargs),
979|        ]
980|
981|    def _check_max_length_attribute(self, **kwargs):
982|        if self.max_length is None:
983|            return [
984|                checks.Error(
985|                    "CharFields must define a 'max_length' attribute.",
986|                    obj=self,
987|                    id='fields.E120',
988|                )
989|            ]
990|        elif (not isinstance(self.max_length, int) or isinstance(self.max_length, bool) or
991|                self.max_length <= 0):
992|            return [
993|                checks.Error(
994|                    "'max_length' must be a positive integer.",
995|                    obj=self,
996|                    id='fields.E121',
997|                )
998|            ]
999|        else:
1000|            return []
(1421 more lines below)


============================================================



ACTION:

THOUGHT: Let me scroll down to find the choices-related code:
CODE:
search_file("get_FOO_display", "/workspace/django__django__3.1/django/db/models/fields/__init__.py")

============================================================



OBSERVATION:

[No matches found for "get_FOO_display" in /workspace/django__django__3.1/django/db/models/fields/__init__.py]


============================================================



ACTION:

THOUGHT: Let me check the base model class since the `get_FOO_display` method is likely generated there:
CODE:
open_file('/workspace/django__django__3.1/django/db/models/base.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__3.1/django/db/models/base.py (1909 lines total)]
1|import copy
2|import inspect
3|import warnings
4|from functools import partialmethod
5|from itertools import chain
6|
7|from django.apps import apps
8|from django.conf import settings
9|from django.core import checks
10|from django.core.exceptions import (
11|    NON_FIELD_ERRORS, FieldDoesNotExist, FieldError, MultipleObjectsReturned,
12|    ObjectDoesNotExist, ValidationError,
13|)
14|from django.db import (
15|    DEFAULT_DB_ALIAS, DJANGO_VERSION_PICKLE_KEY, DatabaseError, connection,
16|    connections, router, transaction,
17|)
18|from django.db.models import (
19|    NOT_PROVIDED, ExpressionWrapper, IntegerField, Max, Value,
20|)
21|from django.db.models.constants import LOOKUP_SEP
22|from django.db.models.constraints import CheckConstraint, UniqueConstraint
23|from django.db.models.deletion import CASCADE, Collector
24|from django.db.models.fields.related import (
25|    ForeignObjectRel, OneToOneField, lazy_related_operation, resolve_relation,
26|)
27|from django.db.models.functions import Coalesce
28|from django.db.models.manager import Manager
29|from django.db.models.options import Options
30|from django.db.models.query import Q
31|from django.db.models.signals import (
32|    class_prepared, post_init, post_save, pre_init, pre_save,
33|)
34|from django.db.models.utils import make_model_tuple
35|from django.utils.encoding import force_str
36|from django.utils.text import capfirst, get_text_list
37|from django.utils.translation import gettext_lazy as _
38|from django.utils.version import get_version
39|
40|
41|class Deferred:
42|    def __repr__(self):
43|        return '<Deferred field>'
44|
45|    def __str__(self):
46|        return '<Deferred field>'
47|
48|
49|DEFERRED = Deferred()
50|
51|
52|def subclass_exception(name, bases, module, attached_to):
53|    """
54|    Create exception subclass. Used by ModelBase below.
55|
56|    The exception is created in a way that allows it to be pickled, assuming
57|    that the returned exception class will be added as an attribute to the
58|    'attached_to' class.
59|    """
60|    return type(name, bases, {
61|        '__module__': module,
62|        '__qualname__': '%s.%s' % (attached_to.__qualname__, name),
63|    })
64|
65|
66|def _has_contribute_to_class(value):
67|    # Only call contribute_to_class() if it's bound.
68|    return not inspect.isclass(value) and hasattr(value, 'contribute_to_class')
69|
70|
71|class ModelBase(type):
72|    """Metaclass for all models."""
73|    def __new__(cls, name, bases, attrs, **kwargs):
74|        super_new = super().__new__
75|
76|        # Also ensure initialization is only performed for subclasses of Model
77|        # (excluding Model class itself).
78|        parents = [b for b in bases if isinstance(b, ModelBase)]
79|        if not parents:
80|            return super_new(cls, name, bases, attrs)
81|
82|        # Create the class.
83|        module = attrs.pop('__module__')
84|        new_attrs = {'__module__': module}
85|        classcell = attrs.pop('__classcell__', None)
86|        if classcell is not None:
87|            new_attrs['__classcell__'] = classcell
88|        attr_meta = attrs.pop('Meta', None)
89|        # Pass all attrs without a (Django-specific) contribute_to_class()
90|        # method to type.__new__() so that they're properly initialized
91|        # (i.e. __set_name__()).
92|        contributable_attrs = {}
93|        for obj_name, obj in list(attrs.items()):
94|            if _has_contribute_to_class(obj):
95|                contributable_attrs[obj_name] = obj
96|            else:
97|                new_attrs[obj_name] = obj
98|        new_class = super_new(cls, name, bases, new_attrs, **kwargs)
99|
100|        abstract = getattr(attr_meta, 'abstract', False)
101|        meta = attr_meta or getattr(new_class, 'Meta', None)
102|        base_meta = getattr(new_class, '_meta', None)
103|
104|        app_label = None
105|
106|        # Look for an application configuration to attach the model to.
107|        app_config = apps.get_containing_app_config(module)
108|
109|        if getattr(meta, 'app_label', None) is None:
110|            if app_config is None:
111|                if not abstract:
112|                    raise RuntimeError(
113|                        "Model class %s.%s doesn't declare an explicit "
114|                        "app_label and isn't in an application in "
115|                        "INSTALLED_APPS." % (module, name)
116|                    )
117|
118|            else:
119|                app_label = app_config.label
120|
121|        new_class.add_to_class('_meta', Options(meta, app_label))
122|        if not abstract:
123|            new_class.add_to_class(
124|                'DoesNotExist',
125|                subclass_exception(
126|                    'DoesNotExist',
127|                    tuple(
128|                        x.DoesNotExist for x in parents if hasattr(x, '_meta') and not x._meta.abstract
129|                    ) or (ObjectDoesNotExist,),
130|                    module,
131|                    attached_to=new_class))
132|            new_class.add_to_class(
133|                'MultipleObjectsReturned',
134|                subclass_exception(
135|                    'MultipleObjectsReturned',
136|                    tuple(
137|                        x.MultipleObjectsReturned for x in parents if hasattr(x, '_meta') and not x._meta.abstract
138|                    ) or (MultipleObjectsReturned,),
139|                    module,
140|                    attached_to=new_class))
141|            if base_meta and not base_meta.abstract:
142|                # Non-abstract child classes inherit some attributes from their
143|                # non-abstract parent (unless an ABC comes before it in the
144|                # method resolution order).
145|                if not hasattr(meta, 'ordering'):
146|                    new_class._meta.ordering = base_meta.ordering
147|                if not hasattr(meta, 'get_latest_by'):
148|                    new_class._meta.get_latest_by = base_meta.get_latest_by
149|
150|        is_proxy = new_class._meta.proxy
151|
152|        # If the model is a proxy, ensure that the base class
153|        # hasn't been swapped out.
154|        if is_proxy and base_meta and base_meta.swapped:
155|            raise TypeError("%s cannot proxy the swapped model '%s'." % (name, base_meta.swapped))
156|
157|        # Add remaining attributes (those with a contribute_to_class() method)
158|        # to the class.
159|        for obj_name, obj in contributable_attrs.items():
160|            new_class.add_to_class(obj_name, obj)
161|
162|        # All the fields of any type declared on this model
163|        new_fields = chain(
164|            new_class._meta.local_fields,
165|            new_class._meta.local_many_to_many,
166|            new_class._meta.private_fields
167|        )
168|        field_names = {f.name for f in new_fields}
169|
170|        # Basic setup for proxy models.
171|        if is_proxy:
172|            base = None
173|            for parent in [kls for kls in parents if hasattr(kls, '_meta')]:
174|                if parent._meta.abstract:
175|                    if parent._meta.fields:
176|                        raise TypeError(
177|                            "Abstract base class containing model fields not "
178|                            "permitted for proxy model '%s'." % name
179|                        )
180|                    else:
181|                        continue
182|                if base is None:
183|                    base = parent
184|                elif parent._meta.concrete_model is not base._meta.concrete_model:
185|                    raise TypeError("Proxy model '%s' has more than one non-abstract model base class." % name)
186|            if base is None:
187|                raise TypeError("Proxy model '%s' has no non-abstract model base class." % name)
188|            new_class._meta.setup_proxy(base)
189|            new_class._meta.concrete_model = base._meta.concrete_model
190|        else:
191|            new_class._meta.concrete_model = new_class
192|
193|        # Collect the parent links for multi-table inheritance.
194|        parent_links = {}
195|        for base in reversed([new_class] + parents):
196|            # Conceptually equivalent to `if base is Model`.
197|            if not hasattr(base, '_meta'):
198|                continue
199|            # Skip concrete parent classes.
200|            if base != new_class and not base._meta.abstract:
201|                continue
202|            # Locate OneToOneField instances.
203|            for field in base._meta.local_fields:
204|                if isinstance(field, OneToOneField):
205|                    related = resolve_relation(new_class, field.remote_field.model)
206|                    parent_links[make_model_tuple(related)] = field
207|
208|        # Track fields inherited from base models.
209|        inherited_attributes = set()
210|        # Do the appropriate setup for any model parents.
211|        for base in new_class.mro():
212|            if base not in parents or not hasattr(base, '_meta'):
213|                # Things without _meta aren't functional models, so they're
214|                # uninteresting parents.
215|                inherited_attributes.update(base.__dict__)
216|                continue
217|
218|            parent_fields = base._meta.local_fields + base._meta.local_many_to_many
219|            if not base._meta.abstract:
220|                # Check for clashes between locally declared fields and those
221|                # on the base classes.
222|                for field in parent_fields:
223|                    if field.name in field_names:
224|                        raise FieldError(
225|                            'Local field %r in class %r clashes with field of '
226|                            'the same name from base class %r.' % (
227|                                field.name,
228|                                name,
229|                                base.__name__,
230|                            )
231|                        )
232|                    else:
233|                        inherited_attributes.add(field.name)
234|
235|                # Concrete classes...
236|                base = base._meta.concrete_model
237|                base_key = make_model_tuple(base)
238|                if base_key in parent_links:
239|                    field = parent_links[base_key]
240|                elif not is_proxy:
241|                    attr_name = '%s_ptr' % base._meta.model_name
242|                    field = OneToOneField(
243|                        base,
244|                        on_delete=CASCADE,
245|                        name=attr_name,
246|                        auto_created=True,
247|                        parent_link=True,
248|                    )
249|
250|                    if attr_name in field_names:
251|                        raise FieldError(
252|                            "Auto-generated field '%s' in class %r for "
253|                            "parent_link to base class %r clashes with "
254|                            "declared field of the same name." % (
255|                                attr_name,
256|                                name,
257|                                base.__name__,
258|                            )
259|                        )
260|
261|                    # Only add the ptr field if it's not already present;
262|                    # e.g. migrations will already have it specified
263|                    if not hasattr(new_class, attr_name):
264|                        new_class.add_to_class(attr_name, field)
265|                else:
266|                    field = None
267|                new_class._meta.parents[base] = field
268|            else:
269|                base_parents = base._meta.parents.copy()
270|
271|                # Add fields from abstract base class if it wasn't overridden.
272|                for field in parent_fields:
273|                    if (field.name not in field_names and
274|                            field.name not in new_class.__dict__ and
275|                            field.name not in inherited_attributes):
276|                        new_field = copy.deepcopy(field)
277|                        new_class.add_to_class(field.name, new_field)
278|                        # Replace parent links defined on this base by the new
279|                        # field. It will be appropriately resolved if required.
280|                        if field.one_to_one:
281|                            for parent, parent_link in base_parents.items():
282|                                if field == parent_link:
283|                                    base_parents[parent] = new_field
284|
285|                # Pass any non-abstract parent classes onto child.
286|                new_class._meta.parents.update(base_parents)
287|
288|            # Inherit private fields (like GenericForeignKey) from the parent
289|            # class
290|            for field in base._meta.private_fields:
291|                if field.name in field_names:
292|                    if not base._meta.abstract:
293|                        raise FieldError(
294|                            'Local field %r in class %r clashes with field of '
295|                            'the same name from base class %r.' % (
296|                                field.name,
297|                                name,
298|                                base.__name__,
299|                            )
300|                        )
301|                else:
302|                    field = copy.deepcopy(field)
303|                    if not base._meta.abstract:
304|                        field.mti_inherited = True
305|                    new_class.add_to_class(field.name, field)
306|
307|        # Copy indexes so that index names are unique when models extend an
308|        # abstract model.
309|        new_class._meta.indexes = [copy.deepcopy(idx) for idx in new_class._meta.indexes]
310|
311|        if abstract:
312|            # Abstract base models can't be instantiated and don't appear in
313|            # the list of models for an app. We do the final setup for them a
314|            # little differently from normal models.
315|            attr_meta.abstract = False
316|            new_class.Meta = attr_meta
317|            return new_class
318|
319|        new_class._prepare()
320|        new_class._meta.apps.register_model(new_class._meta.app_label, new_class)
321|        return new_class
322|
323|    def add_to_class(cls, name, value):
324|        if _has_contribute_to_class(value):
325|            value.contribute_to_class(cls, name)
326|        else:
327|            setattr(cls, name, value)
328|
329|    def _prepare(cls):
330|        """Create some methods once self._meta has been populated."""
331|        opts = cls._meta
332|        opts._prepare(cls)
333|
334|        if opts.order_with_respect_to:
335|            cls.get_next_in_order = partialmethod(cls._get_next_or_previous_in_order, is_next=True)
336|            cls.get_previous_in_order = partialmethod(cls._get_next_or_previous_in_order, is_next=False)
337|
338|            # Defer creating accessors on the foreign class until it has been
339|            # created and registered. If remote_field is None, we're ordering
340|            # with respect to a GenericForeignKey and don't know what the
341|            # foreign class is - we'll add those accessors later in
342|            # contribute_to_class().
343|            if opts.order_with_respect_to.remote_field:
344|                wrt = opts.order_with_respect_to
345|                remote = wrt.remote_field.model
346|                lazy_related_operation(make_foreign_order_accessors, cls, remote)
347|
348|        # Give the class a docstring -- its definition.
349|        if cls.__doc__ is None:
350|            cls.__doc__ = "%s(%s)" % (cls.__name__, ", ".join(f.name for f in opts.fields))
351|
352|        get_absolute_url_override = settings.ABSOLUTE_URL_OVERRIDES.get(opts.label_lower)
353|        if get_absolute_url_override:
354|            setattr(cls, 'get_absolute_url', get_absolute_url_override)
355|
356|        if not opts.managers:
357|            if any(f.name == 'objects' for f in opts.fields):
358|                raise ValueError(
359|                    "Model %s must specify a custom Manager, because it has a "
360|                    "field named 'objects'." % cls.__name__
361|                )
362|            manager = Manager()
363|            manager.auto_created = True
364|            cls.add_to_class('objects', manager)
365|
366|        # Set the name of _meta.indexes. This can't be done in
367|        # Options.contribute_to_class() because fields haven't been added to
368|        # the model at that point.
369|        for index in cls._meta.indexes:
370|            if not index.name:
371|                index.set_name_with_model(cls)
372|
373|        class_prepared.send(sender=cls)
374|
375|    @property
376|    def _base_manager(cls):
377|        return cls._meta.base_manager
378|
379|    @property
380|    def _default_manager(cls):
381|        return cls._meta.default_manager
382|
383|
384|class ModelStateFieldsCacheDescriptor:
385|    def __get__(self, instance, cls=None):
386|        if instance is None:
387|            return self
388|        res = instance.fields_cache = {}
389|        return res
390|
391|
392|class ModelState:
393|    """Store model instance state."""
394|    db = None
395|    # If true, uniqueness validation checks will consider this a new, unsaved
396|    # object. Necessary for correct validation of new instances of objects with
397|    # explicit (non-auto) PKs. This impacts validation only; it has no effect
398|    # on the actual save.
399|    adding = True
400|    fields_cache = ModelStateFieldsCacheDescriptor()
401|
402|
403|class Model(metaclass=ModelBase):
404|
405|    def __init__(self, *args, **kwargs):
406|        # Alias some things as locals to avoid repeat global lookups
407|        cls = self.__class__
408|        opts = self._meta
409|        _setattr = setattr
410|        _DEFERRED = DEFERRED
411|
412|        pre_init.send(sender=cls, args=args, kwargs=kwargs)
413|
414|        # Set up the storage for instance state
415|        self._state = ModelState()
416|
417|        # There is a rather weird disparity here; if kwargs, it's set, then args
418|        # overrides it. It should be one or the other; don't duplicate the work
419|        # The reason for the kwargs check is that standard iterator passes in by
420|        # args, and instantiation for iteration is 33% faster.
421|        if len(args) > len(opts.concrete_fields):
422|            # Daft, but matches old exception sans the err msg.
423|            raise IndexError("Number of args exceeds number of fields")
424|
425|        if not kwargs:
426|            fields_iter = iter(opts.concrete_fields)
427|            # The ordering of the zip calls matter - zip throws StopIteration
428|            # when an iter throws it. So if the first iter throws it, the second
429|            # is *not* consumed. We rely on this, so don't change the order
430|            # without changing the logic.
431|            for val, field in zip(args, fields_iter):
432|                if val is _DEFERRED:
433|                    continue
434|                _setattr(self, field.attname, val)
435|        else:
436|            # Slower, kwargs-ready version.
437|            fields_iter = iter(opts.fields)
438|            for val, field in zip(args, fields_iter):
439|                if val is _DEFERRED:
440|                    continue
441|                _setattr(self, field.attname, val)
442|                kwargs.pop(field.name, None)
443|
444|        # Now we're left with the unprocessed fields that *must* come from
445|        # keywords, or default.
446|
447|        for field in fields_iter:
448|            is_related_object = False
449|            # Virtual field
450|            if field.attname not in kwargs and field.column is None:
451|                continue
452|            if kwargs:
453|                if isinstance(field.remote_field, ForeignObjectRel):
454|                    try:
455|                        # Assume object instance was passed in.
456|                        rel_obj = kwargs.pop(field.name)
457|                        is_related_object = True
458|                    except KeyError:
459|                        try:
460|                            # Object instance wasn't passed in -- must be an ID.
461|                            val = kwargs.pop(field.attname)
462|                        except KeyError:
463|                            val = field.get_default()
464|                else:
465|                    try:
466|                        val = kwargs.pop(field.attname)
467|                    except KeyError:
468|                        # This is done with an exception rather than the
469|                        # default argument on pop because we don't want
470|                        # get_default() to be evaluated, and then not used.
471|                        # Refs #12057.
472|                        val = field.get_default()
473|            else:
474|                val = field.get_default()
475|
476|            if is_related_object:
477|                # If we are passed a related instance, set it using the
478|                # field.name instead of field.attname (e.g. "user" instead of
479|                # "user_id") so that the object gets properly cached (and type
480|                # checked) by the RelatedObjectDescriptor.
481|                if rel_obj is not _DEFERRED:
482|                    _setattr(self, field.name, rel_obj)
483|            else:
484|                if val is not _DEFERRED:
485|                    _setattr(self, field.attname, val)
486|
487|        if kwargs:
488|            property_names = opts._property_names
489|            for prop in tuple(kwargs):
490|                try:
491|                    # Any remaining kwargs must correspond to properties or
492|                    # virtual fields.
493|                    if prop in property_names or opts.get_field(prop):
494|                        if kwargs[prop] is not _DEFERRED:
495|                            _setattr(self, prop, kwargs[prop])
496|                        del kwargs[prop]
497|                except (AttributeError, FieldDoesNotExist):
498|                    pass
499|            for kwarg in kwargs:
500|                raise TypeError("%s() got an unexpected keyword argument '%s'" % (cls.__name__, kwarg))
501|        super().__init__()
502|        post_init.send(sender=cls, instance=self)
503|
504|    @classmethod
505|    def from_db(cls, db, field_names, values):
506|        if len(values) != len(cls._meta.concrete_fields):
507|            values_iter = iter(values)
508|            values = [
509|                next(values_iter) if f.attname in field_names else DEFERRED
510|                for f in cls._meta.concrete_fields
511|            ]
512|        new = cls(*values)
513|        new._state.adding = False
514|        new._state.db = db
515|        return new
516|
517|    def __repr__(self):
518|        return '<%s: %s>' % (self.__class__.__name__, self)
519|
520|    def __str__(self):
521|        return '%s object (%s)' % (self.__class__.__name__, self.pk)
522|
523|    def __eq__(self, other):
524|        if not isinstance(other, Model):
525|            return NotImplemented
526|        if self._meta.concrete_model != other._meta.concrete_model:
527|            return False
528|        my_pk = self.pk
529|        if my_pk is None:
530|            return self is other
531|        return my_pk == other.pk
532|
533|    def __hash__(self):
534|        if self.pk is None:
535|            raise TypeError("Model instances without primary key value are unhashable")
536|        return hash(self.pk)
537|
538|    def __reduce__(self):
539|        data = self.__getstate__()
540|        data[DJANGO_VERSION_PICKLE_KEY] = get_version()
541|        class_id = self._meta.app_label, self._meta.object_name
542|        return model_unpickle, (class_id,), data
543|
544|    def __getstate__(self):
545|        """Hook to allow choosing the attributes to pickle."""
546|        return self.__dict__
547|
548|    def __setstate__(self, state):
549|        msg = None
550|        pickled_version = state.get(DJANGO_VERSION_PICKLE_KEY)
551|        if pickled_version:
552|            current_version = get_version()
553|            if current_version != pickled_version:
554|                msg = (
555|                    "Pickled model instance's Django version %s does not match "
556|                    "the current version %s." % (pickled_version, current_version)
557|                )
558|        else:
559|            msg = "Pickled model instance's Django version is not specified."
560|
561|        if msg:
562|            warnings.warn(msg, RuntimeWarning, stacklevel=2)
563|
564|        self.__dict__.update(state)
565|
566|    def _get_pk_val(self, meta=None):
567|        meta = meta or self._meta
568|        return getattr(self, meta.pk.attname)
569|
570|    def _set_pk_val(self, value):
571|        return setattr(self, self._meta.pk.attname, value)
572|
573|    pk = property(_get_pk_val, _set_pk_val)
574|
575|    def get_deferred_fields(self):
576|        """
577|        Return a set containing names of deferred fields for this instance.
578|        """
579|        return {
580|            f.attname for f in self._meta.concrete_fields
581|            if f.attname not in self.__dict__
582|        }
583|
584|    def refresh_from_db(self, using=None, fields=None):
585|        """
586|        Reload field values from the database.
587|
588|        By default, the reloading happens from the database this instance was
589|        loaded from, or by the read router if this instance wasn't loaded from
590|        any database. The using parameter will override the default.
591|
592|        Fields can be used to specify which fields to reload. The fields
593|        should be an iterable of field attnames. If fields is None, then
594|        all non-deferred fields are reloaded.
595|
596|        When accessing deferred fields of an instance, the deferred loading
597|        of the field will call this method.
598|        """
599|        if fields is None:
600|            self._prefetched_objects_cache = {}
601|        else:
602|            prefetched_objects_cache = getattr(self, '_prefetched_objects_cache', ())
603|            for field in fields:
604|                if field in prefetched_objects_cache:
605|                    del prefetched_objects_cache[field]
606|                    fields.remove(field)
607|            if not fields:
608|                return
609|            if any(LOOKUP_SEP in f for f in fields):
610|                raise ValueError(
611|                    'Found "%s" in fields argument. Relations and transforms '
612|                    'are not allowed in fields.' % LOOKUP_SEP)
613|
614|        hints = {'instance': self}
615|        db_instance_qs = self.__class__._base_manager.db_manager(using, hints=hints).filter(pk=self.pk)
616|
617|        # Use provided fields, if not set then reload all non-deferred fields.
618|        deferred_fields = self.get_deferred_fields()
619|        if fields is not None:
620|            fields = list(fields)
621|            db_instance_qs = db_instance_qs.only(*fields)
622|        elif deferred_fields:
623|            fields = [f.attname for f in self._meta.concrete_fields
624|                      if f.attname not in deferred_fields]
625|            db_instance_qs = db_instance_qs.only(*fields)
626|
627|        db_instance = db_instance_qs.get()
628|        non_loaded_fields = db_instance.get_deferred_fields()
629|        for field in self._meta.concrete_fields:
630|            if field.attname in non_loaded_fields:
631|                # This field wasn't refreshed - skip ahead.
632|                continue
633|            setattr(self, field.attname, getattr(db_instance, field.attname))
634|            # Clear cached foreign keys.
635|            if field.is_relation and field.is_cached(self):
636|                field.delete_cached_value(self)
637|
638|        # Clear cached relations.
639|        for field in self._meta.related_objects:
640|            if field.is_cached(self):
641|                field.delete_cached_value(self)
642|
643|        self._state.db = db_instance._state.db
644|
645|    def serializable_value(self, field_name):
646|        """
647|        Return the value of the field name for this instance. If the field is
648|        a foreign key, return the id value instead of the object. If there's
649|        no Field object with this name on the model, return the model
650|        attribute's value.
651|
652|        Used to serialize a field's value (in the serializer, or form output,
653|        for example). Normally, you would just access the attribute directly
654|        and not use this method.
655|        """
656|        try:
657|            field = self._meta.get_field(field_name)
658|        except FieldDoesNotExist:
659|            return getattr(self, field_name)
660|        return getattr(self, field.attname)
661|
662|    def save(self, force_insert=False, force_update=False, using=None,
663|             update_fields=None):
664|        """
665|        Save the current instance. Override this in a subclass if you want to
666|        control the saving process.
667|
668|        The 'force_insert' and 'force_update' parameters can be used to insist
669|        that the "save" must be an SQL insert or update (or equivalent for
670|        non-SQL backends), respectively. Normally, they should not be set.
671|        """
672|        # Ensure that a model instance without a PK hasn't been assigned to
673|        # a ForeignKey or OneToOneField on this model. If the field is
674|        # nullable, allowing the save() would result in silent data loss.
675|        for field in self._meta.concrete_fields:
676|            # If the related field isn't cached, then an instance hasn't
677|            # been assigned and there's no need to worry about this check.
678|            if field.is_relation and field.is_cached(self):
679|                obj = getattr(self, field.name, None)
680|                if not obj:
681|                    continue
682|                # A pk may have been assigned manually to a model instance not
683|                # saved to the database (or auto-generated in a case like
684|                # UUIDField), but we allow the save to proceed and rely on the
685|                # database to raise an IntegrityError if applicable. If
686|                # constraints aren't supported by the database, there's the
687|                # unavoidable risk of data corruption.
688|                if obj.pk is None:
689|                    # Remove the object from a related instance cache.
690|                    if not field.remote_field.multiple:
691|                        field.remote_field.delete_cached_value(obj)
692|                    raise ValueError(
693|                        "save() prohibited to prevent data loss due to "
694|                        "unsaved related object '%s'." % field.name
695|                    )
696|                elif getattr(self, field.attname) is None:
697|                    # Use pk from related object if it has been saved after
698|                    # an assignment.
699|                    setattr(self, field.attname, obj.pk)
700|                # If the relationship's pk/to_field was changed, clear the
701|                # cached relationship.
702|                if getattr(obj, field.target_field.attname) != getattr(self, field.attname):
703|                    field.delete_cached_value(self)
704|
705|        using = using or router.db_for_write(self.__class__, instance=self)
706|        if force_insert and (force_update or update_fields):
707|            raise ValueError("Cannot force both insert and updating in model saving.")
708|
709|        deferred_fields = self.get_deferred_fields()
710|        if update_fields is not None:
711|            # If update_fields is empty, skip the save. We do also check for
712|            # no-op saves later on for inheritance cases. This bailout is
713|            # still needed for skipping signal sending.
714|            if not update_fields:
715|                return
716|
717|            update_fields = frozenset(update_fields)
718|            field_names = set()
719|
720|            for field in self._meta.fields:
721|                if not field.primary_key:
722|                    field_names.add(field.name)
723|
724|                    if field.name != field.attname:
725|                        field_names.add(field.attname)
726|
727|            non_model_fields = update_fields.difference(field_names)
728|
729|            if non_model_fields:
730|                raise ValueError("The following fields do not exist in this "
731|                                 "model or are m2m fields: %s"
732|                                 % ', '.join(non_model_fields))
733|
734|        # If saving to the same database, and this model is deferred, then
735|        # automatically do an "update_fields" save on the loaded fields.
736|        elif not force_insert and deferred_fields and using == self._state.db:
737|            field_names = set()
738|            for field in self._meta.concrete_fields:
739|                if not field.primary_key and not hasattr(field, 'through'):
740|                    field_names.add(field.attname)
741|            loaded_fields = field_names.difference(deferred_fields)
742|            if loaded_fields:
743|                update_fields = frozenset(loaded_fields)
744|
745|        self.save_base(using=using, force_insert=force_insert,
746|                       force_update=force_update, update_fields=update_fields)
747|    save.alters_data = True
748|
749|    def save_base(self, raw=False, force_insert=False,
750|                  force_update=False, using=None, update_fields=None):
751|        """
752|        Handle the parts of saving which should be done only once per save,
753|        yet need to be done in raw saves, too. This includes some sanity
754|        checks and signal sending.
755|
756|        The 'raw' argument is telling save_base not to save any parent
757|        models and not to do any changes to the values before save. This
758|        is used by fixture loading.
759|        """
760|        using = using or router.db_for_write(self.__class__, instance=self)
761|        assert not (force_insert and (force_update or update_fields))
762|        assert update_fields is None or update_fields
763|        cls = origin = self.__class__
764|        # Skip proxies, but keep the origin as the proxy model.
765|        if cls._meta.proxy:
766|            cls = cls._meta.concrete_model
767|        meta = cls._meta
768|        if not meta.auto_created:
769|            pre_save.send(
770|                sender=origin, instance=self, raw=raw, using=using,
771|                update_fields=update_fields,
772|            )
773|        # A transaction isn't needed if one query is issued.
774|        if meta.parents:
775|            context_manager = transaction.atomic(using=using, savepoint=False)
776|        else:
777|            context_manager = transaction.mark_for_rollback_on_error(using=using)
778|        with context_manager:
779|            parent_inserted = False
780|            if not raw:
781|                parent_inserted = self._save_parents(cls, using, update_fields)
782|            updated = self._save_table(
783|                raw, cls, force_insert or parent_inserted,
784|                force_update, using, update_fields,
785|            )
786|        # Store the database on which the object was saved
787|        self._state.db = using
788|        # Once saved, this is no longer a to-be-added instance.
789|        self._state.adding = False
790|
791|        # Signal that the save is complete
792|        if not meta.auto_created:
793|            post_save.send(
794|                sender=origin, instance=self, created=(not updated),
795|                update_fields=update_fields, raw=raw, using=using,
796|            )
797|
798|    save_base.alters_data = True
799|
800|    def _save_parents(self, cls, using, update_fields):
801|        """Save all the parents of cls using values from self."""
802|        meta = cls._meta
803|        inserted = False
804|        for parent, field in meta.parents.items():
805|            # Make sure the link fields are synced between parent and self.
806|            if (field and getattr(self, parent._meta.pk.attname) is None and
807|                    getattr(self, field.attname) is not None):
808|                setattr(self, parent._meta.pk.attname, getattr(self, field.attname))
809|            parent_inserted = self._save_parents(cls=parent, using=using, update_fields=update_fields)
810|            updated = self._save_table(
811|                cls=parent, using=using, update_fields=update_fields,
812|                force_insert=parent_inserted,
813|            )
814|            if not updated:
815|                inserted = True
816|            # Set the parent's PK value to self.
817|            if field:
818|                setattr(self, field.attname, self._get_pk_val(parent._meta))
819|                # Since we didn't have an instance of the parent handy set
820|                # attname directly, bypassing the descriptor. Invalidate
821|                # the related object cache, in case it's been accidentally
822|                # populated. A fresh instance will be re-built from the
823|                # database if necessary.
824|                if field.is_cached(self):
825|                    field.delete_cached_value(self)
826|        return inserted
827|
828|    def _save_table(self, raw=False, cls=None, force_insert=False,
829|                    force_update=False, using=None, update_fields=None):
830|        """
831|        Do the heavy-lifting involved in saving. Update or insert the data
832|        for a single table.
833|        """
834|        meta = cls._meta
835|        non_pks = [f for f in meta.local_concrete_fields if not f.primary_key]
836|
837|        if update_fields:
838|            non_pks = [f for f in non_pks
839|                       if f.name in update_fields or f.attname in update_fields]
840|
841|        pk_val = self._get_pk_val(meta)
842|        if pk_val is None:
843|            pk_val = meta.pk.get_pk_value_on_save(self)
844|            setattr(self, meta.pk.attname, pk_val)
845|        pk_set = pk_val is not None
846|        if not pk_set and (force_update or update_fields):
847|            raise ValueError("Cannot force an update in save() with no primary key.")
848|        updated = False
849|        # Skip an UPDATE when adding an instance and primary key has a default.
850|        if (
851|            not force_insert and
852|            self._state.adding and
853|            self._meta.pk.default and
854|            self._meta.pk.default is not NOT_PROVIDED
855|        ):
856|            force_insert = True
857|        # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.
858|        if pk_set and not force_insert:
859|            base_qs = cls._base_manager.using(using)
860|            values = [(f, None, (getattr(self, f.attname) if raw else f.pre_save(self, False)))
861|                      for f in non_pks]
862|            forced_update = update_fields or force_update
863|            updated = self._do_update(base_qs, using, pk_val, values, update_fields,
864|                                      forced_update)
865|            if force_update and not updated:
866|                raise DatabaseError("Forced update did not affect any rows.")
867|            if update_fields and not updated:
868|                raise DatabaseError("Save with update_fields did not affect any rows.")
869|        if not updated:
870|            if meta.order_with_respect_to:
871|                # If this is a model with an order_with_respect_to
872|                # autopopulate the _order field
873|                field = meta.order_with_respect_to
874|                filter_args = field.get_filter_kwargs_for_object(self)
875|                self._order = cls._base_manager.using(using).filter(**filter_args).aggregate(
876|                    _order__max=Coalesce(
877|                        ExpressionWrapper(Max('_order') + Value(1), output_field=IntegerField()),
878|                        Value(0),
879|                    ),
880|                )['_order__max']
881|            fields = meta.local_concrete_fields
882|            if not pk_set:
883|                fields = [f for f in fields if f is not meta.auto_field]
884|
885|            returning_fields = meta.db_returning_fields
886|            results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
887|            for result, field in zip(results, returning_fields):
888|                setattr(self, field.attname, result)
889|        return updated
890|
891|    def _do_update(self, base_qs, using, pk_val, values, update_fields, forced_update):
892|        """
893|        Try to update the model. Return True if the model was updated (if an
894|        update query was done and a matching row was found in the DB).
895|        """
896|        filtered = base_qs.filter(pk=pk_val)
897|        if not values:
898|            # We can end up here when saving a model in inheritance chain where
899|            # update_fields doesn't target any field in current model. In that
900|            # case we just say the update succeeded. Another case ending up here
901|            # is a model with just PK - in that case check that the PK still
902|            # exists.
903|            return update_fields is not None or filtered.exists()
904|        if self._meta.select_on_save and not forced_update:
905|            return (
906|                filtered.exists() and
907|                # It may happen that the object is deleted from the DB right after
908|                # this check, causing the subsequent UPDATE to return zero matching
909|                # rows. The same result can occur in some rare cases when the
910|                # database returns zero despite the UPDATE being executed
911|                # successfully (a row is matched and updated). In order to
912|                # distinguish these two cases, the object's existence in the
913|                # database is again checked for if the UPDATE query returns 0.
914|                (filtered._update(values) > 0 or filtered.exists())
915|            )
916|        return filtered._update(values) > 0
917|
918|    def _do_insert(self, manager, using, fields, returning_fields, raw):
919|        """
920|        Do an INSERT. If returning_fields is defined then this method should
921|        return the newly created data for the model.
922|        """
923|        return manager._insert(
924|            [self], fields=fields, returning_fields=returning_fields,
925|            using=using, raw=raw,
926|        )
927|
928|    def delete(self, using=None, keep_parents=False):
929|        using = using or router.db_for_write(self.__class__, instance=self)
930|        assert self.pk is not None, (
931|            "%s object can't be deleted because its %s attribute is set to None." %
932|            (self._meta.object_name, self._meta.pk.attname)
933|        )
934|
935|        collector = Collector(using=using)
936|        collector.collect([self], keep_parents=keep_parents)
937|        return collector.delete()
938|
939|    delete.alters_data = True
940|
941|    def _get_FIELD_display(self, field):
942|        value = getattr(self, field.attname)
943|        # force_str() to coerce lazy strings.
944|        return force_str(dict(field.flatchoices).get(value, value), strings_only=True)
945|
946|    def _get_next_or_previous_by_FIELD(self, field, is_next, **kwargs):
947|        if not self.pk:
948|            raise ValueError("get_next/get_previous cannot be used on unsaved objects.")
949|        op = 'gt' if is_next else 'lt'
950|        order = '' if is_next else '-'
951|        param = getattr(self, field.attname)
952|        q = Q(**{'%s__%s' % (field.name, op): param})
953|        q = q | Q(**{field.name: param, 'pk__%s' % op: self.pk})
954|        qs = self.__class__._default_manager.using(self._state.db).filter(**kwargs).filter(q).order_by(
955|            '%s%s' % (order, field.name), '%spk' % order
956|        )
957|        try:
958|            return qs[0]
959|        except IndexError:
960|            raise self.DoesNotExist("%s matching query does not exist." % self.__class__._meta.object_name)
961|
962|    def _get_next_or_previous_in_order(self, is_next):
963|        cachename = "__%s_order_cache" % is_next
964|        if not hasattr(self, cachename):
965|            op = 'gt' if is_next else 'lt'
966|            order = '_order' if is_next else '-_order'
967|            order_field = self._meta.order_with_respect_to
968|            filter_args = order_field.get_filter_kwargs_for_object(self)
969|            obj = self.__class__._default_manager.filter(**filter_args).filter(**{
970|                '_order__%s' % op: self.__class__._default_manager.values('_order').filter(**{
971|                    self._meta.pk.name: self.pk
972|                })
973|            }).order_by(order)[:1].get()
974|            setattr(self, cachename, obj)
975|        return getattr(self, cachename)
976|
977|    def prepare_database_save(self, field):
978|        if self.pk is None:
979|            raise ValueError("Unsaved model instance %r cannot be used in an ORM query." % self)
980|        return getattr(self, field.remote_field.get_related_field().attname)
981|
982|    def clean(self):
983|        """
984|        Hook for doing any extra model-wide validation after clean() has been
985|        called on every field by self.clean_fields. Any ValidationError raised
986|        by this method will not be associated with a particular field; it will
987|        have a special-case association with the field defined by NON_FIELD_ERRORS.
988|        """
989|        pass
990|
991|    def validate_unique(self, exclude=None):
992|        """
993|        Check unique constraints on the model and raise ValidationError if any
994|        failed.
995|        """
996|        unique_checks, date_checks = self._get_unique_checks(exclude=exclude)
997|
998|        errors = self._perform_unique_checks(unique_checks)
999|        date_errors = self._perform_date_checks(date_checks)
1000|
(909 more lines below)


============================================================



ACTION:

THOUGHT: I found the key method `_get_FIELD_display` in `django/db/models/base.py` (lines 941-944). This is the method that's being used to generate the display values for choice fields.

The issue is that Django's model metaclass (`ModelBase`) is creating the `get_FOO_display` methods dynamically, and these methods are calling `_get_FIELD_display` directly, bypassing any overridden methods in the model class.

Let me search for where these dynamic methods are created:
CODE:
search_file("contribute_to_class", "/workspace/django__django__3.1/django/db/models/fields/__init__.py")

============================================================



OBSERVATION:

[Found 7 matches for "contribute_to_class" in /workspace/django__django__3.1/django/db/models/fields/__init__.py]
Line 417: * The name of the field on the model, if contribute_to_class() has
Line 749: def contribute_to_class(self, cls, name, private_only=False):
Line 1189: def contribute_to_class(self, cls, name, **kwargs):
Line 1190: super().contribute_to_class(cls, name, **kwargs)
Line 1339: # contribute_to_class is inherited from DateField, it registers
Line 2357: def contribute_to_class(self, cls, name, **kwargs):
Line 2362: super().contribute_to_class(cls, name, **kwargs)
[End of matches for "contribute_to_class" in /workspace/django__django__3.1/django/db/models/fields/__init__.py]


============================================================



ACTION:

THOUGHT: Let me check the `contribute_to_class` method around line 749 since that seems to be the main implementation:
CODE:
open_file('/workspace/django__django__3.1/django/db/models/fields/__init__.py', line_number=749, context_lines=50)

============================================================



OBSERVATION:

[File: /workspace/django__django__3.1/django/db/models/fields/__init__.py (2421 lines total)]
(648 more lines above)
649|    def db_type_parameters(self, connection):
650|        return DictWrapper(self.__dict__, connection.ops.quote_name, 'qn_')
651|
652|    def db_check(self, connection):
653|        """
654|        Return the database column check constraint for this field, for the
655|        provided connection. Works the same way as db_type() for the case that
656|        get_internal_type() does not map to a preexisting model field.
657|        """
658|        data = self.db_type_parameters(connection)
659|        try:
660|            return connection.data_type_check_constraints[self.get_internal_type()] % data
661|        except KeyError:
662|            return None
663|
664|    def db_type(self, connection):
665|        """
666|        Return the database column data type for this field, for the provided
667|        connection.
668|        """
669|        # The default implementation of this method looks at the
670|        # backend-specific data_types dictionary, looking up the field by its
671|        # "internal type".
672|        #
673|        # A Field class can implement the get_internal_type() method to specify
674|        # which *preexisting* Django Field class it's most similar to -- i.e.,
675|        # a custom field might be represented by a TEXT column type, which is
676|        # the same as the TextField Django field type, which means the custom
677|        # field's get_internal_type() returns 'TextField'.
678|        #
679|        # But the limitation of the get_internal_type() / data_types approach
680|        # is that it cannot handle database column types that aren't already
681|        # mapped to one of the built-in Django field types. In this case, you
682|        # can implement db_type() instead of get_internal_type() to specify
683|        # exactly which wacky database column type you want to use.
684|        data = self.db_type_parameters(connection)
685|        try:
686|            return connection.data_types[self.get_internal_type()] % data
687|        except KeyError:
688|            return None
689|
690|    def rel_db_type(self, connection):
691|        """
692|        Return the data type that a related field pointing to this field should
693|        use. For example, this method is called by ForeignKey and OneToOneField
694|        to determine its data type.
695|        """
696|        return self.db_type(connection)
697|
698|    def cast_db_type(self, connection):
699|        """Return the data type to use in the Cast() function."""
700|        db_type = connection.ops.cast_data_types.get(self.get_internal_type())
701|        if db_type:
702|            return db_type % self.db_type_parameters(connection)
703|        return self.db_type(connection)
704|
705|    def db_parameters(self, connection):
706|        """
707|        Extension of db_type(), providing a range of different return values
708|        (type, checks). This will look at db_type(), allowing custom model
709|        fields to override it.
710|        """
711|        type_string = self.db_type(connection)
712|        check_string = self.db_check(connection)
713|        return {
714|            "type": type_string,
715|            "check": check_string,
716|        }
717|
718|    def db_type_suffix(self, connection):
719|        return connection.data_types_suffix.get(self.get_internal_type())
720|
721|    def get_db_converters(self, connection):
722|        if hasattr(self, 'from_db_value'):
723|            return [self.from_db_value]
724|        return []
725|
726|    @property
727|    def unique(self):
728|        return self._unique or self.primary_key
729|
730|    @property
731|    def db_tablespace(self):
732|        return self._db_tablespace or settings.DEFAULT_INDEX_TABLESPACE
733|
734|    @property
735|    def db_returning(self):
736|        """
737|        Private API intended only to be used by Django itself. Currently only
738|        the PostgreSQL backend supports returning multiple fields on a model.
739|        """
740|        return False
741|
742|    def set_attributes_from_name(self, name):
743|        self.name = self.name or name
744|        self.attname, self.column = self.get_attname_column()
745|        self.concrete = self.column is not None
746|        if self.verbose_name is None and self.name:
747|            self.verbose_name = self.name.replace('_', ' ')
748|
749|    def contribute_to_class(self, cls, name, private_only=False):
750|        """
751|        Register the field with the model class it belongs to.
752|
753|        If private_only is True, create a separate instance of this field
754|        for every subclass of cls, even if cls is not an abstract model.
755|        """
756|        self.set_attributes_from_name(name)
757|        self.model = cls
758|        cls._meta.add_field(self, private=private_only)
759|        if self.column:
760|            # Don't override classmethods with the descriptor. This means that
761|            # if you have a classmethod and a field with the same name, then
762|            # such fields can't be deferred (we don't have a check for this).
763|            if not getattr(cls, self.attname, None):
764|                setattr(cls, self.attname, self.descriptor_class(self))
765|        if self.choices is not None:
766|            setattr(cls, 'get_%s_display' % self.name,
767|                    partialmethod(cls._get_FIELD_display, field=self))
768|
769|    def get_filter_kwargs_for_object(self, obj):
770|        """
771|        Return a dict that when passed as kwargs to self.model.filter(), would
772|        yield all instances having the same value for this field as obj has.
773|        """
774|        return {self.name: getattr(obj, self.attname)}
775|
776|    def get_attname(self):
777|        return self.name
778|
779|    def get_attname_column(self):
780|        attname = self.get_attname()
781|        column = self.db_column or attname
782|        return attname, column
783|
784|    def get_internal_type(self):
785|        return self.__class__.__name__
786|
787|    def pre_save(self, model_instance, add):
788|        """Return field's value just before saving."""
789|        return getattr(model_instance, self.attname)
790|
791|    def get_prep_value(self, value):
792|        """Perform preliminary non-db specific value checks and conversions."""
793|        if isinstance(value, Promise):
794|            value = value._proxy____cast()
795|        return value
796|
797|    def get_db_prep_value(self, value, connection, prepared=False):
798|        """
799|        Return field's value prepared for interacting with the database backend.
800|
801|        Used by the default implementations of get_db_prep_save().
802|        """
803|        if not prepared:
804|            value = self.get_prep_value(value)
805|        return value
806|
807|    def get_db_prep_save(self, value, connection):
808|        """Return field's value prepared for saving into a database."""
809|        return self.get_db_prep_value(value, connection=connection, prepared=False)
810|
811|    def has_default(self):
812|        """Return a boolean of whether this field has a default value."""
813|        return self.default is not NOT_PROVIDED
814|
815|    def get_default(self):
816|        """Return the default value for this field."""
817|        return self._get_default()
818|
819|    @cached_property
820|    def _get_default(self):
821|        if self.has_default():
822|            if callable(self.default):
823|                return self.default
824|            return lambda: self.default
825|
826|        if not self.empty_strings_allowed or self.null and not connection.features.interprets_empty_strings_as_nulls:
827|            return return_None
828|        return str  # return empty string
829|
830|    def get_choices(self, include_blank=True, blank_choice=BLANK_CHOICE_DASH, limit_choices_to=None, ordering=()):
831|        """
832|        Return choices with a default blank choices included, for use
833|        as <select> choices for this field.
834|        """
835|        if self.choices is not None:
836|            choices = list(self.choices)
837|            if include_blank:
838|                blank_defined = any(choice in ('', None) for choice, _ in self.flatchoices)
839|                if not blank_defined:
840|                    choices = blank_choice + choices
841|            return choices
842|        rel_model = self.remote_field.model
843|        limit_choices_to = limit_choices_to or self.get_limit_choices_to()
844|        choice_func = operator.attrgetter(
845|            self.remote_field.get_related_field().attname
846|            if hasattr(self.remote_field, 'get_related_field')
847|            else 'pk'
848|        )
849|        qs = rel_model._default_manager.complex_filter(limit_choices_to)
(1572 more lines below)


============================================================



OBSERVATION:

Planner Invoked

============================================================



OBSERVATION:

Planner Invoked

============================================================



OBSERVATION:

CONTENT: Please continue working on the task on whatever approach you think is suitable.
If you think you have modified the code in a way that fixes the issue and thoroughly tested the fix (including edge cases and regression), please run the following command: <execute_bash> exit </execute_bash>.
IMPORTANT: YOU SHOULD NEVER ASK FOR HUMAN HELP OR USE THE INTERNET TO SOLVE THIS TASK.


============================================================



ACTION:

THOUGHT: I'll proceed with implementing the fix based on the plan.

Let's edit the `contribute_to_class` method in django/db/models/fields/__init__.py:
CODE:
DIFF_STRING = '''<<<<<<< SEARCH
        if self.choices is not None:
            setattr(cls, 'get_%s_display' % self.name,
                    partialmethod(cls._get_FIELD_display, field=self))
=======
        if self.choices is not None:
            name_of_method = 'get_%s_display' % self.name
            if not hasattr(cls, name_of_method):
                setattr(cls, name_of_method, partialmethod(cls._get_FIELD_display, field=self))
>>>>>>> REPLACE'''
edit_file('/workspace/django__django__3.1/django/db/models/fields/__init__.py', diff_string=DIFF_STRING)

============================================================



OBSERVATION:

[File: /workspace/django__django__3.1/django/db/models/fields/__init__.py (2422 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -736,62 +736,63 @@
         """
         Private API intended only to be used by Django itself. Currently only
         the PostgreSQL backend supports returning multiple fields on a model.
         """
         return False
 
     def set_attributes_from_name(self, name):
         self.name = self.name or name
         self.attname, self.column = self.get_attname_column()
         self.concrete = self.column is not None
         if self.verbose_name is None and self.name:
             self.verbose_name = self.name.replace('_', ' ')
 
     def contribute_to_class(self, cls, name, private_only=False):
         """
         Register the field with the model class it belongs to.
 
         If private_only is True, create a separate instance of this field
         for every subclass of cls, even if cls is not an abstract model.
         """
         self.set_attributes_from_name(name)
         self.model = cls
         cls._meta.add_field(self, private=private_only)
         if self.column:
             # Don't override classmethods with the descriptor. This means that
             # if you have a classmethod and a field with the same name, then
             # such fields can't be deferred (we don't have a check for this).
             if not getattr(cls, self.attname, None):
                 setattr(cls, self.attname, self.descriptor_class(self))
         if self.choices is not None:
-            setattr(cls, 'get_%s_display' % self.name,
-                    partialmethod(cls._get_FIELD_display, field=self))
+            name_of_method = 'get_%s_display' % self.name
+            if not hasattr(cls, name_of_method):
+                setattr(cls, name_of_method, partialmethod(cls._get_FIELD_display, field=self))
 
     def get_filter_kwargs_for_object(self, obj):
         """
         Return a dict that when passed as kwargs to self.model.filter(), would
         yield all instances having the same value for this field as obj has.
         """
         return {self.name: getattr(obj, self.attname)}
 
     def get_attname(self):
         return self.name
 
     def get_attname_column(self):
         attname = self.get_attname()
         column = self.db_column or attname
         return attname, column
 
     def get_internal_type(self):
         return self.__class__.__name__
 
     def pre_save(self, model_instance, add):
         """Return field's value just before saving."""
         return getattr(model_instance, self.attname)
 
     def get_prep_value(self, value):
         """Perform preliminary non-db specific value checks and conversions."""
         if isinstance(value, Promise):
             value = value._proxy____cast()
         return value
 
     def get_db_prep_value(self, value, connection, prepared=False):
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The changes look correct. Now let's test the fix by running our reproduction script:
COMMAND:
python3 reproduce.py

============================================================



OBSERVATION:

Display value: something


============================================================



ACTION:

THOUGHT: Great! The fix works as expected. Let's verify edge cases and regression:

1. First edge case - when no override is provided:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings first
if not settings.configured:
    settings.configure(
        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
    )
    django.setup()

from django.db import models
from django.utils.translation import gettext_lazy as _

class FooBarNoOverride(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])

if __name__ == "__main__":
    # Create the model
    from django.core.management import call_command
    call_command('migrate', verbosity=0)
    
    # Test default behavior (should show 'foo')
    obj = FooBarNoOverride(foo_bar='1')
    print(f"Display value without override: {obj.get_foo_bar_display()}")
"""
create_file("test_no_override.py", CODE)

============================================================



OBSERVATION:

[File test_no_override.py created.]
[File: /workspace/test_no_override.py (27 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings first
7|if not settings.configured:
8|    settings.configure(
9|        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
10|        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
11|    )
12|    django.setup()
13|
14|from django.db import models
15|from django.utils.translation import gettext_lazy as _
16|
17|class FooBarNoOverride(models.Model):
18|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
19|
20|if __name__ == "__main__":
21|    # Create the model
22|    from django.core.management import call_command
23|    call_command('migrate', verbosity=0)
24|    
25|    # Test default behavior (should show 'foo')
26|    obj = FooBarNoOverride(foo_bar='1')
27|    print(f"Display value without override: {obj.get_foo_bar_display()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the test for the case without override:
COMMAND:
python3 test_no_override.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "test_no_override.py", line 17, in <module>
    class FooBarNoOverride(models.Model):
  File "/testbed/django/db/models/base.py", line 115, in __new__
    "INSTALLED_APPS." % (module, name)
RuntimeError: Model class __main__.FooBarNoOverride doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.


============================================================



ACTION:

THOUGHT: Let me fix the test by adding an app_label to the model:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings first
if not settings.configured:
    settings.configure(
        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
    )
    django.setup()

from django.db import models
from django.utils.translation import gettext_lazy as _

class FooBarNoOverride(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
    
    class Meta:
        app_label = 'django.contrib.contenttypes'

if __name__ == "__main__":
    # Create the model
    from django.core.management import call_command
    call_command('migrate', verbosity=0)
    
    # Test default behavior (should show 'foo')
    obj = FooBarNoOverride(foo_bar='1')
    print(f"Display value without override: {obj.get_foo_bar_display()}")
"""
create_file("test_no_override.py", CODE)

============================================================



OBSERVATION:

[File test_no_override.py already exists and File overwritten.]
[File: /workspace/test_no_override.py (30 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings first
7|if not settings.configured:
8|    settings.configure(
9|        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
10|        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
11|    )
12|    django.setup()
13|
14|from django.db import models
15|from django.utils.translation import gettext_lazy as _
16|
17|class FooBarNoOverride(models.Model):
18|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
19|    
20|    class Meta:
21|        app_label = 'django.contrib.contenttypes'
22|
23|if __name__ == "__main__":
24|    # Create the model
25|    from django.core.management import call_command
26|    call_command('migrate', verbosity=0)
27|    
28|    # Test default behavior (should show 'foo')
29|    obj = FooBarNoOverride(foo_bar='1')
30|    print(f"Display value without override: {obj.get_foo_bar_display()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the test for the case without override:
COMMAND:
python3 test_no_override.py

============================================================



OBSERVATION:

[Code executed successfully with no output]

============================================================



ACTION:

THOUGHT: The test didn't output anything because the migration didn't create our test model. Let's modify the test to not rely on migrations:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings first
if not settings.configured:
    settings.configure(
        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
    )
    django.setup()

from django.db import models
from django.utils.translation import gettext_lazy as _

class FooBarNoOverride(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
    
    class Meta:
        app_label = 'django.contrib.contenttypes'
        managed = False  # Don't create table

if __name__ == "__main__":
    # Test default behavior (should show 'foo')
    obj = FooBarNoOverride(foo_bar='1')
    print(f"Display value without override: {obj.get_foo_bar_display()}")
"""
create_file("test_no_override.py", CODE)

============================================================



OBSERVATION:

[File test_no_override.py already exists and File overwritten.]
[File: /workspace/test_no_override.py (27 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings first
7|if not settings.configured:
8|    settings.configure(
9|        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
10|        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
11|    )
12|    django.setup()
13|
14|from django.db import models
15|from django.utils.translation import gettext_lazy as _
16|
17|class FooBarNoOverride(models.Model):
18|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
19|    
20|    class Meta:
21|        app_label = 'django.contrib.contenttypes'
22|        managed = False  # Don't create table
23|
24|if __name__ == "__main__":
25|    # Test default behavior (should show 'foo')
26|    obj = FooBarNoOverride(foo_bar='1')
27|    print(f"Display value without override: {obj.get_foo_bar_display()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the test for the case without override:
COMMAND:
python3 test_no_override.py

============================================================



OBSERVATION:

Display value without override: 1


============================================================



ACTION:

THOUGHT: Let's test one more edge case - inheritance scenario where parent class has the display method:
CODE:
CODE = """
import os
import django
from django.conf import settings

# Configure settings first
if not settings.configured:
    settings.configure(
        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
    )
    django.setup()

from django.db import models
from django.utils.translation import gettext_lazy as _

class ParentModel(models.Model):
    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
    
    def get_foo_bar_display(self):
        return "parent_override"
    
    class Meta:
        app_label = 'django.contrib.contenttypes'
        managed = False

class ChildModel(ParentModel):
    class Meta:
        app_label = 'django.contrib.contenttypes'
        managed = False

if __name__ == "__main__":
    # Test inheritance behavior
    parent = ParentModel(foo_bar='1')
    child = ChildModel(foo_bar='1')
    print(f"Parent display value: {parent.get_foo_bar_display()}")
    print(f"Child display value: {child.get_foo_bar_display()}")  # Should inherit parent's override
"""
create_file("test_inheritance.py", CODE)

============================================================



OBSERVATION:

[File test_inheritance.py created.]
[File: /workspace/test_inheritance.py (37 lines total after edit)]
1|
2|import os
3|import django
4|from django.conf import settings
5|
6|# Configure settings first
7|if not settings.configured:
8|    settings.configure(
9|        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
10|        INSTALLED_APPS=['django.contrib.contenttypes', 'django.contrib.auth'],
11|    )
12|    django.setup()
13|
14|from django.db import models
15|from django.utils.translation import gettext_lazy as _
16|
17|class ParentModel(models.Model):
18|    foo_bar = models.CharField(_("foo"), choices=[(1, 'foo'), (2, 'bar')])
19|    
20|    def get_foo_bar_display(self):
21|        return "parent_override"
22|    
23|    class Meta:
24|        app_label = 'django.contrib.contenttypes'
25|        managed = False
26|
27|class ChildModel(ParentModel):
28|    class Meta:
29|        app_label = 'django.contrib.contenttypes'
30|        managed = False
31|
32|if __name__ == "__main__":
33|    # Test inheritance behavior
34|    parent = ParentModel(foo_bar='1')
35|    child = ChildModel(foo_bar='1')
36|    print(f"Parent display value: {parent.get_foo_bar_display()}")
37|    print(f"Child display value: {child.get_foo_bar_display()}")  # Should inherit parent's override
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the inheritance test:
COMMAND:
python3 test_inheritance.py

============================================================



OBSERVATION:

Parent display value: parent_override
Child display value: parent_override



============================================================

