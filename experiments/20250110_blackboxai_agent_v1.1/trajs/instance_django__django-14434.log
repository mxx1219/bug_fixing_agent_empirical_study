

TASK:


Statement created by _create_unique_sql makes references_column always false
Description
	
This is due to an instance of Table is passed as an argument to Columns when a string is expected.



============================================================



ACTION:

THOUGHT: I'll help you implement the necessary changes following the steps you outlined. Let's start:

1. First, let's explore the repository structure:
CODE:
get_repo_structure("/workspace/django__django__4.0")

============================================================



OBSERVATION:

/workspace/django__django__4.0:
AUTHORS
CONTRIBUTING.rst
Django.egg-info
Gruntfile.js
INSTALL
LICENSE
LICENSE.python
MANIFEST.in
README.rst
django
docs
extras
js_tests
package.json
pyproject.toml
scripts
setup.cfg
setup.py
tests
tox.ini

/workspace/django__django__4.0/Django.egg-info:
PKG-INFO
SOURCES.txt
dependency_links.txt
entry_points.txt
not-zip-safe
requires.txt
top_level.txt

/workspace/django__django__4.0/django:
__init__.py
__main__.py
__pycache__
apps
conf
contrib
core
db
dispatch
forms
http
middleware
shortcuts.py
template
templatetags
test
urls
utils
views

/workspace/django__django__4.0/django/__pycache__:
__init__.cpython-38.pyc

/workspace/django__django__4.0/django/apps:
__init__.py
config.py
registry.py

/workspace/django__django__4.0/django/conf:
__init__.py
app_template
global_settings.py
locale
project_template
urls

/workspace/django__django__4.0/django/conf/app_template:
__init__.py-tpl
admin.py-tpl
apps.py-tpl
migrations
models.py-tpl
tests.py-tpl
views.py-tpl

/workspace/django__django__4.0/django/conf/app_template/migrations:
__init__.py-tpl

/workspace/django__django__4.0/django/conf/locale:
__init__.py
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
de_CH
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_NI
es_PR
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
ig
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/conf/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ar:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ar_DZ:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/az:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/bg:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/bn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/bs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ca:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/cs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/cy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/da:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/de_CH:
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/el:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/en:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/en_AU:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/en_GB:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/eo:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_AR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_CO:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_MX:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_NI:
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_PR:
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/et:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/eu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fa:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ga:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/gd:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/gl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/he:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/id:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ig:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ig/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/is:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/it:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ja:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ka:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/km:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/kn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ko:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ky:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/lt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/lv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/mk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ml:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/mn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/nb:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/nl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/nn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pt_BR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ro:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ru:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sq:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sr_Latn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ta:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/te:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tg:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/th:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/uk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/uz:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/vi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/zh_Hans:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/zh_Hant:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/project_template:
manage.py-tpl
project_name

/workspace/django__django__4.0/django/conf/project_template/project_name:
__init__.py-tpl
asgi.py-tpl
settings.py-tpl
urls.py-tpl
wsgi.py-tpl

/workspace/django__django__4.0/django/conf/urls:
__init__.py
i18n.py
static.py

/workspace/django__django__4.0/django/contrib:
__init__.py
admin
admindocs
auth
contenttypes
flatpages
gis
humanize
messages
postgres
redirects
sessions
sitemaps
sites
staticfiles
syndication

/workspace/django__django__4.0/django/contrib/admin:
__init__.py
actions.py
apps.py
checks.py
decorators.py
exceptions.py
filters.py
forms.py
helpers.py
locale
migrations
models.py
options.py
sites.py
static
templates
templatetags
tests.py
utils.py
views
widgets.py

/workspace/django__django__4.0/django/contrib/admin/locale:
af
am
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/admin/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/af/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/am:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/am/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admin/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ar/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ast/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/az/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/be/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/bg/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/bn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/br/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/bs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ca/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/cs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/cy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/da/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/de/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/dsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/el/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/en/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/en_AU/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/en_GB/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/eo/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_AR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_CO/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_MX/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_VE/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/et/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/eu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ga/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/gd/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/gl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/he/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ia/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/id/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/io/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/is/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/it/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ja/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ka/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/kab/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/kk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/km/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/kn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ko/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ky/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/lb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/lt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/lv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/mk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ml/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/mn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/mr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/my/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/nb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ne/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/nl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/nn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/os/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pt_BR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ro/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ru/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sq/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sw/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ta/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/te/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/tg/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/th/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/tr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/tt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/udm/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/uk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ur/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/uz/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/vi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/migrations:
0001_initial.py
0002_logentry_remove_auto_add.py
0003_logentry_add_action_flag_choices.py
__init__.py

/workspace/django__django__4.0/django/contrib/admin/static:
admin

/workspace/django__django__4.0/django/contrib/admin/static/admin:
css
fonts
img
js

/workspace/django__django__4.0/django/contrib/admin/static/admin/css:
autocomplete.css
base.css
changelists.css
dashboard.css
fonts.css
forms.css
login.css
nav_sidebar.css
responsive.css
responsive_rtl.css
rtl.css
vendor
widgets.css

/workspace/django__django__4.0/django/contrib/admin/static/admin/css/vendor:
select2

/workspace/django__django__4.0/django/contrib/admin/static/admin/css/vendor/select2:
LICENSE-SELECT2.md
select2.css
select2.min.css

/workspace/django__django__4.0/django/contrib/admin/static/admin/fonts:
LICENSE.txt
README.txt
Roboto-Bold-webfont.woff
Roboto-Light-webfont.woff
Roboto-Regular-webfont.woff

/workspace/django__django__4.0/django/contrib/admin/static/admin/img:
LICENSE
README.txt
calendar-icons.svg
gis
icon-addlink.svg
icon-alert.svg
icon-calendar.svg
icon-changelink.svg
icon-clock.svg
icon-deletelink.svg
icon-no.svg
icon-unknown-alt.svg
icon-unknown.svg
icon-viewlink.svg
icon-yes.svg
inline-delete.svg
search.svg
selector-icons.svg
sorting-icons.svg
tooltag-add.svg
tooltag-arrowright.svg

/workspace/django__django__4.0/django/contrib/admin/static/admin/img/gis:
move_vertex_off.svg
move_vertex_on.svg

/workspace/django__django__4.0/django/contrib/admin/static/admin/js:
SelectBox.js
SelectFilter2.js
actions.js
admin
autocomplete.js
calendar.js
cancel.js
change_form.js
collapse.js
core.js
inlines.js
jquery.init.js
nav_sidebar.js
popup_response.js
prepopulate.js
prepopulate_init.js
urlify.js
vendor

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/admin:
DateTimeShortcuts.js
RelatedObjectLookups.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor:
jquery
select2
xregexp

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/jquery:
LICENSE.txt
jquery.js
jquery.min.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/select2:
LICENSE.md
i18n
select2.full.js
select2.full.min.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/select2/i18n:
af.js
ar.js
az.js
bg.js
bn.js
bs.js
ca.js
cs.js
da.js
de.js
dsb.js
el.js
en.js
es.js
et.js
eu.js
fa.js
fi.js
fr.js
gl.js
he.js
hi.js
hr.js
hsb.js
hu.js
hy.js
id.js
is.js
it.js
ja.js
ka.js
km.js
ko.js
lt.js
lv.js
mk.js
ms.js
nb.js
ne.js
nl.js
pl.js
ps.js
pt-BR.js
pt.js
ro.js
ru.js
sk.js
sl.js
sq.js
sr-Cyrl.js
sr.js
sv.js
th.js
tk.js
tr.js
uk.js
vi.js
zh-CN.js
zh-TW.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/xregexp:
LICENSE.txt
xregexp.js
xregexp.min.js

/workspace/django__django__4.0/django/contrib/admin/templates:
admin
registration

/workspace/django__django__4.0/django/contrib/admin/templates/admin:
404.html
500.html
actions.html
app_index.html
app_list.html
auth
base.html
base_site.html
change_form.html
change_form_object_tools.html
change_list.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
delete_confirmation.html
delete_selected_confirmation.html
edit_inline
filter.html
includes
index.html
invalid_setup.html
login.html
nav_sidebar.html
object_history.html
pagination.html
popup_response.html
prepopulated_fields_js.html
search_form.html
submit_line.html
widgets

/workspace/django__django__4.0/django/contrib/admin/templates/admin/auth:
user

/workspace/django__django__4.0/django/contrib/admin/templates/admin/auth/user:
add_form.html
change_password.html

/workspace/django__django__4.0/django/contrib/admin/templates/admin/edit_inline:
stacked.html
tabular.html

/workspace/django__django__4.0/django/contrib/admin/templates/admin/includes:
fieldset.html
object_delete_summary.html

/workspace/django__django__4.0/django/contrib/admin/templates/admin/widgets:
clearable_file_input.html
foreign_key_raw_id.html
many_to_many_raw_id.html
radio.html
related_widget_wrapper.html
split_datetime.html
url.html

/workspace/django__django__4.0/django/contrib/admin/templates/registration:
logged_out.html
password_change_done.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html

/workspace/django__django__4.0/django/contrib/admin/templatetags:
__init__.py
admin_list.py
admin_modify.py
admin_urls.py
base.py
log.py

/workspace/django__django__4.0/django/contrib/admin/views:
__init__.py
autocomplete.py
decorators.py
main.py

/workspace/django__django__4.0/django/contrib/admindocs:
__init__.py
apps.py
locale
middleware.py
templates
urls.py
utils.py
views.py

/workspace/django__django__4.0/django/contrib/admindocs/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/admindocs/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/templates:
admin_doc

/workspace/django__django__4.0/django/contrib/admindocs/templates/admin_doc:
bookmarklets.html
index.html
missing_docutils.html
model_detail.html
model_index.html
template_detail.html
template_filter_index.html
template_tag_index.html
view_detail.html
view_index.html

/workspace/django__django__4.0/django/contrib/auth:
__init__.py
admin.py
apps.py
backends.py
base_user.py
checks.py
common-passwords.txt.gz
context_processors.py
decorators.py
forms.py
handlers
hashers.py
locale
management
middleware.py
migrations
mixins.py
models.py
password_validation.py
signals.py
templates
tokens.py
urls.py
validators.py
views.py

/workspace/django__django__4.0/django/contrib/auth/handlers:
__init__.py
modwsgi.py

/workspace/django__django__4.0/django/contrib/auth/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/auth/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/auth/management/commands:
__init__.py
changepassword.py
createsuperuser.py

/workspace/django__django__4.0/django/contrib/auth/migrations:
0001_initial.py
0002_alter_permission_name_max_length.py
0003_alter_user_email_max_length.py
0004_alter_user_username_opts.py
0005_alter_user_last_login_null.py
0006_require_contenttypes_0002.py
0007_alter_validators_add_error_messages.py
0008_alter_user_username_max_length.py
0009_alter_user_last_name_max_length.py
0010_alter_group_name_max_length.py
0011_update_proxy_permissions.py
0012_alter_user_first_name_max_length.py
__init__.py

/workspace/django__django__4.0/django/contrib/auth/templates:
auth
registration

/workspace/django__django__4.0/django/contrib/auth/templates/auth:
widgets

/workspace/django__django__4.0/django/contrib/auth/templates/auth/widgets:
read_only_password_hash.html

/workspace/django__django__4.0/django/contrib/auth/templates/registration:
password_reset_subject.txt

/workspace/django__django__4.0/django/contrib/contenttypes:
__init__.py
admin.py
apps.py
checks.py
fields.py
forms.py
locale
management
migrations
models.py
views.py

/workspace/django__django__4.0/django/contrib/contenttypes/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/contenttypes/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/contenttypes/management/commands:
__init__.py
remove_stale_contenttypes.py

/workspace/django__django__4.0/django/contrib/contenttypes/migrations:
0001_initial.py
0002_remove_content_type_name.py
__init__.py

/workspace/django__django__4.0/django/contrib/flatpages:
__init__.py
admin.py
apps.py
forms.py
locale
middleware.py
migrations
models.py
sitemaps.py
templatetags
urls.py
views.py

/workspace/django__django__4.0/django/contrib/flatpages/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/flatpages/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/django/contrib/flatpages/templatetags:
__init__.py
flatpages.py

/workspace/django__django__4.0/django/contrib/gis:
__init__.py
admin
apps.py
db
feeds.py
forms
gdal
geoip2
geometry.py
geos
locale
management
measure.py
ptr.py
serializers
shortcuts.py
sitemaps
static
templates
utils
views.py

/workspace/django__django__4.0/django/contrib/gis/admin:
__init__.py
options.py
widgets.py

/workspace/django__django__4.0/django/contrib/gis/db:
__init__.py
backends
models

/workspace/django__django__4.0/django/contrib/gis/db/backends:
__init__.py
base
mysql
oracle
postgis
spatialite
utils.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/base:
__init__.py
adapter.py
features.py
models.py
operations.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/mysql:
__init__.py
base.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/oracle:
__init__.py
adapter.py
base.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/postgis:
__init__.py
adapter.py
base.py
const.py
features.py
introspection.py
models.py
operations.py
pgraster.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/spatialite:
__init__.py
adapter.py
base.py
client.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/models:
__init__.py
aggregates.py
fields.py
functions.py
lookups.py
proxy.py
sql

/workspace/django__django__4.0/django/contrib/gis/db/models/sql:
__init__.py
conversion.py

/workspace/django__django__4.0/django/contrib/gis/forms:
__init__.py
fields.py
widgets.py

/workspace/django__django__4.0/django/contrib/gis/gdal:
LICENSE
__init__.py
base.py
datasource.py
driver.py
envelope.py
error.py
feature.py
field.py
geometries.py
geomtype.py
layer.py
libgdal.py
prototypes
raster
srs.py

/workspace/django__django__4.0/django/contrib/gis/gdal/prototypes:
__init__.py
ds.py
errcheck.py
generation.py
geom.py
raster.py
srs.py

/workspace/django__django__4.0/django/contrib/gis/gdal/raster:
__init__.py
band.py
base.py
const.py
source.py

/workspace/django__django__4.0/django/contrib/gis/geoip2:
__init__.py
base.py
resources.py

/workspace/django__django__4.0/django/contrib/gis/geos:
LICENSE
__init__.py
base.py
collections.py
coordseq.py
error.py
factory.py
geometry.py
io.py
libgeos.py
linestring.py
mutable_list.py
point.py
polygon.py
prepared.py
prototypes

/workspace/django__django__4.0/django/contrib/gis/geos/prototypes:
__init__.py
coordseq.py
errcheck.py
geom.py
io.py
misc.py
predicates.py
prepared.py
threadsafe.py
topology.py

/workspace/django__django__4.0/django/contrib/gis/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/gis/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/gis/management/commands:
__init__.py
inspectdb.py
ogrinspect.py

/workspace/django__django__4.0/django/contrib/gis/serializers:
__init__.py
geojson.py

/workspace/django__django__4.0/django/contrib/gis/sitemaps:
__init__.py
kml.py
views.py

/workspace/django__django__4.0/django/contrib/gis/static:
gis

/workspace/django__django__4.0/django/contrib/gis/static/gis:
css
img
js

/workspace/django__django__4.0/django/contrib/gis/static/gis/css:
ol3.css

/workspace/django__django__4.0/django/contrib/gis/static/gis/img:
draw_line_off.svg
draw_line_on.svg
draw_point_off.svg
draw_point_on.svg
draw_polygon_off.svg
draw_polygon_on.svg

/workspace/django__django__4.0/django/contrib/gis/static/gis/js:
OLMapWidget.js

/workspace/django__django__4.0/django/contrib/gis/templates:
gis

/workspace/django__django__4.0/django/contrib/gis/templates/gis:
admin
kml
openlayers-osm.html
openlayers.html

/workspace/django__django__4.0/django/contrib/gis/templates/gis/admin:
openlayers.html
openlayers.js
osm.html
osm.js

/workspace/django__django__4.0/django/contrib/gis/templates/gis/kml:
base.kml
placemarks.kml

/workspace/django__django__4.0/django/contrib/gis/utils:
__init__.py
layermapping.py
ogrinfo.py
ogrinspect.py
srs.py

/workspace/django__django__4.0/django/contrib/humanize:
__init__.py
apps.py
locale
templatetags

/workspace/django__django__4.0/django/contrib/humanize/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
ms
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/humanize/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ms:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ms/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/templatetags:
__init__.py
humanize.py

/workspace/django__django__4.0/django/contrib/messages:
__init__.py
api.py
apps.py
constants.py
context_processors.py
middleware.py
storage
utils.py
views.py

/workspace/django__django__4.0/django/contrib/messages/storage:
__init__.py
base.py
cookie.py
fallback.py
session.py

/workspace/django__django__4.0/django/contrib/postgres:
__init__.py
aggregates
apps.py
constraints.py
fields
forms
functions.py
indexes.py
jinja2
locale
lookups.py
operations.py
search.py
serializers.py
signals.py
templates
utils.py
validators.py

/workspace/django__django__4.0/django/contrib/postgres/aggregates:
__init__.py
general.py
mixins.py
statistics.py

/workspace/django__django__4.0/django/contrib/postgres/fields:
__init__.py
array.py
citext.py
hstore.py
jsonb.py
ranges.py
utils.py

/workspace/django__django__4.0/django/contrib/postgres/forms:
__init__.py
array.py
hstore.py
ranges.py

/workspace/django__django__4.0/django/contrib/postgres/jinja2:
postgres

/workspace/django__django__4.0/django/contrib/postgres/jinja2/postgres:
widgets

/workspace/django__django__4.0/django/contrib/postgres/jinja2/postgres/widgets:
split_array.html

/workspace/django__django__4.0/django/contrib/postgres/locale:
af
ar
ar_DZ
az
be
bg
ca
cs
da
de
dsb
el
en
eo
es
es_AR
es_CO
es_MX
et
eu
fa
fi
fr
gd
gl
he
hr
hsb
hu
hy
ia
id
is
it
ja
ka
kk
ko
ky
lt
lv
mk
ml
mn
nb
ne
nl
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
tg
tk
tr
uk
uz
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/postgres/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/templates:
postgres

/workspace/django__django__4.0/django/contrib/postgres/templates/postgres:
widgets

/workspace/django__django__4.0/django/contrib/postgres/templates/postgres/widgets:
split_array.html

/workspace/django__django__4.0/django/contrib/redirects:
__init__.py
admin.py
apps.py
locale
middleware.py
migrations
models.py

/workspace/django__django__4.0/django/contrib/redirects/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/redirects/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/migrations:
0001_initial.py
0002_alter_redirect_new_path_help_text.py
__init__.py

/workspace/django__django__4.0/django/contrib/sessions:
__init__.py
apps.py
backends
base_session.py
exceptions.py
locale
management
middleware.py
migrations
models.py
serializers.py

/workspace/django__django__4.0/django/contrib/sessions/backends:
__init__.py
base.py
cache.py
cached_db.py
db.py
file.py
signed_cookies.py

/workspace/django__django__4.0/django/contrib/sessions/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/sessions/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/sessions/management/commands:
__init__.py
clearsessions.py

/workspace/django__django__4.0/django/contrib/sessions/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/django/contrib/sitemaps:
__init__.py
apps.py
management
templates
views.py

/workspace/django__django__4.0/django/contrib/sitemaps/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/sitemaps/management/commands:
__init__.py
ping_google.py

/workspace/django__django__4.0/django/contrib/sitemaps/templates:
sitemap.xml
sitemap_index.xml

/workspace/django__django__4.0/django/contrib/sites:
__init__.py
admin.py
apps.py
checks.py
locale
management.py
managers.py
middleware.py
migrations
models.py
requests.py
shortcuts.py

/workspace/django__django__4.0/django/contrib/sites/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/sites/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/migrations:
0001_initial.py
0002_alter_domain_unique.py
__init__.py

/workspace/django__django__4.0/django/contrib/staticfiles:
__init__.py
apps.py
checks.py
finders.py
handlers.py
management
storage.py
testing.py
urls.py
utils.py
views.py

/workspace/django__django__4.0/django/contrib/staticfiles/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/staticfiles/management/commands:
__init__.py
collectstatic.py
findstatic.py
runserver.py

/workspace/django__django__4.0/django/contrib/syndication:
__init__.py
apps.py
views.py

/workspace/django__django__4.0/django/core:
__init__.py
asgi.py
cache
checks
exceptions.py
files
handlers
mail
management
paginator.py
serializers
servers
signals.py
signing.py
validators.py
wsgi.py

/workspace/django__django__4.0/django/core/cache:
__init__.py
backends
utils.py

/workspace/django__django__4.0/django/core/cache/backends:
__init__.py
base.py
db.py
dummy.py
filebased.py
locmem.py
memcached.py

/workspace/django__django__4.0/django/core/checks:
__init__.py
async_checks.py
caches.py
compatibility
database.py
files.py
messages.py
model_checks.py
registry.py
security
templates.py
translation.py
urls.py

/workspace/django__django__4.0/django/core/checks/compatibility:
__init__.py
django_4_0.py

/workspace/django__django__4.0/django/core/checks/security:
__init__.py
base.py
csrf.py
sessions.py

/workspace/django__django__4.0/django/core/files:
__init__.py
base.py
images.py
locks.py
move.py
storage.py
temp.py
uploadedfile.py
uploadhandler.py
utils.py

/workspace/django__django__4.0/django/core/handlers:
__init__.py
asgi.py
base.py
exception.py
wsgi.py

/workspace/django__django__4.0/django/core/mail:
__init__.py
backends
message.py
utils.py

/workspace/django__django__4.0/django/core/mail/backends:
__init__.py
base.py
console.py
dummy.py
filebased.py
locmem.py
smtp.py

/workspace/django__django__4.0/django/core/management:
__init__.py
base.py
color.py
commands
sql.py
templates.py
utils.py

/workspace/django__django__4.0/django/core/management/commands:
__init__.py
check.py
compilemessages.py
createcachetable.py
dbshell.py
diffsettings.py
dumpdata.py
flush.py
inspectdb.py
loaddata.py
makemessages.py
makemigrations.py
migrate.py
runserver.py
sendtestemail.py
shell.py
showmigrations.py
sqlflush.py
sqlmigrate.py
sqlsequencereset.py
squashmigrations.py
startapp.py
startproject.py
test.py
testserver.py

/workspace/django__django__4.0/django/core/serializers:
__init__.py
base.py
json.py
jsonl.py
python.py
pyyaml.py
xml_serializer.py

/workspace/django__django__4.0/django/core/servers:
__init__.py
basehttp.py

/workspace/django__django__4.0/django/db:
__init__.py
backends
migrations
models
transaction.py
utils.py

/workspace/django__django__4.0/django/db/backends:
__init__.py
base
ddl_references.py
dummy
mysql
oracle
postgresql
signals.py
sqlite3
utils.py

/workspace/django__django__4.0/django/db/backends/base:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__4.0/django/db/backends/dummy:
__init__.py
base.py
features.py

/workspace/django__django__4.0/django/db/backends/mysql:
__init__.py
base.py
client.py
compiler.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__4.0/django/db/backends/oracle:
__init__.py
base.py
client.py
creation.py
features.py
functions.py
introspection.py
operations.py
schema.py
utils.py
validation.py

/workspace/django__django__4.0/django/db/backends/postgresql:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__4.0/django/db/backends/sqlite3:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__4.0/django/db/migrations:
__init__.py
autodetector.py
exceptions.py
executor.py
graph.py
loader.py
migration.py
operations
optimizer.py
questioner.py
recorder.py
serializer.py
state.py
utils.py
writer.py

/workspace/django__django__4.0/django/db/migrations/operations:
__init__.py
base.py
fields.py
models.py
special.py
utils.py

/workspace/django__django__4.0/django/db/models:
__init__.py
aggregates.py
base.py
constants.py
constraints.py
deletion.py
enums.py
expressions.py
fields
functions
indexes.py
lookups.py
manager.py
options.py
query.py
query_utils.py
signals.py
sql
utils.py

/workspace/django__django__4.0/django/db/models/fields:
__init__.py
files.py
json.py
mixins.py
proxy.py
related.py
related_descriptors.py
related_lookups.py
reverse_related.py

/workspace/django__django__4.0/django/db/models/functions:
__init__.py
comparison.py
datetime.py
math.py
mixins.py
text.py
window.py

/workspace/django__django__4.0/django/db/models/sql:
__init__.py
compiler.py
constants.py
datastructures.py
query.py
subqueries.py
where.py

/workspace/django__django__4.0/django/dispatch:
__init__.py
dispatcher.py
license.txt

/workspace/django__django__4.0/django/forms:
__init__.py
boundfield.py
fields.py
forms.py
formsets.py
jinja2
models.py
renderers.py
templates
utils.py
widgets.py

/workspace/django__django__4.0/django/forms/jinja2:
django

/workspace/django__django__4.0/django/forms/jinja2/django:
forms

/workspace/django__django__4.0/django/forms/jinja2/django/forms:
widgets

/workspace/django__django__4.0/django/forms/jinja2/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__4.0/django/forms/templates:
django

/workspace/django__django__4.0/django/forms/templates/django:
forms

/workspace/django__django__4.0/django/forms/templates/django/forms:
widgets

/workspace/django__django__4.0/django/forms/templates/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__4.0/django/http:
__init__.py
cookie.py
multipartparser.py
request.py
response.py

/workspace/django__django__4.0/django/middleware:
__init__.py
cache.py
clickjacking.py
common.py
csrf.py
gzip.py
http.py
locale.py
security.py

/workspace/django__django__4.0/django/template:
__init__.py
autoreload.py
backends
base.py
context.py
context_processors.py
defaultfilters.py
defaulttags.py
engine.py
exceptions.py
library.py
loader.py
loader_tags.py
loaders
response.py
smartif.py
utils.py

/workspace/django__django__4.0/django/template/backends:
__init__.py
base.py
django.py
dummy.py
jinja2.py
utils.py

/workspace/django__django__4.0/django/template/loaders:
__init__.py
app_directories.py
base.py
cached.py
filesystem.py
locmem.py

/workspace/django__django__4.0/django/templatetags:
__init__.py
cache.py
i18n.py
l10n.py
static.py
tz.py

/workspace/django__django__4.0/django/test:
__init__.py
client.py
html.py
runner.py
selenium.py
signals.py
testcases.py
utils.py

/workspace/django__django__4.0/django/urls:
__init__.py
base.py
conf.py
converters.py
exceptions.py
resolvers.py
utils.py

/workspace/django__django__4.0/django/utils:
__init__.py
__pycache__
_os.py
archive.py
asyncio.py
autoreload.py
baseconv.py
cache.py
connection.py
crypto.py
datastructures.py
dateformat.py
dateparse.py
dates.py
datetime_safe.py
deconstruct.py
decorators.py
deprecation.py
duration.py
encoding.py
feedgenerator.py
formats.py
functional.py
hashable.py
html.py
http.py
inspect.py
ipv6.py
itercompat.py
jslex.py
log.py
lorem_ipsum.py
module_loading.py
numberformat.py
regex_helper.py
safestring.py
termcolors.py
text.py
timesince.py
timezone.py
topological_sort.py
translation
tree.py
version.py
xmlutils.py

/workspace/django__django__4.0/django/utils/__pycache__:
__init__.cpython-38.pyc
functional.cpython-38.pyc
regex_helper.cpython-38.pyc
version.cpython-38.pyc

/workspace/django__django__4.0/django/utils/translation:
__init__.py
reloader.py
template.py
trans_null.py
trans_real.py

/workspace/django__django__4.0/django/views:
__init__.py
csrf.py
debug.py
decorators
defaults.py
generic
i18n.py
static.py
templates

/workspace/django__django__4.0/django/views/decorators:
__init__.py
cache.py
clickjacking.py
common.py
csrf.py
debug.py
gzip.py
http.py
vary.py

/workspace/django__django__4.0/django/views/generic:
__init__.py
base.py
dates.py
detail.py
edit.py
list.py

/workspace/django__django__4.0/django/views/templates:
default_urlconf.html
technical_404.html
technical_500.html
technical_500.txt

/workspace/django__django__4.0/docs:
Makefile
README.rst
_ext
_theme
conf.py
contents.txt
faq
glossary.txt
howto
index.txt
internals
intro
make.bat
man
misc
ref
releases
requirements.txt
spelling_wordlist
topics

/workspace/django__django__4.0/docs/_ext:
djangodocs.py

/workspace/django__django__4.0/docs/_theme:
djangodocs
djangodocs-epub

/workspace/django__django__4.0/docs/_theme/djangodocs:
genindex.html
layout.html
modindex.html
search.html
static
theme.conf

/workspace/django__django__4.0/docs/_theme/djangodocs/static:
console-tabs.css
default.css
djangodocs.css
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
fontawesome
homepage.css
reset-fonts-grids.css

/workspace/django__django__4.0/docs/_theme/djangodocs/static/fontawesome:
LICENSE.txt
README.md
css
webfonts

/workspace/django__django__4.0/docs/_theme/djangodocs/static/fontawesome/css:
fa-brands.min.css

/workspace/django__django__4.0/docs/_theme/djangodocs/static/fontawesome/webfonts:
fa-brands-400.eot
fa-brands-400.svg
fa-brands-400.ttf
fa-brands-400.woff
fa-brands-400.woff2

/workspace/django__django__4.0/docs/_theme/djangodocs-epub:
epub-cover.html
static
theme.conf

/workspace/django__django__4.0/docs/_theme/djangodocs-epub/static:
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
epub.css

/workspace/django__django__4.0/docs/faq:
admin.txt
contributing.txt
general.txt
help.txt
index.txt
install.txt
models.txt
troubleshooting.txt
usage.txt

/workspace/django__django__4.0/docs/howto:
_images
auth-remote-user.txt
custom-file-storage.txt
custom-lookups.txt
custom-management-commands.txt
custom-model-fields.txt
custom-template-backend.txt
custom-template-tags.txt
deployment
error-reporting.txt
index.txt
initial-data.txt
legacy-databases.txt
outputting-csv.txt
outputting-pdf.txt
overriding-templates.txt
static-files
upgrade-version.txt
windows.txt
writing-migrations.txt

/workspace/django__django__4.0/docs/howto/_images:
postmortem.png
template-lines.png

/workspace/django__django__4.0/docs/howto/deployment:
asgi
checklist.txt
index.txt
wsgi

/workspace/django__django__4.0/docs/howto/deployment/asgi:
daphne.txt
hypercorn.txt
index.txt
uvicorn.txt

/workspace/django__django__4.0/docs/howto/deployment/wsgi:
apache-auth.txt
gunicorn.txt
index.txt
modwsgi.txt
uwsgi.txt

/workspace/django__django__4.0/docs/howto/static-files:
deployment.txt
index.txt

/workspace/django__django__4.0/docs/internals:
_images
contributing
deprecation.txt
git.txt
howto-release-django.txt
index.txt
mailing-lists.txt
organization.txt
release-process.txt
security.txt

/workspace/django__django__4.0/docs/internals/_images:
triage_process.graffle
triage_process.pdf
triage_process.svg

/workspace/django__django__4.0/docs/internals/contributing:
bugs-and-features.txt
committing-code.txt
index.txt
localizing.txt
new-contributors.txt
triaging-tickets.txt
writing-code
writing-documentation.txt

/workspace/django__django__4.0/docs/internals/contributing/writing-code:
coding-style.txt
index.txt
javascript.txt
submitting-patches.txt
unit-tests.txt
working-with-git.txt

/workspace/django__django__4.0/docs/intro:
_images
contributing.txt
index.txt
install.txt
overview.txt
reusable-apps.txt
tutorial01.txt
tutorial02.txt
tutorial03.txt
tutorial04.txt
tutorial05.txt
tutorial06.txt
tutorial07.txt
whatsnext.txt

/workspace/django__django__4.0/docs/intro/_images:
admin01.png
admin02.png
admin03t.png
admin04t.png
admin05t.png
admin06t.png
admin07.png
admin08t.png
admin09.png
admin10t.png
admin11t.png
admin12t.png
admin13t.png
admin14t.png

/workspace/django__django__4.0/docs/man:
django-admin.1

/workspace/django__django__4.0/docs/misc:
api-stability.txt
design-philosophies.txt
distributions.txt
index.txt

/workspace/django__django__4.0/docs/ref:
applications.txt
checks.txt
class-based-views
clickjacking.txt
contrib
csrf.txt
databases.txt
django-admin.txt
exceptions.txt
files
forms
index.txt
middleware.txt
migration-operations.txt
models
paginator.txt
request-response.txt
schema-editor.txt
settings.txt
signals.txt
template-response.txt
templates
unicode.txt
urlresolvers.txt
urls.txt
utils.txt
validators.txt
views.txt

/workspace/django__django__4.0/docs/ref/class-based-views:
base.txt
flattened-index.txt
generic-date-based.txt
generic-display.txt
generic-editing.txt
index.txt
mixins-date-based.txt
mixins-editing.txt
mixins-multiple-object.txt
mixins-simple.txt
mixins-single-object.txt
mixins.txt

/workspace/django__django__4.0/docs/ref/contrib:
admin
auth.txt
contenttypes.txt
flatpages.txt
gis
humanize.txt
index.txt
messages.txt
postgres
redirects.txt
sitemaps.txt
sites.txt
staticfiles.txt
syndication.txt

/workspace/django__django__4.0/docs/ref/contrib/admin:
_images
actions.txt
admindocs.txt
index.txt
javascript.txt

/workspace/django__django__4.0/docs/ref/contrib/admin/_images:
actions-as-modeladmin-methods.png
adding-actions-to-the-modeladmin.png
admin-actions.png
fieldsets.png
list_filter.png
raw_id_fields.png

/workspace/django__django__4.0/docs/ref/contrib/gis:
admin.txt
commands.txt
db-api.txt
deployment.txt
feeds.txt
forms-api.txt
functions.txt
gdal.txt
geoip2.txt
geoquerysets.txt
geos.txt
index.txt
install
layermapping.txt
measure.txt
model-api.txt
ogrinspect.txt
serializers.txt
sitemaps.txt
testing.txt
tutorial.txt
utils.txt

/workspace/django__django__4.0/docs/ref/contrib/gis/install:
geolibs.txt
index.txt
postgis.txt
spatialite.txt

/workspace/django__django__4.0/docs/ref/contrib/postgres:
aggregates.txt
constraints.txt
fields.txt
forms.txt
functions.txt
index.txt
indexes.txt
lookups.txt
operations.txt
search.txt
validators.txt

/workspace/django__django__4.0/docs/ref/files:
file.txt
index.txt
storage.txt
uploads.txt

/workspace/django__django__4.0/docs/ref/forms:
api.txt
fields.txt
formsets.txt
index.txt
models.txt
renderers.txt
validation.txt
widgets.txt

/workspace/django__django__4.0/docs/ref/models:
class.txt
conditional-expressions.txt
constraints.txt
database-functions.txt
expressions.txt
fields.txt
index.txt
indexes.txt
instances.txt
lookups.txt
meta.txt
options.txt
querysets.txt
relations.txt

/workspace/django__django__4.0/docs/ref/templates:
api.txt
builtins.txt
index.txt
language.txt

/workspace/django__django__4.0/docs/releases:
0.95.txt
0.96.txt
1.0-porting-guide.txt
1.0.1.txt
1.0.2.txt
1.0.txt
1.1.2.txt
1.1.3.txt
1.1.4.txt
1.1.txt
1.10.1.txt
1.10.2.txt
1.10.3.txt
1.10.4.txt
1.10.5.txt
1.10.6.txt
1.10.7.txt
1.10.8.txt
1.10.txt
1.11.1.txt
1.11.10.txt
1.11.11.txt
1.11.12.txt
1.11.13.txt
1.11.14.txt
1.11.15.txt
1.11.16.txt
1.11.17.txt
1.11.18.txt
1.11.19.txt
1.11.2.txt
1.11.20.txt
1.11.21.txt
1.11.22.txt
1.11.23.txt
1.11.24.txt
1.11.25.txt
1.11.26.txt
1.11.27.txt
1.11.28.txt
1.11.29.txt
1.11.3.txt
1.11.4.txt
1.11.5.txt
1.11.6.txt
1.11.7.txt
1.11.8.txt
1.11.9.txt
1.11.txt
1.2.1.txt
1.2.2.txt
1.2.3.txt
1.2.4.txt
1.2.5.txt
1.2.6.txt
1.2.7.txt
1.2.txt
1.3.1.txt
1.3.2.txt
1.3.3.txt
1.3.4.txt
1.3.5.txt
1.3.6.txt
1.3.7.txt
1.3.txt
1.4.1.txt
1.4.10.txt
1.4.11.txt
1.4.12.txt
1.4.13.txt
1.4.14.txt
1.4.15.txt
1.4.16.txt
1.4.17.txt
1.4.18.txt
1.4.19.txt
1.4.2.txt
1.4.20.txt
1.4.21.txt
1.4.22.txt
1.4.3.txt
1.4.4.txt
1.4.5.txt
1.4.6.txt
1.4.7.txt
1.4.8.txt
1.4.9.txt
1.4.txt
1.5.1.txt
1.5.10.txt
1.5.11.txt
1.5.12.txt
1.5.2.txt
1.5.3.txt
1.5.4.txt
1.5.5.txt
1.5.6.txt
1.5.7.txt
1.5.8.txt
1.5.9.txt
1.5.txt
1.6.1.txt
1.6.10.txt
1.6.11.txt
1.6.2.txt
1.6.3.txt
1.6.4.txt
1.6.5.txt
1.6.6.txt
1.6.7.txt
1.6.8.txt
1.6.9.txt
1.6.txt
1.7.1.txt
1.7.10.txt
1.7.11.txt
1.7.2.txt
1.7.3.txt
1.7.4.txt
1.7.5.txt
1.7.6.txt
1.7.7.txt
1.7.8.txt
1.7.9.txt
1.7.txt
1.8.1.txt
1.8.10.txt
1.8.11.txt
1.8.12.txt
1.8.13.txt
1.8.14.txt
1.8.15.txt
1.8.16.txt
1.8.17.txt
1.8.18.txt
1.8.19.txt
1.8.2.txt
1.8.3.txt
1.8.4.txt
1.8.5.txt
1.8.6.txt
1.8.7.txt
1.8.8.txt
1.8.9.txt
1.8.txt
1.9.1.txt
1.9.10.txt
1.9.11.txt
1.9.12.txt
1.9.13.txt
1.9.2.txt
1.9.3.txt
1.9.4.txt
1.9.5.txt
1.9.6.txt
1.9.7.txt
1.9.8.txt
1.9.9.txt
1.9.txt
2.0.1.txt
2.0.10.txt
2.0.11.txt
2.0.12.txt
2.0.13.txt
2.0.2.txt
2.0.3.txt
2.0.4.txt
2.0.5.txt
2.0.6.txt
2.0.7.txt
2.0.8.txt
2.0.9.txt
2.0.txt
2.1.1.txt
2.1.10.txt
2.1.11.txt
2.1.12.txt
2.1.13.txt
2.1.14.txt
2.1.15.txt
2.1.2.txt
2.1.3.txt
2.1.4.txt
2.1.5.txt
2.1.6.txt
2.1.7.txt
2.1.8.txt
2.1.9.txt
2.1.txt
2.2.1.txt
2.2.10.txt
2.2.11.txt
2.2.12.txt
2.2.13.txt
2.2.14.txt
2.2.15.txt
2.2.16.txt
2.2.17.txt
2.2.18.txt
2.2.19.txt
2.2.2.txt
2.2.20.txt
2.2.21.txt
2.2.22.txt
2.2.23.txt
2.2.3.txt
2.2.4.txt
2.2.5.txt
2.2.6.txt
2.2.7.txt
2.2.8.txt
2.2.9.txt
2.2.txt
3.0.1.txt
3.0.10.txt
3.0.11.txt
3.0.12.txt
3.0.13.txt
3.0.14.txt
3.0.2.txt
3.0.3.txt
3.0.4.txt
3.0.5.txt
3.0.6.txt
3.0.7.txt
3.0.8.txt
3.0.9.txt
3.0.txt
3.1.1.txt
3.1.10.txt
3.1.11.txt
3.1.2.txt
3.1.3.txt
3.1.4.txt
3.1.5.txt
3.1.6.txt
3.1.7.txt
3.1.8.txt
3.1.9.txt
3.1.txt
3.2.1.txt
3.2.2.txt
3.2.3.txt
3.2.4.txt
3.2.txt
4.0.txt
index.txt
security.txt

/workspace/django__django__4.0/docs/topics:
async.txt
auth
cache.txt
checks.txt
class-based-views
conditional-view-processing.txt
db
email.txt
external-packages.txt
files.txt
forms
http
i18n
index.txt
install.txt
logging.txt
migrations.txt
pagination.txt
performance.txt
security.txt
serialization.txt
settings.txt
signals.txt
signing.txt
templates.txt
testing

/workspace/django__django__4.0/docs/topics/auth:
customizing.txt
default.txt
index.txt
passwords.txt

/workspace/django__django__4.0/docs/topics/class-based-views:
generic-display.txt
generic-editing.txt
index.txt
intro.txt
mixins.txt

/workspace/django__django__4.0/docs/topics/db:
aggregation.txt
examples
index.txt
instrumentation.txt
managers.txt
models.txt
multi-db.txt
optimization.txt
queries.txt
search.txt
sql.txt
tablespaces.txt
transactions.txt

/workspace/django__django__4.0/docs/topics/db/examples:
index.txt
many_to_many.txt
many_to_one.txt
one_to_one.txt

/workspace/django__django__4.0/docs/topics/forms:
formsets.txt
index.txt
media.txt
modelforms.txt

/workspace/django__django__4.0/docs/topics/http:
_images
decorators.txt
file-uploads.txt
generic-views.txt
index.txt
middleware.txt
sessions.txt
shortcuts.txt
urls.txt
views.txt

/workspace/django__django__4.0/docs/topics/http/_images:
middleware.pdf

/workspace/django__django__4.0/docs/topics/i18n:
formatting.txt
index.txt
timezones.txt
translation.txt

/workspace/django__django__4.0/docs/topics/testing:
_images
advanced.txt
index.txt
overview.txt
tools.txt

/workspace/django__django__4.0/docs/topics/testing/_images:
django_unittest_classes_hierarchy.graffle
django_unittest_classes_hierarchy.pdf
django_unittest_classes_hierarchy.svg

/workspace/django__django__4.0/extras:
Makefile
README.TXT
django_bash_completion

/workspace/django__django__4.0/js_tests:
admin
gis
tests.html

/workspace/django__django__4.0/js_tests/admin:
DateTimeShortcuts.test.js
SelectBox.test.js
SelectFilter2.test.js
URLify.test.js
actions.test.js
core.test.js
inlines.test.js
jsi18n-mocks.test.js
navigation.test.js

/workspace/django__django__4.0/js_tests/gis:
mapwidget.test.js

/workspace/django__django__4.0/scripts:
manage_translations.py
rpm-install.sh

/workspace/django__django__4.0/tests:
README.rst
absolute_url_overrides
admin_autodiscover
admin_changelist
admin_checks
admin_custom_urls
admin_default_site
admin_docs
admin_filters
admin_inlines
admin_ordering
admin_registration
admin_scripts
admin_utils
admin_views
admin_widgets
aggregation
aggregation_regress
annotations
app_loading
apps
asgi
async
auth_tests
backends
base
bash_completion
basic
builtin_server
bulk_create
cache
check_framework
conditional_processing
constraints
contenttypes_tests
context_processors
csrf_tests
custom_columns
custom_lookups
custom_managers
custom_methods
custom_migration_operations
custom_pk
datatypes
dates
datetimes
db_functions
db_typecasts
db_utils
dbshell
decorators
defer
defer_regress
delete
delete_regress
deprecation
dispatch
distinct_on_fields
empty
empty_models
expressions
expressions_case
expressions_window
extra_regress
field_deconstruction
field_defaults
field_subclassing
file_storage
file_uploads
files
filtered_relation
fixtures
fixtures_model_package
fixtures_regress
flatpages_tests
force_insert_update
foreign_object
forms_tests
from_db_value
generic_inline_admin
generic_relations
generic_relations_regress
generic_views
get_earliest_or_latest
get_object_or_404
get_or_create
gis_tests
handlers
httpwrappers
humanize_tests
i18n
import_error_package
indexes
inline_formsets
inspectdb
introspection
invalid_models_tests
known_related_objects
logging_tests
lookup
m2m_and_m2o
m2m_intermediary
m2m_multiple
m2m_recursive
m2m_regress
m2m_signals
m2m_through
m2m_through_regress
m2o_recursive
mail
managers_regress
many_to_many
many_to_one
many_to_one_null
max_lengths
messages_tests
middleware
middleware_exceptions
migrate_signals
migration_test_data_persistence
migrations
migrations2
model_enums
model_fields
model_forms
model_formsets
model_formsets_regress
model_indexes
model_inheritance
model_inheritance_regress
model_meta
model_options
model_package
model_regress
modeladmin
multiple_database
mutually_referential
nested_foreign_keys
no_models
null_fk
null_fk_ordering
null_queries
one_to_one
or_lookups
order_with_respect_to
ordering
pagination
postgres_tests
prefetch_related
project_template
properties
proxy_model_inheritance
proxy_models
queries
queryset_pickle
raw_query
redirects_tests
requests
requirements
reserved_names
resolve_url
responses
reverse_lookup
runtests.py
save_delete_hooks
schema
select_for_update
select_related
select_related_onetoone
select_related_regress
serializers
servers
sessions_tests
settings_tests
shell
shortcuts
signals
signed_cookies_tests
signing
sitemaps_tests
sites_framework
sites_tests
staticfiles_tests
str
string_lookup
swappable_models
syndication_tests
template_backends
template_loader
template_tests
templates
test_client
test_client_regress
test_exceptions
test_runner
test_runner_apps
test_sqlite.py
test_utils
timezones
transaction_hooks
transactions
unmanaged_models
update
update_only_fields
urlpatterns
urlpatterns_reverse
urls.py
user_commands
utils_tests
validation
validators
version
view_tests
wsgi

/workspace/django__django__4.0/tests/absolute_url_overrides:
__init__.py
tests.py

/workspace/django__django__4.0/tests/admin_autodiscover:
__init__.py
admin.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_changelist:
__init__.py
admin.py
models.py
test_date_hierarchy.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_checks:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_custom_urls:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_default_site:
__init__.py
apps.py
sites.py
tests.py

/workspace/django__django__4.0/tests/admin_docs:
__init__.py
evilfile.txt
models.py
namespace_urls.py
test_middleware.py
test_utils.py
test_views.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/admin_filters:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_inlines:
__init__.py
admin.py
models.py
test_templates.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_registration:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_scripts:
__init__.py
another_app_waiting_migration
app_raising_messages
app_raising_warning
app_waiting_migration
app_with_import
broken_app
complex_app
configured_dynamic_settings_manage.py
configured_settings_manage.py
custom_templates
management
simple_app
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_scripts/another_app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/admin_scripts/another_app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/admin_scripts/app_raising_messages:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/app_raising_warning:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/admin_scripts/app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/admin_scripts/app_with_import:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/broken_app:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/complex_app:
__init__.py
admin
management
models

/workspace/django__django__4.0/tests/admin_scripts/complex_app/admin:
__init__.py
foo.py

/workspace/django__django__4.0/tests/admin_scripts/complex_app/management:
__init__.py
commands

/workspace/django__django__4.0/tests/admin_scripts/complex_app/management/commands:
__init__.py
duplicate.py

/workspace/django__django__4.0/tests/admin_scripts/complex_app/models:
__init__.py
bar.py
foo.py

/workspace/django__django__4.0/tests/admin_scripts/custom_templates:
app_template
project_template
project_template.tgz

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/app_template:
__init__.py
api.py

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/project_template:
additional_dir
manage.py-tpl
project_name
ticket-18091-non-ascii-template.txt
ticket-19397-binary-file.ico

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/project_template/additional_dir:
Procfile
additional_file.py
extra.py
localized.py
requirements.txt

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/project_template/project_name:
__init__.py
settings.py

/workspace/django__django__4.0/tests/admin_scripts/management:
__init__.py
commands

/workspace/django__django__4.0/tests/admin_scripts/management/commands:
__init__.py
app_command.py
base_command.py
custom_startproject.py
label_command.py
noargs_command.py

/workspace/django__django__4.0/tests/admin_scripts/simple_app:
__init__.py
management
models.py

/workspace/django__django__4.0/tests/admin_scripts/simple_app/management:
__init__.py
commands

/workspace/django__django__4.0/tests/admin_scripts/simple_app/management/commands:
__init__.py
duplicate.py

/workspace/django__django__4.0/tests/admin_utils:
__init__.py
admin.py
models.py
test_logentry.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_views:
__init__.py
admin.py
custom_has_permission_admin.py
customadmin.py
forms.py
models.py
templates
test_actions.py
test_adminsite.py
test_autocomplete_view.py
test_forms.py
test_history_view.py
test_multidb.py
test_nav_sidebar.py
test_templatetags.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/admin_views/templates:
admin
custom_filter_template.html

/workspace/django__django__4.0/tests/admin_views/templates/admin:
admin_views
base_site.html

/workspace/django__django__4.0/tests/admin_views/templates/admin/admin_views:
article

/workspace/django__django__4.0/tests/admin_views/templates/admin/admin_views/article:
actions.html
change_form_object_tools.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
pagination.html
prepopulated_fields_js.html
search_form.html
submit_line.html

/workspace/django__django__4.0/tests/admin_widgets:
__init__.py
models.py
test_autocomplete_widget.py
tests.py
urls.py
widgetadmin.py

/workspace/django__django__4.0/tests/aggregation:
__init__.py
models.py
test_filter_argument.py
tests.py

/workspace/django__django__4.0/tests/aggregation_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/annotations:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/app_loading:
__init__.py
eggs
not_installed
tests.py

/workspace/django__django__4.0/tests/app_loading/eggs:
brokenapp.egg
modelapp.egg
nomodelapp.egg
omelet.egg

/workspace/django__django__4.0/tests/app_loading/not_installed:
__init__.py
models.py

/workspace/django__django__4.0/tests/apps:
__init__.py
apps.py
explicit_default_config_app
explicit_default_config_empty_apps
explicit_default_config_mismatch_app
explicit_default_config_without_apps
models.py
namespace_package_base
namespace_package_other_base
no_config_app
one_config_app
tests.py
two_configs_app
two_configs_one_default_app
two_default_configs_app

/workspace/django__django__4.0/tests/apps/explicit_default_config_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/explicit_default_config_empty_apps:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/explicit_default_config_mismatch_app:
__init__.py
apps.py
not_apps.py

/workspace/django__django__4.0/tests/apps/explicit_default_config_without_apps:
__init__.py

/workspace/django__django__4.0/tests/apps/namespace_package_base:
nsapp

/workspace/django__django__4.0/tests/apps/namespace_package_base/nsapp:
apps.py

/workspace/django__django__4.0/tests/apps/namespace_package_other_base:
nsapp

/workspace/django__django__4.0/tests/apps/namespace_package_other_base/nsapp:

/workspace/django__django__4.0/tests/apps/no_config_app:
__init__.py

/workspace/django__django__4.0/tests/apps/one_config_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/two_configs_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/two_configs_one_default_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/two_default_configs_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/asgi:
__init__.py
project
tests.py
urls.py

/workspace/django__django__4.0/tests/asgi/project:
static

/workspace/django__django__4.0/tests/asgi/project/static:
file.txt

/workspace/django__django__4.0/tests/async:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/auth_tests:
__init__.py
backend_alias.py
client.py
common-passwords-custom.txt
fixtures
models
settings.py
templates
test_admin_multidb.py
test_auth_backends.py
test_basic.py
test_checks.py
test_context_processors.py
test_decorators.py
test_forms.py
test_handlers.py
test_hashers.py
test_management.py
test_middleware.py
test_migrations.py
test_mixins.py
test_models.py
test_remote_user.py
test_signals.py
test_templates.py
test_tokens.py
test_validators.py
test_views.py
urls.py
urls_admin.py
urls_custom_user_admin.py

/workspace/django__django__4.0/tests/auth_tests/fixtures:
natural.json
regular.json

/workspace/django__django__4.0/tests/auth_tests/models:
__init__.py
custom_permissions.py
custom_user.py
invalid_models.py
is_active.py
minimal.py
no_password.py
proxy.py
uuid_pk.py
with_custom_email_field.py
with_foreign_key.py
with_integer_username.py
with_last_login_attr.py
with_many_to_many.py

/workspace/django__django__4.0/tests/auth_tests/templates:
context_processors
registration

/workspace/django__django__4.0/tests/auth_tests/templates/context_processors:
auth_attrs_access.html
auth_attrs_messages.html
auth_attrs_no_access.html
auth_attrs_perm_in_perms.html
auth_attrs_perms.html
auth_attrs_test_access.html
auth_attrs_user.html

/workspace/django__django__4.0/tests/auth_tests/templates/registration:
html_password_reset_email.html
logged_out.html
login.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html
password_reset_subject.txt

/workspace/django__django__4.0/tests/backends:
__init__.py
base
models.py
mysql
oracle
postgresql
sqlite
test_ddl_references.py
test_utils.py
tests.py

/workspace/django__django__4.0/tests/backends/base:
__init__.py
app_unmigrated
test_base.py
test_client.py
test_creation.py
test_features.py
test_introspection.py
test_operations.py
test_schema.py

/workspace/django__django__4.0/tests/backends/base/app_unmigrated:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/backends/base/app_unmigrated/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/backends/mysql:
__init__.py
test_creation.py
test_features.py
test_introspection.py
test_operations.py
test_schema.py
tests.py

/workspace/django__django__4.0/tests/backends/oracle:
__init__.py
test_creation.py
test_introspection.py
test_operations.py
tests.py

/workspace/django__django__4.0/tests/backends/postgresql:
__init__.py
test_creation.py
test_introspection.py
test_operations.py
test_server_side_cursors.py
tests.py

/workspace/django__django__4.0/tests/backends/sqlite:
__init__.py
test_creation.py
test_features.py
test_introspection.py
test_operations.py
tests.py

/workspace/django__django__4.0/tests/base:
__init__.py
models.py

/workspace/django__django__4.0/tests/bash_completion:
__init__.py
management
tests.py

/workspace/django__django__4.0/tests/bash_completion/management:
__init__.py
commands

/workspace/django__django__4.0/tests/bash_completion/management/commands:
__init__.py
test_command.py

/workspace/django__django__4.0/tests/basic:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/builtin_server:
__init__.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/bulk_create:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/cache:
__init__.py
closeable_cache.py
liberal_backend.py
models.py
tests.py

/workspace/django__django__4.0/tests/check_framework:
__init__.py
apps.py
models.py
test_4_0_compatibility.py
test_async_checks.py
test_caches.py
test_database.py
test_files.py
test_model_checks.py
test_model_field_deprecation.py
test_multi_db.py
test_security.py
test_templates.py
test_translation.py
test_urls.py
tests.py
urls

/workspace/django__django__4.0/tests/check_framework/urls:
__init__.py
bad_class_based_error_handlers.py
bad_error_handlers_invalid_path.py
bad_function_based_error_handlers.py
beginning_with_slash.py
contains_tuple.py
good_class_based_error_handlers.py
good_function_based_error_handlers.py
include_contains_tuple.py
include_with_dollar.py
name_with_colon.py
no_warnings.py
no_warnings_i18n.py
non_unique_namespaces.py
path_compatibility
unique_namespaces.py
warning_in_include.py

/workspace/django__django__4.0/tests/check_framework/urls/path_compatibility:
__init__.py
beginning_with_caret.py
contains_re_named_group.py
ending_with_dollar.py

/workspace/django__django__4.0/tests/conditional_processing:
__init__.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/constraints:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/contenttypes_tests:
__init__.py
models.py
operations_migrations
test_checks.py
test_fields.py
test_management.py
test_models.py
test_operations.py
test_order_with_respect_to.py
test_views.py
urls.py

/workspace/django__django__4.0/tests/contenttypes_tests/operations_migrations:
0001_initial.py
0002_rename_foo.py
__init__.py

/workspace/django__django__4.0/tests/context_processors:
__init__.py
models.py
templates
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/context_processors/templates:
context_processors

/workspace/django__django__4.0/tests/context_processors/templates/context_processors:
debug.html
request_attrs.html

/workspace/django__django__4.0/tests/csrf_tests:
__init__.py
csrf_token_error_handler_urls.py
test_context_processor.py
tests.py
views.py

/workspace/django__django__4.0/tests/custom_columns:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_managers:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_methods:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_migration_operations:
__init__.py
more_operations.py
operations.py

/workspace/django__django__4.0/tests/custom_pk:
__init__.py
fields.py
models.py
tests.py

/workspace/django__django__4.0/tests/datatypes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/dates:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/datetimes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/db_functions:
__init__.py
comparison
datetime
math
migrations
models.py
tests.py
text
window

/workspace/django__django__4.0/tests/db_functions/comparison:
__init__.py
test_cast.py
test_coalesce.py
test_collate.py
test_greatest.py
test_json_object.py
test_least.py
test_nullif.py

/workspace/django__django__4.0/tests/db_functions/datetime:
__init__.py
test_extract_trunc.py
test_now.py

/workspace/django__django__4.0/tests/db_functions/math:
__init__.py
test_abs.py
test_acos.py
test_asin.py
test_atan.py
test_atan2.py
test_ceil.py
test_cos.py
test_cot.py
test_degrees.py
test_exp.py
test_floor.py
test_ln.py
test_log.py
test_mod.py
test_pi.py
test_power.py
test_radians.py
test_random.py
test_round.py
test_sign.py
test_sin.py
test_sqrt.py
test_tan.py

/workspace/django__django__4.0/tests/db_functions/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__4.0/tests/db_functions/text:
__init__.py
test_chr.py
test_concat.py
test_left.py
test_length.py
test_lower.py
test_md5.py
test_ord.py
test_pad.py
test_repeat.py
test_replace.py
test_reverse.py
test_right.py
test_sha1.py
test_sha224.py
test_sha256.py
test_sha384.py
test_sha512.py
test_strindex.py
test_substr.py
test_trim.py
test_upper.py

/workspace/django__django__4.0/tests/db_functions/window:
__init__.py
test_validation.py

/workspace/django__django__4.0/tests/db_typecasts:
__init__.py
tests.py

/workspace/django__django__4.0/tests/db_utils:
__init__.py
tests.py

/workspace/django__django__4.0/tests/dbshell:
__init__.py
fake_client.py
test_mysql.py
test_oracle.py
test_postgresql.py
test_sqlite.py
tests.py

/workspace/django__django__4.0/tests/decorators:
__init__.py
tests.py

/workspace/django__django__4.0/tests/defer:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/defer_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/delete:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/delete_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/deprecation:
__init__.py
test_middleware_mixin.py
tests.py

/workspace/django__django__4.0/tests/dispatch:
__init__.py
tests.py

/workspace/django__django__4.0/tests/distinct_on_fields:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/empty:
__init__.py
models.py
no_models
tests.py

/workspace/django__django__4.0/tests/empty/no_models:
__init__.py

/workspace/django__django__4.0/tests/empty_models:
__init__.py
models.py
test_commands.py

/workspace/django__django__4.0/tests/expressions:
__init__.py
models.py
test_queryset_values.py
tests.py

/workspace/django__django__4.0/tests/expressions_case:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/expressions_window:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/extra_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/field_deconstruction:
__init__.py
tests.py

/workspace/django__django__4.0/tests/field_defaults:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/field_subclassing:
__init__.py
fields.py
tests.py

/workspace/django__django__4.0/tests/file_storage:
__init__.py
models.py
test_generate_filename.py
tests.py
urls.py

/workspace/django__django__4.0/tests/file_uploads:
__init__.py
models.py
tests.py
uploadhandler.py
urls.py
views.py

/workspace/django__django__4.0/tests/files:
__init__.py
brokenimg.png
magic.png
test.png
test.webp
test1.png
tests.py

/workspace/django__django__4.0/tests/filtered_relation:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/fixtures:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/fixtures/fixtures:
circular_reference.json
circular_reference_natural_key.json
db_fixture_1.default.json
db_fixture_2.default.json.gz
db_fixture_3.nosuchdb.json
fixture1.json
fixture2.json
fixture2.xml
fixture3.xml
fixture4.json.zip
fixture5.json.bz2
fixture5.json.gz
fixture5.json.lzma
fixture5.json.xz
fixture5.json.zip
fixture6.json
fixture7.xml
fixture8.json
fixture9.xml
fixture_with[special]chars.json
forward_reference_fk.json
forward_reference_fk_natural_key.json
forward_reference_m2m.json
forward_reference_m2m_natural_key.json
invalid.json
null_character_in_field_value.json

/workspace/django__django__4.0/tests/fixtures_model_package:
__init__.py
fixtures
models
tests.py

/workspace/django__django__4.0/tests/fixtures_model_package/fixtures:
model_package_fixture1.json
model_package_fixture2.json

/workspace/django__django__4.0/tests/fixtures_model_package/models:
__init__.py

/workspace/django__django__4.0/tests/fixtures_regress:
__init__.py
fixtures
fixtures_1
fixtures_2
models.py
tests.py

/workspace/django__django__4.0/tests/fixtures_regress/fixtures:
absolute.json
animal.xml
bad_fix.ture1.unkn
bad_fixture2.xml
big-fixture.json
empty.json
feature.json
forward_ref.json
forward_ref_bad_data.json
forward_ref_lookup.json
m2mtoself.json
model-inheritance.json
nk-inheritance.json
nk-inheritance2.xml
non_natural_1.json
non_natural_2.xml
path.containing.dots.json
pretty.xml
sequence.json
sequence_extra.json
sequence_extra_xml.xml
special-article.json
thingy.json

/workspace/django__django__4.0/tests/fixtures_regress/fixtures_1:
forward_ref_1.json
inner

/workspace/django__django__4.0/tests/fixtures_regress/fixtures_1/inner:
absolute.json

/workspace/django__django__4.0/tests/fixtures_regress/fixtures_2:
forward_ref_2.json

/workspace/django__django__4.0/tests/flatpages_tests:
__init__.py
absolute_urls.py
no_slash_urls.py
settings.py
templates
test_csrf.py
test_forms.py
test_middleware.py
test_models.py
test_sitemaps.py
test_templatetags.py
test_views.py
urls.py

/workspace/django__django__4.0/tests/flatpages_tests/templates:
flatpages
registration

/workspace/django__django__4.0/tests/flatpages_tests/templates/flatpages:
default.html

/workspace/django__django__4.0/tests/flatpages_tests/templates/registration:
login.html

/workspace/django__django__4.0/tests/force_insert_update:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/foreign_object:
__init__.py
models
test_agnostic_order_trimjoin.py
test_empty_join.py
test_forms.py
tests.py

/workspace/django__django__4.0/tests/foreign_object/models:
__init__.py
article.py
customers.py
empty_join.py
person.py

/workspace/django__django__4.0/tests/forms_tests:
__init__.py
field_tests
jinja2
models.py
templates
tests
urls.py
views.py
widget_tests

/workspace/django__django__4.0/tests/forms_tests/field_tests:
__init__.py
filepathfield_test_dir
test_base.py
test_booleanfield.py
test_charfield.py
test_choicefield.py
test_combofield.py
test_datefield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_emailfield.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_jsonfield.py
test_multiplechoicefield.py
test_multivaluefield.py
test_nullbooleanfield.py
test_regexfield.py
test_slugfield.py
test_splitdatetimefield.py
test_timefield.py
test_typedchoicefield.py
test_typedmultiplechoicefield.py
test_urlfield.py
test_uuidfield.py

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir:
README
__init__.py
a.py
ab.py
b.py
c
h
j

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/c:
__init__.py
d.py
e.py
f

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/c/f:
__init__.py
g.py

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/h:
__init__.py

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/j:
__init__.py

/workspace/django__django__4.0/tests/forms_tests/jinja2:
forms_tests

/workspace/django__django__4.0/tests/forms_tests/jinja2/forms_tests:
custom_widget.html

/workspace/django__django__4.0/tests/forms_tests/templates:
forms_tests

/workspace/django__django__4.0/tests/forms_tests/templates/forms_tests:
article_form.html
custom_widget.html

/workspace/django__django__4.0/tests/forms_tests/tests:
__init__.py
filepath_test_files
test_error_messages.py
test_forms.py
test_formsets.py
test_i18n.py
test_input_formats.py
test_media.py
test_renderers.py
test_utils.py
test_validators.py
test_widgets.py
tests.py

/workspace/django__django__4.0/tests/forms_tests/tests/filepath_test_files:
1x1.bmp
1x1.png
directory
fake-image.jpg
real-text-file.txt

/workspace/django__django__4.0/tests/forms_tests/tests/filepath_test_files/directory:

/workspace/django__django__4.0/tests/forms_tests/widget_tests:
__init__.py
base.py
test_checkboxinput.py
test_checkboxselectmultiple.py
test_clearablefileinput.py
test_dateinput.py
test_datetimeinput.py
test_fileinput.py
test_hiddeninput.py
test_input.py
test_multiplehiddeninput.py
test_multiwidget.py
test_nullbooleanselect.py
test_numberinput.py
test_passwordinput.py
test_radioselect.py
test_select.py
test_selectdatewidget.py
test_selectmultiple.py
test_splitdatetimewidget.py
test_splithiddendatetimewidget.py
test_textarea.py
test_textinput.py
test_timeinput.py
test_widget.py

/workspace/django__django__4.0/tests/from_db_value:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/generic_inline_admin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/generic_relations:
__init__.py
models.py
test_forms.py
tests.py

/workspace/django__django__4.0/tests/generic_relations_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/generic_views:
__init__.py
forms.py
jinja2
models.py
templates
test_base.py
test_dates.py
test_detail.py
test_edit.py
test_list.py
urls.py
views.py

/workspace/django__django__4.0/tests/generic_views/jinja2:
generic_views

/workspace/django__django__4.0/tests/generic_views/jinja2/generic_views:
using.html

/workspace/django__django__4.0/tests/generic_views/templates:
generic_views
registration

/workspace/django__django__4.0/tests/generic_views/templates/generic_views:
about.html
apple_detail.html
artist_detail.html
artist_form.html
author_confirm_delete.html
author_detail.html
author_form.html
author_list.html
author_objects.html
author_view.html
book_archive.html
book_archive_day.html
book_archive_month.html
book_archive_week.html
book_archive_year.html
book_detail.html
book_list.html
confirm_delete.html
detail.html
form.html
list.html
page_template.html
robots.txt
using.html

/workspace/django__django__4.0/tests/generic_views/templates/registration:
login.html

/workspace/django__django__4.0/tests/get_earliest_or_latest:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/get_object_or_404:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/get_or_create:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests:
__init__.py
admin.py
data
distapp
gdal_tests
geo3d
geoadmin
geoapp
geogapp
geos_tests
gis_migrations
inspectapp
layermap
models.py
rasterapp
relatedapp
test_data.py
test_fields.py
test_geoforms.py
test_geoip2.py
test_gis_tests_utils.py
test_measure.py
test_ptr.py
test_spatialrefsys.py
tests.py
utils.py

/workspace/django__django__4.0/tests/gis_tests/data:
__init__.py
ch-city
cities
counties
gas_lines
geometries.json
has_nulls
interstates
invalid
rasters
test_point
test_poly
test_vrt
texas.dbf

/workspace/django__django__4.0/tests/gis_tests/data/ch-city:
ch-city.dbf
ch-city.prj
ch-city.shp
ch-city.shx

/workspace/django__django__4.0/tests/gis_tests/data/cities:
cities.dbf
cities.prj
cities.shp
cities.shx

/workspace/django__django__4.0/tests/gis_tests/data/counties:
counties.dbf
counties.shp
counties.shx

/workspace/django__django__4.0/tests/gis_tests/data/gas_lines:
gas_leitung.dbf
gas_leitung.prj
gas_leitung.shp
gas_leitung.shx

/workspace/django__django__4.0/tests/gis_tests/data/has_nulls:
has_nulls.geojson

/workspace/django__django__4.0/tests/gis_tests/data/interstates:
interstates.dbf
interstates.prj
interstates.shp
interstates.shx

/workspace/django__django__4.0/tests/gis_tests/data/invalid:
emptypoints.dbf
emptypoints.shp
emptypoints.shx

/workspace/django__django__4.0/tests/gis_tests/data/rasters:
__init__.py
raster.numpy.txt
raster.tif
textrasters.py

/workspace/django__django__4.0/tests/gis_tests/data/test_point:
test_point.dbf
test_point.prj
test_point.shp
test_point.shx

/workspace/django__django__4.0/tests/gis_tests/data/test_poly:
test_poly.dbf
test_poly.prj
test_poly.shp
test_poly.shx

/workspace/django__django__4.0/tests/gis_tests/data/test_vrt:
test_vrt.csv
test_vrt.vrt

/workspace/django__django__4.0/tests/gis_tests/distapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/distapp/fixtures:
initial.json

/workspace/django__django__4.0/tests/gis_tests/gdal_tests:
__init__.py
test_driver.py
test_ds.py
test_envelope.py
test_geom.py
test_raster.py
test_srs.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/geo3d:
__init__.py
models.py
tests.py
views.py

/workspace/django__django__4.0/tests/gis_tests/geoadmin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/gis_tests/geoapp:
__init__.py
feeds.py
fixtures
models.py
sitemaps.py
test_expressions.py
test_feeds.py
test_functions.py
test_indexes.py
test_regress.py
test_serializers.py
test_sitemaps.py
tests.py
urls.py

/workspace/django__django__4.0/tests/gis_tests/geoapp/fixtures:
initial.json.gz

/workspace/django__django__4.0/tests/gis_tests/geogapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/geogapp/fixtures:
initial.json

/workspace/django__django__4.0/tests/gis_tests/geos_tests:
__init__.py
test_coordseq.py
test_geos.py
test_geos_mutation.py
test_io.py
test_mutable_list.py

/workspace/django__django__4.0/tests/gis_tests/gis_migrations:
__init__.py
migrations
test_commands.py
test_operations.py

/workspace/django__django__4.0/tests/gis_tests/gis_migrations/migrations:
0001_setup_extensions.py
0002_create_models.py
__init__.py

/workspace/django__django__4.0/tests/gis_tests/inspectapp:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/layermap:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/rasterapp:
__init__.py
migrations
models.py
test_rasterfield.py

/workspace/django__django__4.0/tests/gis_tests/rasterapp/migrations:
0001_setup_extensions.py
0002_rastermodels.py
__init__.py

/workspace/django__django__4.0/tests/gis_tests/relatedapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/relatedapp/fixtures:
initial.json

/workspace/django__django__4.0/tests/handlers:
__init__.py
templates
test_exception.py
tests.py
tests_custom_error_handlers.py
urls.py
views.py

/workspace/django__django__4.0/tests/handlers/templates:
test_handler.html

/workspace/django__django__4.0/tests/httpwrappers:
__init__.py
abc.txt
tests.py

/workspace/django__django__4.0/tests/humanize_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/i18n:
__init__.py
commands
contenttypes
exclude
forms.py
loading
loading_app
models.py
other
other2
patterns
project_dir
resolution
sampleproject
territorial_fallback
test_compilation.py
test_extraction.py
test_management.py
test_percents.py
tests.py
urls.py
urls_default_unprefixed.py
utils.py

/workspace/django__django__4.0/tests/i18n/commands:
__init__.py
app_with_locale
code.sample
ignore_dir
javascript.js
locale
media_root
not_utf8.sample
someapp
static
templates

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale:
locale

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale/locale:
ru

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/ignore_dir:
ignored.html

/workspace/django__django__4.0/tests/i18n/commands/locale:
en
es_AR
fr
hr
ja
ko
pt_BR
ru
xxx

/workspace/django__django__4.0/tests/i18n/commands/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/es_AR/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/hr/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/ja/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/ko/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/pt_BR/LC_MESSAGES:
django.pristine

/workspace/django__django__4.0/tests/i18n/commands/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/xxx:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/xxx/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/commands/media_root:
media_ignored.html

/workspace/django__django__4.0/tests/i18n/commands/someapp:
static

/workspace/django__django__4.0/tests/i18n/commands/someapp/static:
javascript.js

/workspace/django__django__4.0/tests/i18n/commands/static:
javascript_ignored.js
static_ignored.html

/workspace/django__django__4.0/tests/i18n/commands/templates:
comments.thtml
empty.html
plural.djtpl
subdir
template_with_error.tpl
test.html
xxx_ignored.html

/workspace/django__django__4.0/tests/i18n/commands/templates/subdir:
ignored.html

/workspace/django__django__4.0/tests/i18n/contenttypes:
__init__.py
locale
tests.py

/workspace/django__django__4.0/tests/i18n/contenttypes/locale:
en
fr

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/exclude:
__init__.py
canned_locale

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale:
en
fr
it

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/en/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/it:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/it/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/loading:
en
en_AU
en_CA
en_NZ

/workspace/django__django__4.0/tests/i18n/loading/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading/en_CA:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en_CA/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading/en_NZ:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en_NZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading_app:
__init__.py
apps.py
locale

/workspace/django__django__4.0/tests/i18n/loading_app/locale:
en

/workspace/django__django__4.0/tests/i18n/loading_app/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading_app/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/other:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/other/locale:
__init__.py
de
fr

/workspace/django__django__4.0/tests/i18n/other/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/tests/i18n/other/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/other/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/tests/i18n/other/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/other2:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/other2/locale:
__init__.py
de

/workspace/django__django__4.0/tests/i18n/other2/locale/de:
__init__.py
formats.py

/workspace/django__django__4.0/tests/i18n/patterns:
__init__.py
locale
templates
tests.py
urls

/workspace/django__django__4.0/tests/i18n/patterns/locale:
en
nl
pt_BR

/workspace/django__django__4.0/tests/i18n/patterns/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/patterns/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/patterns/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/patterns/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/patterns/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/patterns/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/patterns/templates:
404.html
dummy.html

/workspace/django__django__4.0/tests/i18n/patterns/urls:
__init__.py
default.py
disabled.py
included.py
namespace.py
path_unused.py
wrong.py
wrong_namespace.py

/workspace/django__django__4.0/tests/i18n/project_dir:
__init__.py
app_no_locale
app_with_locale
project_locale

/workspace/django__django__4.0/tests/i18n/project_dir/app_no_locale:
__init__.py
models.py

/workspace/django__django__4.0/tests/i18n/project_dir/app_with_locale:
__init__.py
locale
models.py

/workspace/django__django__4.0/tests/i18n/project_dir/app_with_locale/locale:

/workspace/django__django__4.0/tests/i18n/project_dir/project_locale:

/workspace/django__django__4.0/tests/i18n/resolution:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/resolution/locale:
de

/workspace/django__django__4.0/tests/i18n/resolution/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/resolution/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/sampleproject:
locale
manage.py
sampleproject
templates
update_catalogs.py

/workspace/django__django__4.0/tests/i18n/sampleproject/locale:
fr

/workspace/django__django__4.0/tests/i18n/sampleproject/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/sampleproject/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/sampleproject/sampleproject:
__init__.py
settings.py

/workspace/django__django__4.0/tests/i18n/sampleproject/templates:
percents.html

/workspace/django__django__4.0/tests/i18n/territorial_fallback:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale:
de
de_DE

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de_DE:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de_DE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/import_error_package:
__init__.py

/workspace/django__django__4.0/tests/indexes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/inline_formsets:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/inspectdb:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/introspection:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/invalid_models_tests:
__init__.py
test_backend_specific.py
test_custom_fields.py
test_deprecated_fields.py
test_models.py
test_ordinary_fields.py
test_relative_fields.py

/workspace/django__django__4.0/tests/known_related_objects:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/logging_tests:
__init__.py
logconfig.py
tests.py
urls.py
urls_i18n.py
views.py

/workspace/django__django__4.0/tests/lookup:
__init__.py
models.py
test_decimalfield.py
test_lookups.py
test_timefield.py
tests.py

/workspace/django__django__4.0/tests/m2m_and_m2o:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_intermediary:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_multiple:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_signals:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_through:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_through_regress:
__init__.py
fixtures
models.py
test_multitable.py
tests.py

/workspace/django__django__4.0/tests/m2m_through_regress/fixtures:
m2m_through.json

/workspace/django__django__4.0/tests/m2o_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/mail:
__init__.py
attachments
custombackend.py
test_sendtestemail.py
tests.py

/workspace/django__django__4.0/tests/mail/attachments:
file.eml
file.png
file.txt
file_png
file_png.txt
file_txt
file_txt.png

/workspace/django__django__4.0/tests/managers_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/many_to_many:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/many_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/many_to_one_null:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/max_lengths:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/messages_tests:
__init__.py
base.py
test_api.py
test_cookie.py
test_fallback.py
test_middleware.py
test_mixins.py
test_session.py
tests.py
urls.py

/workspace/django__django__4.0/tests/middleware:
__init__.py
cond_get_urls.py
extra_urls.py
test_security.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/middleware_exceptions:
__init__.py
middleware.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/migrate_signals:
__init__.py
custom_migrations
models.py
tests.py

/workspace/django__django__4.0/tests/migrate_signals/custom_migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migration_test_data_persistence:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__4.0/tests/migration_test_data_persistence/migrations:
0001_initial.py
0002_add_book.py
__init__.py

/workspace/django__django__4.0/tests/migrations:
__init__.py
deprecated_field_migrations
faulty_migrations
migrations_test_apps
models.py
related_models_app
routers.py
test_add_many_to_many_field_initial
test_auto_now_add
test_autodetector.py
test_base.py
test_commands.py
test_deprecated_fields.py
test_exceptions.py
test_executor.py
test_fake_initial_case_insensitive
test_graph.py
test_loader.py
test_migrations
test_migrations_atomic_operation
test_migrations_backwards_deps_1
test_migrations_bad_pyc
test_migrations_clashing_prefix
test_migrations_conflict
test_migrations_conflict_long_name
test_migrations_custom_user
test_migrations_empty
test_migrations_fake_split_initial
test_migrations_first
test_migrations_initial_false
test_migrations_namespace_package
test_migrations_no_ancestor
test_migrations_no_changes
test_migrations_no_default
test_migrations_no_init
test_migrations_no_operations
test_migrations_non_atomic
test_migrations_order
test_migrations_plan
test_migrations_private
test_migrations_run_before
test_migrations_squashed
test_migrations_squashed_complex
test_migrations_squashed_complex_multi_apps
test_migrations_squashed_erroneous
test_migrations_squashed_extra
test_migrations_squashed_ref_squashed
test_migrations_unmigdep
test_multidb.py
test_operations.py
test_optimizer.py
test_questioner.py
test_state.py
test_writer.py

/workspace/django__django__4.0/tests/migrations/deprecated_field_migrations:
0001_initial.py
0002_remove_ipaddressfield_ip.py
__init__.py

/workspace/django__django__4.0/tests/migrations/faulty_migrations:
__init__.py
file.py
namespace

/workspace/django__django__4.0/tests/migrations/faulty_migrations/namespace:
foo

/workspace/django__django__4.0/tests/migrations/faulty_migrations/namespace/foo:
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps:
__init__.py
alter_fk
conflicting_app_with_dependencies
lookuperror_a
lookuperror_b
lookuperror_c
migrated_app
migrated_unapplied_app
mutate_state_a
mutate_state_b
normal
unmigrated_app
unmigrated_app_simple
unmigrated_app_syncdb
unspecified_app_with_conflict
with_package_model
without_init_file

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk:
__init__.py
author_app
book_app

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/author_app:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/author_app/migrations:
0001_initial.py
0002_alter_id.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/book_app:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/book_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_a:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_a/migrations:
0001_initial.py
0002_a2.py
0003_a3.py
0004_a4.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_b:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_b/migrations:
0001_initial.py
0002_b2.py
0003_b3.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_c:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_c/migrations:
0001_initial.py
0002_c2.py
0003_c3.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_app:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_unapplied_app:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_a:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_a/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_b:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_b/migrations:
0001_initial.py
0002_add_field.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/normal:
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unmigrated_app:
__init__.py
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unmigrated_app_simple:
__init__.py
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unmigrated_app_syncdb:
__init__.py
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unspecified_app_with_conflict:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/with_package_model:
__init__.py
models

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/with_package_model/models:
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/without_init_file:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/without_init_file/migrations:

/workspace/django__django__4.0/tests/migrations/related_models_app:
__init__.py

/workspace/django__django__4.0/tests/migrations/test_add_many_to_many_field_initial:
0001_initial.py
0002_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_auto_now_add:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_fake_initial_case_insensitive:
fake_initial
initial

/workspace/django__django__4.0/tests/migrations/test_fake_initial_case_insensitive/fake_initial:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_fake_initial_case_insensitive/initial:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_atomic_operation:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_backwards_deps_1:
0001_initial.py
0002_second.py

/workspace/django__django__4.0/tests/migrations/test_migrations_bad_pyc:
0001_initial.pyc-tpl
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_clashing_prefix:
__init__.py
a.py
ab.py

/workspace/django__django__4.0/tests/migrations/test_migrations_conflict:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_conflict_long_name:
0001_initial.py
0002_conflicting_second_migration_with_long_name.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_custom_user:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_empty:
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_fake_split_initial:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_first:
__init__.py
second.py
thefirst.py

/workspace/django__django__4.0/tests/migrations/test_migrations_initial_false:
0001_not_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_namespace_package:
0001_initial.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_ancestor:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_changes:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_default:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_init:

/workspace/django__django__4.0/tests/migrations/test_migrations_no_operations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_non_atomic:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_order:
0001.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_plan:
0001_initial.py
0002_second.py
0003_third.py
0004_fourth.py
0005_fifth.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_private:
0001_initial.py
__init__.py
_util.py
~util.py

/workspace/django__django__4.0/tests/migrations/test_migrations_run_before:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed:
0001_initial.py
0001_squashed_0002.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex:
1_auto.py
2_auto.py
3_auto.py
3_squashed_5.py
4_auto.py
5_auto.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex_multi_apps:
__init__.py
app1
app2

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex_multi_apps/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex_multi_apps/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_erroneous:
1_auto.py
2_auto.py
3_squashed_5.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_extra:
0001_initial.py
0001_squashed_0002.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_ref_squashed:
__init__.py
app1
app2

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_ref_squashed/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_ref_squashed/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_unmigdep:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations2:
__init__.py
models.py
test_migrations_2
test_migrations_2_first
test_migrations_2_no_deps

/workspace/django__django__4.0/tests/migrations2/test_migrations_2:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations2/test_migrations_2_first:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations2/test_migrations_2_no_deps:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/model_enums:
__init__.py
tests.py

/workspace/django__django__4.0/tests/model_fields:
4x8.png
8x4.png
__init__.py
models.py
test_autofield.py
test_binaryfield.py
test_booleanfield.py
test_charfield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_field_flags.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_foreignkey.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_jsonfield.py
test_manytomanyfield.py
test_promises.py
test_slugfield.py
test_textfield.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/model_forms:
__init__.py
models.py
test.png
test2.png
test_modelchoicefield.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/model_formsets:
__init__.py
models.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/model_formsets_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/model_indexes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/model_inheritance:
__init__.py
models.py
test_abstract_inheritance.py
tests.py

/workspace/django__django__4.0/tests/model_inheritance_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/model_meta:
__init__.py
models.py
results.py
tests.py

/workspace/django__django__4.0/tests/model_options:
__init__.py
apps.py
models
test_default_pk.py
test_default_related_name.py
test_tablespaces.py

/workspace/django__django__4.0/tests/model_options/models:
__init__.py
default_related_name.py
tablespaces.py

/workspace/django__django__4.0/tests/model_package:
__init__.py
models
tests.py

/workspace/django__django__4.0/tests/model_package/models:
__init__.py
article.py
publication.py

/workspace/django__django__4.0/tests/model_regress:
__init__.py
models.py
test_pickle.py
test_state.py
tests.py

/workspace/django__django__4.0/tests/modeladmin:
__init__.py
models.py
test_actions.py
test_checks.py
tests.py

/workspace/django__django__4.0/tests/multiple_database:
__init__.py
fixtures
models.py
routers.py
tests.py

/workspace/django__django__4.0/tests/multiple_database/fixtures:
multidb-common.json
multidb.default.json
multidb.other.json
pets.json

/workspace/django__django__4.0/tests/mutually_referential:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/nested_foreign_keys:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/no_models:
__init__.py
tests.py

/workspace/django__django__4.0/tests/null_fk:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/null_fk_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/null_queries:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/one_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/or_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/order_with_respect_to:
__init__.py
base_tests.py
models.py
tests.py

/workspace/django__django__4.0/tests/ordering:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/pagination:
__init__.py
custom.py
models.py
tests.py

/workspace/django__django__4.0/tests/postgres_tests:
__init__.py
array_default_migrations
array_index_migrations
fields.py
integration_settings.py
migrations
models.py
test_aggregates.py
test_apps.py
test_array.py
test_bulk_update.py
test_citext.py
test_constraints.py
test_functions.py
test_hstore.py
test_indexes.py
test_integration.py
test_introspection.py
test_operations.py
test_ranges.py
test_search.py
test_signals.py
test_trigram.py
test_unaccent.py

/workspace/django__django__4.0/tests/postgres_tests/array_default_migrations:
0001_initial.py
0002_integerarraymodel_field_2.py
__init__.py

/workspace/django__django__4.0/tests/postgres_tests/array_index_migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/postgres_tests/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__4.0/tests/prefetch_related:
__init__.py
models.py
test_prefetch_related_objects.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/project_template:
__init__.py
test_settings.py
urls.py
views.py

/workspace/django__django__4.0/tests/properties:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/proxy_model_inheritance:
__init__.py
app1
app2
models.py
tests.py

/workspace/django__django__4.0/tests/proxy_model_inheritance/app1:
__init__.py
models.py

/workspace/django__django__4.0/tests/proxy_model_inheritance/app2:
__init__.py
models.py

/workspace/django__django__4.0/tests/proxy_models:
__init__.py
admin.py
fixtures
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/proxy_models/fixtures:
mypeople.json

/workspace/django__django__4.0/tests/queries:
__init__.py
models.py
test_bulk_update.py
test_contains.py
test_db_returning.py
test_explain.py
test_iterator.py
test_q.py
test_qs_combinators.py
test_query.py
tests.py

/workspace/django__django__4.0/tests/queryset_pickle:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/raw_query:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/redirects_tests:
__init__.py
tests.py
urls.py

/workspace/django__django__4.0/tests/requests:
__init__.py
test_accept_header.py
test_data_upload_settings.py
tests.py

/workspace/django__django__4.0/tests/requirements:
mysql.txt
oracle.txt
postgres.txt
py3.txt

/workspace/django__django__4.0/tests/reserved_names:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/resolve_url:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/responses:
__init__.py
test_cookie.py
test_fileresponse.py
tests.py

/workspace/django__django__4.0/tests/reverse_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/save_delete_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/schema:
__init__.py
fields.py
models.py
test_logging.py
tests.py

/workspace/django__django__4.0/tests/select_for_update:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/select_related:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/select_related_onetoone:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/select_related_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/serializers:
__init__.py
models
test_data.py
test_deserializedobject.py
test_json.py
test_jsonl.py
test_natural.py
test_xml.py
test_yaml.py
tests.py

/workspace/django__django__4.0/tests/serializers/models:
__init__.py
base.py
data.py
multi_table.py
natural.py

/workspace/django__django__4.0/tests/servers:
__init__.py
another_app
fixtures
media
models.py
static
test_basehttp.py
test_liveserverthread.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/servers/another_app:
__init__.py
static

/workspace/django__django__4.0/tests/servers/another_app/static:
another_app

/workspace/django__django__4.0/tests/servers/another_app/static/another_app:
another_app_static_file.txt

/workspace/django__django__4.0/tests/servers/fixtures:
testdata.json

/workspace/django__django__4.0/tests/servers/media:
example_media_file.txt

/workspace/django__django__4.0/tests/servers/static:
example_static_file.txt

/workspace/django__django__4.0/tests/sessions_tests:
__init__.py
models.py
no_clear_expired.py
tests.py

/workspace/django__django__4.0/tests/settings_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/shell:
__init__.py
tests.py

/workspace/django__django__4.0/tests/shortcuts:
__init__.py
jinja2
templates
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/shortcuts/jinja2:
shortcuts

/workspace/django__django__4.0/tests/shortcuts/jinja2/shortcuts:
using.html

/workspace/django__django__4.0/tests/shortcuts/templates:
shortcuts

/workspace/django__django__4.0/tests/shortcuts/templates/shortcuts:
render_test.html
using.html

/workspace/django__django__4.0/tests/signals:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/signed_cookies_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/signing:
__init__.py
tests.py

/workspace/django__django__4.0/tests/sitemaps_tests:
__init__.py
base.py
models.py
templates
test_generic.py
test_http.py
test_https.py
test_management.py
test_utils.py
urls

/workspace/django__django__4.0/tests/sitemaps_tests/templates:
custom_sitemap.xml
custom_sitemap_index.xml

/workspace/django__django__4.0/tests/sitemaps_tests/urls:
__init__.py
empty.py
http.py
https.py
index_only.py

/workspace/django__django__4.0/tests/sites_framework:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__4.0/tests/sites_framework/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/sites_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/staticfiles_tests:
__init__.py
apps
cases.py
project
settings.py
storage.py
test_checks.py
test_finders.py
test_forms.py
test_handlers.py
test_liveserver.py
test_management.py
test_storage.py
test_templatetags.py
test_utils.py
test_views.py
urls

/workspace/django__django__4.0/tests/staticfiles_tests/apps:
__init__.py
no_label
staticfiles_config.py
test

/workspace/django__django__4.0/tests/staticfiles_tests/apps/no_label:
__init__.py
static

/workspace/django__django__4.0/tests/staticfiles_tests/apps/no_label/static:
file2.txt

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test:
__init__.py
otherdir
static

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/otherdir:
odfile.txt

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/static:
test

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/static/test:
%2F.txt
CVS
file.txt
file1.txt
nonascii.css
test.ignoreme
vendor
window.png
⊗.txt

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/static/test/vendor:
module.js

/workspace/django__django__4.0/tests/staticfiles_tests/project:
documents
faulty
loop
pathlib
prefixed
site_media

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents:
absolute_root.css
cached
nested
styles_root.css
subdir
test
test.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached:
absolute.css
css
img
import.css
other.css
relative.css
source_map.js
source_map.js.map
source_map_sensitive.js
styles.css
styles_insensitive.css
test.js
url.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/css:
fonts
fragments.css
ignored.css
img
window.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/css/fonts:
font.eot
font.svg

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/css/img:
window.png

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/img:
relative.png

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/nested:
css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/nested/css:
base.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/subdir:
test.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/test:
backup~
camelCase.txt
file.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/faulty:
faulty.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/loop:
bar.css
foo.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/pathlib:
pathlib.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/prefixed:
test.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/site_media:
media
static

/workspace/django__django__4.0/tests/staticfiles_tests/project/site_media/media:
media-file.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/site_media/static:
testfile.txt

/workspace/django__django__4.0/tests/staticfiles_tests/urls:
__init__.py
default.py
helper.py

/workspace/django__django__4.0/tests/str:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/string_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/swappable_models:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/syndication_tests:
__init__.py
feeds.py
models.py
templates
tests.py
urls.py

/workspace/django__django__4.0/tests/syndication_tests/templates:
syndication

/workspace/django__django__4.0/tests/syndication_tests/templates/syndication:
description.html
description_context.html
title.html
title_context.html

/workspace/django__django__4.0/tests/template_backends:
__init__.py
apps
forbidden
jinja2
template_strings
templates
test_django.py
test_dummy.py
test_jinja2.py
test_utils.py

/workspace/django__django__4.0/tests/template_backends/apps:
__init__.py
good
importerror

/workspace/django__django__4.0/tests/template_backends/apps/good:
__init__.py
templatetags

/workspace/django__django__4.0/tests/template_backends/apps/good/templatetags:
__init__.py
empty.py
good_tags.py
override.py
subpackage

/workspace/django__django__4.0/tests/template_backends/apps/good/templatetags/subpackage:
__init__.py
tags.py

/workspace/django__django__4.0/tests/template_backends/apps/importerror:
__init__.py
templatetags

/workspace/django__django__4.0/tests/template_backends/apps/importerror/templatetags:
__init__.py
broken_tags.py

/workspace/django__django__4.0/tests/template_backends/forbidden:
template_backends

/workspace/django__django__4.0/tests/template_backends/forbidden/template_backends:
hello.html

/workspace/django__django__4.0/tests/template_backends/jinja2:
template_backends

/workspace/django__django__4.0/tests/template_backends/jinja2/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html
syntax_error2.html
syntax_error_include.html

/workspace/django__django__4.0/tests/template_backends/template_strings:
template_backends

/workspace/django__django__4.0/tests/template_backends/template_strings/template_backends:
csrf.html
hello.html

/workspace/django__django__4.0/tests/template_backends/templates:
template_backends

/workspace/django__django__4.0/tests/template_backends/templates/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html

/workspace/django__django__4.0/tests/template_loader:
__init__.py
template_strings
templates
tests.py

/workspace/django__django__4.0/tests/template_loader/template_strings:
template_loader

/workspace/django__django__4.0/tests/template_loader/template_strings/template_loader:
hello.html

/workspace/django__django__4.0/tests/template_loader/templates:
template_loader

/workspace/django__django__4.0/tests/template_loader/templates/template_loader:
goodbye.html
hello.html
request.html

/workspace/django__django__4.0/tests/template_tests:
__init__.py
alternate_urls.py
annotated_tag_function.py
broken_tag.py
eggs
filter_tests
jinja2
other_templates
recursive_templates
relative_templates
syntax_tests
templates
templatetags
test_autoreloader.py
test_base.py
test_callables.py
test_context.py
test_custom.py
test_engine.py
test_extends.py
test_extends_relative.py
test_library.py
test_loaders.py
test_logging.py
test_nodelist.py
test_origin.py
test_parser.py
test_response.py
test_smartif.py
tests.py
urls.py
utils.py
views.py

/workspace/django__django__4.0/tests/template_tests/eggs:
tagsegg.egg

/workspace/django__django__4.0/tests/template_tests/filter_tests:
__init__.py
test_add.py
test_addslashes.py
test_autoescape.py
test_capfirst.py
test_center.py
test_chaining.py
test_cut.py
test_date.py
test_default.py
test_default_if_none.py
test_dictsort.py
test_dictsortreversed.py
test_divisibleby.py
test_escape.py
test_escapejs.py
test_filesizeformat.py
test_first.py
test_floatformat.py
test_force_escape.py
test_get_digit.py
test_iriencode.py
test_join.py
test_json_script.py
test_last.py
test_length.py
test_length_is.py
test_linebreaks.py
test_linebreaksbr.py
test_linenumbers.py
test_ljust.py
test_lower.py
test_make_list.py
test_phone2numeric.py
test_pluralize.py
test_random.py
test_rjust.py
test_safe.py
test_safeseq.py
test_slice.py
test_slugify.py
test_stringformat.py
test_striptags.py
test_time.py
test_timesince.py
test_timeuntil.py
test_title.py
test_truncatechars.py
test_truncatechars_html.py
test_truncatewords.py
test_truncatewords_html.py
test_unordered_list.py
test_upper.py
test_urlencode.py
test_urlize.py
test_urlizetrunc.py
test_wordcount.py
test_wordwrap.py
test_yesno.py
timezone_utils.py

/workspace/django__django__4.0/tests/template_tests/jinja2:
template_tests

/workspace/django__django__4.0/tests/template_tests/jinja2/template_tests:
using.html

/workspace/django__django__4.0/tests/template_tests/other_templates:
priority
test_dirs.html

/workspace/django__django__4.0/tests/template_tests/other_templates/priority:
foo.html

/workspace/django__django__4.0/tests/template_tests/recursive_templates:
fs
fs2
fs3

/workspace/django__django__4.0/tests/template_tests/recursive_templates/fs:
extend-missing.html
one.html
other-recursive.html
recursive.html
self.html
three.html
two.html

/workspace/django__django__4.0/tests/template_tests/recursive_templates/fs2:
recursive.html

/workspace/django__django__4.0/tests/template_tests/recursive_templates/fs3:
recursive.html

/workspace/django__django__4.0/tests/template_tests/relative_templates:
dir1
error_extends.html
error_include.html
one.html
one_var.html
three.html
two.html

/workspace/django__django__4.0/tests/template_tests/relative_templates/dir1:
dir2
looped.html
one.html
one1.html
one2.html
one3.html
three.html
two.html

/workspace/django__django__4.0/tests/template_tests/relative_templates/dir1/dir2:
inc1.html
inc2.html
inc3.html
include_content.html
one.html

/workspace/django__django__4.0/tests/template_tests/syntax_tests:
__init__.py
i18n
test_autoescape.py
test_basic.py
test_builtins.py
test_cache.py
test_comment.py
test_cycle.py
test_exceptions.py
test_extends.py
test_filter_syntax.py
test_filter_tag.py
test_firstof.py
test_for.py
test_if.py
test_if_changed.py
test_include.py
test_invalid_string.py
test_list_index.py
test_load.py
test_lorem.py
test_multiline.py
test_named_endblock.py
test_now.py
test_numpy.py
test_regroup.py
test_resetcycle.py
test_setup.py
test_simple_tag.py
test_spaceless.py
test_static.py
test_template_tag.py
test_url.py
test_verbatim.py
test_width_ratio.py
test_with.py

/workspace/django__django__4.0/tests/template_tests/syntax_tests/i18n:
__init__.py
base.py
test_blocktranslate.py
test_filters.py
test_get_available_languages.py
test_get_current_language.py
test_get_current_language_bidi.py
test_get_language_info.py
test_get_language_info_list.py
test_language.py
test_translate.py
test_underscore_syntax.py

/workspace/django__django__4.0/tests/template_tests/templates:
27584_child.html
27584_parent.html
27956_child.html
27956_parent.html
broken_base.html
first
include_tpl.html
included_base.html
included_content.html
inclusion.html
inclusion_base.html
inclusion_extends1.html
inclusion_extends2.html
index.html
priority
recursive_include.html
response.html
second
ssi include with spaces.html
ssi_include.html
template_tests
test_context.html
test_context_stack.html
test_extends_error.html
test_incl_tag_use_l10n.html
test_include_error.html

/workspace/django__django__4.0/tests/template_tests/templates/first:
test.html

/workspace/django__django__4.0/tests/template_tests/templates/priority:
foo.html

/workspace/django__django__4.0/tests/template_tests/templates/second:
test.html

/workspace/django__django__4.0/tests/template_tests/templates/template_tests:
using.html

/workspace/django__django__4.0/tests/template_tests/templatetags:
__init__.py
bad_tag.py
custom.py
inclusion.py
subpackage
tag_27584.py
testtags.py

/workspace/django__django__4.0/tests/template_tests/templatetags/subpackage:
__init__.py
echo.py

/workspace/django__django__4.0/tests/templates:
base.html
comments
custom_admin
extended.html
form_view.html
login.html
views

/workspace/django__django__4.0/tests/templates/comments:
comment_notification_email.txt

/workspace/django__django__4.0/tests/templates/custom_admin:
add_form.html
app_index.html
change_form.html
change_list.html
delete_confirmation.html
delete_selected_confirmation.html
index.html
login.html
logout.html
object_history.html
password_change_done.html
password_change_form.html
popup_response.html

/workspace/django__django__4.0/tests/templates/views:
article_archive_day.html
article_archive_month.html
article_confirm_delete.html
article_detail.html
article_form.html
article_list.html
datearticle_archive_month.html
urlarticle_detail.html
urlarticle_form.html

/workspace/django__django__4.0/tests/test_client:
__init__.py
auth_backends.py
test_conditional_content_removal.py
test_fakepayload.py
tests.py
urls.py
urls_middleware_urlconf.py
views.py

/workspace/django__django__4.0/tests/test_client_regress:
__init__.py
auth_backends.py
bad_templates
context_processors.py
models.py
session.py
templates
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/test_client_regress/bad_templates:
404.html

/workspace/django__django__4.0/tests/test_client_regress/templates:
request_context.html
unicode.html

/workspace/django__django__4.0/tests/test_exceptions:
__init__.py
test_validation_error.py

/workspace/django__django__4.0/tests/test_runner:
__init__.py
models.py
runner.py
test_debug_sql.py
test_discover_runner.py
test_parallel.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps:
__init__.py
buffer
databases
sample
simple
tagged

/workspace/django__django__4.0/tests/test_runner_apps/buffer:
tests_buffer.py

/workspace/django__django__4.0/tests/test_runner_apps/databases:
__init__.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps/sample:
__init__.py
doctests.py
empty.py
pattern_tests.py
tests
tests_sample.py

/workspace/django__django__4.0/tests/test_runner_apps/sample/tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps/simple:
__init__.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps/tagged:
__init__.py
tests.py
tests_inheritance.py
tests_syntax_error.py

/workspace/django__django__4.0/tests/test_utils:
__init__.py
fixtures
models.py
templates
test_simpletestcase.py
test_testcase.py
test_transactiontestcase.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/test_utils/fixtures:
should_not_be_loaded.json

/workspace/django__django__4.0/tests/test_utils/templates:
template_used

/workspace/django__django__4.0/tests/test_utils/templates/template_used:
alternative.html
base.html
extends.html
include.html

/workspace/django__django__4.0/tests/timezones:
__init__.py
admin.py
forms.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/transaction_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/transactions:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/unmanaged_models:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/update:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/update_only_fields:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/urlpatterns:
__init__.py
converter_urls.py
converters.py
included_urls.py
more_urls.py
path_base64_urls.py
path_dynamic_urls.py
path_same_name_urls.py
path_urls.py
test_resolvers.py
tests.py
views.py

/workspace/django__django__4.0/tests/urlpatterns_reverse:
__init__.py
erroneous_urls.py
extra_urls.py
included_app_urls.py
included_named_urls.py
included_named_urls2.py
included_namespace_urls.py
included_no_kwargs_urls.py
included_urls.py
included_urls2.py
method_view_urls.py
middleware.py
named_urls.py
named_urls_conflict.py
namespace_urls.py
nested_urls.py
no_urls.py
nonimported_module.py
reverse_lazy_urls.py
test_localeregexdescriptor.py
tests.py
translations
urlconf_inner.py
urlconf_outer.py
urls.py
urls_error_handlers.py
urls_error_handlers_callables.py
urls_without_handlers.py
utils.py
views.py
views_broken.py

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations:
__init__.py
locale

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale:
__init__.py
de
fr

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/de:
LC_MESSAGES
__init__.py

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/fr:
LC_MESSAGES
__init__.py

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/user_commands:
__init__.py
eggs
management
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/user_commands/eggs:
basic.egg

/workspace/django__django__4.0/tests/user_commands/management:
__init__.py
commands

/workspace/django__django__4.0/tests/user_commands/management/commands:
__init__.py
common_args.py
dance.py
hal.py
mutually_exclusive_required.py
no_system_checks.py
no_translations.py
outputwrapper.py
required_constant_option.py
required_list_option.py
required_option.py
reverse_url.py
set_option.py
specific_system_checks.py
subparser.py
subparser_dest.py
subparser_required.py
transaction.py

/workspace/django__django__4.0/tests/utils_tests:
__init__.py
archives
eggs
files
models.py
test_archive.py
test_autoreload.py
test_baseconv.py
test_connection.py
test_crypto.py
test_datastructures.py
test_dateformat.py
test_dateparse.py
test_datetime_safe.py
test_decorators.py
test_duration.py
test_encoding.py
test_feedgenerator.py
test_functional.py
test_hashable.py
test_html.py
test_http.py
test_inspect.py
test_ipv6.py
test_jslex.py
test_lazyobject.py
test_lorem_ipsum.py
test_module
test_module_loading.py
test_no_submodule.py
test_numberformat.py
test_os_utils.py
test_regex_helper.py
test_safestring.py
test_simplelazyobject.py
test_termcolors.py
test_text.py
test_timesince.py
test_timezone.py
test_topological_sort.py
test_tree.py
traversal_archives
utils.py

/workspace/django__django__4.0/tests/utils_tests/archives:
foobar.tar
foobar.tar.bz2
foobar.tar.gz
foobar.tar.lzma
foobar.tar.xz
foobar.zip
leadpath_foobar.tar
leadpath_foobar.tar.bz2
leadpath_foobar.tar.gz
leadpath_foobar.tar.lzma
leadpath_foobar.tar.xz
leadpath_foobar.zip

/workspace/django__django__4.0/tests/utils_tests/eggs:
test_egg.egg

/workspace/django__django__4.0/tests/utils_tests/files:
strip_tags1.html
strip_tags2.txt

/workspace/django__django__4.0/tests/utils_tests/test_module:
__init__.py
__main__.py
another_bad_module.py
another_good_module.py
bad_module.py
child_module
good_module.py

/workspace/django__django__4.0/tests/utils_tests/test_module/child_module:
__init__.py
grandchild_module.py

/workspace/django__django__4.0/tests/utils_tests/traversal_archives:
traversal.tar
traversal_absolute.tar
traversal_disk_win.tar
traversal_disk_win.zip

/workspace/django__django__4.0/tests/validation:
__init__.py
models.py
test_custom_messages.py
test_error_messages.py
test_picklable.py
test_unique.py
test_validators.py
tests.py

/workspace/django__django__4.0/tests/validators:
__init__.py
invalid_urls.txt
tests.py
valid_urls.txt

/workspace/django__django__4.0/tests/version:
__init__.py
tests.py

/workspace/django__django__4.0/tests/view_tests:
__init__.py
app0
app1
app2
app3
app4
app5
default_urls.py
generic_urls.py
locale
media
models.py
regression_21530_urls.py
templates
templatetags
tests
urls.py
views.py

/workspace/django__django__4.0/tests/view_tests/app0:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app0/locale:
en

/workspace/django__django__4.0/tests/view_tests/app0/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app0/locale/en/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app1:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app1/locale:
fr

/workspace/django__django__4.0/tests/view_tests/app1/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app1/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app2:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app2/locale:
fr

/workspace/django__django__4.0/tests/view_tests/app2/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app2/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app3:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app3/locale:
es_AR

/workspace/django__django__4.0/tests/view_tests/app3/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app3/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app4:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app4/locale:
es_AR

/workspace/django__django__4.0/tests/view_tests/app4/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app4/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app5:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app5/locale:
fr

/workspace/django__django__4.0/tests/view_tests/app5/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app5/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale:
de
en_GB
es
fr
nl
pt
ru

/workspace/django__django__4.0/tests/view_tests/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/de/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/en_GB/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/es/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/view_tests/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/pt/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/ru/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/media:
%2F.txt
file.txt
file.txt.gz
file.unknown
long-line.txt
subdir

/workspace/django__django__4.0/tests/view_tests/media/subdir:
visible

/workspace/django__django__4.0/tests/view_tests/templates:
debug
jsi18n-multi-catalogs.html
jsi18n.html
my_technical_500.html
my_technical_500.txt

/workspace/django__django__4.0/tests/view_tests/templates/debug:
template_error.html
template_exception.html

/workspace/django__django__4.0/tests/view_tests/templatetags:
__init__.py
debugtags.py

/workspace/django__django__4.0/tests/view_tests/tests:
__init__.py
test_csrf.py
test_debug.py
test_defaults.py
test_i18n.py
test_json.py
test_specials.py
test_static.py

/workspace/django__django__4.0/tests/wsgi:
__init__.py
tests.py
urls.py
wsgi.py

[Select the relevant files and use repo map to get highlevel representation and structure of repo]


============================================================



ACTION:

THOUGHT: Based on the PR description, the issue is related to SQL statement creation where `references_column` is always false due to a Table instance being passed instead of a string to Columns. This is likely in the database-related code.

Let me first search for relevant files:
COMMAND:
cd /workspace/django__django__4.0
find . -type f -exec grep -l "_create_unique_sql" {} \;

============================================================



OBSERVATION:

./tests/schema/tests.py
./docs/releases/2.2.txt
./django/db/backends/base/schema.py
./django/db/models/constraints.py


============================================================



ACTION:

THOUGHT: Great, I found the relevant files. Let me examine them to understand where the issue might be:

1. First, let's look at the constraints.py file since it's likely where the unique constraint SQL is created:
CODE:
open_file('/workspace/django__django__4.0/django/db/models/constraints.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/constraints.py (257 lines total)]
1|from enum import Enum
2|
3|from django.db.models.expressions import ExpressionList, F
4|from django.db.models.indexes import IndexExpression
5|from django.db.models.query_utils import Q
6|from django.db.models.sql.query import Query
7|from django.utils.version import PY310
8|
9|__all__ = ['CheckConstraint', 'Deferrable', 'UniqueConstraint']
10|
11|
12|class BaseConstraint:
13|    def __init__(self, name):
14|        self.name = name
15|
16|    @property
17|    def contains_expressions(self):
18|        return False
19|
20|    def constraint_sql(self, model, schema_editor):
21|        raise NotImplementedError('This method must be implemented by a subclass.')
22|
23|    def create_sql(self, model, schema_editor):
24|        raise NotImplementedError('This method must be implemented by a subclass.')
25|
26|    def remove_sql(self, model, schema_editor):
27|        raise NotImplementedError('This method must be implemented by a subclass.')
28|
29|    def deconstruct(self):
30|        path = '%s.%s' % (self.__class__.__module__, self.__class__.__name__)
31|        path = path.replace('django.db.models.constraints', 'django.db.models')
32|        return (path, (), {'name': self.name})
33|
34|    def clone(self):
35|        _, args, kwargs = self.deconstruct()
36|        return self.__class__(*args, **kwargs)
37|
38|
39|class CheckConstraint(BaseConstraint):
40|    def __init__(self, *, check, name):
41|        self.check = check
42|        if not getattr(check, 'conditional', False):
43|            raise TypeError(
44|                'CheckConstraint.check must be a Q instance or boolean '
45|                'expression.'
46|            )
47|        super().__init__(name)
48|
49|    def _get_check_sql(self, model, schema_editor):
50|        query = Query(model=model, alias_cols=False)
51|        where = query.build_where(self.check)
52|        compiler = query.get_compiler(connection=schema_editor.connection)
53|        sql, params = where.as_sql(compiler, schema_editor.connection)
54|        return sql % tuple(schema_editor.quote_value(p) for p in params)
55|
56|    def constraint_sql(self, model, schema_editor):
57|        check = self._get_check_sql(model, schema_editor)
58|        return schema_editor._check_sql(self.name, check)
59|
60|    def create_sql(self, model, schema_editor):
61|        check = self._get_check_sql(model, schema_editor)
62|        return schema_editor._create_check_sql(model, self.name, check)
63|
64|    def remove_sql(self, model, schema_editor):
65|        return schema_editor._delete_check_sql(model, self.name)
66|
67|    def __repr__(self):
68|        return '<%s: check=%s name=%s>' % (
69|            self.__class__.__qualname__,
70|            self.check,
71|            repr(self.name),
72|        )
73|
74|    def __eq__(self, other):
75|        if isinstance(other, CheckConstraint):
76|            return self.name == other.name and self.check == other.check
77|        return super().__eq__(other)
78|
79|    def deconstruct(self):
80|        path, args, kwargs = super().deconstruct()
81|        kwargs['check'] = self.check
82|        return path, args, kwargs
83|
84|
85|class Deferrable(Enum):
86|    DEFERRED = 'deferred'
87|    IMMEDIATE = 'immediate'
88|
89|    # A similar format is used in Python 3.10+.
90|    if not PY310:
91|        def __repr__(self):
92|            return '%s.%s' % (self.__class__.__qualname__, self._name_)
93|
94|
95|class UniqueConstraint(BaseConstraint):
96|    def __init__(
97|        self,
98|        *expressions,
99|        fields=(),
100|        name=None,
101|        condition=None,
102|        deferrable=None,
103|        include=None,
104|        opclasses=(),
105|    ):
106|        if not name:
107|            raise ValueError('A unique constraint must be named.')
108|        if not expressions and not fields:
109|            raise ValueError(
110|                'At least one field or expression is required to define a '
111|                'unique constraint.'
112|            )
113|        if expressions and fields:
114|            raise ValueError(
115|                'UniqueConstraint.fields and expressions are mutually exclusive.'
116|            )
117|        if not isinstance(condition, (type(None), Q)):
118|            raise ValueError('UniqueConstraint.condition must be a Q instance.')
119|        if condition and deferrable:
120|            raise ValueError(
121|                'UniqueConstraint with conditions cannot be deferred.'
122|            )
123|        if include and deferrable:
124|            raise ValueError(
125|                'UniqueConstraint with include fields cannot be deferred.'
126|            )
127|        if opclasses and deferrable:
128|            raise ValueError(
129|                'UniqueConstraint with opclasses cannot be deferred.'
130|            )
131|        if expressions and deferrable:
132|            raise ValueError(
133|                'UniqueConstraint with expressions cannot be deferred.'
134|            )
135|        if expressions and opclasses:
136|            raise ValueError(
137|                'UniqueConstraint.opclasses cannot be used with expressions. '
138|                'Use django.contrib.postgres.indexes.OpClass() instead.'
139|            )
140|        if not isinstance(deferrable, (type(None), Deferrable)):
141|            raise ValueError(
142|                'UniqueConstraint.deferrable must be a Deferrable instance.'
143|            )
144|        if not isinstance(include, (type(None), list, tuple)):
145|            raise ValueError('UniqueConstraint.include must be a list or tuple.')
146|        if not isinstance(opclasses, (list, tuple)):
147|            raise ValueError('UniqueConstraint.opclasses must be a list or tuple.')
148|        if opclasses and len(fields) != len(opclasses):
149|            raise ValueError(
150|                'UniqueConstraint.fields and UniqueConstraint.opclasses must '
151|                'have the same number of elements.'
152|            )
153|        self.fields = tuple(fields)
154|        self.condition = condition
155|        self.deferrable = deferrable
156|        self.include = tuple(include) if include else ()
157|        self.opclasses = opclasses
158|        self.expressions = tuple(
159|            F(expression) if isinstance(expression, str) else expression
160|            for expression in expressions
161|        )
162|        super().__init__(name)
163|
164|    @property
165|    def contains_expressions(self):
166|        return bool(self.expressions)
167|
168|    def _get_condition_sql(self, model, schema_editor):
169|        if self.condition is None:
170|            return None
171|        query = Query(model=model, alias_cols=False)
172|        where = query.build_where(self.condition)
173|        compiler = query.get_compiler(connection=schema_editor.connection)
174|        sql, params = where.as_sql(compiler, schema_editor.connection)
175|        return sql % tuple(schema_editor.quote_value(p) for p in params)
176|
177|    def _get_index_expressions(self, model, schema_editor):
178|        if not self.expressions:
179|            return None
180|        index_expressions = []
181|        for expression in self.expressions:
182|            index_expression = IndexExpression(expression)
183|            index_expression.set_wrapper_classes(schema_editor.connection)
184|            index_expressions.append(index_expression)
185|        return ExpressionList(*index_expressions).resolve_expression(
186|            Query(model, alias_cols=False),
187|        )
188|
189|    def constraint_sql(self, model, schema_editor):
190|        fields = [model._meta.get_field(field_name).column for field_name in self.fields]
191|        include = [model._meta.get_field(field_name).column for field_name in self.include]
192|        condition = self._get_condition_sql(model, schema_editor)
193|        expressions = self._get_index_expressions(model, schema_editor)
194|        return schema_editor._unique_sql(
195|            model, fields, self.name, condition=condition,
196|            deferrable=self.deferrable, include=include,
197|            opclasses=self.opclasses, expressions=expressions,
198|        )
199|
200|    def create_sql(self, model, schema_editor):
201|        fields = [model._meta.get_field(field_name).column for field_name in self.fields]
202|        include = [model._meta.get_field(field_name).column for field_name in self.include]
203|        condition = self._get_condition_sql(model, schema_editor)
204|        expressions = self._get_index_expressions(model, schema_editor)
205|        return schema_editor._create_unique_sql(
206|            model, fields, self.name, condition=condition,
207|            deferrable=self.deferrable, include=include,
208|            opclasses=self.opclasses, expressions=expressions,
209|        )
210|
211|    def remove_sql(self, model, schema_editor):
212|        condition = self._get_condition_sql(model, schema_editor)
213|        include = [model._meta.get_field(field_name).column for field_name in self.include]
214|        expressions = self._get_index_expressions(model, schema_editor)
215|        return schema_editor._delete_unique_sql(
216|            model, self.name, condition=condition, deferrable=self.deferrable,
217|            include=include, opclasses=self.opclasses, expressions=expressions,
218|        )
219|
220|    def __repr__(self):
221|        return '<%s:%s%s%s%s%s%s%s>' % (
222|            self.__class__.__qualname__,
223|            '' if not self.fields else ' fields=%s' % repr(self.fields),
224|            '' if not self.expressions else ' expressions=%s' % repr(self.expressions),
225|            ' name=%s' % repr(self.name),
226|            '' if self.condition is None else ' condition=%s' % self.condition,
227|            '' if self.deferrable is None else ' deferrable=%r' % self.deferrable,
228|            '' if not self.include else ' include=%s' % repr(self.include),
229|            '' if not self.opclasses else ' opclasses=%s' % repr(self.opclasses),
230|        )
231|
232|    def __eq__(self, other):
233|        if isinstance(other, UniqueConstraint):
234|            return (
235|                self.name == other.name and
236|                self.fields == other.fields and
237|                self.condition == other.condition and
238|                self.deferrable == other.deferrable and
239|                self.include == other.include and
240|                self.opclasses == other.opclasses and
241|                self.expressions == other.expressions
242|            )
243|        return super().__eq__(other)
244|
245|    def deconstruct(self):
246|        path, args, kwargs = super().deconstruct()
247|        if self.fields:
248|            kwargs['fields'] = self.fields
249|        if self.condition:
250|            kwargs['condition'] = self.condition
251|        if self.deferrable:
252|            kwargs['deferrable'] = self.deferrable
253|        if self.include:
254|            kwargs['include'] = self.include
255|        if self.opclasses:
256|            kwargs['opclasses'] = self.opclasses
257|        return path, self.expressions, kwargs


============================================================



ACTION:

THOUGHT: Let me also check the schema.py file since it contains the `_create_unique_sql` method:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/base/schema.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1373 lines total)]
1|import logging
2|from datetime import datetime
3|
4|from django.db.backends.ddl_references import (
5|    Columns, Expressions, ForeignKeyName, IndexName, Statement, Table,
6|)
7|from django.db.backends.utils import names_digest, split_identifier
8|from django.db.models import Deferrable, Index
9|from django.db.models.sql import Query
10|from django.db.transaction import TransactionManagementError, atomic
11|from django.utils import timezone
12|
13|logger = logging.getLogger('django.db.backends.schema')
14|
15|
16|def _is_relevant_relation(relation, altered_field):
17|    """
18|    When altering the given field, must constraints on its model from the given
19|    relation be temporarily dropped?
20|    """
21|    field = relation.field
22|    if field.many_to_many:
23|        # M2M reverse field
24|        return False
25|    if altered_field.primary_key and field.to_fields == [None]:
26|        # Foreign key constraint on the primary key, which is being altered.
27|        return True
28|    # Is the constraint targeting the field being altered?
29|    return altered_field.name in field.to_fields
30|
31|
32|def _all_related_fields(model):
33|    return model._meta._get_fields(forward=False, reverse=True, include_hidden=True)
34|
35|
36|def _related_non_m2m_objects(old_field, new_field):
37|    # Filter out m2m objects from reverse relations.
38|    # Return (old_relation, new_relation) tuples.
39|    return zip(
40|        (obj for obj in _all_related_fields(old_field.model) if _is_relevant_relation(obj, old_field)),
41|        (obj for obj in _all_related_fields(new_field.model) if _is_relevant_relation(obj, new_field)),
42|    )
43|
44|
45|class BaseDatabaseSchemaEditor:
46|    """
47|    This class and its subclasses are responsible for emitting schema-changing
48|    statements to the databases - model creation/removal/alteration, field
49|    renaming, index fiddling, and so on.
50|    """
51|
52|    # Overrideable SQL templates
53|    sql_create_table = "CREATE TABLE %(table)s (%(definition)s)"
54|    sql_rename_table = "ALTER TABLE %(old_table)s RENAME TO %(new_table)s"
55|    sql_retablespace_table = "ALTER TABLE %(table)s SET TABLESPACE %(new_tablespace)s"
56|    sql_delete_table = "DROP TABLE %(table)s CASCADE"
57|
58|    sql_create_column = "ALTER TABLE %(table)s ADD COLUMN %(column)s %(definition)s"
59|    sql_alter_column = "ALTER TABLE %(table)s %(changes)s"
60|    sql_alter_column_type = "ALTER COLUMN %(column)s TYPE %(type)s"
61|    sql_alter_column_null = "ALTER COLUMN %(column)s DROP NOT NULL"
62|    sql_alter_column_not_null = "ALTER COLUMN %(column)s SET NOT NULL"
63|    sql_alter_column_default = "ALTER COLUMN %(column)s SET DEFAULT %(default)s"
64|    sql_alter_column_no_default = "ALTER COLUMN %(column)s DROP DEFAULT"
65|    sql_alter_column_no_default_null = sql_alter_column_no_default
66|    sql_alter_column_collate = "ALTER COLUMN %(column)s TYPE %(type)s%(collation)s"
67|    sql_delete_column = "ALTER TABLE %(table)s DROP COLUMN %(column)s CASCADE"
68|    sql_rename_column = "ALTER TABLE %(table)s RENAME COLUMN %(old_column)s TO %(new_column)s"
69|    sql_update_with_default = "UPDATE %(table)s SET %(column)s = %(default)s WHERE %(column)s IS NULL"
70|
71|    sql_unique_constraint = "UNIQUE (%(columns)s)%(deferrable)s"
72|    sql_check_constraint = "CHECK (%(check)s)"
73|    sql_delete_constraint = "ALTER TABLE %(table)s DROP CONSTRAINT %(name)s"
74|    sql_constraint = "CONSTRAINT %(name)s %(constraint)s"
75|
76|    sql_create_check = "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s CHECK (%(check)s)"
77|    sql_delete_check = sql_delete_constraint
78|
79|    sql_create_unique = "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s UNIQUE (%(columns)s)%(deferrable)s"
80|    sql_delete_unique = sql_delete_constraint
81|
82|    sql_create_fk = (
83|        "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s FOREIGN KEY (%(column)s) "
84|        "REFERENCES %(to_table)s (%(to_column)s)%(deferrable)s"
85|    )
86|    sql_create_inline_fk = None
87|    sql_create_column_inline_fk = None
88|    sql_delete_fk = sql_delete_constraint
89|
90|    sql_create_index = "CREATE INDEX %(name)s ON %(table)s (%(columns)s)%(include)s%(extra)s%(condition)s"
91|    sql_create_unique_index = "CREATE UNIQUE INDEX %(name)s ON %(table)s (%(columns)s)%(include)s%(condition)s"
92|    sql_delete_index = "DROP INDEX %(name)s"
93|
94|    sql_create_pk = "ALTER TABLE %(table)s ADD CONSTRAINT %(name)s PRIMARY KEY (%(columns)s)"
95|    sql_delete_pk = sql_delete_constraint
96|
97|    sql_delete_procedure = 'DROP PROCEDURE %(procedure)s'
98|
99|    def __init__(self, connection, collect_sql=False, atomic=True):
100|        self.connection = connection
101|        self.collect_sql = collect_sql
102|        if self.collect_sql:
103|            self.collected_sql = []
104|        self.atomic_migration = self.connection.features.can_rollback_ddl and atomic
105|
106|    # State-managing methods
107|
108|    def __enter__(self):
109|        self.deferred_sql = []
110|        if self.atomic_migration:
111|            self.atomic = atomic(self.connection.alias)
112|            self.atomic.__enter__()
113|        return self
114|
115|    def __exit__(self, exc_type, exc_value, traceback):
116|        if exc_type is None:
117|            for sql in self.deferred_sql:
118|                self.execute(sql)
119|        if self.atomic_migration:
120|            self.atomic.__exit__(exc_type, exc_value, traceback)
121|
122|    # Core utility functions
123|
124|    def execute(self, sql, params=()):
125|        """Execute the given SQL statement, with optional parameters."""
126|        # Don't perform the transactional DDL check if SQL is being collected
127|        # as it's not going to be executed anyway.
128|        if not self.collect_sql and self.connection.in_atomic_block and not self.connection.features.can_rollback_ddl:
129|            raise TransactionManagementError(
130|                "Executing DDL statements while in a transaction on databases "
131|                "that can't perform a rollback is prohibited."
132|            )
133|        # Account for non-string statement objects.
134|        sql = str(sql)
135|        # Log the command we're running, then run it
136|        logger.debug("%s; (params %r)", sql, params, extra={'params': params, 'sql': sql})
137|        if self.collect_sql:
138|            ending = "" if sql.rstrip().endswith(";") else ";"
139|            if params is not None:
140|                self.collected_sql.append((sql % tuple(map(self.quote_value, params))) + ending)
141|            else:
142|                self.collected_sql.append(sql + ending)
143|        else:
144|            with self.connection.cursor() as cursor:
145|                cursor.execute(sql, params)
146|
147|    def quote_name(self, name):
148|        return self.connection.ops.quote_name(name)
149|
150|    def table_sql(self, model):
151|        """Take a model and return its table definition."""
152|        # Add any unique_togethers (always deferred, as some fields might be
153|        # created afterwards, like geometry fields with some backends).
154|        for fields in model._meta.unique_together:
155|            columns = [model._meta.get_field(field).column for field in fields]
156|            self.deferred_sql.append(self._create_unique_sql(model, columns))
157|        # Create column SQL, add FK deferreds if needed.
158|        column_sqls = []
159|        params = []
160|        for field in model._meta.local_fields:
161|            # SQL.
162|            definition, extra_params = self.column_sql(model, field)
163|            if definition is None:
164|                continue
165|            # Check constraints can go on the column SQL here.
166|            db_params = field.db_parameters(connection=self.connection)
167|            if db_params['check']:
168|                definition += ' ' + self.sql_check_constraint % db_params
169|            # Autoincrement SQL (for backends with inline variant).
170|            col_type_suffix = field.db_type_suffix(connection=self.connection)
171|            if col_type_suffix:
172|                definition += ' %s' % col_type_suffix
173|            params.extend(extra_params)
174|            # FK.
175|            if field.remote_field and field.db_constraint:
176|                to_table = field.remote_field.model._meta.db_table
177|                to_column = field.remote_field.model._meta.get_field(field.remote_field.field_name).column
178|                if self.sql_create_inline_fk:
179|                    definition += ' ' + self.sql_create_inline_fk % {
180|                        'to_table': self.quote_name(to_table),
181|                        'to_column': self.quote_name(to_column),
182|                    }
183|                elif self.connection.features.supports_foreign_keys:
184|                    self.deferred_sql.append(self._create_fk_sql(model, field, '_fk_%(to_table)s_%(to_column)s'))
185|            # Add the SQL to our big list.
186|            column_sqls.append('%s %s' % (
187|                self.quote_name(field.column),
188|                definition,
189|            ))
190|            # Autoincrement SQL (for backends with post table definition
191|            # variant).
192|            if field.get_internal_type() in ('AutoField', 'BigAutoField', 'SmallAutoField'):
193|                autoinc_sql = self.connection.ops.autoinc_sql(model._meta.db_table, field.column)
194|                if autoinc_sql:
195|                    self.deferred_sql.extend(autoinc_sql)
196|        constraints = [constraint.constraint_sql(model, self) for constraint in model._meta.constraints]
197|        sql = self.sql_create_table % {
198|            'table': self.quote_name(model._meta.db_table),
199|            'definition': ', '.join(constraint for constraint in (*column_sqls, *constraints) if constraint),
200|        }
201|        if model._meta.db_tablespace:
202|            tablespace_sql = self.connection.ops.tablespace_sql(model._meta.db_tablespace)
203|            if tablespace_sql:
204|                sql += ' ' + tablespace_sql
205|        return sql, params
206|
207|    # Field <-> database mapping functions
208|
209|    def column_sql(self, model, field, include_default=False):
210|        """
211|        Take a field and return its column definition.
212|        The field must already have had set_attributes_from_name() called.
213|        """
214|        # Get the column's type and use that as the basis of the SQL
215|        db_params = field.db_parameters(connection=self.connection)
216|        sql = db_params['type']
217|        params = []
218|        # Check for fields that aren't actually columns (e.g. M2M)
219|        if sql is None:
220|            return None, None
221|        # Collation.
222|        collation = getattr(field, 'db_collation', None)
223|        if collation:
224|            sql += self._collate_sql(collation)
225|        # Work out nullability
226|        null = field.null
227|        # If we were told to include a default value, do so
228|        include_default = include_default and not self.skip_default(field)
229|        if include_default:
230|            default_value = self.effective_default(field)
231|            column_default = ' DEFAULT ' + self._column_default_sql(field)
232|            if default_value is not None:
233|                if self.connection.features.requires_literal_defaults:
234|                    # Some databases can't take defaults as a parameter (oracle)
235|                    # If this is the case, the individual schema backend should
236|                    # implement prepare_default
237|                    sql += column_default % self.prepare_default(default_value)
238|                else:
239|                    sql += column_default
240|                    params += [default_value]
241|        # Oracle treats the empty string ('') as null, so coerce the null
242|        # option whenever '' is a possible value.
243|        if (field.empty_strings_allowed and not field.primary_key and
244|                self.connection.features.interprets_empty_strings_as_nulls):
245|            null = True
246|        if null and not self.connection.features.implied_column_null:
247|            sql += " NULL"
248|        elif not null:
249|            sql += " NOT NULL"
250|        # Primary key/unique outputs
251|        if field.primary_key:
252|            sql += " PRIMARY KEY"
253|        elif field.unique:
254|            sql += " UNIQUE"
255|        # Optionally add the tablespace if it's an implicitly indexed column
256|        tablespace = field.db_tablespace or model._meta.db_tablespace
257|        if tablespace and self.connection.features.supports_tablespaces and field.unique:
258|            sql += " %s" % self.connection.ops.tablespace_sql(tablespace, inline=True)
259|        # Return the sql
260|        return sql, params
261|
262|    def skip_default(self, field):
263|        """
264|        Some backends don't accept default values for certain columns types
265|        (i.e. MySQL longtext and longblob).
266|        """
267|        return False
268|
269|    def skip_default_on_alter(self, field):
270|        """
271|        Some backends don't accept default values for certain columns types
272|        (i.e. MySQL longtext and longblob) in the ALTER COLUMN statement.
273|        """
274|        return False
275|
276|    def prepare_default(self, value):
277|        """
278|        Only used for backends which have requires_literal_defaults feature
279|        """
280|        raise NotImplementedError(
281|            'subclasses of BaseDatabaseSchemaEditor for backends which have '
282|            'requires_literal_defaults must provide a prepare_default() method'
283|        )
284|
285|    def _column_default_sql(self, field):
286|        """
287|        Return the SQL to use in a DEFAULT clause. The resulting string should
288|        contain a '%s' placeholder for a default value.
289|        """
290|        return '%s'
291|
292|    @staticmethod
293|    def _effective_default(field):
294|        # This method allows testing its logic without a connection.
295|        if field.has_default():
296|            default = field.get_default()
297|        elif not field.null and field.blank and field.empty_strings_allowed:
298|            if field.get_internal_type() == "BinaryField":
299|                default = b''
300|            else:
301|                default = ''
302|        elif getattr(field, 'auto_now', False) or getattr(field, 'auto_now_add', False):
303|            default = datetime.now()
304|            internal_type = field.get_internal_type()
305|            if internal_type == 'DateField':
306|                default = default.date()
307|            elif internal_type == 'TimeField':
308|                default = default.time()
309|            elif internal_type == 'DateTimeField':
310|                default = timezone.now()
311|        else:
312|            default = None
313|        return default
314|
315|    def effective_default(self, field):
316|        """Return a field's effective database default value."""
317|        return field.get_db_prep_save(self._effective_default(field), self.connection)
318|
319|    def quote_value(self, value):
320|        """
321|        Return a quoted version of the value so it's safe to use in an SQL
322|        string. This is not safe against injection from user code; it is
323|        intended only for use in making SQL scripts or preparing default values
324|        for particularly tricky backends (defaults are not user-defined, though,
325|        so this is safe).
326|        """
327|        raise NotImplementedError()
328|
329|    # Actions
330|
331|    def create_model(self, model):
332|        """
333|        Create a table and any accompanying indexes or unique constraints for
334|        the given `model`.
335|        """
336|        sql, params = self.table_sql(model)
337|        # Prevent using [] as params, in the case a literal '%' is used in the definition
338|        self.execute(sql, params or None)
339|
340|        # Add any field index and index_together's (deferred as SQLite _remake_table needs it)
341|        self.deferred_sql.extend(self._model_indexes_sql(model))
342|
343|        # Make M2M tables
344|        for field in model._meta.local_many_to_many:
345|            if field.remote_field.through._meta.auto_created:
346|                self.create_model(field.remote_field.through)
347|
348|    def delete_model(self, model):
349|        """Delete a model from the database."""
350|        # Handle auto-created intermediary models
351|        for field in model._meta.local_many_to_many:
352|            if field.remote_field.through._meta.auto_created:
353|                self.delete_model(field.remote_field.through)
354|
355|        # Delete the table
356|        self.execute(self.sql_delete_table % {
357|            "table": self.quote_name(model._meta.db_table),
358|        })
359|        # Remove all deferred statements referencing the deleted table.
360|        for sql in list(self.deferred_sql):
361|            if isinstance(sql, Statement) and sql.references_table(model._meta.db_table):
362|                self.deferred_sql.remove(sql)
363|
364|    def add_index(self, model, index):
365|        """Add an index on a model."""
366|        if (
367|            index.contains_expressions and
368|            not self.connection.features.supports_expression_indexes
369|        ):
370|            return None
371|        # Index.create_sql returns interpolated SQL which makes params=None a
372|        # necessity to avoid escaping attempts on execution.
373|        self.execute(index.create_sql(model, self), params=None)
374|
375|    def remove_index(self, model, index):
376|        """Remove an index from a model."""
377|        if (
378|            index.contains_expressions and
379|            not self.connection.features.supports_expression_indexes
380|        ):
381|            return None
382|        self.execute(index.remove_sql(model, self))
383|
384|    def add_constraint(self, model, constraint):
385|        """Add a constraint to a model."""
386|        sql = constraint.create_sql(model, self)
387|        if sql:
388|            # Constraint.create_sql returns interpolated SQL which makes
389|            # params=None a necessity to avoid escaping attempts on execution.
390|            self.execute(sql, params=None)
391|
392|    def remove_constraint(self, model, constraint):
393|        """Remove a constraint from a model."""
394|        sql = constraint.remove_sql(model, self)
395|        if sql:
396|            self.execute(sql)
397|
398|    def alter_unique_together(self, model, old_unique_together, new_unique_together):
399|        """
400|        Deal with a model changing its unique_together. The input
401|        unique_togethers must be doubly-nested, not the single-nested
402|        ["foo", "bar"] format.
403|        """
404|        olds = {tuple(fields) for fields in old_unique_together}
405|        news = {tuple(fields) for fields in new_unique_together}
406|        # Deleted uniques
407|        for fields in olds.difference(news):
408|            self._delete_composed_index(model, fields, {'unique': True}, self.sql_delete_unique)
409|        # Created uniques
410|        for fields in news.difference(olds):
411|            columns = [model._meta.get_field(field).column for field in fields]
412|            self.execute(self._create_unique_sql(model, columns))
413|
414|    def alter_index_together(self, model, old_index_together, new_index_together):
415|        """
416|        Deal with a model changing its index_together. The input
417|        index_togethers must be doubly-nested, not the single-nested
418|        ["foo", "bar"] format.
419|        """
420|        olds = {tuple(fields) for fields in old_index_together}
421|        news = {tuple(fields) for fields in new_index_together}
422|        # Deleted indexes
423|        for fields in olds.difference(news):
424|            self._delete_composed_index(
425|                model,
426|                fields,
427|                {'index': True, 'unique': False},
428|                self.sql_delete_index,
429|            )
430|        # Created indexes
431|        for field_names in news.difference(olds):
432|            fields = [model._meta.get_field(field) for field in field_names]
433|            self.execute(self._create_index_sql(model, fields=fields, suffix='_idx'))
434|
435|    def _delete_composed_index(self, model, fields, constraint_kwargs, sql):
436|        meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
437|        meta_index_names = {constraint.name for constraint in model._meta.indexes}
438|        columns = [model._meta.get_field(field).column for field in fields]
439|        constraint_names = self._constraint_names(
440|            model, columns, exclude=meta_constraint_names | meta_index_names,
441|            **constraint_kwargs
442|        )
443|        if len(constraint_names) != 1:
444|            raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
445|                len(constraint_names),
446|                model._meta.db_table,
447|                ", ".join(columns),
448|            ))
449|        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
450|
451|    def alter_db_table(self, model, old_db_table, new_db_table):
452|        """Rename the table a model points to."""
453|        if (old_db_table == new_db_table or
454|            (self.connection.features.ignores_table_name_case and
455|                old_db_table.lower() == new_db_table.lower())):
456|            return
457|        self.execute(self.sql_rename_table % {
458|            "old_table": self.quote_name(old_db_table),
459|            "new_table": self.quote_name(new_db_table),
460|        })
461|        # Rename all references to the old table name.
462|        for sql in self.deferred_sql:
463|            if isinstance(sql, Statement):
464|                sql.rename_table_references(old_db_table, new_db_table)
465|
466|    def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace):
467|        """Move a model's table between tablespaces."""
468|        self.execute(self.sql_retablespace_table % {
469|            "table": self.quote_name(model._meta.db_table),
470|            "old_tablespace": self.quote_name(old_db_tablespace),
471|            "new_tablespace": self.quote_name(new_db_tablespace),
472|        })
473|
474|    def add_field(self, model, field):
475|        """
476|        Create a field on a model. Usually involves adding a column, but may
477|        involve adding a table instead (for M2M fields).
478|        """
479|        # Special-case implicit M2M tables
480|        if field.many_to_many and field.remote_field.through._meta.auto_created:
481|            return self.create_model(field.remote_field.through)
482|        # Get the column's definition
483|        definition, params = self.column_sql(model, field, include_default=True)
484|        # It might not actually have a column behind it
485|        if definition is None:
486|            return
487|        # Check constraints can go on the column SQL here
488|        db_params = field.db_parameters(connection=self.connection)
489|        if db_params['check']:
490|            definition += " " + self.sql_check_constraint % db_params
491|        if field.remote_field and self.connection.features.supports_foreign_keys and field.db_constraint:
492|            constraint_suffix = '_fk_%(to_table)s_%(to_column)s'
493|            # Add FK constraint inline, if supported.
494|            if self.sql_create_column_inline_fk:
495|                to_table = field.remote_field.model._meta.db_table
496|                to_column = field.remote_field.model._meta.get_field(field.remote_field.field_name).column
497|                namespace, _ = split_identifier(model._meta.db_table)
498|                definition += " " + self.sql_create_column_inline_fk % {
499|                    'name': self._fk_constraint_name(model, field, constraint_suffix),
500|                    'namespace': '%s.' % self.quote_name(namespace) if namespace else '',
501|                    'column': self.quote_name(field.column),
502|                    'to_table': self.quote_name(to_table),
503|                    'to_column': self.quote_name(to_column),
504|                    'deferrable': self.connection.ops.deferrable_sql()
505|                }
506|            # Otherwise, add FK constraints later.
507|            else:
508|                self.deferred_sql.append(self._create_fk_sql(model, field, constraint_suffix))
509|        # Build the SQL and run it
510|        sql = self.sql_create_column % {
511|            "table": self.quote_name(model._meta.db_table),
512|            "column": self.quote_name(field.column),
513|            "definition": definition,
514|        }
515|        self.execute(sql, params)
516|        # Drop the default if we need to
517|        # (Django usually does not use in-database defaults)
518|        if not self.skip_default(field) and self.effective_default(field) is not None:
519|            changes_sql, params = self._alter_column_default_sql(model, None, field, drop=True)
520|            sql = self.sql_alter_column % {
521|                "table": self.quote_name(model._meta.db_table),
522|                "changes": changes_sql,
523|            }
524|            self.execute(sql, params)
525|        # Add an index, if required
526|        self.deferred_sql.extend(self._field_indexes_sql(model, field))
527|        # Reset connection if required
528|        if self.connection.features.connection_persists_old_columns:
529|            self.connection.close()
530|
531|    def remove_field(self, model, field):
532|        """
533|        Remove a field from a model. Usually involves deleting a column,
534|        but for M2Ms may involve deleting a table.
535|        """
536|        # Special-case implicit M2M tables
537|        if field.many_to_many and field.remote_field.through._meta.auto_created:
538|            return self.delete_model(field.remote_field.through)
539|        # It might not actually have a column behind it
540|        if field.db_parameters(connection=self.connection)['type'] is None:
541|            return
542|        # Drop any FK constraints, MySQL requires explicit deletion
543|        if field.remote_field:
544|            fk_names = self._constraint_names(model, [field.column], foreign_key=True)
545|            for fk_name in fk_names:
546|                self.execute(self._delete_fk_sql(model, fk_name))
547|        # Delete the column
548|        sql = self.sql_delete_column % {
549|            "table": self.quote_name(model._meta.db_table),
550|            "column": self.quote_name(field.column),
551|        }
552|        self.execute(sql)
553|        # Reset connection if required
554|        if self.connection.features.connection_persists_old_columns:
555|            self.connection.close()
556|        # Remove all deferred statements referencing the deleted column.
557|        for sql in list(self.deferred_sql):
558|            if isinstance(sql, Statement) and sql.references_column(model._meta.db_table, field.column):
559|                self.deferred_sql.remove(sql)
560|
561|    def alter_field(self, model, old_field, new_field, strict=False):
562|        """
563|        Allow a field's type, uniqueness, nullability, default, column,
564|        constraints, etc. to be modified.
565|        `old_field` is required to compute the necessary changes.
566|        If `strict` is True, raise errors if the old column does not match
567|        `old_field` precisely.
568|        """
569|        if not self._field_should_be_altered(old_field, new_field):
570|            return
571|        # Ensure this field is even column-based
572|        old_db_params = old_field.db_parameters(connection=self.connection)
573|        old_type = old_db_params['type']
574|        new_db_params = new_field.db_parameters(connection=self.connection)
575|        new_type = new_db_params['type']
576|        if ((old_type is None and old_field.remote_field is None) or
577|                (new_type is None and new_field.remote_field is None)):
578|            raise ValueError(
579|                "Cannot alter field %s into %s - they do not properly define "
580|                "db_type (are you using a badly-written custom field?)" %
581|                (old_field, new_field),
582|            )
583|        elif old_type is None and new_type is None and (
584|                old_field.remote_field.through and new_field.remote_field.through and
585|                old_field.remote_field.through._meta.auto_created and
586|                new_field.remote_field.through._meta.auto_created):
587|            return self._alter_many_to_many(model, old_field, new_field, strict)
588|        elif old_type is None and new_type is None and (
589|                old_field.remote_field.through and new_field.remote_field.through and
590|                not old_field.remote_field.through._meta.auto_created and
591|                not new_field.remote_field.through._meta.auto_created):
592|            # Both sides have through models; this is a no-op.
593|            return
594|        elif old_type is None or new_type is None:
595|            raise ValueError(
596|                "Cannot alter field %s into %s - they are not compatible types "
597|                "(you cannot alter to or from M2M fields, or add or remove "
598|                "through= on M2M fields)" % (old_field, new_field)
599|            )
600|
601|        self._alter_field(model, old_field, new_field, old_type, new_type,
602|                          old_db_params, new_db_params, strict)
603|
604|    def _alter_field(self, model, old_field, new_field, old_type, new_type,
605|                     old_db_params, new_db_params, strict=False):
606|        """Perform a "physical" (non-ManyToMany) field update."""
607|        # Drop any FK constraints, we'll remake them later
608|        fks_dropped = set()
609|        if (
610|            self.connection.features.supports_foreign_keys and
611|            old_field.remote_field and
612|            old_field.db_constraint
613|        ):
614|            fk_names = self._constraint_names(model, [old_field.column], foreign_key=True)
615|            if strict and len(fk_names) != 1:
616|                raise ValueError("Found wrong number (%s) of foreign key constraints for %s.%s" % (
617|                    len(fk_names),
618|                    model._meta.db_table,
619|                    old_field.column,
620|                ))
621|            for fk_name in fk_names:
622|                fks_dropped.add((old_field.column,))
623|                self.execute(self._delete_fk_sql(model, fk_name))
624|        # Has unique been removed?
625|        if old_field.unique and (not new_field.unique or self._field_became_primary_key(old_field, new_field)):
626|            # Find the unique constraint for this field
627|            meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
628|            constraint_names = self._constraint_names(
629|                model, [old_field.column], unique=True, primary_key=False,
630|                exclude=meta_constraint_names,
631|            )
632|            if strict and len(constraint_names) != 1:
633|                raise ValueError("Found wrong number (%s) of unique constraints for %s.%s" % (
634|                    len(constraint_names),
635|                    model._meta.db_table,
636|                    old_field.column,
637|                ))
638|            for constraint_name in constraint_names:
639|                self.execute(self._delete_unique_sql(model, constraint_name))
640|        # Drop incoming FK constraints if the field is a primary key or unique,
641|        # which might be a to_field target, and things are going to change.
642|        drop_foreign_keys = (
643|            self.connection.features.supports_foreign_keys and (
644|                (old_field.primary_key and new_field.primary_key) or
645|                (old_field.unique and new_field.unique)
646|            ) and old_type != new_type
647|        )
648|        if drop_foreign_keys:
649|            # '_meta.related_field' also contains M2M reverse fields, these
650|            # will be filtered out
651|            for _old_rel, new_rel in _related_non_m2m_objects(old_field, new_field):
652|                rel_fk_names = self._constraint_names(
653|                    new_rel.related_model, [new_rel.field.column], foreign_key=True
654|                )
655|                for fk_name in rel_fk_names:
656|                    self.execute(self._delete_fk_sql(new_rel.related_model, fk_name))
657|        # Removed an index? (no strict check, as multiple indexes are possible)
658|        # Remove indexes if db_index switched to False or a unique constraint
659|        # will now be used in lieu of an index. The following lines from the
660|        # truth table show all True cases; the rest are False:
661|        #
662|        # old_field.db_index | old_field.unique | new_field.db_index | new_field.unique
663|        # ------------------------------------------------------------------------------
664|        # True               | False            | False              | False
665|        # True               | False            | False              | True
666|        # True               | False            | True               | True
667|        if old_field.db_index and not old_field.unique and (not new_field.db_index or new_field.unique):
668|            # Find the index for this field
669|            meta_index_names = {index.name for index in model._meta.indexes}
670|            # Retrieve only BTREE indexes since this is what's created with
671|            # db_index=True.
672|            index_names = self._constraint_names(
673|                model, [old_field.column], index=True, type_=Index.suffix,
674|                exclude=meta_index_names,
675|            )
676|            for index_name in index_names:
677|                # The only way to check if an index was created with
678|                # db_index=True or with Index(['field'], name='foo')
679|                # is to look at its name (refs #28053).
680|                self.execute(self._delete_index_sql(model, index_name))
681|        # Change check constraints?
682|        if old_db_params['check'] != new_db_params['check'] and old_db_params['check']:
683|            meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
684|            constraint_names = self._constraint_names(
685|                model, [old_field.column], check=True,
686|                exclude=meta_constraint_names,
687|            )
688|            if strict and len(constraint_names) != 1:
689|                raise ValueError("Found wrong number (%s) of check constraints for %s.%s" % (
690|                    len(constraint_names),
691|                    model._meta.db_table,
692|                    old_field.column,
693|                ))
694|            for constraint_name in constraint_names:
695|                self.execute(self._delete_check_sql(model, constraint_name))
696|        # Have they renamed the column?
697|        if old_field.column != new_field.column:
698|            self.execute(self._rename_field_sql(model._meta.db_table, old_field, new_field, new_type))
699|            # Rename all references to the renamed column.
700|            for sql in self.deferred_sql:
701|                if isinstance(sql, Statement):
702|                    sql.rename_column_references(model._meta.db_table, old_field.column, new_field.column)
703|        # Next, start accumulating actions to do
704|        actions = []
705|        null_actions = []
706|        post_actions = []
707|        # Collation change?
708|        old_collation = getattr(old_field, 'db_collation', None)
709|        new_collation = getattr(new_field, 'db_collation', None)
710|        if old_collation != new_collation:
711|            # Collation change handles also a type change.
712|            fragment = self._alter_column_collation_sql(model, new_field, new_type, new_collation)
713|            actions.append(fragment)
714|        # Type change?
715|        elif old_type != new_type:
716|            fragment, other_actions = self._alter_column_type_sql(model, old_field, new_field, new_type)
717|            actions.append(fragment)
718|            post_actions.extend(other_actions)
719|        # When changing a column NULL constraint to NOT NULL with a given
720|        # default value, we need to perform 4 steps:
721|        #  1. Add a default for new incoming writes
722|        #  2. Update existing NULL rows with new default
723|        #  3. Replace NULL constraint with NOT NULL
724|        #  4. Drop the default again.
725|        # Default change?
726|        needs_database_default = False
727|        if old_field.null and not new_field.null:
728|            old_default = self.effective_default(old_field)
729|            new_default = self.effective_default(new_field)
730|            if (
731|                not self.skip_default_on_alter(new_field) and
732|                old_default != new_default and
733|                new_default is not None
734|            ):
735|                needs_database_default = True
736|                actions.append(self._alter_column_default_sql(model, old_field, new_field))
737|        # Nullability change?
738|        if old_field.null != new_field.null:
739|            fragment = self._alter_column_null_sql(model, old_field, new_field)
740|            if fragment:
741|                null_actions.append(fragment)
742|        # Only if we have a default and there is a change from NULL to NOT NULL
743|        four_way_default_alteration = (
744|            new_field.has_default() and
745|            (old_field.null and not new_field.null)
746|        )
747|        if actions or null_actions:
748|            if not four_way_default_alteration:
749|                # If we don't have to do a 4-way default alteration we can
750|                # directly run a (NOT) NULL alteration
751|                actions = actions + null_actions
752|            # Combine actions together if we can (e.g. postgres)
753|            if self.connection.features.supports_combined_alters and actions:
754|                sql, params = tuple(zip(*actions))
755|                actions = [(", ".join(sql), sum(params, []))]
756|            # Apply those actions
757|            for sql, params in actions:
758|                self.execute(
759|                    self.sql_alter_column % {
760|                        "table": self.quote_name(model._meta.db_table),
761|                        "changes": sql,
762|                    },
763|                    params,
764|                )
765|            if four_way_default_alteration:
766|                # Update existing rows with default value
767|                self.execute(
768|                    self.sql_update_with_default % {
769|                        "table": self.quote_name(model._meta.db_table),
770|                        "column": self.quote_name(new_field.column),
771|                        "default": "%s",
772|                    },
773|                    [new_default],
774|                )
775|                # Since we didn't run a NOT NULL change before we need to do it
776|                # now
777|                for sql, params in null_actions:
778|                    self.execute(
779|                        self.sql_alter_column % {
780|                            "table": self.quote_name(model._meta.db_table),
781|                            "changes": sql,
782|                        },
783|                        params,
784|                    )
785|        if post_actions:
786|            for sql, params in post_actions:
787|                self.execute(sql, params)
788|        # If primary_key changed to False, delete the primary key constraint.
789|        if old_field.primary_key and not new_field.primary_key:
790|            self._delete_primary_key(model, strict)
791|        # Added a unique?
792|        if self._unique_should_be_added(old_field, new_field):
793|            self.execute(self._create_unique_sql(model, [new_field.column]))
794|        # Added an index? Add an index if db_index switched to True or a unique
795|        # constraint will no longer be used in lieu of an index. The following
796|        # lines from the truth table show all True cases; the rest are False:
797|        #
798|        # old_field.db_index | old_field.unique | new_field.db_index | new_field.unique
799|        # ------------------------------------------------------------------------------
800|        # False              | False            | True               | False
801|        # False              | True             | True               | False
802|        # True               | True             | True               | False
803|        if (not old_field.db_index or old_field.unique) and new_field.db_index and not new_field.unique:
804|            self.execute(self._create_index_sql(model, fields=[new_field]))
805|        # Type alteration on primary key? Then we need to alter the column
806|        # referring to us.
807|        rels_to_update = []
808|        if drop_foreign_keys:
809|            rels_to_update.extend(_related_non_m2m_objects(old_field, new_field))
810|        # Changed to become primary key?
811|        if self._field_became_primary_key(old_field, new_field):
812|            # Make the new one
813|            self.execute(self._create_primary_key_sql(model, new_field))
814|            # Update all referencing columns
815|            rels_to_update.extend(_related_non_m2m_objects(old_field, new_field))
816|        # Handle our type alters on the other end of rels from the PK stuff above
817|        for old_rel, new_rel in rels_to_update:
818|            rel_db_params = new_rel.field.db_parameters(connection=self.connection)
819|            rel_type = rel_db_params['type']
820|            fragment, other_actions = self._alter_column_type_sql(
821|                new_rel.related_model, old_rel.field, new_rel.field, rel_type
822|            )
823|            self.execute(
824|                self.sql_alter_column % {
825|                    "table": self.quote_name(new_rel.related_model._meta.db_table),
826|                    "changes": fragment[0],
827|                },
828|                fragment[1],
829|            )
830|            for sql, params in other_actions:
831|                self.execute(sql, params)
832|        # Does it have a foreign key?
833|        if (self.connection.features.supports_foreign_keys and new_field.remote_field and
834|                (fks_dropped or not old_field.remote_field or not old_field.db_constraint) and
835|                new_field.db_constraint):
836|            self.execute(self._create_fk_sql(model, new_field, "_fk_%(to_table)s_%(to_column)s"))
837|        # Rebuild FKs that pointed to us if we previously had to drop them
838|        if drop_foreign_keys:
839|            for rel in new_field.model._meta.related_objects:
840|                if _is_relevant_relation(rel, new_field) and rel.field.db_constraint:
841|                    self.execute(self._create_fk_sql(rel.related_model, rel.field, "_fk"))
842|        # Does it have check constraints we need to add?
843|        if old_db_params['check'] != new_db_params['check'] and new_db_params['check']:
844|            constraint_name = self._create_index_name(model._meta.db_table, [new_field.column], suffix='_check')
845|            self.execute(self._create_check_sql(model, constraint_name, new_db_params['check']))
846|        # Drop the default if we need to
847|        # (Django usually does not use in-database defaults)
848|        if needs_database_default:
849|            changes_sql, params = self._alter_column_default_sql(model, old_field, new_field, drop=True)
850|            sql = self.sql_alter_column % {
851|                "table": self.quote_name(model._meta.db_table),
852|                "changes": changes_sql,
853|            }
854|            self.execute(sql, params)
855|        # Reset connection if required
856|        if self.connection.features.connection_persists_old_columns:
857|            self.connection.close()
858|
859|    def _alter_column_null_sql(self, model, old_field, new_field):
860|        """
861|        Hook to specialize column null alteration.
862|
863|        Return a (sql, params) fragment to set a column to null or non-null
864|        as required by new_field, or None if no changes are required.
865|        """
866|        if (self.connection.features.interprets_empty_strings_as_nulls and
867|                new_field.get_internal_type() in ("CharField", "TextField")):
868|            # The field is nullable in the database anyway, leave it alone.
869|            return
870|        else:
871|            new_db_params = new_field.db_parameters(connection=self.connection)
872|            sql = self.sql_alter_column_null if new_field.null else self.sql_alter_column_not_null
873|            return (
874|                sql % {
875|                    'column': self.quote_name(new_field.column),
876|                    'type': new_db_params['type'],
877|                },
878|                [],
879|            )
880|
881|    def _alter_column_default_sql(self, model, old_field, new_field, drop=False):
882|        """
883|        Hook to specialize column default alteration.
884|
885|        Return a (sql, params) fragment to add or drop (depending on the drop
886|        argument) a default to new_field's column.
887|        """
888|        new_default = self.effective_default(new_field)
889|        default = self._column_default_sql(new_field)
890|        params = [new_default]
891|
892|        if drop:
893|            params = []
894|        elif self.connection.features.requires_literal_defaults:
895|            # Some databases (Oracle) can't take defaults as a parameter
896|            # If this is the case, the SchemaEditor for that database should
897|            # implement prepare_default().
898|            default = self.prepare_default(new_default)
899|            params = []
900|
901|        new_db_params = new_field.db_parameters(connection=self.connection)
902|        if drop:
903|            if new_field.null:
904|                sql = self.sql_alter_column_no_default_null
905|            else:
906|                sql = self.sql_alter_column_no_default
907|        else:
908|            sql = self.sql_alter_column_default
909|        return (
910|            sql % {
911|                'column': self.quote_name(new_field.column),
912|                'type': new_db_params['type'],
913|                'default': default,
914|            },
915|            params,
916|        )
917|
918|    def _alter_column_type_sql(self, model, old_field, new_field, new_type):
919|        """
920|        Hook to specialize column type alteration for different backends,
921|        for cases when a creation type is different to an alteration type
922|        (e.g. SERIAL in PostgreSQL, PostGIS fields).
923|
924|        Return a two-tuple of: an SQL fragment of (sql, params) to insert into
925|        an ALTER TABLE statement and a list of extra (sql, params) tuples to
926|        run once the field is altered.
927|        """
928|        return (
929|            (
930|                self.sql_alter_column_type % {
931|                    "column": self.quote_name(new_field.column),
932|                    "type": new_type,
933|                },
934|                [],
935|            ),
936|            [],
937|        )
938|
939|    def _alter_column_collation_sql(self, model, new_field, new_type, new_collation):
940|        return (
941|            self.sql_alter_column_collate % {
942|                'column': self.quote_name(new_field.column),
943|                'type': new_type,
944|                'collation': self._collate_sql(new_collation) if new_collation else '',
945|            },
946|            [],
947|        )
948|
949|    def _alter_many_to_many(self, model, old_field, new_field, strict):
950|        """Alter M2Ms to repoint their to= endpoints."""
951|        # Rename the through table
952|        if old_field.remote_field.through._meta.db_table != new_field.remote_field.through._meta.db_table:
953|            self.alter_db_table(old_field.remote_field.through, old_field.remote_field.through._meta.db_table,
954|                                new_field.remote_field.through._meta.db_table)
955|        # Repoint the FK to the other side
956|        self.alter_field(
957|            new_field.remote_field.through,
958|            # We need the field that points to the target model, so we can tell alter_field to change it -
959|            # this is m2m_reverse_field_name() (as opposed to m2m_field_name, which points to our model)
960|            old_field.remote_field.through._meta.get_field(old_field.m2m_reverse_field_name()),
961|            new_field.remote_field.through._meta.get_field(new_field.m2m_reverse_field_name()),
962|        )
963|        self.alter_field(
964|            new_field.remote_field.through,
965|            # for self-referential models we need to alter field from the other end too
966|            old_field.remote_field.through._meta.get_field(old_field.m2m_field_name()),
967|            new_field.remote_field.through._meta.get_field(new_field.m2m_field_name()),
968|        )
969|
970|    def _create_index_name(self, table_name, column_names, suffix=""):
971|        """
972|        Generate a unique name for an index/unique constraint.
973|
974|        The name is divided into 3 parts: the table name, the column names,
975|        and a unique digest and suffix.
976|        """
977|        _, table_name = split_identifier(table_name)
978|        hash_suffix_part = '%s%s' % (names_digest(table_name, *column_names, length=8), suffix)
979|        max_length = self.connection.ops.max_name_length() or 200
980|        # If everything fits into max_length, use that name.
981|        index_name = '%s_%s_%s' % (table_name, '_'.join(column_names), hash_suffix_part)
982|        if len(index_name) <= max_length:
983|            return index_name
984|        # Shorten a long suffix.
985|        if len(hash_suffix_part) > max_length / 3:
986|            hash_suffix_part = hash_suffix_part[:max_length // 3]
987|        other_length = (max_length - len(hash_suffix_part)) // 2 - 1
988|        index_name = '%s_%s_%s' % (
989|            table_name[:other_length],
990|            '_'.join(column_names)[:other_length],
991|            hash_suffix_part,
992|        )
993|        # Prepend D if needed to prevent the name from starting with an
994|        # underscore or a number (not permitted on Oracle).
995|        if index_name[0] == "_" or index_name[0].isdigit():
996|            index_name = "D%s" % index_name[:-1]
997|        return index_name
998|
999|    def _get_index_tablespace_sql(self, model, fields, db_tablespace=None):
1000|        if db_tablespace is None:
(373 more lines below)


============================================================



ACTION:

THOUGHT: Let me scroll down to see the rest of the schema.py file, particularly looking for the `_create_unique_sql` method:
CODE:
scroll_down()

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1373 lines total)]
(373 more lines above)
374|
375|    def remove_index(self, model, index):
376|        """Remove an index from a model."""
377|        if (
378|            index.contains_expressions and
379|            not self.connection.features.supports_expression_indexes
380|        ):
381|            return None
382|        self.execute(index.remove_sql(model, self))
383|
384|    def add_constraint(self, model, constraint):
385|        """Add a constraint to a model."""
386|        sql = constraint.create_sql(model, self)
387|        if sql:
388|            # Constraint.create_sql returns interpolated SQL which makes
389|            # params=None a necessity to avoid escaping attempts on execution.
390|            self.execute(sql, params=None)
391|
392|    def remove_constraint(self, model, constraint):
393|        """Remove a constraint from a model."""
394|        sql = constraint.remove_sql(model, self)
395|        if sql:
396|            self.execute(sql)
397|
398|    def alter_unique_together(self, model, old_unique_together, new_unique_together):
399|        """
400|        Deal with a model changing its unique_together. The input
401|        unique_togethers must be doubly-nested, not the single-nested
402|        ["foo", "bar"] format.
403|        """
404|        olds = {tuple(fields) for fields in old_unique_together}
405|        news = {tuple(fields) for fields in new_unique_together}
406|        # Deleted uniques
407|        for fields in olds.difference(news):
408|            self._delete_composed_index(model, fields, {'unique': True}, self.sql_delete_unique)
409|        # Created uniques
410|        for fields in news.difference(olds):
411|            columns = [model._meta.get_field(field).column for field in fields]
412|            self.execute(self._create_unique_sql(model, columns))
413|
414|    def alter_index_together(self, model, old_index_together, new_index_together):
415|        """
416|        Deal with a model changing its index_together. The input
417|        index_togethers must be doubly-nested, not the single-nested
418|        ["foo", "bar"] format.
419|        """
420|        olds = {tuple(fields) for fields in old_index_together}
421|        news = {tuple(fields) for fields in new_index_together}
422|        # Deleted indexes
423|        for fields in olds.difference(news):
424|            self._delete_composed_index(
425|                model,
426|                fields,
427|                {'index': True, 'unique': False},
428|                self.sql_delete_index,
429|            )
430|        # Created indexes
431|        for field_names in news.difference(olds):
432|            fields = [model._meta.get_field(field) for field in field_names]
433|            self.execute(self._create_index_sql(model, fields=fields, suffix='_idx'))
434|
435|    def _delete_composed_index(self, model, fields, constraint_kwargs, sql):
436|        meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
437|        meta_index_names = {constraint.name for constraint in model._meta.indexes}
438|        columns = [model._meta.get_field(field).column for field in fields]
439|        constraint_names = self._constraint_names(
440|            model, columns, exclude=meta_constraint_names | meta_index_names,
441|            **constraint_kwargs
442|        )
443|        if len(constraint_names) != 1:
444|            raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
445|                len(constraint_names),
446|                model._meta.db_table,
447|                ", ".join(columns),
448|            ))
449|        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
450|
451|    def alter_db_table(self, model, old_db_table, new_db_table):
452|        """Rename the table a model points to."""
453|        if (old_db_table == new_db_table or
454|            (self.connection.features.ignores_table_name_case and
455|                old_db_table.lower() == new_db_table.lower())):
456|            return
457|        self.execute(self.sql_rename_table % {
458|            "old_table": self.quote_name(old_db_table),
459|            "new_table": self.quote_name(new_db_table),
460|        })
461|        # Rename all references to the old table name.
462|        for sql in self.deferred_sql:
463|            if isinstance(sql, Statement):
464|                sql.rename_table_references(old_db_table, new_db_table)
465|
466|    def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace):
467|        """Move a model's table between tablespaces."""
468|        self.execute(self.sql_retablespace_table % {
469|            "table": self.quote_name(model._meta.db_table),
470|            "old_tablespace": self.quote_name(old_db_tablespace),
471|            "new_tablespace": self.quote_name(new_db_tablespace),
472|        })
473|
474|    def add_field(self, model, field):
475|        """
476|        Create a field on a model. Usually involves adding a column, but may
477|        involve adding a table instead (for M2M fields).
478|        """
479|        # Special-case implicit M2M tables
480|        if field.many_to_many and field.remote_field.through._meta.auto_created:
481|            return self.create_model(field.remote_field.through)
482|        # Get the column's definition
483|        definition, params = self.column_sql(model, field, include_default=True)
484|        # It might not actually have a column behind it
485|        if definition is None:
486|            return
487|        # Check constraints can go on the column SQL here
488|        db_params = field.db_parameters(connection=self.connection)
489|        if db_params['check']:
490|            definition += " " + self.sql_check_constraint % db_params
491|        if field.remote_field and self.connection.features.supports_foreign_keys and field.db_constraint:
492|            constraint_suffix = '_fk_%(to_table)s_%(to_column)s'
493|            # Add FK constraint inline, if supported.
494|            if self.sql_create_column_inline_fk:
495|                to_table = field.remote_field.model._meta.db_table
496|                to_column = field.remote_field.model._meta.get_field(field.remote_field.field_name).column
497|                namespace, _ = split_identifier(model._meta.db_table)
498|                definition += " " + self.sql_create_column_inline_fk % {
499|                    'name': self._fk_constraint_name(model, field, constraint_suffix),
500|                    'namespace': '%s.' % self.quote_name(namespace) if namespace else '',
501|                    'column': self.quote_name(field.column),
502|                    'to_table': self.quote_name(to_table),
503|                    'to_column': self.quote_name(to_column),
504|                    'deferrable': self.connection.ops.deferrable_sql()
505|                }
506|            # Otherwise, add FK constraints later.
507|            else:
508|                self.deferred_sql.append(self._create_fk_sql(model, field, constraint_suffix))
509|        # Build the SQL and run it
510|        sql = self.sql_create_column % {
511|            "table": self.quote_name(model._meta.db_table),
512|            "column": self.quote_name(field.column),
513|            "definition": definition,
514|        }
515|        self.execute(sql, params)
516|        # Drop the default if we need to
517|        # (Django usually does not use in-database defaults)
518|        if not self.skip_default(field) and self.effective_default(field) is not None:
519|            changes_sql, params = self._alter_column_default_sql(model, None, field, drop=True)
520|            sql = self.sql_alter_column % {
521|                "table": self.quote_name(model._meta.db_table),
522|                "changes": changes_sql,
523|            }
524|            self.execute(sql, params)
525|        # Add an index, if required
526|        self.deferred_sql.extend(self._field_indexes_sql(model, field))
527|        # Reset connection if required
528|        if self.connection.features.connection_persists_old_columns:
529|            self.connection.close()
530|
531|    def remove_field(self, model, field):
532|        """
533|        Remove a field from a model. Usually involves deleting a column,
534|        but for M2Ms may involve deleting a table.
535|        """
536|        # Special-case implicit M2M tables
537|        if field.many_to_many and field.remote_field.through._meta.auto_created:
538|            return self.delete_model(field.remote_field.through)
539|        # It might not actually have a column behind it
540|        if field.db_parameters(connection=self.connection)['type'] is None:
541|            return
542|        # Drop any FK constraints, MySQL requires explicit deletion
543|        if field.remote_field:
544|            fk_names = self._constraint_names(model, [field.column], foreign_key=True)
545|            for fk_name in fk_names:
546|                self.execute(self._delete_fk_sql(model, fk_name))
547|        # Delete the column
548|        sql = self.sql_delete_column % {
549|            "table": self.quote_name(model._meta.db_table),
550|            "column": self.quote_name(field.column),
551|        }
552|        self.execute(sql)
553|        # Reset connection if required
554|        if self.connection.features.connection_persists_old_columns:
555|            self.connection.close()
556|        # Remove all deferred statements referencing the deleted column.
557|        for sql in list(self.deferred_sql):
558|            if isinstance(sql, Statement) and sql.references_column(model._meta.db_table, field.column):
559|                self.deferred_sql.remove(sql)
560|
561|    def alter_field(self, model, old_field, new_field, strict=False):
562|        """
563|        Allow a field's type, uniqueness, nullability, default, column,
564|        constraints, etc. to be modified.
565|        `old_field` is required to compute the necessary changes.
566|        If `strict` is True, raise errors if the old column does not match
567|        `old_field` precisely.
568|        """
569|        if not self._field_should_be_altered(old_field, new_field):
570|            return
571|        # Ensure this field is even column-based
572|        old_db_params = old_field.db_parameters(connection=self.connection)
573|        old_type = old_db_params['type']
574|        new_db_params = new_field.db_parameters(connection=self.connection)
575|        new_type = new_db_params['type']
576|        if ((old_type is None and old_field.remote_field is None) or
577|                (new_type is None and new_field.remote_field is None)):
578|            raise ValueError(
579|                "Cannot alter field %s into %s - they do not properly define "
580|                "db_type (are you using a badly-written custom field?)" %
581|                (old_field, new_field),
582|            )
583|        elif old_type is None and new_type is None and (
584|                old_field.remote_field.through and new_field.remote_field.through and
585|                old_field.remote_field.through._meta.auto_created and
586|                new_field.remote_field.through._meta.auto_created):
587|            return self._alter_many_to_many(model, old_field, new_field, strict)
588|        elif old_type is None and new_type is None and (
589|                old_field.remote_field.through and new_field.remote_field.through and
590|                not old_field.remote_field.through._meta.auto_created and
591|                not new_field.remote_field.through._meta.auto_created):
592|            # Both sides have through models; this is a no-op.
593|            return
594|        elif old_type is None or new_type is None:
595|            raise ValueError(
596|                "Cannot alter field %s into %s - they are not compatible types "
597|                "(you cannot alter to or from M2M fields, or add or remove "
598|                "through= on M2M fields)" % (old_field, new_field)
599|            )
600|
601|        self._alter_field(model, old_field, new_field, old_type, new_type,
602|                          old_db_params, new_db_params, strict)
603|
604|    def _alter_field(self, model, old_field, new_field, old_type, new_type,
605|                     old_db_params, new_db_params, strict=False):
606|        """Perform a "physical" (non-ManyToMany) field update."""
607|        # Drop any FK constraints, we'll remake them later
608|        fks_dropped = set()
609|        if (
610|            self.connection.features.supports_foreign_keys and
611|            old_field.remote_field and
612|            old_field.db_constraint
613|        ):
614|            fk_names = self._constraint_names(model, [old_field.column], foreign_key=True)
615|            if strict and len(fk_names) != 1:
616|                raise ValueError("Found wrong number (%s) of foreign key constraints for %s.%s" % (
617|                    len(fk_names),
618|                    model._meta.db_table,
619|                    old_field.column,
620|                ))
621|            for fk_name in fk_names:
622|                fks_dropped.add((old_field.column,))
623|                self.execute(self._delete_fk_sql(model, fk_name))
624|        # Has unique been removed?
625|        if old_field.unique and (not new_field.unique or self._field_became_primary_key(old_field, new_field)):
626|            # Find the unique constraint for this field
627|            meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
628|            constraint_names = self._constraint_names(
629|                model, [old_field.column], unique=True, primary_key=False,
630|                exclude=meta_constraint_names,
631|            )
632|            if strict and len(constraint_names) != 1:
633|                raise ValueError("Found wrong number (%s) of unique constraints for %s.%s" % (
634|                    len(constraint_names),
635|                    model._meta.db_table,
636|                    old_field.column,
637|                ))
638|            for constraint_name in constraint_names:
639|                self.execute(self._delete_unique_sql(model, constraint_name))
640|        # Drop incoming FK constraints if the field is a primary key or unique,
641|        # which might be a to_field target, and things are going to change.
642|        drop_foreign_keys = (
643|            self.connection.features.supports_foreign_keys and (
644|                (old_field.primary_key and new_field.primary_key) or
645|                (old_field.unique and new_field.unique)
646|            ) and old_type != new_type
647|        )
648|        if drop_foreign_keys:
649|            # '_meta.related_field' also contains M2M reverse fields, these
650|            # will be filtered out
651|            for _old_rel, new_rel in _related_non_m2m_objects(old_field, new_field):
652|                rel_fk_names = self._constraint_names(
653|                    new_rel.related_model, [new_rel.field.column], foreign_key=True
654|                )
655|                for fk_name in rel_fk_names:
656|                    self.execute(self._delete_fk_sql(new_rel.related_model, fk_name))
657|        # Removed an index? (no strict check, as multiple indexes are possible)
658|        # Remove indexes if db_index switched to False or a unique constraint
659|        # will now be used in lieu of an index. The following lines from the
660|        # truth table show all True cases; the rest are False:
661|        #
662|        # old_field.db_index | old_field.unique | new_field.db_index | new_field.unique
663|        # ------------------------------------------------------------------------------
664|        # True               | False            | False              | False
665|        # True               | False            | False              | True
666|        # True               | False            | True               | True
667|        if old_field.db_index and not old_field.unique and (not new_field.db_index or new_field.unique):
668|            # Find the index for this field
669|            meta_index_names = {index.name for index in model._meta.indexes}
670|            # Retrieve only BTREE indexes since this is what's created with
671|            # db_index=True.
672|            index_names = self._constraint_names(
673|                model, [old_field.column], index=True, type_=Index.suffix,
674|                exclude=meta_index_names,
675|            )
676|            for index_name in index_names:
677|                # The only way to check if an index was created with
678|                # db_index=True or with Index(['field'], name='foo')
679|                # is to look at its name (refs #28053).
680|                self.execute(self._delete_index_sql(model, index_name))
681|        # Change check constraints?
682|        if old_db_params['check'] != new_db_params['check'] and old_db_params['check']:
683|            meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
684|            constraint_names = self._constraint_names(
685|                model, [old_field.column], check=True,
686|                exclude=meta_constraint_names,
687|            )
688|            if strict and len(constraint_names) != 1:
689|                raise ValueError("Found wrong number (%s) of check constraints for %s.%s" % (
690|                    len(constraint_names),
691|                    model._meta.db_table,
692|                    old_field.column,
693|                ))
694|            for constraint_name in constraint_names:
695|                self.execute(self._delete_check_sql(model, constraint_name))
696|        # Have they renamed the column?
697|        if old_field.column != new_field.column:
698|            self.execute(self._rename_field_sql(model._meta.db_table, old_field, new_field, new_type))
699|            # Rename all references to the renamed column.
700|            for sql in self.deferred_sql:
701|                if isinstance(sql, Statement):
702|                    sql.rename_column_references(model._meta.db_table, old_field.column, new_field.column)
703|        # Next, start accumulating actions to do
704|        actions = []
705|        null_actions = []
706|        post_actions = []
707|        # Collation change?
708|        old_collation = getattr(old_field, 'db_collation', None)
709|        new_collation = getattr(new_field, 'db_collation', None)
710|        if old_collation != new_collation:
711|            # Collation change handles also a type change.
712|            fragment = self._alter_column_collation_sql(model, new_field, new_type, new_collation)
713|            actions.append(fragment)
714|        # Type change?
715|        elif old_type != new_type:
716|            fragment, other_actions = self._alter_column_type_sql(model, old_field, new_field, new_type)
717|            actions.append(fragment)
718|            post_actions.extend(other_actions)
719|        # When changing a column NULL constraint to NOT NULL with a given
720|        # default value, we need to perform 4 steps:
721|        #  1. Add a default for new incoming writes
722|        #  2. Update existing NULL rows with new default
723|        #  3. Replace NULL constraint with NOT NULL
724|        #  4. Drop the default again.
725|        # Default change?
726|        needs_database_default = False
727|        if old_field.null and not new_field.null:
728|            old_default = self.effective_default(old_field)
729|            new_default = self.effective_default(new_field)
730|            if (
731|                not self.skip_default_on_alter(new_field) and
732|                old_default != new_default and
733|                new_default is not None
734|            ):
735|                needs_database_default = True
736|                actions.append(self._alter_column_default_sql(model, old_field, new_field))
737|        # Nullability change?
738|        if old_field.null != new_field.null:
739|            fragment = self._alter_column_null_sql(model, old_field, new_field)
740|            if fragment:
741|                null_actions.append(fragment)
742|        # Only if we have a default and there is a change from NULL to NOT NULL
743|        four_way_default_alteration = (
744|            new_field.has_default() and
745|            (old_field.null and not new_field.null)
746|        )
747|        if actions or null_actions:
748|            if not four_way_default_alteration:
749|                # If we don't have to do a 4-way default alteration we can
750|                # directly run a (NOT) NULL alteration
751|                actions = actions + null_actions
752|            # Combine actions together if we can (e.g. postgres)
753|            if self.connection.features.supports_combined_alters and actions:
754|                sql, params = tuple(zip(*actions))
755|                actions = [(", ".join(sql), sum(params, []))]
756|            # Apply those actions
757|            for sql, params in actions:
758|                self.execute(
759|                    self.sql_alter_column % {
760|                        "table": self.quote_name(model._meta.db_table),
761|                        "changes": sql,
762|                    },
763|                    params,
764|                )
765|            if four_way_default_alteration:
766|                # Update existing rows with default value
767|                self.execute(
768|                    self.sql_update_with_default % {
769|                        "table": self.quote_name(model._meta.db_table),
770|                        "column": self.quote_name(new_field.column),
771|                        "default": "%s",
772|                    },
773|                    [new_default],
774|                )
775|                # Since we didn't run a NOT NULL change before we need to do it
776|                # now
777|                for sql, params in null_actions:
778|                    self.execute(
779|                        self.sql_alter_column % {
780|                            "table": self.quote_name(model._meta.db_table),
781|                            "changes": sql,
782|                        },
783|                        params,
784|                    )
785|        if post_actions:
786|            for sql, params in post_actions:
787|                self.execute(sql, params)
788|        # If primary_key changed to False, delete the primary key constraint.
789|        if old_field.primary_key and not new_field.primary_key:
790|            self._delete_primary_key(model, strict)
791|        # Added a unique?
792|        if self._unique_should_be_added(old_field, new_field):
793|            self.execute(self._create_unique_sql(model, [new_field.column]))
794|        # Added an index? Add an index if db_index switched to True or a unique
795|        # constraint will no longer be used in lieu of an index. The following
796|        # lines from the truth table show all True cases; the rest are False:
797|        #
798|        # old_field.db_index | old_field.unique | new_field.db_index | new_field.unique
799|        # ------------------------------------------------------------------------------
800|        # False              | False            | True               | False
801|        # False              | True             | True               | False
802|        # True               | True             | True               | False
803|        if (not old_field.db_index or old_field.unique) and new_field.db_index and not new_field.unique:
804|            self.execute(self._create_index_sql(model, fields=[new_field]))
805|        # Type alteration on primary key? Then we need to alter the column
806|        # referring to us.
807|        rels_to_update = []
808|        if drop_foreign_keys:
809|            rels_to_update.extend(_related_non_m2m_objects(old_field, new_field))
810|        # Changed to become primary key?
811|        if self._field_became_primary_key(old_field, new_field):
812|            # Make the new one
813|            self.execute(self._create_primary_key_sql(model, new_field))
814|            # Update all referencing columns
815|            rels_to_update.extend(_related_non_m2m_objects(old_field, new_field))
816|        # Handle our type alters on the other end of rels from the PK stuff above
817|        for old_rel, new_rel in rels_to_update:
818|            rel_db_params = new_rel.field.db_parameters(connection=self.connection)
819|            rel_type = rel_db_params['type']
820|            fragment, other_actions = self._alter_column_type_sql(
821|                new_rel.related_model, old_rel.field, new_rel.field, rel_type
822|            )
823|            self.execute(
824|                self.sql_alter_column % {
825|                    "table": self.quote_name(new_rel.related_model._meta.db_table),
826|                    "changes": fragment[0],
827|                },
828|                fragment[1],
829|            )
830|            for sql, params in other_actions:
831|                self.execute(sql, params)
832|        # Does it have a foreign key?
833|        if (self.connection.features.supports_foreign_keys and new_field.remote_field and
834|                (fks_dropped or not old_field.remote_field or not old_field.db_constraint) and
835|                new_field.db_constraint):
836|            self.execute(self._create_fk_sql(model, new_field, "_fk_%(to_table)s_%(to_column)s"))
837|        # Rebuild FKs that pointed to us if we previously had to drop them
838|        if drop_foreign_keys:
839|            for rel in new_field.model._meta.related_objects:
840|                if _is_relevant_relation(rel, new_field) and rel.field.db_constraint:
841|                    self.execute(self._create_fk_sql(rel.related_model, rel.field, "_fk"))
842|        # Does it have check constraints we need to add?
843|        if old_db_params['check'] != new_db_params['check'] and new_db_params['check']:
844|            constraint_name = self._create_index_name(model._meta.db_table, [new_field.column], suffix='_check')
845|            self.execute(self._create_check_sql(model, constraint_name, new_db_params['check']))
846|        # Drop the default if we need to
847|        # (Django usually does not use in-database defaults)
848|        if needs_database_default:
849|            changes_sql, params = self._alter_column_default_sql(model, old_field, new_field, drop=True)
850|            sql = self.sql_alter_column % {
851|                "table": self.quote_name(model._meta.db_table),
852|                "changes": changes_sql,
853|            }
854|            self.execute(sql, params)
855|        # Reset connection if required
856|        if self.connection.features.connection_persists_old_columns:
857|            self.connection.close()
858|
859|    def _alter_column_null_sql(self, model, old_field, new_field):
860|        """
861|        Hook to specialize column null alteration.
862|
863|        Return a (sql, params) fragment to set a column to null or non-null
864|        as required by new_field, or None if no changes are required.
865|        """
866|        if (self.connection.features.interprets_empty_strings_as_nulls and
867|                new_field.get_internal_type() in ("CharField", "TextField")):
868|            # The field is nullable in the database anyway, leave it alone.
869|            return
870|        else:
871|            new_db_params = new_field.db_parameters(connection=self.connection)
872|            sql = self.sql_alter_column_null if new_field.null else self.sql_alter_column_not_null
873|            return (
874|                sql % {
875|                    'column': self.quote_name(new_field.column),
876|                    'type': new_db_params['type'],
877|                },
878|                [],
879|            )
880|
881|    def _alter_column_default_sql(self, model, old_field, new_field, drop=False):
882|        """
883|        Hook to specialize column default alteration.
884|
885|        Return a (sql, params) fragment to add or drop (depending on the drop
886|        argument) a default to new_field's column.
887|        """
888|        new_default = self.effective_default(new_field)
889|        default = self._column_default_sql(new_field)
890|        params = [new_default]
891|
892|        if drop:
893|            params = []
894|        elif self.connection.features.requires_literal_defaults:
895|            # Some databases (Oracle) can't take defaults as a parameter
896|            # If this is the case, the SchemaEditor for that database should
897|            # implement prepare_default().
898|            default = self.prepare_default(new_default)
899|            params = []
900|
901|        new_db_params = new_field.db_parameters(connection=self.connection)
902|        if drop:
903|            if new_field.null:
904|                sql = self.sql_alter_column_no_default_null
905|            else:
906|                sql = self.sql_alter_column_no_default
907|        else:
908|            sql = self.sql_alter_column_default
909|        return (
910|            sql % {
911|                'column': self.quote_name(new_field.column),
912|                'type': new_db_params['type'],
913|                'default': default,
914|            },
915|            params,
916|        )
917|
918|    def _alter_column_type_sql(self, model, old_field, new_field, new_type):
919|        """
920|        Hook to specialize column type alteration for different backends,
921|        for cases when a creation type is different to an alteration type
922|        (e.g. SERIAL in PostgreSQL, PostGIS fields).
923|
924|        Return a two-tuple of: an SQL fragment of (sql, params) to insert into
925|        an ALTER TABLE statement and a list of extra (sql, params) tuples to
926|        run once the field is altered.
927|        """
928|        return (
929|            (
930|                self.sql_alter_column_type % {
931|                    "column": self.quote_name(new_field.column),
932|                    "type": new_type,
933|                },
934|                [],
935|            ),
936|            [],
937|        )
938|
939|    def _alter_column_collation_sql(self, model, new_field, new_type, new_collation):
940|        return (
941|            self.sql_alter_column_collate % {
942|                'column': self.quote_name(new_field.column),
943|                'type': new_type,
944|                'collation': self._collate_sql(new_collation) if new_collation else '',
945|            },
946|            [],
947|        )
948|
949|    def _alter_many_to_many(self, model, old_field, new_field, strict):
950|        """Alter M2Ms to repoint their to= endpoints."""
951|        # Rename the through table
952|        if old_field.remote_field.through._meta.db_table != new_field.remote_field.through._meta.db_table:
953|            self.alter_db_table(old_field.remote_field.through, old_field.remote_field.through._meta.db_table,
954|                                new_field.remote_field.through._meta.db_table)
955|        # Repoint the FK to the other side
956|        self.alter_field(
957|            new_field.remote_field.through,
958|            # We need the field that points to the target model, so we can tell alter_field to change it -
959|            # this is m2m_reverse_field_name() (as opposed to m2m_field_name, which points to our model)
960|            old_field.remote_field.through._meta.get_field(old_field.m2m_reverse_field_name()),
961|            new_field.remote_field.through._meta.get_field(new_field.m2m_reverse_field_name()),
962|        )
963|        self.alter_field(
964|            new_field.remote_field.through,
965|            # for self-referential models we need to alter field from the other end too
966|            old_field.remote_field.through._meta.get_field(old_field.m2m_field_name()),
967|            new_field.remote_field.through._meta.get_field(new_field.m2m_field_name()),
968|        )
969|
970|    def _create_index_name(self, table_name, column_names, suffix=""):
971|        """
972|        Generate a unique name for an index/unique constraint.
973|
974|        The name is divided into 3 parts: the table name, the column names,
975|        and a unique digest and suffix.
976|        """
977|        _, table_name = split_identifier(table_name)
978|        hash_suffix_part = '%s%s' % (names_digest(table_name, *column_names, length=8), suffix)
979|        max_length = self.connection.ops.max_name_length() or 200
980|        # If everything fits into max_length, use that name.
981|        index_name = '%s_%s_%s' % (table_name, '_'.join(column_names), hash_suffix_part)
982|        if len(index_name) <= max_length:
983|            return index_name
984|        # Shorten a long suffix.
985|        if len(hash_suffix_part) > max_length / 3:
986|            hash_suffix_part = hash_suffix_part[:max_length // 3]
987|        other_length = (max_length - len(hash_suffix_part)) // 2 - 1
988|        index_name = '%s_%s_%s' % (
989|            table_name[:other_length],
990|            '_'.join(column_names)[:other_length],
991|            hash_suffix_part,
992|        )
993|        # Prepend D if needed to prevent the name from starting with an
994|        # underscore or a number (not permitted on Oracle).
995|        if index_name[0] == "_" or index_name[0].isdigit():
996|            index_name = "D%s" % index_name[:-1]
997|        return index_name
998|
999|    def _get_index_tablespace_sql(self, model, fields, db_tablespace=None):
1000|        if db_tablespace is None:
1001|            if len(fields) == 1 and fields[0].db_tablespace:
1002|                db_tablespace = fields[0].db_tablespace
1003|            elif model._meta.db_tablespace:
1004|                db_tablespace = model._meta.db_tablespace
1005|        if db_tablespace is not None:
1006|            return ' ' + self.connection.ops.tablespace_sql(db_tablespace)
1007|        return ''
1008|
1009|    def _index_condition_sql(self, condition):
1010|        if condition:
1011|            return ' WHERE ' + condition
1012|        return ''
1013|
1014|    def _index_include_sql(self, model, columns):
1015|        if not columns or not self.connection.features.supports_covering_indexes:
1016|            return ''
1017|        return Statement(
1018|            ' INCLUDE (%(columns)s)',
1019|            columns=Columns(model._meta.db_table, columns, self.quote_name),
1020|        )
1021|
1022|    def _create_index_sql(self, model, *, fields=None, name=None, suffix='', using='',
1023|                          db_tablespace=None, col_suffixes=(), sql=None, opclasses=(),
1024|                          condition=None, include=None, expressions=None):
1025|        """
1026|        Return the SQL statement to create the index for one or several fields
1027|        or expressions. `sql` can be specified if the syntax differs from the
1028|        standard (GIS indexes, ...).
1029|        """
1030|        fields = fields or []
1031|        expressions = expressions or []
1032|        compiler = Query(model, alias_cols=False).get_compiler(
1033|            connection=self.connection,
1034|        )
1035|        tablespace_sql = self._get_index_tablespace_sql(model, fields, db_tablespace=db_tablespace)
1036|        columns = [field.column for field in fields]
1037|        sql_create_index = sql or self.sql_create_index
1038|        table = model._meta.db_table
1039|
1040|        def create_index_name(*args, **kwargs):
1041|            nonlocal name
1042|            if name is None:
1043|                name = self._create_index_name(*args, **kwargs)
1044|            return self.quote_name(name)
1045|
1046|        return Statement(
1047|            sql_create_index,
1048|            table=Table(table, self.quote_name),
1049|            name=IndexName(table, columns, suffix, create_index_name),
1050|            using=using,
1051|            columns=(
1052|                self._index_columns(table, columns, col_suffixes, opclasses)
1053|                if columns
1054|                else Expressions(table, expressions, compiler, self.quote_value)
1055|            ),
1056|            extra=tablespace_sql,
1057|            condition=self._index_condition_sql(condition),
1058|            include=self._index_include_sql(model, include),
1059|        )
1060|
1061|    def _delete_index_sql(self, model, name, sql=None):
1062|        return Statement(
1063|            sql or self.sql_delete_index,
1064|            table=Table(model._meta.db_table, self.quote_name),
1065|            name=self.quote_name(name),
1066|        )
1067|
1068|    def _index_columns(self, table, columns, col_suffixes, opclasses):
1069|        return Columns(table, columns, self.quote_name, col_suffixes=col_suffixes)
1070|
1071|    def _model_indexes_sql(self, model):
1072|        """
1073|        Return a list of all index SQL statements (field indexes,
1074|        index_together, Meta.indexes) for the specified model.
1075|        """
1076|        if not model._meta.managed or model._meta.proxy or model._meta.swapped:
1077|            return []
1078|        output = []
1079|        for field in model._meta.local_fields:
1080|            output.extend(self._field_indexes_sql(model, field))
1081|
1082|        for field_names in model._meta.index_together:
1083|            fields = [model._meta.get_field(field) for field in field_names]
1084|            output.append(self._create_index_sql(model, fields=fields, suffix='_idx'))
1085|
1086|        for index in model._meta.indexes:
1087|            if (
1088|                not index.contains_expressions or
1089|                self.connection.features.supports_expression_indexes
1090|            ):
1091|                output.append(index.create_sql(model, self))
1092|        return output
1093|
1094|    def _field_indexes_sql(self, model, field):
1095|        """
1096|        Return a list of all index SQL statements for the specified field.
1097|        """
1098|        output = []
1099|        if self._field_should_be_indexed(model, field):
1100|            output.append(self._create_index_sql(model, fields=[field]))
1101|        return output
1102|
1103|    def _field_should_be_altered(self, old_field, new_field):
1104|        _, old_path, old_args, old_kwargs = old_field.deconstruct()
1105|        _, new_path, new_args, new_kwargs = new_field.deconstruct()
1106|        # Don't alter when:
1107|        # - changing only a field name
1108|        # - changing an attribute that doesn't affect the schema
1109|        # - adding only a db_column and the column name is not changed
1110|        non_database_attrs = [
1111|            'blank',
1112|            'db_column',
1113|            'editable',
1114|            'error_messages',
1115|            'help_text',
1116|            'limit_choices_to',
1117|            # Database-level options are not supported, see #21961.
1118|            'on_delete',
1119|            'related_name',
1120|            'related_query_name',
1121|            'validators',
1122|            'verbose_name',
1123|        ]
1124|        for attr in non_database_attrs:
1125|            old_kwargs.pop(attr, None)
1126|            new_kwargs.pop(attr, None)
1127|        return (
1128|            self.quote_name(old_field.column) != self.quote_name(new_field.column) or
1129|            (old_path, old_args, old_kwargs) != (new_path, new_args, new_kwargs)
1130|        )
1131|
1132|    def _field_should_be_indexed(self, model, field):
1133|        return field.db_index and not field.unique
1134|
1135|    def _field_became_primary_key(self, old_field, new_field):
1136|        return not old_field.primary_key and new_field.primary_key
1137|
1138|    def _unique_should_be_added(self, old_field, new_field):
1139|        return (not old_field.unique and new_field.unique) or (
1140|            old_field.primary_key and not new_field.primary_key and new_field.unique
1141|        )
1142|
1143|    def _rename_field_sql(self, table, old_field, new_field, new_type):
1144|        return self.sql_rename_column % {
1145|            "table": self.quote_name(table),
1146|            "old_column": self.quote_name(old_field.column),
1147|            "new_column": self.quote_name(new_field.column),
1148|            "type": new_type,
1149|        }
1150|
1151|    def _create_fk_sql(self, model, field, suffix):
1152|        table = Table(model._meta.db_table, self.quote_name)
1153|        name = self._fk_constraint_name(model, field, suffix)
1154|        column = Columns(model._meta.db_table, [field.column], self.quote_name)
1155|        to_table = Table(field.target_field.model._meta.db_table, self.quote_name)
1156|        to_column = Columns(field.target_field.model._meta.db_table, [field.target_field.column], self.quote_name)
1157|        deferrable = self.connection.ops.deferrable_sql()
1158|        return Statement(
1159|            self.sql_create_fk,
1160|            table=table,
1161|            name=name,
1162|            column=column,
1163|            to_table=to_table,
1164|            to_column=to_column,
1165|            deferrable=deferrable,
1166|        )
1167|
1168|    def _fk_constraint_name(self, model, field, suffix):
1169|        def create_fk_name(*args, **kwargs):
1170|            return self.quote_name(self._create_index_name(*args, **kwargs))
1171|
1172|        return ForeignKeyName(
1173|            model._meta.db_table,
1174|            [field.column],
1175|            split_identifier(field.target_field.model._meta.db_table)[1],
1176|            [field.target_field.column],
1177|            suffix,
1178|            create_fk_name,
1179|        )
1180|
1181|    def _delete_fk_sql(self, model, name):
1182|        return self._delete_constraint_sql(self.sql_delete_fk, model, name)
1183|
1184|    def _deferrable_constraint_sql(self, deferrable):
1185|        if deferrable is None:
1186|            return ''
1187|        if deferrable == Deferrable.DEFERRED:
1188|            return ' DEFERRABLE INITIALLY DEFERRED'
1189|        if deferrable == Deferrable.IMMEDIATE:
1190|            return ' DEFERRABLE INITIALLY IMMEDIATE'
1191|
1192|    def _unique_sql(
1193|        self, model, fields, name, condition=None, deferrable=None,
1194|        include=None, opclasses=None, expressions=None,
1195|    ):
1196|        if (
1197|            deferrable and
1198|            not self.connection.features.supports_deferrable_unique_constraints
1199|        ):
1200|            return None
1201|        if condition or include or opclasses or expressions:
1202|            # Databases support conditional, covering, and functional unique
1203|            # constraints via a unique index.
1204|            sql = self._create_unique_sql(
1205|                model,
1206|                fields,
1207|                name=name,
1208|                condition=condition,
1209|                include=include,
1210|                opclasses=opclasses,
1211|                expressions=expressions,
1212|            )
1213|            if sql:
1214|                self.deferred_sql.append(sql)
1215|            return None
1216|        constraint = self.sql_unique_constraint % {
1217|            'columns': ', '.join(map(self.quote_name, fields)),
1218|            'deferrable': self._deferrable_constraint_sql(deferrable),
1219|        }
1220|        return self.sql_constraint % {
1221|            'name': self.quote_name(name),
1222|            'constraint': constraint,
1223|        }
1224|
1225|    def _create_unique_sql(
1226|        self, model, columns, name=None, condition=None, deferrable=None,
1227|        include=None, opclasses=None, expressions=None,
1228|    ):
1229|        if (
1230|            (
1231|                deferrable and
1232|                not self.connection.features.supports_deferrable_unique_constraints
1233|            ) or
1234|            (condition and not self.connection.features.supports_partial_indexes) or
1235|            (include and not self.connection.features.supports_covering_indexes) or
1236|            (expressions and not self.connection.features.supports_expression_indexes)
1237|        ):
1238|            return None
1239|
1240|        def create_unique_name(*args, **kwargs):
1241|            return self.quote_name(self._create_index_name(*args, **kwargs))
1242|
1243|        compiler = Query(model, alias_cols=False).get_compiler(connection=self.connection)
1244|        table = Table(model._meta.db_table, self.quote_name)
1245|        if name is None:
1246|            name = IndexName(model._meta.db_table, columns, '_uniq', create_unique_name)
1247|        else:
1248|            name = self.quote_name(name)
1249|        if condition or include or opclasses or expressions:
1250|            sql = self.sql_create_unique_index
1251|        else:
1252|            sql = self.sql_create_unique
1253|        if columns:
1254|            columns = self._index_columns(table, columns, col_suffixes=(), opclasses=opclasses)
1255|        else:
1256|            columns = Expressions(model._meta.db_table, expressions, compiler, self.quote_value)
1257|        return Statement(
1258|            sql,
1259|            table=table,
1260|            name=name,
1261|            columns=columns,
1262|            condition=self._index_condition_sql(condition),
1263|            deferrable=self._deferrable_constraint_sql(deferrable),
1264|            include=self._index_include_sql(model, include),
1265|        )
1266|
1267|    def _delete_unique_sql(
1268|        self, model, name, condition=None, deferrable=None, include=None,
1269|        opclasses=None, expressions=None,
1270|    ):
1271|        if (
1272|            (
1273|                deferrable and
1274|                not self.connection.features.supports_deferrable_unique_constraints
1275|            ) or
1276|            (condition and not self.connection.features.supports_partial_indexes) or
1277|            (include and not self.connection.features.supports_covering_indexes) or
1278|            (expressions and not self.connection.features.supports_expression_indexes)
1279|
1280|        ):
1281|            return None
1282|        if condition or include or opclasses or expressions:
1283|            sql = self.sql_delete_index
1284|        else:
1285|            sql = self.sql_delete_unique
1286|        return self._delete_constraint_sql(sql, model, name)
1287|
1288|    def _check_sql(self, name, check):
1289|        return self.sql_constraint % {
1290|            'name': self.quote_name(name),
1291|            'constraint': self.sql_check_constraint % {'check': check},
1292|        }
1293|
1294|    def _create_check_sql(self, model, name, check):
1295|        return Statement(
1296|            self.sql_create_check,
1297|            table=Table(model._meta.db_table, self.quote_name),
1298|            name=self.quote_name(name),
1299|            check=check,
1300|        )
1301|
1302|    def _delete_check_sql(self, model, name):
1303|        return self._delete_constraint_sql(self.sql_delete_check, model, name)
1304|
1305|    def _delete_constraint_sql(self, template, model, name):
1306|        return Statement(
1307|            template,
1308|            table=Table(model._meta.db_table, self.quote_name),
1309|            name=self.quote_name(name),
1310|        )
1311|
1312|    def _constraint_names(self, model, column_names=None, unique=None,
1313|                          primary_key=None, index=None, foreign_key=None,
1314|                          check=None, type_=None, exclude=None):
1315|        """Return all constraint names matching the columns and conditions."""
1316|        if column_names is not None:
1317|            column_names = [
1318|                self.connection.introspection.identifier_converter(name)
1319|                for name in column_names
1320|            ]
1321|        with self.connection.cursor() as cursor:
1322|            constraints = self.connection.introspection.get_constraints(cursor, model._meta.db_table)
1323|        result = []
1324|        for name, infodict in constraints.items():
1325|            if column_names is None or column_names == infodict['columns']:
1326|                if unique is not None and infodict['unique'] != unique:
1327|                    continue
1328|                if primary_key is not None and infodict['primary_key'] != primary_key:
1329|                    continue
1330|                if index is not None and infodict['index'] != index:
1331|                    continue
1332|                if check is not None and infodict['check'] != check:
1333|                    continue
1334|                if foreign_key is not None and not infodict['foreign_key']:
1335|                    continue
1336|                if type_ is not None and infodict['type'] != type_:
1337|                    continue
1338|                if not exclude or name not in exclude:
1339|                    result.append(name)
1340|        return result
1341|
1342|    def _delete_primary_key(self, model, strict=False):
1343|        constraint_names = self._constraint_names(model, primary_key=True)
1344|        if strict and len(constraint_names) != 1:
1345|            raise ValueError('Found wrong number (%s) of PK constraints for %s' % (
1346|                len(constraint_names),
1347|                model._meta.db_table,
1348|            ))
1349|        for constraint_name in constraint_names:
1350|            self.execute(self._delete_primary_key_sql(model, constraint_name))
1351|
1352|    def _create_primary_key_sql(self, model, field):
1353|        return Statement(
1354|            self.sql_create_pk,
1355|            table=Table(model._meta.db_table, self.quote_name),
1356|            name=self.quote_name(
1357|                self._create_index_name(model._meta.db_table, [field.column], suffix="_pk")
1358|            ),
1359|            columns=Columns(model._meta.db_table, [field.column], self.quote_name),
1360|        )
1361|
1362|    def _delete_primary_key_sql(self, model, name):
1363|        return self._delete_constraint_sql(self.sql_delete_pk, model, name)
1364|
1365|    def _collate_sql(self, collation):
1366|        return ' COLLATE ' + self.quote_name(collation)
1367|
1368|    def remove_procedure(self, procedure_name, param_types=()):
1369|        sql = self.sql_delete_procedure % {
1370|            'procedure': self.quote_name(procedure_name),
1371|            'param_types': ','.join(param_types),
1372|        }
1373|        self.execute(sql)


============================================================



ACTION:

THOUGHT: Let me scroll up to find the `_create_unique_sql` method:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/base/schema.py', line_number=800)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1373 lines total)]
(699 more lines above)
700|            for sql in self.deferred_sql:
701|                if isinstance(sql, Statement):
702|                    sql.rename_column_references(model._meta.db_table, old_field.column, new_field.column)
703|        # Next, start accumulating actions to do
704|        actions = []
705|        null_actions = []
706|        post_actions = []
707|        # Collation change?
708|        old_collation = getattr(old_field, 'db_collation', None)
709|        new_collation = getattr(new_field, 'db_collation', None)
710|        if old_collation != new_collation:
711|            # Collation change handles also a type change.
712|            fragment = self._alter_column_collation_sql(model, new_field, new_type, new_collation)
713|            actions.append(fragment)
714|        # Type change?
715|        elif old_type != new_type:
716|            fragment, other_actions = self._alter_column_type_sql(model, old_field, new_field, new_type)
717|            actions.append(fragment)
718|            post_actions.extend(other_actions)
719|        # When changing a column NULL constraint to NOT NULL with a given
720|        # default value, we need to perform 4 steps:
721|        #  1. Add a default for new incoming writes
722|        #  2. Update existing NULL rows with new default
723|        #  3. Replace NULL constraint with NOT NULL
724|        #  4. Drop the default again.
725|        # Default change?
726|        needs_database_default = False
727|        if old_field.null and not new_field.null:
728|            old_default = self.effective_default(old_field)
729|            new_default = self.effective_default(new_field)
730|            if (
731|                not self.skip_default_on_alter(new_field) and
732|                old_default != new_default and
733|                new_default is not None
734|            ):
735|                needs_database_default = True
736|                actions.append(self._alter_column_default_sql(model, old_field, new_field))
737|        # Nullability change?
738|        if old_field.null != new_field.null:
739|            fragment = self._alter_column_null_sql(model, old_field, new_field)
740|            if fragment:
741|                null_actions.append(fragment)
742|        # Only if we have a default and there is a change from NULL to NOT NULL
743|        four_way_default_alteration = (
744|            new_field.has_default() and
745|            (old_field.null and not new_field.null)
746|        )
747|        if actions or null_actions:
748|            if not four_way_default_alteration:
749|                # If we don't have to do a 4-way default alteration we can
750|                # directly run a (NOT) NULL alteration
751|                actions = actions + null_actions
752|            # Combine actions together if we can (e.g. postgres)
753|            if self.connection.features.supports_combined_alters and actions:
754|                sql, params = tuple(zip(*actions))
755|                actions = [(", ".join(sql), sum(params, []))]
756|            # Apply those actions
757|            for sql, params in actions:
758|                self.execute(
759|                    self.sql_alter_column % {
760|                        "table": self.quote_name(model._meta.db_table),
761|                        "changes": sql,
762|                    },
763|                    params,
764|                )
765|            if four_way_default_alteration:
766|                # Update existing rows with default value
767|                self.execute(
768|                    self.sql_update_with_default % {
769|                        "table": self.quote_name(model._meta.db_table),
770|                        "column": self.quote_name(new_field.column),
771|                        "default": "%s",
772|                    },
773|                    [new_default],
774|                )
775|                # Since we didn't run a NOT NULL change before we need to do it
776|                # now
777|                for sql, params in null_actions:
778|                    self.execute(
779|                        self.sql_alter_column % {
780|                            "table": self.quote_name(model._meta.db_table),
781|                            "changes": sql,
782|                        },
783|                        params,
784|                    )
785|        if post_actions:
786|            for sql, params in post_actions:
787|                self.execute(sql, params)
788|        # If primary_key changed to False, delete the primary key constraint.
789|        if old_field.primary_key and not new_field.primary_key:
790|            self._delete_primary_key(model, strict)
791|        # Added a unique?
792|        if self._unique_should_be_added(old_field, new_field):
793|            self.execute(self._create_unique_sql(model, [new_field.column]))
794|        # Added an index? Add an index if db_index switched to True or a unique
795|        # constraint will no longer be used in lieu of an index. The following
796|        # lines from the truth table show all True cases; the rest are False:
797|        #
798|        # old_field.db_index | old_field.unique | new_field.db_index | new_field.unique
799|        # ------------------------------------------------------------------------------
800|        # False              | False            | True               | False
801|        # False              | True             | True               | False
802|        # True               | True             | True               | False
803|        if (not old_field.db_index or old_field.unique) and new_field.db_index and not new_field.unique:
804|            self.execute(self._create_index_sql(model, fields=[new_field]))
805|        # Type alteration on primary key? Then we need to alter the column
806|        # referring to us.
807|        rels_to_update = []
808|        if drop_foreign_keys:
809|            rels_to_update.extend(_related_non_m2m_objects(old_field, new_field))
810|        # Changed to become primary key?
811|        if self._field_became_primary_key(old_field, new_field):
812|            # Make the new one
813|            self.execute(self._create_primary_key_sql(model, new_field))
814|            # Update all referencing columns
815|            rels_to_update.extend(_related_non_m2m_objects(old_field, new_field))
816|        # Handle our type alters on the other end of rels from the PK stuff above
817|        for old_rel, new_rel in rels_to_update:
818|            rel_db_params = new_rel.field.db_parameters(connection=self.connection)
819|            rel_type = rel_db_params['type']
820|            fragment, other_actions = self._alter_column_type_sql(
821|                new_rel.related_model, old_rel.field, new_rel.field, rel_type
822|            )
823|            self.execute(
824|                self.sql_alter_column % {
825|                    "table": self.quote_name(new_rel.related_model._meta.db_table),
826|                    "changes": fragment[0],
827|                },
828|                fragment[1],
829|            )
830|            for sql, params in other_actions:
831|                self.execute(sql, params)
832|        # Does it have a foreign key?
833|        if (self.connection.features.supports_foreign_keys and new_field.remote_field and
834|                (fks_dropped or not old_field.remote_field or not old_field.db_constraint) and
835|                new_field.db_constraint):
836|            self.execute(self._create_fk_sql(model, new_field, "_fk_%(to_table)s_%(to_column)s"))
837|        # Rebuild FKs that pointed to us if we previously had to drop them
838|        if drop_foreign_keys:
839|            for rel in new_field.model._meta.related_objects:
840|                if _is_relevant_relation(rel, new_field) and rel.field.db_constraint:
841|                    self.execute(self._create_fk_sql(rel.related_model, rel.field, "_fk"))
842|        # Does it have check constraints we need to add?
843|        if old_db_params['check'] != new_db_params['check'] and new_db_params['check']:
844|            constraint_name = self._create_index_name(model._meta.db_table, [new_field.column], suffix='_check')
845|            self.execute(self._create_check_sql(model, constraint_name, new_db_params['check']))
846|        # Drop the default if we need to
847|        # (Django usually does not use in-database defaults)
848|        if needs_database_default:
849|            changes_sql, params = self._alter_column_default_sql(model, old_field, new_field, drop=True)
850|            sql = self.sql_alter_column % {
851|                "table": self.quote_name(model._meta.db_table),
852|                "changes": changes_sql,
853|            }
854|            self.execute(sql, params)
855|        # Reset connection if required
856|        if self.connection.features.connection_persists_old_columns:
857|            self.connection.close()
858|
859|    def _alter_column_null_sql(self, model, old_field, new_field):
860|        """
861|        Hook to specialize column null alteration.
862|
863|        Return a (sql, params) fragment to set a column to null or non-null
864|        as required by new_field, or None if no changes are required.
865|        """
866|        if (self.connection.features.interprets_empty_strings_as_nulls and
867|                new_field.get_internal_type() in ("CharField", "TextField")):
868|            # The field is nullable in the database anyway, leave it alone.
869|            return
870|        else:
871|            new_db_params = new_field.db_parameters(connection=self.connection)
872|            sql = self.sql_alter_column_null if new_field.null else self.sql_alter_column_not_null
873|            return (
874|                sql % {
875|                    'column': self.quote_name(new_field.column),
876|                    'type': new_db_params['type'],
877|                },
878|                [],
879|            )
880|
881|    def _alter_column_default_sql(self, model, old_field, new_field, drop=False):
882|        """
883|        Hook to specialize column default alteration.
884|
885|        Return a (sql, params) fragment to add or drop (depending on the drop
886|        argument) a default to new_field's column.
887|        """
888|        new_default = self.effective_default(new_field)
889|        default = self._column_default_sql(new_field)
890|        params = [new_default]
891|
892|        if drop:
893|            params = []
894|        elif self.connection.features.requires_literal_defaults:
895|            # Some databases (Oracle) can't take defaults as a parameter
896|            # If this is the case, the SchemaEditor for that database should
897|            # implement prepare_default().
898|            default = self.prepare_default(new_default)
899|            params = []
900|
(473 more lines below)


============================================================



ACTION:

THOUGHT: Let me scroll up further to find the `_create_unique_sql` method:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/base/schema.py', line_number=500)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1373 lines total)]
(399 more lines above)
400|        Deal with a model changing its unique_together. The input
401|        unique_togethers must be doubly-nested, not the single-nested
402|        ["foo", "bar"] format.
403|        """
404|        olds = {tuple(fields) for fields in old_unique_together}
405|        news = {tuple(fields) for fields in new_unique_together}
406|        # Deleted uniques
407|        for fields in olds.difference(news):
408|            self._delete_composed_index(model, fields, {'unique': True}, self.sql_delete_unique)
409|        # Created uniques
410|        for fields in news.difference(olds):
411|            columns = [model._meta.get_field(field).column for field in fields]
412|            self.execute(self._create_unique_sql(model, columns))
413|
414|    def alter_index_together(self, model, old_index_together, new_index_together):
415|        """
416|        Deal with a model changing its index_together. The input
417|        index_togethers must be doubly-nested, not the single-nested
418|        ["foo", "bar"] format.
419|        """
420|        olds = {tuple(fields) for fields in old_index_together}
421|        news = {tuple(fields) for fields in new_index_together}
422|        # Deleted indexes
423|        for fields in olds.difference(news):
424|            self._delete_composed_index(
425|                model,
426|                fields,
427|                {'index': True, 'unique': False},
428|                self.sql_delete_index,
429|            )
430|        # Created indexes
431|        for field_names in news.difference(olds):
432|            fields = [model._meta.get_field(field) for field in field_names]
433|            self.execute(self._create_index_sql(model, fields=fields, suffix='_idx'))
434|
435|    def _delete_composed_index(self, model, fields, constraint_kwargs, sql):
436|        meta_constraint_names = {constraint.name for constraint in model._meta.constraints}
437|        meta_index_names = {constraint.name for constraint in model._meta.indexes}
438|        columns = [model._meta.get_field(field).column for field in fields]
439|        constraint_names = self._constraint_names(
440|            model, columns, exclude=meta_constraint_names | meta_index_names,
441|            **constraint_kwargs
442|        )
443|        if len(constraint_names) != 1:
444|            raise ValueError("Found wrong number (%s) of constraints for %s(%s)" % (
445|                len(constraint_names),
446|                model._meta.db_table,
447|                ", ".join(columns),
448|            ))
449|        self.execute(self._delete_constraint_sql(sql, model, constraint_names[0]))
450|
451|    def alter_db_table(self, model, old_db_table, new_db_table):
452|        """Rename the table a model points to."""
453|        if (old_db_table == new_db_table or
454|            (self.connection.features.ignores_table_name_case and
455|                old_db_table.lower() == new_db_table.lower())):
456|            return
457|        self.execute(self.sql_rename_table % {
458|            "old_table": self.quote_name(old_db_table),
459|            "new_table": self.quote_name(new_db_table),
460|        })
461|        # Rename all references to the old table name.
462|        for sql in self.deferred_sql:
463|            if isinstance(sql, Statement):
464|                sql.rename_table_references(old_db_table, new_db_table)
465|
466|    def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace):
467|        """Move a model's table between tablespaces."""
468|        self.execute(self.sql_retablespace_table % {
469|            "table": self.quote_name(model._meta.db_table),
470|            "old_tablespace": self.quote_name(old_db_tablespace),
471|            "new_tablespace": self.quote_name(new_db_tablespace),
472|        })
473|
474|    def add_field(self, model, field):
475|        """
476|        Create a field on a model. Usually involves adding a column, but may
477|        involve adding a table instead (for M2M fields).
478|        """
479|        # Special-case implicit M2M tables
480|        if field.many_to_many and field.remote_field.through._meta.auto_created:
481|            return self.create_model(field.remote_field.through)
482|        # Get the column's definition
483|        definition, params = self.column_sql(model, field, include_default=True)
484|        # It might not actually have a column behind it
485|        if definition is None:
486|            return
487|        # Check constraints can go on the column SQL here
488|        db_params = field.db_parameters(connection=self.connection)
489|        if db_params['check']:
490|            definition += " " + self.sql_check_constraint % db_params
491|        if field.remote_field and self.connection.features.supports_foreign_keys and field.db_constraint:
492|            constraint_suffix = '_fk_%(to_table)s_%(to_column)s'
493|            # Add FK constraint inline, if supported.
494|            if self.sql_create_column_inline_fk:
495|                to_table = field.remote_field.model._meta.db_table
496|                to_column = field.remote_field.model._meta.get_field(field.remote_field.field_name).column
497|                namespace, _ = split_identifier(model._meta.db_table)
498|                definition += " " + self.sql_create_column_inline_fk % {
499|                    'name': self._fk_constraint_name(model, field, constraint_suffix),
500|                    'namespace': '%s.' % self.quote_name(namespace) if namespace else '',
501|                    'column': self.quote_name(field.column),
502|                    'to_table': self.quote_name(to_table),
503|                    'to_column': self.quote_name(to_column),
504|                    'deferrable': self.connection.ops.deferrable_sql()
505|                }
506|            # Otherwise, add FK constraints later.
507|            else:
508|                self.deferred_sql.append(self._create_fk_sql(model, field, constraint_suffix))
509|        # Build the SQL and run it
510|        sql = self.sql_create_column % {
511|            "table": self.quote_name(model._meta.db_table),
512|            "column": self.quote_name(field.column),
513|            "definition": definition,
514|        }
515|        self.execute(sql, params)
516|        # Drop the default if we need to
517|        # (Django usually does not use in-database defaults)
518|        if not self.skip_default(field) and self.effective_default(field) is not None:
519|            changes_sql, params = self._alter_column_default_sql(model, None, field, drop=True)
520|            sql = self.sql_alter_column % {
521|                "table": self.quote_name(model._meta.db_table),
522|                "changes": changes_sql,
523|            }
524|            self.execute(sql, params)
525|        # Add an index, if required
526|        self.deferred_sql.extend(self._field_indexes_sql(model, field))
527|        # Reset connection if required
528|        if self.connection.features.connection_persists_old_columns:
529|            self.connection.close()
530|
531|    def remove_field(self, model, field):
532|        """
533|        Remove a field from a model. Usually involves deleting a column,
534|        but for M2Ms may involve deleting a table.
535|        """
536|        # Special-case implicit M2M tables
537|        if field.many_to_many and field.remote_field.through._meta.auto_created:
538|            return self.delete_model(field.remote_field.through)
539|        # It might not actually have a column behind it
540|        if field.db_parameters(connection=self.connection)['type'] is None:
541|            return
542|        # Drop any FK constraints, MySQL requires explicit deletion
543|        if field.remote_field:
544|            fk_names = self._constraint_names(model, [field.column], foreign_key=True)
545|            for fk_name in fk_names:
546|                self.execute(self._delete_fk_sql(model, fk_name))
547|        # Delete the column
548|        sql = self.sql_delete_column % {
549|            "table": self.quote_name(model._meta.db_table),
550|            "column": self.quote_name(field.column),
551|        }
552|        self.execute(sql)
553|        # Reset connection if required
554|        if self.connection.features.connection_persists_old_columns:
555|            self.connection.close()
556|        # Remove all deferred statements referencing the deleted column.
557|        for sql in list(self.deferred_sql):
558|            if isinstance(sql, Statement) and sql.references_column(model._meta.db_table, field.column):
559|                self.deferred_sql.remove(sql)
560|
561|    def alter_field(self, model, old_field, new_field, strict=False):
562|        """
563|        Allow a field's type, uniqueness, nullability, default, column,
564|        constraints, etc. to be modified.
565|        `old_field` is required to compute the necessary changes.
566|        If `strict` is True, raise errors if the old column does not match
567|        `old_field` precisely.
568|        """
569|        if not self._field_should_be_altered(old_field, new_field):
570|            return
571|        # Ensure this field is even column-based
572|        old_db_params = old_field.db_parameters(connection=self.connection)
573|        old_type = old_db_params['type']
574|        new_db_params = new_field.db_parameters(connection=self.connection)
575|        new_type = new_db_params['type']
576|        if ((old_type is None and old_field.remote_field is None) or
577|                (new_type is None and new_field.remote_field is None)):
578|            raise ValueError(
579|                "Cannot alter field %s into %s - they do not properly define "
580|                "db_type (are you using a badly-written custom field?)" %
581|                (old_field, new_field),
582|            )
583|        elif old_type is None and new_type is None and (
584|                old_field.remote_field.through and new_field.remote_field.through and
585|                old_field.remote_field.through._meta.auto_created and
586|                new_field.remote_field.through._meta.auto_created):
587|            return self._alter_many_to_many(model, old_field, new_field, strict)
588|        elif old_type is None and new_type is None and (
589|                old_field.remote_field.through and new_field.remote_field.through and
590|                not old_field.remote_field.through._meta.auto_created and
591|                not new_field.remote_field.through._meta.auto_created):
592|            # Both sides have through models; this is a no-op.
593|            return
594|        elif old_type is None or new_type is None:
595|            raise ValueError(
596|                "Cannot alter field %s into %s - they are not compatible types "
597|                "(you cannot alter to or from M2M fields, or add or remove "
598|                "through= on M2M fields)" % (old_field, new_field)
599|            )
600|
(773 more lines below)


============================================================



ACTION:

THOUGHT: Let me search specifically for the `_create_unique_sql` method:
COMMAND:
cd /workspace/django__django__4.0
grep -r "_create_unique_sql" .

============================================================



OBSERVATION:

./tests/schema/tests.py:            editor.execute(editor._create_unique_sql(model, [field.column], constraint_name))
./docs/releases/2.2.txt:  * ``_delete_unique_sql`` (to pair with ``_create_unique_sql()``)
./django/db/backends/base/schema.py:            self.deferred_sql.append(self._create_unique_sql(model, columns))
./django/db/backends/base/schema.py:            self.execute(self._create_unique_sql(model, columns))
./django/db/backends/base/schema.py:            self.execute(self._create_unique_sql(model, [new_field.column]))
./django/db/backends/base/schema.py:            sql = self._create_unique_sql(
./django/db/backends/base/schema.py:    def _create_unique_sql(
./django/db/models/constraints.py:        return schema_editor._create_unique_sql(


============================================================



ACTION:

THOUGHT: Great, let me check the `_create_unique_sql` method in schema.py:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/base/schema.py', line_number=1200)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1373 lines total)]
(1099 more lines above)
1100|            output.append(self._create_index_sql(model, fields=[field]))
1101|        return output
1102|
1103|    def _field_should_be_altered(self, old_field, new_field):
1104|        _, old_path, old_args, old_kwargs = old_field.deconstruct()
1105|        _, new_path, new_args, new_kwargs = new_field.deconstruct()
1106|        # Don't alter when:
1107|        # - changing only a field name
1108|        # - changing an attribute that doesn't affect the schema
1109|        # - adding only a db_column and the column name is not changed
1110|        non_database_attrs = [
1111|            'blank',
1112|            'db_column',
1113|            'editable',
1114|            'error_messages',
1115|            'help_text',
1116|            'limit_choices_to',
1117|            # Database-level options are not supported, see #21961.
1118|            'on_delete',
1119|            'related_name',
1120|            'related_query_name',
1121|            'validators',
1122|            'verbose_name',
1123|        ]
1124|        for attr in non_database_attrs:
1125|            old_kwargs.pop(attr, None)
1126|            new_kwargs.pop(attr, None)
1127|        return (
1128|            self.quote_name(old_field.column) != self.quote_name(new_field.column) or
1129|            (old_path, old_args, old_kwargs) != (new_path, new_args, new_kwargs)
1130|        )
1131|
1132|    def _field_should_be_indexed(self, model, field):
1133|        return field.db_index and not field.unique
1134|
1135|    def _field_became_primary_key(self, old_field, new_field):
1136|        return not old_field.primary_key and new_field.primary_key
1137|
1138|    def _unique_should_be_added(self, old_field, new_field):
1139|        return (not old_field.unique and new_field.unique) or (
1140|            old_field.primary_key and not new_field.primary_key and new_field.unique
1141|        )
1142|
1143|    def _rename_field_sql(self, table, old_field, new_field, new_type):
1144|        return self.sql_rename_column % {
1145|            "table": self.quote_name(table),
1146|            "old_column": self.quote_name(old_field.column),
1147|            "new_column": self.quote_name(new_field.column),
1148|            "type": new_type,
1149|        }
1150|
1151|    def _create_fk_sql(self, model, field, suffix):
1152|        table = Table(model._meta.db_table, self.quote_name)
1153|        name = self._fk_constraint_name(model, field, suffix)
1154|        column = Columns(model._meta.db_table, [field.column], self.quote_name)
1155|        to_table = Table(field.target_field.model._meta.db_table, self.quote_name)
1156|        to_column = Columns(field.target_field.model._meta.db_table, [field.target_field.column], self.quote_name)
1157|        deferrable = self.connection.ops.deferrable_sql()
1158|        return Statement(
1159|            self.sql_create_fk,
1160|            table=table,
1161|            name=name,
1162|            column=column,
1163|            to_table=to_table,
1164|            to_column=to_column,
1165|            deferrable=deferrable,
1166|        )
1167|
1168|    def _fk_constraint_name(self, model, field, suffix):
1169|        def create_fk_name(*args, **kwargs):
1170|            return self.quote_name(self._create_index_name(*args, **kwargs))
1171|
1172|        return ForeignKeyName(
1173|            model._meta.db_table,
1174|            [field.column],
1175|            split_identifier(field.target_field.model._meta.db_table)[1],
1176|            [field.target_field.column],
1177|            suffix,
1178|            create_fk_name,
1179|        )
1180|
1181|    def _delete_fk_sql(self, model, name):
1182|        return self._delete_constraint_sql(self.sql_delete_fk, model, name)
1183|
1184|    def _deferrable_constraint_sql(self, deferrable):
1185|        if deferrable is None:
1186|            return ''
1187|        if deferrable == Deferrable.DEFERRED:
1188|            return ' DEFERRABLE INITIALLY DEFERRED'
1189|        if deferrable == Deferrable.IMMEDIATE:
1190|            return ' DEFERRABLE INITIALLY IMMEDIATE'
1191|
1192|    def _unique_sql(
1193|        self, model, fields, name, condition=None, deferrable=None,
1194|        include=None, opclasses=None, expressions=None,
1195|    ):
1196|        if (
1197|            deferrable and
1198|            not self.connection.features.supports_deferrable_unique_constraints
1199|        ):
1200|            return None
1201|        if condition or include or opclasses or expressions:
1202|            # Databases support conditional, covering, and functional unique
1203|            # constraints via a unique index.
1204|            sql = self._create_unique_sql(
1205|                model,
1206|                fields,
1207|                name=name,
1208|                condition=condition,
1209|                include=include,
1210|                opclasses=opclasses,
1211|                expressions=expressions,
1212|            )
1213|            if sql:
1214|                self.deferred_sql.append(sql)
1215|            return None
1216|        constraint = self.sql_unique_constraint % {
1217|            'columns': ', '.join(map(self.quote_name, fields)),
1218|            'deferrable': self._deferrable_constraint_sql(deferrable),
1219|        }
1220|        return self.sql_constraint % {
1221|            'name': self.quote_name(name),
1222|            'constraint': constraint,
1223|        }
1224|
1225|    def _create_unique_sql(
1226|        self, model, columns, name=None, condition=None, deferrable=None,
1227|        include=None, opclasses=None, expressions=None,
1228|    ):
1229|        if (
1230|            (
1231|                deferrable and
1232|                not self.connection.features.supports_deferrable_unique_constraints
1233|            ) or
1234|            (condition and not self.connection.features.supports_partial_indexes) or
1235|            (include and not self.connection.features.supports_covering_indexes) or
1236|            (expressions and not self.connection.features.supports_expression_indexes)
1237|        ):
1238|            return None
1239|
1240|        def create_unique_name(*args, **kwargs):
1241|            return self.quote_name(self._create_index_name(*args, **kwargs))
1242|
1243|        compiler = Query(model, alias_cols=False).get_compiler(connection=self.connection)
1244|        table = Table(model._meta.db_table, self.quote_name)
1245|        if name is None:
1246|            name = IndexName(model._meta.db_table, columns, '_uniq', create_unique_name)
1247|        else:
1248|            name = self.quote_name(name)
1249|        if condition or include or opclasses or expressions:
1250|            sql = self.sql_create_unique_index
1251|        else:
1252|            sql = self.sql_create_unique
1253|        if columns:
1254|            columns = self._index_columns(table, columns, col_suffixes=(), opclasses=opclasses)
1255|        else:
1256|            columns = Expressions(model._meta.db_table, expressions, compiler, self.quote_value)
1257|        return Statement(
1258|            sql,
1259|            table=table,
1260|            name=name,
1261|            columns=columns,
1262|            condition=self._index_condition_sql(condition),
1263|            deferrable=self._deferrable_constraint_sql(deferrable),
1264|            include=self._index_include_sql(model, include),
1265|        )
1266|
1267|    def _delete_unique_sql(
1268|        self, model, name, condition=None, deferrable=None, include=None,
1269|        opclasses=None, expressions=None,
1270|    ):
1271|        if (
1272|            (
1273|                deferrable and
1274|                not self.connection.features.supports_deferrable_unique_constraints
1275|            ) or
1276|            (condition and not self.connection.features.supports_partial_indexes) or
1277|            (include and not self.connection.features.supports_covering_indexes) or
1278|            (expressions and not self.connection.features.supports_expression_indexes)
1279|
1280|        ):
1281|            return None
1282|        if condition or include or opclasses or expressions:
1283|            sql = self.sql_delete_index
1284|        else:
1285|            sql = self.sql_delete_unique
1286|        return self._delete_constraint_sql(sql, model, name)
1287|
1288|    def _check_sql(self, name, check):
1289|        return self.sql_constraint % {
1290|            'name': self.quote_name(name),
1291|            'constraint': self.sql_check_constraint % {'check': check},
1292|        }
1293|
1294|    def _create_check_sql(self, model, name, check):
1295|        return Statement(
1296|            self.sql_create_check,
1297|            table=Table(model._meta.db_table, self.quote_name),
1298|            name=self.quote_name(name),
1299|            check=check,
1300|        )
(73 more lines below)


============================================================



ACTION:

THOUGHT: After analyzing the code, I can see the issue. In the `_create_unique_sql` method, when creating columns for the unique constraint, it's using `_index_columns` method which is creating a `Columns` instance. The issue is in line 1254:

```python
columns = self._index_columns(table, columns, col_suffixes=(), opclasses=opclasses)
```

Let me check the `_index_columns` method:
CODE:
search_file("def _index_columns", "/workspace/django__django__4.0/django/db/backends/base/schema.py")

============================================================



OBSERVATION:

[Found 1 matches for "def _index_columns" in /workspace/django__django__4.0/django/db/backends/base/schema.py]
Line 1068: def _index_columns(self, table, columns, col_suffixes, opclasses):
[End of matches for "def _index_columns" in /workspace/django__django__4.0/django/db/backends/base/schema.py]



============================================================



ACTION:

THOUGHT: Let me check the `_index_columns` method:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/base/schema.py', line_number=1068)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1373 lines total)]
(967 more lines above)
968|        )
969|
970|    def _create_index_name(self, table_name, column_names, suffix=""):
971|        """
972|        Generate a unique name for an index/unique constraint.
973|
974|        The name is divided into 3 parts: the table name, the column names,
975|        and a unique digest and suffix.
976|        """
977|        _, table_name = split_identifier(table_name)
978|        hash_suffix_part = '%s%s' % (names_digest(table_name, *column_names, length=8), suffix)
979|        max_length = self.connection.ops.max_name_length() or 200
980|        # If everything fits into max_length, use that name.
981|        index_name = '%s_%s_%s' % (table_name, '_'.join(column_names), hash_suffix_part)
982|        if len(index_name) <= max_length:
983|            return index_name
984|        # Shorten a long suffix.
985|        if len(hash_suffix_part) > max_length / 3:
986|            hash_suffix_part = hash_suffix_part[:max_length // 3]
987|        other_length = (max_length - len(hash_suffix_part)) // 2 - 1
988|        index_name = '%s_%s_%s' % (
989|            table_name[:other_length],
990|            '_'.join(column_names)[:other_length],
991|            hash_suffix_part,
992|        )
993|        # Prepend D if needed to prevent the name from starting with an
994|        # underscore or a number (not permitted on Oracle).
995|        if index_name[0] == "_" or index_name[0].isdigit():
996|            index_name = "D%s" % index_name[:-1]
997|        return index_name
998|
999|    def _get_index_tablespace_sql(self, model, fields, db_tablespace=None):
1000|        if db_tablespace is None:
1001|            if len(fields) == 1 and fields[0].db_tablespace:
1002|                db_tablespace = fields[0].db_tablespace
1003|            elif model._meta.db_tablespace:
1004|                db_tablespace = model._meta.db_tablespace
1005|        if db_tablespace is not None:
1006|            return ' ' + self.connection.ops.tablespace_sql(db_tablespace)
1007|        return ''
1008|
1009|    def _index_condition_sql(self, condition):
1010|        if condition:
1011|            return ' WHERE ' + condition
1012|        return ''
1013|
1014|    def _index_include_sql(self, model, columns):
1015|        if not columns or not self.connection.features.supports_covering_indexes:
1016|            return ''
1017|        return Statement(
1018|            ' INCLUDE (%(columns)s)',
1019|            columns=Columns(model._meta.db_table, columns, self.quote_name),
1020|        )
1021|
1022|    def _create_index_sql(self, model, *, fields=None, name=None, suffix='', using='',
1023|                          db_tablespace=None, col_suffixes=(), sql=None, opclasses=(),
1024|                          condition=None, include=None, expressions=None):
1025|        """
1026|        Return the SQL statement to create the index for one or several fields
1027|        or expressions. `sql` can be specified if the syntax differs from the
1028|        standard (GIS indexes, ...).
1029|        """
1030|        fields = fields or []
1031|        expressions = expressions or []
1032|        compiler = Query(model, alias_cols=False).get_compiler(
1033|            connection=self.connection,
1034|        )
1035|        tablespace_sql = self._get_index_tablespace_sql(model, fields, db_tablespace=db_tablespace)
1036|        columns = [field.column for field in fields]
1037|        sql_create_index = sql or self.sql_create_index
1038|        table = model._meta.db_table
1039|
1040|        def create_index_name(*args, **kwargs):
1041|            nonlocal name
1042|            if name is None:
1043|                name = self._create_index_name(*args, **kwargs)
1044|            return self.quote_name(name)
1045|
1046|        return Statement(
1047|            sql_create_index,
1048|            table=Table(table, self.quote_name),
1049|            name=IndexName(table, columns, suffix, create_index_name),
1050|            using=using,
1051|            columns=(
1052|                self._index_columns(table, columns, col_suffixes, opclasses)
1053|                if columns
1054|                else Expressions(table, expressions, compiler, self.quote_value)
1055|            ),
1056|            extra=tablespace_sql,
1057|            condition=self._index_condition_sql(condition),
1058|            include=self._index_include_sql(model, include),
1059|        )
1060|
1061|    def _delete_index_sql(self, model, name, sql=None):
1062|        return Statement(
1063|            sql or self.sql_delete_index,
1064|            table=Table(model._meta.db_table, self.quote_name),
1065|            name=self.quote_name(name),
1066|        )
1067|
1068|    def _index_columns(self, table, columns, col_suffixes, opclasses):
1069|        return Columns(table, columns, self.quote_name, col_suffixes=col_suffixes)
1070|
1071|    def _model_indexes_sql(self, model):
1072|        """
1073|        Return a list of all index SQL statements (field indexes,
1074|        index_together, Meta.indexes) for the specified model.
1075|        """
1076|        if not model._meta.managed or model._meta.proxy or model._meta.swapped:
1077|            return []
1078|        output = []
1079|        for field in model._meta.local_fields:
1080|            output.extend(self._field_indexes_sql(model, field))
1081|
1082|        for field_names in model._meta.index_together:
1083|            fields = [model._meta.get_field(field) for field in field_names]
1084|            output.append(self._create_index_sql(model, fields=fields, suffix='_idx'))
1085|
1086|        for index in model._meta.indexes:
1087|            if (
1088|                not index.contains_expressions or
1089|                self.connection.features.supports_expression_indexes
1090|            ):
1091|                output.append(index.create_sql(model, self))
1092|        return output
1093|
1094|    def _field_indexes_sql(self, model, field):
1095|        """
1096|        Return a list of all index SQL statements for the specified field.
1097|        """
1098|        output = []
1099|        if self._field_should_be_indexed(model, field):
1100|            output.append(self._create_index_sql(model, fields=[field]))
1101|        return output
1102|
1103|    def _field_should_be_altered(self, old_field, new_field):
1104|        _, old_path, old_args, old_kwargs = old_field.deconstruct()
1105|        _, new_path, new_args, new_kwargs = new_field.deconstruct()
1106|        # Don't alter when:
1107|        # - changing only a field name
1108|        # - changing an attribute that doesn't affect the schema
1109|        # - adding only a db_column and the column name is not changed
1110|        non_database_attrs = [
1111|            'blank',
1112|            'db_column',
1113|            'editable',
1114|            'error_messages',
1115|            'help_text',
1116|            'limit_choices_to',
1117|            # Database-level options are not supported, see #21961.
1118|            'on_delete',
1119|            'related_name',
1120|            'related_query_name',
1121|            'validators',
1122|            'verbose_name',
1123|        ]
1124|        for attr in non_database_attrs:
1125|            old_kwargs.pop(attr, None)
1126|            new_kwargs.pop(attr, None)
1127|        return (
1128|            self.quote_name(old_field.column) != self.quote_name(new_field.column) or
1129|            (old_path, old_args, old_kwargs) != (new_path, new_args, new_kwargs)
1130|        )
1131|
1132|    def _field_should_be_indexed(self, model, field):
1133|        return field.db_index and not field.unique
1134|
1135|    def _field_became_primary_key(self, old_field, new_field):
1136|        return not old_field.primary_key and new_field.primary_key
1137|
1138|    def _unique_should_be_added(self, old_field, new_field):
1139|        return (not old_field.unique and new_field.unique) or (
1140|            old_field.primary_key and not new_field.primary_key and new_field.unique
1141|        )
1142|
1143|    def _rename_field_sql(self, table, old_field, new_field, new_type):
1144|        return self.sql_rename_column % {
1145|            "table": self.quote_name(table),
1146|            "old_column": self.quote_name(old_field.column),
1147|            "new_column": self.quote_name(new_field.column),
1148|            "type": new_type,
1149|        }
1150|
1151|    def _create_fk_sql(self, model, field, suffix):
1152|        table = Table(model._meta.db_table, self.quote_name)
1153|        name = self._fk_constraint_name(model, field, suffix)
1154|        column = Columns(model._meta.db_table, [field.column], self.quote_name)
1155|        to_table = Table(field.target_field.model._meta.db_table, self.quote_name)
1156|        to_column = Columns(field.target_field.model._meta.db_table, [field.target_field.column], self.quote_name)
1157|        deferrable = self.connection.ops.deferrable_sql()
1158|        return Statement(
1159|            self.sql_create_fk,
1160|            table=table,
1161|            name=name,
1162|            column=column,
1163|            to_table=to_table,
1164|            to_column=to_column,
1165|            deferrable=deferrable,
1166|        )
1167|
1168|    def _fk_constraint_name(self, model, field, suffix):
(205 more lines below)




============================================================



ACTION:

THOUGHT: Now I understand the issue. The problem is in the `_index_columns` method. When creating a unique constraint, it's using `Columns` class from `ddl_references`, but it's passing a `Table` instance instead of a string for the table name.

Let me check the `ddl_references.py` file:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/ddl_references.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/ddl_references.py (236 lines total)]
1|"""
2|Helpers to manipulate deferred DDL statements that might need to be adjusted or
3|discarded within when executing a migration.
4|"""
5|from copy import deepcopy
6|
7|
8|class Reference:
9|    """Base class that defines the reference interface."""
10|
11|    def references_table(self, table):
12|        """
13|        Return whether or not this instance references the specified table.
14|        """
15|        return False
16|
17|    def references_column(self, table, column):
18|        """
19|        Return whether or not this instance references the specified column.
20|        """
21|        return False
22|
23|    def rename_table_references(self, old_table, new_table):
24|        """
25|        Rename all references to the old_name to the new_table.
26|        """
27|        pass
28|
29|    def rename_column_references(self, table, old_column, new_column):
30|        """
31|        Rename all references to the old_column to the new_column.
32|        """
33|        pass
34|
35|    def __repr__(self):
36|        return '<%s %r>' % (self.__class__.__name__, str(self))
37|
38|    def __str__(self):
39|        raise NotImplementedError('Subclasses must define how they should be converted to string.')
40|
41|
42|class Table(Reference):
43|    """Hold a reference to a table."""
44|
45|    def __init__(self, table, quote_name):
46|        self.table = table
47|        self.quote_name = quote_name
48|
49|    def references_table(self, table):
50|        return self.table == table
51|
52|    def rename_table_references(self, old_table, new_table):
53|        if self.table == old_table:
54|            self.table = new_table
55|
56|    def __str__(self):
57|        return self.quote_name(self.table)
58|
59|
60|class TableColumns(Table):
61|    """Base class for references to multiple columns of a table."""
62|
63|    def __init__(self, table, columns):
64|        self.table = table
65|        self.columns = columns
66|
67|    def references_column(self, table, column):
68|        return self.table == table and column in self.columns
69|
70|    def rename_column_references(self, table, old_column, new_column):
71|        if self.table == table:
72|            for index, column in enumerate(self.columns):
73|                if column == old_column:
74|                    self.columns[index] = new_column
75|
76|
77|class Columns(TableColumns):
78|    """Hold a reference to one or many columns."""
79|
80|    def __init__(self, table, columns, quote_name, col_suffixes=()):
81|        self.quote_name = quote_name
82|        self.col_suffixes = col_suffixes
83|        super().__init__(table, columns)
84|
85|    def __str__(self):
86|        def col_str(column, idx):
87|            col = self.quote_name(column)
88|            try:
89|                suffix = self.col_suffixes[idx]
90|                if suffix:
91|                    col = '{} {}'.format(col, suffix)
92|            except IndexError:
93|                pass
94|            return col
95|
96|        return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))
97|
98|
99|class IndexName(TableColumns):
100|    """Hold a reference to an index name."""
101|
102|    def __init__(self, table, columns, suffix, create_index_name):
103|        self.suffix = suffix
104|        self.create_index_name = create_index_name
105|        super().__init__(table, columns)
106|
107|    def __str__(self):
108|        return self.create_index_name(self.table, self.columns, self.suffix)
109|
110|
111|class IndexColumns(Columns):
112|    def __init__(self, table, columns, quote_name, col_suffixes=(), opclasses=()):
113|        self.opclasses = opclasses
114|        super().__init__(table, columns, quote_name, col_suffixes)
115|
116|    def __str__(self):
117|        def col_str(column, idx):
118|            # Index.__init__() guarantees that self.opclasses is the same
119|            # length as self.columns.
120|            col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])
121|            try:
122|                suffix = self.col_suffixes[idx]
123|                if suffix:
124|                    col = '{} {}'.format(col, suffix)
125|            except IndexError:
126|                pass
127|            return col
128|
129|        return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))
130|
131|
132|class ForeignKeyName(TableColumns):
133|    """Hold a reference to a foreign key name."""
134|
135|    def __init__(self, from_table, from_columns, to_table, to_columns, suffix_template, create_fk_name):
136|        self.to_reference = TableColumns(to_table, to_columns)
137|        self.suffix_template = suffix_template
138|        self.create_fk_name = create_fk_name
139|        super().__init__(from_table, from_columns,)
140|
141|    def references_table(self, table):
142|        return super().references_table(table) or self.to_reference.references_table(table)
143|
144|    def references_column(self, table, column):
145|        return (
146|            super().references_column(table, column) or
147|            self.to_reference.references_column(table, column)
148|        )
149|
150|    def rename_table_references(self, old_table, new_table):
151|        super().rename_table_references(old_table, new_table)
152|        self.to_reference.rename_table_references(old_table, new_table)
153|
154|    def rename_column_references(self, table, old_column, new_column):
155|        super().rename_column_references(table, old_column, new_column)
156|        self.to_reference.rename_column_references(table, old_column, new_column)
157|
158|    def __str__(self):
159|        suffix = self.suffix_template % {
160|            'to_table': self.to_reference.table,
161|            'to_column': self.to_reference.columns[0],
162|        }
163|        return self.create_fk_name(self.table, self.columns, suffix)
164|
165|
166|class Statement(Reference):
167|    """
168|    Statement template and formatting parameters container.
169|
170|    Allows keeping a reference to a statement without interpolating identifiers
171|    that might have to be adjusted if they're referencing a table or column
172|    that is removed
173|    """
174|    def __init__(self, template, **parts):
175|        self.template = template
176|        self.parts = parts
177|
178|    def references_table(self, table):
179|        return any(
180|            hasattr(part, 'references_table') and part.references_table(table)
181|            for part in self.parts.values()
182|        )
183|
184|    def references_column(self, table, column):
185|        return any(
186|            hasattr(part, 'references_column') and part.references_column(table, column)
187|            for part in self.parts.values()
188|        )
189|
190|    def rename_table_references(self, old_table, new_table):
191|        for part in self.parts.values():
192|            if hasattr(part, 'rename_table_references'):
193|                part.rename_table_references(old_table, new_table)
194|
195|    def rename_column_references(self, table, old_column, new_column):
196|        for part in self.parts.values():
197|            if hasattr(part, 'rename_column_references'):
198|                part.rename_column_references(table, old_column, new_column)
199|
200|    def __str__(self):
201|        return self.template % self.parts
202|
203|
204|class Expressions(TableColumns):
205|    def __init__(self, table, expressions, compiler, quote_value):
206|        self.compiler = compiler
207|        self.expressions = expressions
208|        self.quote_value = quote_value
209|        columns = [col.target.column for col in self.compiler.query._gen_cols([self.expressions])]
210|        super().__init__(table, columns)
211|
212|    def rename_table_references(self, old_table, new_table):
213|        if self.table != old_table:
214|            return
215|        expressions = deepcopy(self.expressions)
216|        self.columns = []
217|        for col in self.compiler.query._gen_cols([expressions]):
218|            col.alias = new_table
219|        self.expressions = expressions
220|        super().rename_table_references(old_table, new_table)
221|
222|    def rename_column_references(self, table, old_column, new_column):
223|        if self.table != table:
224|            return
225|        expressions = deepcopy(self.expressions)
226|        self.columns = []
227|        for col in self.compiler.query._gen_cols([expressions]):
228|            if col.target.column == old_column:
229|                col.target.column = new_column
230|            self.columns.append(col.target.column)
231|        self.expressions = expressions
232|
233|    def __str__(self):
234|        sql, params = self.compiler.compile(self.expressions)
235|        params = map(self.quote_value, params)
236|        return sql % tuple(params)


============================================================



OBSERVATION:

Planner Invoked

============================================================



OBSERVATION:

Planner Invoked

============================================================



OBSERVATION:

CONTENT: Please continue working on the task on whatever approach you think is suitable.
If you think you have modified the code in a way that fixes the issue and thoroughly tested the fix (including edge cases and regression), please run the following command: <execute_bash> exit </execute_bash>.
IMPORTANT: YOU SHOULD NEVER ASK FOR HUMAN HELP OR USE THE INTERNET TO SOLVE THIS TASK.


============================================================



ACTION:

THOUGHT: I'll proceed with implementing the fix and testing it. First, let me create a script to reproduce the issue:
CODE:
CODE = """
from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100, unique=True)
    
    class Meta:
        app_label = 'test_app'

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Create a unique constraint
constraint_name = 'test_unique_constraint'
model = TestModel
columns = ['name']

# Create the unique SQL statement
sql_statement = schema_editor._create_unique_sql(model, columns, name=constraint_name)

# Test references_column
print("Before fix - references_column test:")
print(f"References 'name' column: {sql_statement.references_column(model._meta.db_table, 'name')}")
"""
create_file('reproduce_issue.py', CODE)

============================================================



OBSERVATION:

[File reproduce_issue.py created.]
[File: /workspace/reproduce_issue.py (25 lines total after edit)]
1|
2|from django.db import models, connection
3|from django.db.backends.base.schema import BaseDatabaseSchemaEditor
4|
5|# Test model
6|class TestModel(models.Model):
7|    name = models.CharField(max_length=100, unique=True)
8|    
9|    class Meta:
10|        app_label = 'test_app'
11|
12|# Create schema editor
13|schema_editor = BaseDatabaseSchemaEditor(connection)
14|
15|# Create a unique constraint
16|constraint_name = 'test_unique_constraint'
17|model = TestModel
18|columns = ['name']
19|
20|# Create the unique SQL statement
21|sql_statement = schema_editor._create_unique_sql(model, columns, name=constraint_name)
22|
23|# Test references_column
24|print("Before fix - references_column test:")
25|print(f"References 'name' column: {sql_statement.references_column(model._meta.db_table, 'name')}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let me run the script to confirm the issue:
COMMAND:
cd /workspace
DJANGO_SETTINGS_MODULE=django.conf.global_settings python3 reproduce_issue.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce_issue.py", line 6, in <module>
    class TestModel(models.Model):
  File "/testbed/django/db/models/base.py", line 108, in __new__
    app_config = apps.get_containing_app_config(module)
  File "/testbed/django/apps/registry.py", line 253, in get_containing_app_config
    self.check_apps_ready()
  File "/testbed/django/apps/registry.py", line 136, in check_apps_ready
    raise AppRegistryNotReady("Apps aren't loaded yet.")
django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.


============================================================



ACTION:

THOUGHT: Ah, I need to set up Django's app registry first. Let me modify the script:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')

import django
from django.apps import apps
django.setup()

from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100, unique=True)
    
    class Meta:
        app_label = 'test_app'
        apps = apps

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Create a unique constraint
constraint_name = 'test_unique_constraint'
model = TestModel
columns = ['name']

# Create the unique SQL statement
sql_statement = schema_editor._create_unique_sql(model, columns, name=constraint_name)

# Test references_column
print("Before fix - references_column test:")
print(f"References 'name' column: {sql_statement.references_column(model._meta.db_table, 'name')}")
"""
create_file('reproduce_issue.py', CODE)

============================================================



OBSERVATION:

[File reproduce_issue.py already exists and File overwritten.]


============================================================



ACTION:

THOUGHT: Now let me run the modified script:
COMMAND:
cd /workspace
python3 reproduce_issue.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce_issue.py", line 29, in <module>
    sql_statement = schema_editor._create_unique_sql(model, columns, name=constraint_name)
  File "/testbed/django/db/backends/base/schema.py", line 1248, in _create_unique_sql
    name = self.quote_name(name)
  File "/testbed/django/db/backends/base/schema.py", line 148, in quote_name
    return self.connection.ops.quote_name(name)
  File "/testbed/django/db/backends/dummy/base.py", line 20, in complain
    raise ImproperlyConfigured("settings.DATABASES is improperly configured. "
django.core.exceptions.ImproperlyConfigured: settings.DATABASES is improperly configured. Please supply the ENGINE value. Check settings documentation for more details.


============================================================



ACTION:

THOUGHT: I need to configure a test database. Let me modify the script to use SQLite:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')

from django.conf import settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:'
        }
    },
    INSTALLED_APPS=['test_app']
)

import django
from django.apps import apps
django.setup()

from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor

# Test model
class TestModel(models.Model):
    name = models.CharField(max_length=100, unique=True)
    
    class Meta:
        app_label = 'test_app'
        apps = apps

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Create a unique constraint
constraint_name = 'test_unique_constraint'
model = TestModel
columns = ['name']

# Create the unique SQL statement
sql_statement = schema_editor._create_unique_sql(model, columns, name=constraint_name)

# Test references_column
print("Before fix - references_column test:")
print(f"References 'name' column: {sql_statement.references_column(model._meta.db_table, 'name')}")
"""
create_file('reproduce_issue.py', CODE)

============================================================



OBSERVATION:

[File reproduce_issue.py already exists and File overwritten.]
[File: /workspace/reproduce_issue.py (44 lines total after edit)]
1|
2|import os
3|os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
4|
5|from django.conf import settings
6|settings.configure(
7|    DATABASES={
8|        'default': {
9|            'ENGINE': 'django.db.backends.sqlite3',
10|            'NAME': ':memory:'
11|        }
12|    },
13|    INSTALLED_APPS=['test_app']
14|)
15|
16|import django
17|from django.apps import apps
18|django.setup()
19|
20|from django.db import models, connection
21|from django.db.backends.base.schema import BaseDatabaseSchemaEditor
22|
23|# Test model
24|class TestModel(models.Model):
25|    name = models.CharField(max_length=100, unique=True)
26|    
27|    class Meta:
28|        app_label = 'test_app'
29|        apps = apps
30|
31|# Create schema editor
32|schema_editor = BaseDatabaseSchemaEditor(connection)
33|
34|# Create a unique constraint
35|constraint_name = 'test_unique_constraint'
36|model = TestModel
37|columns = ['name']
38|
39|# Create the unique SQL statement
40|sql_statement = schema_editor._create_unique_sql(model, columns, name=constraint_name)
41|
42|# Test references_column
43|print("Before fix - references_column test:")
44|print(f"References 'name' column: {sql_statement.references_column(model._meta.db_table, 'name')}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The script looks good. Let me run it to confirm the issue:
COMMAND:
cd /workspace
python3 reproduce_issue.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce_issue.py", line 18, in <module>
    django.setup()
  File "/testbed/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/testbed/django/apps/registry.py", line 91, in populate
    app_config = AppConfig.create(entry)
  File "/testbed/django/apps/config.py", line 223, in create
    import_module(entry)
  File "/opt/miniconda3/envs/testbed/lib/python3.8/importlib/__init__.py", line 127, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1014, in _gcd_import
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 973, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'test_app'


============================================================



ACTION:

THOUGHT: I need to modify the script to not require an actual app installation since we're just testing the schema editor functionality:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')

from django.conf import settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:'
        }
    },
    INSTALLED_APPS=[]
)

import django
from django.apps import apps
django.setup()

from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.backends.ddl_references import Statement, Table, Columns

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Test table and column
table_name = 'test_table'
column_name = 'test_column'

# Create a Statement with Table instance
table = Table(table_name, schema_editor.quote_name)
columns = Columns(table, [column_name], schema_editor.quote_name)
sql_statement = Statement(
    schema_editor.sql_create_unique,
    table=table,
    name=schema_editor.quote_name('test_unique'),
    columns=columns
)

# Test references_column
print("Before fix - references_column test:")
print(f"References column: {sql_statement.references_column(table_name, column_name)}")
"""
create_file('reproduce_issue.py', CODE)

============================================================



OBSERVATION:

[File reproduce_issue.py already exists and File overwritten.]
[File: /workspace/reproduce_issue.py (43 lines total after edit)]
1|
2|import os
3|os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
4|
5|from django.conf import settings
6|settings.configure(
7|    DATABASES={
8|        'default': {
9|            'ENGINE': 'django.db.backends.sqlite3',
10|            'NAME': ':memory:'
11|        }
12|    },
13|    INSTALLED_APPS=[]
14|)
15|
16|import django
17|from django.apps import apps
18|django.setup()
19|
20|from django.db import models, connection
21|from django.db.backends.base.schema import BaseDatabaseSchemaEditor
22|from django.db.backends.ddl_references import Statement, Table, Columns
23|
24|# Create schema editor
25|schema_editor = BaseDatabaseSchemaEditor(connection)
26|
27|# Test table and column
28|table_name = 'test_table'
29|column_name = 'test_column'
30|
31|# Create a Statement with Table instance
32|table = Table(table_name, schema_editor.quote_name)
33|columns = Columns(table, [column_name], schema_editor.quote_name)
34|sql_statement = Statement(
35|    schema_editor.sql_create_unique,
36|    table=table,
37|    name=schema_editor.quote_name('test_unique'),
38|    columns=columns
39|)
40|
41|# Test references_column
42|print("Before fix - references_column test:")
43|print(f"References column: {sql_statement.references_column(table_name, column_name)}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The script looks good. Let me run it to reproduce the issue:
COMMAND:
cd /workspace
python3 reproduce_issue.py

============================================================



OBSERVATION:

Before fix - references_column test:
References column: False


============================================================



ACTION:

THOUGHT: Great, I've reproduced the issue. The `references_column` returns False because we're passing a Table instance to Columns instead of a string.

Let me fix the issue in the schema.py file:
CODE:
DIFF_STRING = """<<<<<<< SEARCH
    def _index_columns(self, table, columns, col_suffixes, opclasses):
        return Columns(table, columns, self.quote_name, col_suffixes=col_suffixes)
=======
    def _index_columns(self, table, columns, col_suffixes, opclasses):
        # Extract table name string if Table instance is passed
        table_name = table.table if isinstance(table, Table) else table
        return Columns(table_name, columns, self.quote_name, col_suffixes=col_suffixes)
>>>>>>> REPLACE"""
edit_file('/workspace/django__django__4.0/django/db/backends/base/schema.py', DIFF_STRING)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/schema.py (1375 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -1039,61 +1039,63 @@
 
         def create_index_name(*args, **kwargs):
             nonlocal name
             if name is None:
                 name = self._create_index_name(*args, **kwargs)
             return self.quote_name(name)
 
         return Statement(
             sql_create_index,
             table=Table(table, self.quote_name),
             name=IndexName(table, columns, suffix, create_index_name),
             using=using,
             columns=(
                 self._index_columns(table, columns, col_suffixes, opclasses)
                 if columns
                 else Expressions(table, expressions, compiler, self.quote_value)
             ),
             extra=tablespace_sql,
             condition=self._index_condition_sql(condition),
             include=self._index_include_sql(model, include),
         )
 
     def _delete_index_sql(self, model, name, sql=None):
         return Statement(
             sql or self.sql_delete_index,
             table=Table(model._meta.db_table, self.quote_name),
             name=self.quote_name(name),
         )
 
     def _index_columns(self, table, columns, col_suffixes, opclasses):
-        return Columns(table, columns, self.quote_name, col_suffixes=col_suffixes)
+        # Extract table name string if Table instance is passed
+        table_name = table.table if isinstance(table, Table) else table
+        return Columns(table_name, columns, self.quote_name, col_suffixes=col_suffixes)
 
     def _model_indexes_sql(self, model):
         """
         Return a list of all index SQL statements (field indexes,
         index_together, Meta.indexes) for the specified model.
         """
         if not model._meta.managed or model._meta.proxy or model._meta.swapped:
             return []
         output = []
         for field in model._meta.local_fields:
             output.extend(self._field_indexes_sql(model, field))
 
         for field_names in model._meta.index_together:
             fields = [model._meta.get_field(field) for field in field_names]
             output.append(self._create_index_sql(model, fields=fields, suffix='_idx'))
 
         for index in model._meta.indexes:
             if (
                 not index.contains_expressions or
                 self.connection.features.supports_expression_indexes
             ):
                 output.append(index.create_sql(model, self))
         return output
 
     def _field_indexes_sql(self, model, field):
         """
         Return a list of all index SQL statements for the specified field.
         """
         output = []
         if self._field_should_be_indexed(model, field):
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The changes look good. Now let me modify the test script to verify the fix:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')

from django.conf import settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:'
        }
    },
    INSTALLED_APPS=[]
)

import django
from django.apps import apps
django.setup()

from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.backends.ddl_references import Statement, Table, Columns

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Test cases
def test_references_column():
    # Test 1: Basic unique constraint
    table_name = 'test_table'
    column_name = 'test_column'
    table = Table(table_name, schema_editor.quote_name)
    columns = Columns(table_name, [column_name], schema_editor.quote_name)
    sql_statement = Statement(
        schema_editor.sql_create_unique,
        table=table,
        name=schema_editor.quote_name('test_unique'),
        columns=columns
    )
    print("Test 1 - Basic unique constraint:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")

    # Test 2: With condition
    sql_statement = schema_editor._create_unique_sql(
        None, [column_name], name='test_unique',
        condition="test_column > 0",
        table=table_name
    )
    print("\\nTest 2 - Unique constraint with condition:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")

    # Test 3: With include fields
    sql_statement = schema_editor._create_unique_sql(
        None, [column_name], name='test_unique',
        include=['included_column'],
        table=table_name
    )
    print("\\nTest 3 - Unique constraint with include fields:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
    print(f"References included column: {sql_statement.references_column(table_name, 'included_column')}")

# Run tests
print("After fix - Testing references_column:")
test_references_column()
"""
create_file('test_fix.py', CODE)

============================================================



OBSERVATION:

[File test_fix.py created.]
[File: /workspace/test_fix.py (64 lines total after edit)]
1|
2|import os
3|os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
4|
5|from django.conf import settings
6|settings.configure(
7|    DATABASES={
8|        'default': {
9|            'ENGINE': 'django.db.backends.sqlite3',
10|            'NAME': ':memory:'
11|        }
12|    },
13|    INSTALLED_APPS=[]
14|)
15|
16|import django
17|from django.apps import apps
18|django.setup()
19|
20|from django.db import models, connection
21|from django.db.backends.base.schema import BaseDatabaseSchemaEditor
22|from django.db.backends.ddl_references import Statement, Table, Columns
23|
24|# Create schema editor
25|schema_editor = BaseDatabaseSchemaEditor(connection)
26|
27|# Test cases
28|def test_references_column():
29|    # Test 1: Basic unique constraint
30|    table_name = 'test_table'
31|    column_name = 'test_column'
32|    table = Table(table_name, schema_editor.quote_name)
33|    columns = Columns(table_name, [column_name], schema_editor.quote_name)
34|    sql_statement = Statement(
35|        schema_editor.sql_create_unique,
36|        table=table,
37|        name=schema_editor.quote_name('test_unique'),
38|        columns=columns
39|    )
40|    print("Test 1 - Basic unique constraint:")
41|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
42|
43|    # Test 2: With condition
44|    sql_statement = schema_editor._create_unique_sql(
45|        None, [column_name], name='test_unique',
46|        condition="test_column > 0",
47|        table=table_name
48|    )
49|    print("\nTest 2 - Unique constraint with condition:")
50|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
51|
52|    # Test 3: With include fields
53|    sql_statement = schema_editor._create_unique_sql(
54|        None, [column_name], name='test_unique',
55|        include=['included_column'],
56|        table=table_name
57|    )
58|    print("\nTest 3 - Unique constraint with include fields:")
59|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
60|    print(f"References included column: {sql_statement.references_column(table_name, 'included_column')}")
61|
62|# Run tests
63|print("After fix - Testing references_column:")
64|test_references_column()
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The test script looks good. Let me run it to verify the fix:
COMMAND:
cd /workspace
python3 test_fix.py

============================================================



OBSERVATION:

After fix - Testing references_column:
Test 1 - Basic unique constraint:
References column: True
Traceback (most recent call last):
  File "test_fix.py", line 64, in <module>
    test_references_column()
  File "test_fix.py", line 44, in test_references_column
    sql_statement = schema_editor._create_unique_sql(
TypeError: _create_unique_sql() got an unexpected keyword argument 'table'


============================================================



ACTION:

THOUGHT: Ah, I see the error. The `_create_unique_sql` method doesn't accept a `table` parameter directly. Let me fix the test script:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')

from django.conf import settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:'
        }
    },
    INSTALLED_APPS=[]
)

import django
from django.apps import apps
django.setup()

from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.backends.ddl_references import Statement, Table, Columns

# Create a test model class
class TestModel(models.Model):
    test_column = models.CharField(max_length=100)
    included_column = models.CharField(max_length=100)
    
    class Meta:
        app_label = 'test_app'
        db_table = 'test_table'

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Test cases
def test_references_column():
    # Test 1: Basic unique constraint
    table_name = 'test_table'
    column_name = 'test_column'
    table = Table(table_name, schema_editor.quote_name)
    columns = Columns(table_name, [column_name], schema_editor.quote_name)
    sql_statement = Statement(
        schema_editor.sql_create_unique,
        table=table,
        name=schema_editor.quote_name('test_unique'),
        columns=columns
    )
    print("Test 1 - Basic unique constraint:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")

    # Test 2: With condition
    sql_statement = schema_editor._create_unique_sql(
        TestModel, [column_name], name='test_unique',
        condition="test_column > 0"
    )
    print("\\nTest 2 - Unique constraint with condition:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")

    # Test 3: With include fields
    sql_statement = schema_editor._create_unique_sql(
        TestModel, [column_name], name='test_unique',
        include=['included_column']
    )
    print("\\nTest 3 - Unique constraint with include fields:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
    print(f"References included column: {sql_statement.references_column(table_name, 'included_column')}")

# Run tests
print("After fix - Testing references_column:")
test_references_column()
"""
create_file('test_fix.py', CODE)

============================================================



OBSERVATION:

[File test_fix.py already exists and File overwritten.]
[File: /workspace/test_fix.py (71 lines total after edit)]
1|
2|import os
3|os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
4|
5|from django.conf import settings
6|settings.configure(
7|    DATABASES={
8|        'default': {
9|            'ENGINE': 'django.db.backends.sqlite3',
10|            'NAME': ':memory:'
11|        }
12|    },
13|    INSTALLED_APPS=[]
14|)
15|
16|import django
17|from django.apps import apps
18|django.setup()
19|
20|from django.db import models, connection
21|from django.db.backends.base.schema import BaseDatabaseSchemaEditor
22|from django.db.backends.ddl_references import Statement, Table, Columns
23|
24|# Create a test model class
25|class TestModel(models.Model):
26|    test_column = models.CharField(max_length=100)
27|    included_column = models.CharField(max_length=100)
28|    
29|    class Meta:
30|        app_label = 'test_app'
31|        db_table = 'test_table'
32|
33|# Create schema editor
34|schema_editor = BaseDatabaseSchemaEditor(connection)
35|
36|# Test cases
37|def test_references_column():
38|    # Test 1: Basic unique constraint
39|    table_name = 'test_table'
40|    column_name = 'test_column'
41|    table = Table(table_name, schema_editor.quote_name)
42|    columns = Columns(table_name, [column_name], schema_editor.quote_name)
43|    sql_statement = Statement(
44|        schema_editor.sql_create_unique,
45|        table=table,
46|        name=schema_editor.quote_name('test_unique'),
47|        columns=columns
48|    )
49|    print("Test 1 - Basic unique constraint:")
50|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
51|
52|    # Test 2: With condition
53|    sql_statement = schema_editor._create_unique_sql(
54|        TestModel, [column_name], name='test_unique',
55|        condition="test_column > 0"
56|    )
57|    print("\nTest 2 - Unique constraint with condition:")
58|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
59|
60|    # Test 3: With include fields
61|    sql_statement = schema_editor._create_unique_sql(
62|        TestModel, [column_name], name='test_unique',
63|        include=['included_column']
64|    )
65|    print("\nTest 3 - Unique constraint with include fields:")
66|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
67|    print(f"References included column: {sql_statement.references_column(table_name, 'included_column')}")
68|
69|# Run tests
70|print("After fix - Testing references_column:")
71|test_references_column()
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The test script looks good. Let me run it to verify the fix:
COMMAND:
cd /workspace
python3 test_fix.py

============================================================



OBSERVATION:

After fix - Testing references_column:
Test 1 - Basic unique constraint:
References column: True

Test 2 - Unique constraint with condition:
References column: True

Test 3 - Unique constraint with include fields:
Traceback (most recent call last):
  File "test_fix.py", line 71, in <module>
    test_references_column()
  File "test_fix.py", line 66, in test_references_column
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
AttributeError: 'NoneType' object has no attribute 'references_column'


============================================================



ACTION:

THOUGHT: Ah, I see the issue. The `_create_unique_sql` method returns None when the database backend doesn't support certain features. Let me modify the test script to handle this and also check the database feature support:
CODE:
CODE = """
import os
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')

from django.conf import settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:'
        }
    },
    INSTALLED_APPS=[]
)

import django
from django.apps import apps
django.setup()

from django.db import models, connection
from django.db.backends.base.schema import BaseDatabaseSchemaEditor
from django.db.backends.ddl_references import Statement, Table, Columns

# Create a test model class
class TestModel(models.Model):
    test_column = models.CharField(max_length=100)
    included_column = models.CharField(max_length=100)
    
    class Meta:
        app_label = 'test_app'
        db_table = 'test_table'

# Create schema editor
schema_editor = BaseDatabaseSchemaEditor(connection)

# Test cases
def test_references_column():
    # Test 1: Basic unique constraint
    table_name = 'test_table'
    column_name = 'test_column'
    table = Table(table_name, schema_editor.quote_name)
    columns = Columns(table_name, [column_name], schema_editor.quote_name)
    sql_statement = Statement(
        schema_editor.sql_create_unique,
        table=table,
        name=schema_editor.quote_name('test_unique'),
        columns=columns
    )
    print("Test 1 - Basic unique constraint:")
    print(f"References column: {sql_statement.references_column(table_name, column_name)}")

    # Test 2: With condition
    if connection.features.supports_partial_indexes:
        sql_statement = schema_editor._create_unique_sql(
            TestModel, [column_name], name='test_unique',
            condition="test_column > 0"
        )
        print("\\nTest 2 - Unique constraint with condition:")
        print(f"References column: {sql_statement.references_column(table_name, column_name)}")
    else:
        print("\\nTest 2 - Unique constraint with condition:")
        print("Skipped - Database does not support partial indexes")

    # Test 3: With include fields
    if connection.features.supports_covering_indexes:
        sql_statement = schema_editor._create_unique_sql(
            TestModel, [column_name], name='test_unique',
            include=['included_column']
        )
        print("\\nTest 3 - Unique constraint with include fields:")
        print(f"References column: {sql_statement.references_column(table_name, column_name)}")
        print(f"References included column: {sql_statement.references_column(table_name, 'included_column')}")
    else:
        print("\\nTest 3 - Unique constraint with include fields:")
        print("Skipped - Database does not support covering indexes")

# Run tests
print("After fix - Testing references_column:")
test_references_column()
"""
create_file('test_fix.py', CODE)

============================================================



OBSERVATION:

[File test_fix.py already exists and File overwritten.]
[File: /workspace/test_fix.py (79 lines total after edit)]
1|
2|import os
3|os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
4|
5|from django.conf import settings
6|settings.configure(
7|    DATABASES={
8|        'default': {
9|            'ENGINE': 'django.db.backends.sqlite3',
10|            'NAME': ':memory:'
11|        }
12|    },
13|    INSTALLED_APPS=[]
14|)
15|
16|import django
17|from django.apps import apps
18|django.setup()
19|
20|from django.db import models, connection
21|from django.db.backends.base.schema import BaseDatabaseSchemaEditor
22|from django.db.backends.ddl_references import Statement, Table, Columns
23|
24|# Create a test model class
25|class TestModel(models.Model):
26|    test_column = models.CharField(max_length=100)
27|    included_column = models.CharField(max_length=100)
28|    
29|    class Meta:
30|        app_label = 'test_app'
31|        db_table = 'test_table'
32|
33|# Create schema editor
34|schema_editor = BaseDatabaseSchemaEditor(connection)
35|
36|# Test cases
37|def test_references_column():
38|    # Test 1: Basic unique constraint
39|    table_name = 'test_table'
40|    column_name = 'test_column'
41|    table = Table(table_name, schema_editor.quote_name)
42|    columns = Columns(table_name, [column_name], schema_editor.quote_name)
43|    sql_statement = Statement(
44|        schema_editor.sql_create_unique,
45|        table=table,
46|        name=schema_editor.quote_name('test_unique'),
47|        columns=columns
48|    )
49|    print("Test 1 - Basic unique constraint:")
50|    print(f"References column: {sql_statement.references_column(table_name, column_name)}")
51|
52|    # Test 2: With condition
53|    if connection.features.supports_partial_indexes:
54|        sql_statement = schema_editor._create_unique_sql(
55|            TestModel, [column_name], name='test_unique',
56|            condition="test_column > 0"
57|        )
58|        print("\nTest 2 - Unique constraint with condition:")
59|        print(f"References column: {sql_statement.references_column(table_name, column_name)}")
60|    else:
61|        print("\nTest 2 - Unique constraint with condition:")
62|        print("Skipped - Database does not support partial indexes")
63|
64|    # Test 3: With include fields
65|    if connection.features.supports_covering_indexes:
66|        sql_statement = schema_editor._create_unique_sql(
67|            TestModel, [column_name], name='test_unique',
68|            include=['included_column']
69|        )
70|        print("\nTest 3 - Unique constraint with include fields:")
71|        print(f"References column: {sql_statement.references_column(table_name, column_name)}")
72|        print(f"References included column: {sql_statement.references_column(table_name, 'included_column')}")
73|    else:
74|        print("\nTest 3 - Unique constraint with include fields:")
75|        print("Skipped - Database does not support covering indexes")
76|
77|# Run tests
78|print("After fix - Testing references_column:")
79|test_references_column()
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The test script looks good. Let me run it to verify the fix:
COMMAND:
cd /workspace
python3 test_fix.py

============================================================



OBSERVATION:

After fix - Testing references_column:
Test 1 - Basic unique constraint:
References column: True

Test 2 - Unique constraint with condition:
References column: True

Test 3 - Unique constraint with include fields:
Skipped - Database does not support covering indexes



============================================================

