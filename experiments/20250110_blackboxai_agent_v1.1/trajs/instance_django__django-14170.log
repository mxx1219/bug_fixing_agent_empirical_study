

TASK:


Query optimization in YearLookup breaks filtering by "__iso_year"
Description
	 
		(last modified by Florian Demmer)
	 
The optimization to use BETWEEN instead of the EXTRACT operation in ​YearLookup is also registered for the ​"__iso_year" lookup, which breaks the functionality provided by ​ExtractIsoYear when used via the lookup.
This has unfortunately been broken ever since ExtractIsoYear was introduced in ​Django 2.2 via #28649 and wasn't easy to track down since ExtractIsoYear when used by itself eg. in an annotation works perfectly fine. Just when using the lookup in a filter, the optimization is used (even when explicitly using an annotation):
# annotation works
>>> qs = DTModel.objects.annotate(extracted=ExtractIsoYear('start_date')).only('id')
>>> print(qs.query)
SELECT "db_functions_dtmodel"."id", EXTRACT('isoyear' FROM "db_functions_dtmodel"."start_date") AS "extracted" FROM "db_functions_dtmodel"
# explicit annotation used in filter does not use "extracted" and adds BETWEEN
>>> print(qs.filter(extracted=2020).query)
SELECT "db_functions_dtmodel"."id", EXTRACT('isoyear' FROM "db_functions_dtmodel"."start_date") AS "extracted" FROM "db_functions_dtmodel" WHERE "db_functions_dtmodel"."start_date" BETWEEN 2020-01-01 AND 2020-12-31
# implicit lookup uses BETWEEN
>>> print(DTModel.objects.filter(start_date__iso_year=2020).only('id').query)
SELECT "db_functions_dtmodel"."id" FROM "db_functions_dtmodel" WHERE "db_functions_dtmodel"."start_date" BETWEEN 2020-01-01 AND 2020-12-31
This results in the wrong data being returned by filters using iso_year.
This PR fixes the behaviour, reverts the invalid changes to the tests and extends one test to catch this problem: ​https://github.com/django/django/pull/14157



============================================================



ACTION:

THOUGHT: I'll help you implement the necessary changes following the steps you outlined. Let's start:

1. First, let's explore the repository structure:
CODE:
get_repo_structure("/workspace/django__django__4.0")

============================================================



OBSERVATION:

/workspace/django__django__4.0:
AUTHORS
CONTRIBUTING.rst
Django.egg-info
Gruntfile.js
INSTALL
LICENSE
LICENSE.python
MANIFEST.in
README.rst
django
docs
extras
js_tests
package.json
pyproject.toml
scripts
setup.cfg
setup.py
tests
tox.ini

/workspace/django__django__4.0/Django.egg-info:
PKG-INFO
SOURCES.txt
dependency_links.txt
entry_points.txt
not-zip-safe
requires.txt
top_level.txt

/workspace/django__django__4.0/django:
__init__.py
__main__.py
__pycache__
apps
conf
contrib
core
db
dispatch
forms
http
middleware
shortcuts.py
template
templatetags
test
urls
utils
views

/workspace/django__django__4.0/django/__pycache__:
__init__.cpython-38.pyc

/workspace/django__django__4.0/django/apps:
__init__.py
config.py
registry.py

/workspace/django__django__4.0/django/conf:
__init__.py
app_template
global_settings.py
locale
project_template
urls

/workspace/django__django__4.0/django/conf/app_template:
__init__.py-tpl
admin.py-tpl
apps.py-tpl
migrations
models.py-tpl
tests.py-tpl
views.py-tpl

/workspace/django__django__4.0/django/conf/app_template/migrations:
__init__.py-tpl

/workspace/django__django__4.0/django/conf/locale:
__init__.py
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
de_CH
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_NI
es_PR
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
ig
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/conf/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ar:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ar_DZ:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/az:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/bg:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/bn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/bs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ca:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/cs:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/cy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/da:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/de_CH:
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/el:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/en:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/en_AU:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/en_GB:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/eo:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_AR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_CO:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_MX:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/es_NI:
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_PR:
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/et:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/eu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fa:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/fy:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ga:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/gd:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/gl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/he:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hu:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/id:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ig:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ig/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/is:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/it:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ja:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ka:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/km:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/kn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ko:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ky:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/lt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/lv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/mk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ml:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/mn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/nb:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/nl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/nn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pt:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/pt_BR:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ro:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ru:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sl:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sq:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sr_Latn:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sv:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ta:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/te:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tg:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/th:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/uk:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/conf/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/uz:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/vi:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/zh_Hans:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/locale/zh_Hant:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/django/conf/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/conf/project_template:
manage.py-tpl
project_name

/workspace/django__django__4.0/django/conf/project_template/project_name:
__init__.py-tpl
asgi.py-tpl
settings.py-tpl
urls.py-tpl
wsgi.py-tpl

/workspace/django__django__4.0/django/conf/urls:
__init__.py
i18n.py
static.py

/workspace/django__django__4.0/django/contrib:
__init__.py
admin
admindocs
auth
contenttypes
flatpages
gis
humanize
messages
postgres
redirects
sessions
sitemaps
sites
staticfiles
syndication

/workspace/django__django__4.0/django/contrib/admin:
__init__.py
actions.py
apps.py
checks.py
decorators.py
exceptions.py
filters.py
forms.py
helpers.py
locale
migrations
models.py
options.py
sites.py
static
templates
templatetags
tests.py
utils.py
views
widgets.py

/workspace/django__django__4.0/django/contrib/admin/locale:
af
am
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/admin/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/af/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/am:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/am/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admin/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ar/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ast/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/az/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/be/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/bg/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/bn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/br/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/bs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ca/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/cs/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/cy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/da/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/de/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/dsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/el/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/en/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/en_AU/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/en_GB/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/eo/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_AR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_CO/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_MX/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/es_VE/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/et/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/eu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/fy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ga/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/gd/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/gl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/he/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hsb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hu/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/hy/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ia/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/id/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/io/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/is/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/it/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ja/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ka/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/kab/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/kk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/km/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/kn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ko/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ky/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/lb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/lt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/lv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/mk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ml/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/mn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/mr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/my/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/nb/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ne/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/nl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/nn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/os/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pa/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/pt_BR/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ro/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ru/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sl/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sq/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sv/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/sw/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ta/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/te/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/tg/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/th/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/tr/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/tt/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/udm/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/uk/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/ur/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/uz/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/vi/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admin/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po
djangojs.mo
djangojs.po

/workspace/django__django__4.0/django/contrib/admin/migrations:
0001_initial.py
0002_logentry_remove_auto_add.py
0003_logentry_add_action_flag_choices.py
__init__.py

/workspace/django__django__4.0/django/contrib/admin/static:
admin

/workspace/django__django__4.0/django/contrib/admin/static/admin:
css
fonts
img
js

/workspace/django__django__4.0/django/contrib/admin/static/admin/css:
autocomplete.css
base.css
changelists.css
dashboard.css
fonts.css
forms.css
login.css
nav_sidebar.css
responsive.css
responsive_rtl.css
rtl.css
vendor
widgets.css

/workspace/django__django__4.0/django/contrib/admin/static/admin/css/vendor:
select2

/workspace/django__django__4.0/django/contrib/admin/static/admin/css/vendor/select2:
LICENSE-SELECT2.md
select2.css
select2.min.css

/workspace/django__django__4.0/django/contrib/admin/static/admin/fonts:
LICENSE.txt
README.txt
Roboto-Bold-webfont.woff
Roboto-Light-webfont.woff
Roboto-Regular-webfont.woff

/workspace/django__django__4.0/django/contrib/admin/static/admin/img:
LICENSE
README.txt
calendar-icons.svg
gis
icon-addlink.svg
icon-alert.svg
icon-calendar.svg
icon-changelink.svg
icon-clock.svg
icon-deletelink.svg
icon-no.svg
icon-unknown-alt.svg
icon-unknown.svg
icon-viewlink.svg
icon-yes.svg
inline-delete.svg
search.svg
selector-icons.svg
sorting-icons.svg
tooltag-add.svg
tooltag-arrowright.svg

/workspace/django__django__4.0/django/contrib/admin/static/admin/img/gis:
move_vertex_off.svg
move_vertex_on.svg

/workspace/django__django__4.0/django/contrib/admin/static/admin/js:
SelectBox.js
SelectFilter2.js
actions.js
admin
autocomplete.js
calendar.js
cancel.js
change_form.js
collapse.js
core.js
inlines.js
jquery.init.js
nav_sidebar.js
popup_response.js
prepopulate.js
prepopulate_init.js
urlify.js
vendor

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/admin:
DateTimeShortcuts.js
RelatedObjectLookups.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor:
jquery
select2
xregexp

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/jquery:
LICENSE.txt
jquery.js
jquery.min.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/select2:
LICENSE.md
i18n
select2.full.js
select2.full.min.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/select2/i18n:
af.js
ar.js
az.js
bg.js
bn.js
bs.js
ca.js
cs.js
da.js
de.js
dsb.js
el.js
en.js
es.js
et.js
eu.js
fa.js
fi.js
fr.js
gl.js
he.js
hi.js
hr.js
hsb.js
hu.js
hy.js
id.js
is.js
it.js
ja.js
ka.js
km.js
ko.js
lt.js
lv.js
mk.js
ms.js
nb.js
ne.js
nl.js
pl.js
ps.js
pt-BR.js
pt.js
ro.js
ru.js
sk.js
sl.js
sq.js
sr-Cyrl.js
sr.js
sv.js
th.js
tk.js
tr.js
uk.js
vi.js
zh-CN.js
zh-TW.js

/workspace/django__django__4.0/django/contrib/admin/static/admin/js/vendor/xregexp:
LICENSE.txt
xregexp.js
xregexp.min.js

/workspace/django__django__4.0/django/contrib/admin/templates:
admin
registration

/workspace/django__django__4.0/django/contrib/admin/templates/admin:
404.html
500.html
actions.html
app_index.html
app_list.html
auth
base.html
base_site.html
change_form.html
change_form_object_tools.html
change_list.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
delete_confirmation.html
delete_selected_confirmation.html
edit_inline
filter.html
includes
index.html
invalid_setup.html
login.html
nav_sidebar.html
object_history.html
pagination.html
popup_response.html
prepopulated_fields_js.html
search_form.html
submit_line.html
widgets

/workspace/django__django__4.0/django/contrib/admin/templates/admin/auth:
user

/workspace/django__django__4.0/django/contrib/admin/templates/admin/auth/user:
add_form.html
change_password.html

/workspace/django__django__4.0/django/contrib/admin/templates/admin/edit_inline:
stacked.html
tabular.html

/workspace/django__django__4.0/django/contrib/admin/templates/admin/includes:
fieldset.html
object_delete_summary.html

/workspace/django__django__4.0/django/contrib/admin/templates/admin/widgets:
clearable_file_input.html
foreign_key_raw_id.html
many_to_many_raw_id.html
radio.html
related_widget_wrapper.html
split_datetime.html
url.html

/workspace/django__django__4.0/django/contrib/admin/templates/registration:
logged_out.html
password_change_done.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html

/workspace/django__django__4.0/django/contrib/admin/templatetags:
__init__.py
admin_list.py
admin_modify.py
admin_urls.py
base.py
log.py

/workspace/django__django__4.0/django/contrib/admin/views:
__init__.py
autocomplete.py
decorators.py
main.py

/workspace/django__django__4.0/django/contrib/admindocs:
__init__.py
apps.py
locale
middleware.py
templates
urls.py
utils.py
views.py

/workspace/django__django__4.0/django/contrib/admindocs/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/admindocs/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/admindocs/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/admindocs/templates:
admin_doc

/workspace/django__django__4.0/django/contrib/admindocs/templates/admin_doc:
bookmarklets.html
index.html
missing_docutils.html
model_detail.html
model_index.html
template_detail.html
template_filter_index.html
template_tag_index.html
view_detail.html
view_index.html

/workspace/django__django__4.0/django/contrib/auth:
__init__.py
admin.py
apps.py
backends.py
base_user.py
checks.py
common-passwords.txt.gz
context_processors.py
decorators.py
forms.py
handlers
hashers.py
locale
management
middleware.py
migrations
mixins.py
models.py
password_validation.py
signals.py
templates
tokens.py
urls.py
validators.py
views.py

/workspace/django__django__4.0/django/contrib/auth/handlers:
__init__.py
modwsgi.py

/workspace/django__django__4.0/django/contrib/auth/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/auth/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/auth/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/auth/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/auth/management/commands:
__init__.py
changepassword.py
createsuperuser.py

/workspace/django__django__4.0/django/contrib/auth/migrations:
0001_initial.py
0002_alter_permission_name_max_length.py
0003_alter_user_email_max_length.py
0004_alter_user_username_opts.py
0005_alter_user_last_login_null.py
0006_require_contenttypes_0002.py
0007_alter_validators_add_error_messages.py
0008_alter_user_username_max_length.py
0009_alter_user_last_name_max_length.py
0010_alter_group_name_max_length.py
0011_update_proxy_permissions.py
0012_alter_user_first_name_max_length.py
__init__.py

/workspace/django__django__4.0/django/contrib/auth/templates:
auth
registration

/workspace/django__django__4.0/django/contrib/auth/templates/auth:
widgets

/workspace/django__django__4.0/django/contrib/auth/templates/auth/widgets:
read_only_password_hash.html

/workspace/django__django__4.0/django/contrib/auth/templates/registration:
password_reset_subject.txt

/workspace/django__django__4.0/django/contrib/contenttypes:
__init__.py
admin.py
apps.py
checks.py
fields.py
forms.py
locale
management
migrations
models.py
views.py

/workspace/django__django__4.0/django/contrib/contenttypes/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/contenttypes/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/contenttypes/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/contenttypes/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/contenttypes/management/commands:
__init__.py
remove_stale_contenttypes.py

/workspace/django__django__4.0/django/contrib/contenttypes/migrations:
0001_initial.py
0002_remove_content_type_name.py
__init__.py

/workspace/django__django__4.0/django/contrib/flatpages:
__init__.py
admin.py
apps.py
forms.py
locale
middleware.py
migrations
models.py
sitemaps.py
templatetags
urls.py
views.py

/workspace/django__django__4.0/django/contrib/flatpages/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/flatpages/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/flatpages/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/flatpages/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/django/contrib/flatpages/templatetags:
__init__.py
flatpages.py

/workspace/django__django__4.0/django/contrib/gis:
__init__.py
admin
apps.py
db
feeds.py
forms
gdal
geoip2
geometry.py
geos
locale
management
measure.py
ptr.py
serializers
shortcuts.py
sitemaps
static
templates
utils
views.py

/workspace/django__django__4.0/django/contrib/gis/admin:
__init__.py
options.py
widgets.py

/workspace/django__django__4.0/django/contrib/gis/db:
__init__.py
backends
models

/workspace/django__django__4.0/django/contrib/gis/db/backends:
__init__.py
base
mysql
oracle
postgis
spatialite
utils.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/base:
__init__.py
adapter.py
features.py
models.py
operations.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/mysql:
__init__.py
base.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/oracle:
__init__.py
adapter.py
base.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/postgis:
__init__.py
adapter.py
base.py
const.py
features.py
introspection.py
models.py
operations.py
pgraster.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/backends/spatialite:
__init__.py
adapter.py
base.py
client.py
features.py
introspection.py
models.py
operations.py
schema.py

/workspace/django__django__4.0/django/contrib/gis/db/models:
__init__.py
aggregates.py
fields.py
functions.py
lookups.py
proxy.py
sql

/workspace/django__django__4.0/django/contrib/gis/db/models/sql:
__init__.py
conversion.py

/workspace/django__django__4.0/django/contrib/gis/forms:
__init__.py
fields.py
widgets.py

/workspace/django__django__4.0/django/contrib/gis/gdal:
LICENSE
__init__.py
base.py
datasource.py
driver.py
envelope.py
error.py
feature.py
field.py
geometries.py
geomtype.py
layer.py
libgdal.py
prototypes
raster
srs.py

/workspace/django__django__4.0/django/contrib/gis/gdal/prototypes:
__init__.py
ds.py
errcheck.py
generation.py
geom.py
raster.py
srs.py

/workspace/django__django__4.0/django/contrib/gis/gdal/raster:
__init__.py
band.py
base.py
const.py
source.py

/workspace/django__django__4.0/django/contrib/gis/geoip2:
__init__.py
base.py
resources.py

/workspace/django__django__4.0/django/contrib/gis/geos:
LICENSE
__init__.py
base.py
collections.py
coordseq.py
error.py
factory.py
geometry.py
io.py
libgeos.py
linestring.py
mutable_list.py
point.py
polygon.py
prepared.py
prototypes

/workspace/django__django__4.0/django/contrib/gis/geos/prototypes:
__init__.py
coordseq.py
errcheck.py
geom.py
io.py
misc.py
predicates.py
prepared.py
threadsafe.py
topology.py

/workspace/django__django__4.0/django/contrib/gis/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/gis/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/gis/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/gis/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/gis/management/commands:
__init__.py
inspectdb.py
ogrinspect.py

/workspace/django__django__4.0/django/contrib/gis/serializers:
__init__.py
geojson.py

/workspace/django__django__4.0/django/contrib/gis/sitemaps:
__init__.py
kml.py
views.py

/workspace/django__django__4.0/django/contrib/gis/static:
gis

/workspace/django__django__4.0/django/contrib/gis/static/gis:
css
img
js

/workspace/django__django__4.0/django/contrib/gis/static/gis/css:
ol3.css

/workspace/django__django__4.0/django/contrib/gis/static/gis/img:
draw_line_off.svg
draw_line_on.svg
draw_point_off.svg
draw_point_on.svg
draw_polygon_off.svg
draw_polygon_on.svg

/workspace/django__django__4.0/django/contrib/gis/static/gis/js:
OLMapWidget.js

/workspace/django__django__4.0/django/contrib/gis/templates:
gis

/workspace/django__django__4.0/django/contrib/gis/templates/gis:
admin
kml
openlayers-osm.html
openlayers.html

/workspace/django__django__4.0/django/contrib/gis/templates/gis/admin:
openlayers.html
openlayers.js
osm.html
osm.js

/workspace/django__django__4.0/django/contrib/gis/templates/gis/kml:
base.kml
placemarks.kml

/workspace/django__django__4.0/django/contrib/gis/utils:
__init__.py
layermapping.py
ogrinfo.py
ogrinspect.py
srs.py

/workspace/django__django__4.0/django/contrib/humanize:
__init__.py
apps.py
locale
templatetags

/workspace/django__django__4.0/django/contrib/humanize/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
ms
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/humanize/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ms:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ms/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/humanize/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/humanize/templatetags:
__init__.py
humanize.py

/workspace/django__django__4.0/django/contrib/messages:
__init__.py
api.py
apps.py
constants.py
context_processors.py
middleware.py
storage
utils.py
views.py

/workspace/django__django__4.0/django/contrib/messages/storage:
__init__.py
base.py
cookie.py
fallback.py
session.py

/workspace/django__django__4.0/django/contrib/postgres:
__init__.py
aggregates
apps.py
constraints.py
fields
forms
functions.py
indexes.py
jinja2
locale
lookups.py
operations.py
search.py
serializers.py
signals.py
templates
utils.py
validators.py

/workspace/django__django__4.0/django/contrib/postgres/aggregates:
__init__.py
general.py
mixins.py
statistics.py

/workspace/django__django__4.0/django/contrib/postgres/fields:
__init__.py
array.py
citext.py
hstore.py
jsonb.py
ranges.py
utils.py

/workspace/django__django__4.0/django/contrib/postgres/forms:
__init__.py
array.py
hstore.py
ranges.py

/workspace/django__django__4.0/django/contrib/postgres/jinja2:
postgres

/workspace/django__django__4.0/django/contrib/postgres/jinja2/postgres:
widgets

/workspace/django__django__4.0/django/contrib/postgres/jinja2/postgres/widgets:
split_array.html

/workspace/django__django__4.0/django/contrib/postgres/locale:
af
ar
ar_DZ
az
be
bg
ca
cs
da
de
dsb
el
en
eo
es
es_AR
es_CO
es_MX
et
eu
fa
fi
fr
gd
gl
he
hr
hsb
hu
hy
ia
id
is
it
ja
ka
kk
ko
ky
lt
lv
mk
ml
mn
nb
ne
nl
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
tg
tk
tr
uk
uz
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/postgres/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/postgres/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/postgres/templates:
postgres

/workspace/django__django__4.0/django/contrib/postgres/templates/postgres:
widgets

/workspace/django__django__4.0/django/contrib/postgres/templates/postgres/widgets:
split_array.html

/workspace/django__django__4.0/django/contrib/redirects:
__init__.py
admin.py
apps.py
locale
middleware.py
migrations
models.py

/workspace/django__django__4.0/django/contrib/redirects/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/redirects/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/redirects/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/redirects/migrations:
0001_initial.py
0002_alter_redirect_new_path_help_text.py
__init__.py

/workspace/django__django__4.0/django/contrib/sessions:
__init__.py
apps.py
backends
base_session.py
exceptions.py
locale
management
middleware.py
migrations
models.py
serializers.py

/workspace/django__django__4.0/django/contrib/sessions/backends:
__init__.py
base.py
cache.py
cached_db.py
db.py
file.py
signed_cookies.py

/workspace/django__django__4.0/django/contrib/sessions/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/sessions/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sessions/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sessions/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/sessions/management/commands:
__init__.py
clearsessions.py

/workspace/django__django__4.0/django/contrib/sessions/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/django/contrib/sitemaps:
__init__.py
apps.py
management
templates
views.py

/workspace/django__django__4.0/django/contrib/sitemaps/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/sitemaps/management/commands:
__init__.py
ping_google.py

/workspace/django__django__4.0/django/contrib/sitemaps/templates:
sitemap.xml
sitemap_index.xml

/workspace/django__django__4.0/django/contrib/sites:
__init__.py
admin.py
apps.py
checks.py
locale
management.py
managers.py
middleware.py
migrations
models.py
requests.py
shortcuts.py

/workspace/django__django__4.0/django/contrib/sites/locale:
af
ar
ar_DZ
ast
az
be
bg
bn
br
bs
ca
cs
cy
da
de
dsb
el
en
en_AU
en_GB
eo
es
es_AR
es_CO
es_MX
es_VE
et
eu
fa
fi
fr
fy
ga
gd
gl
he
hi
hr
hsb
hu
hy
ia
id
io
is
it
ja
ka
kab
kk
km
kn
ko
ky
lb
lt
lv
mk
ml
mn
mr
my
nb
ne
nl
nn
os
pa
pl
pt
pt_BR
ro
ru
sk
sl
sq
sr
sr_Latn
sv
sw
ta
te
tg
th
tk
tr
tt
udm
uk
ur
uz
vi
zh_Hans
zh_Hant

/workspace/django__django__4.0/django/contrib/sites/locale/af:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/af/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ar:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ar/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ar_DZ:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ar_DZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ast:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ast/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/az:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/az/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/be:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/be/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/bg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/bg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/bn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/bn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/br:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/br/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/bs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/bs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ca:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ca/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/cs:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/cs/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/cy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/cy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/da:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/da/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/dsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/dsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/el:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/el/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/en_GB/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/eo:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/eo/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_AR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_CO:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_CO/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_MX:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_MX/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/es_VE:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/es_VE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/et:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/et/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/eu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/eu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/fy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/fy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ga:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ga/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/gd:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/gd/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/gl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/gl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/he:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/he/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hsb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hsb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hu:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hu/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/hy:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/hy/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ia:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ia/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/id:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/id/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/io:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/io/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/is:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/is/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/it:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/it/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ja/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ka:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ka/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/kab:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/kab/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/kk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/kk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/km:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/km/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/kn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/kn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ko/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ky:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ky/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/lb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/lb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/lt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/lt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/lv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/lv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/mk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/mk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ml:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ml/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/mn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/mn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/mr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/mr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/my:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/my/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/nb:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/nb/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ne:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ne/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/nn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/nn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/os:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/os/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pa:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pa/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ro:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ro/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ru/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sl:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sq:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sq/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sr_Latn:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sr_Latn/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sv:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sv/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/sw:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/sw/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ta:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ta/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/te:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/te/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tg:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tg/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/th:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/th/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tr:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/tt:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/tt/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/udm:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/udm/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/uk:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/uk/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/ur:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/ur/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/uz:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/uz/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/vi:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/vi/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hans:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hans/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hant:
LC_MESSAGES

/workspace/django__django__4.0/django/contrib/sites/locale/zh_Hant/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/django/contrib/sites/migrations:
0001_initial.py
0002_alter_domain_unique.py
__init__.py

/workspace/django__django__4.0/django/contrib/staticfiles:
__init__.py
apps.py
checks.py
finders.py
handlers.py
management
storage.py
testing.py
urls.py
utils.py
views.py

/workspace/django__django__4.0/django/contrib/staticfiles/management:
__init__.py
commands

/workspace/django__django__4.0/django/contrib/staticfiles/management/commands:
__init__.py
collectstatic.py
findstatic.py
runserver.py

/workspace/django__django__4.0/django/contrib/syndication:
__init__.py
apps.py
views.py

/workspace/django__django__4.0/django/core:
__init__.py
asgi.py
cache
checks
exceptions.py
files
handlers
mail
management
paginator.py
serializers
servers
signals.py
signing.py
validators.py
wsgi.py

/workspace/django__django__4.0/django/core/cache:
__init__.py
backends
utils.py

/workspace/django__django__4.0/django/core/cache/backends:
__init__.py
base.py
db.py
dummy.py
filebased.py
locmem.py
memcached.py

/workspace/django__django__4.0/django/core/checks:
__init__.py
async_checks.py
caches.py
compatibility
database.py
files.py
messages.py
model_checks.py
registry.py
security
templates.py
translation.py
urls.py

/workspace/django__django__4.0/django/core/checks/compatibility:
__init__.py
django_4_0.py

/workspace/django__django__4.0/django/core/checks/security:
__init__.py
base.py
csrf.py
sessions.py

/workspace/django__django__4.0/django/core/files:
__init__.py
base.py
images.py
locks.py
move.py
storage.py
temp.py
uploadedfile.py
uploadhandler.py
utils.py

/workspace/django__django__4.0/django/core/handlers:
__init__.py
asgi.py
base.py
exception.py
wsgi.py

/workspace/django__django__4.0/django/core/mail:
__init__.py
backends
message.py
utils.py

/workspace/django__django__4.0/django/core/mail/backends:
__init__.py
base.py
console.py
dummy.py
filebased.py
locmem.py
smtp.py

/workspace/django__django__4.0/django/core/management:
__init__.py
base.py
color.py
commands
sql.py
templates.py
utils.py

/workspace/django__django__4.0/django/core/management/commands:
__init__.py
check.py
compilemessages.py
createcachetable.py
dbshell.py
diffsettings.py
dumpdata.py
flush.py
inspectdb.py
loaddata.py
makemessages.py
makemigrations.py
migrate.py
runserver.py
sendtestemail.py
shell.py
showmigrations.py
sqlflush.py
sqlmigrate.py
sqlsequencereset.py
squashmigrations.py
startapp.py
startproject.py
test.py
testserver.py

/workspace/django__django__4.0/django/core/serializers:
__init__.py
base.py
json.py
jsonl.py
python.py
pyyaml.py
xml_serializer.py

/workspace/django__django__4.0/django/core/servers:
__init__.py
basehttp.py

/workspace/django__django__4.0/django/db:
__init__.py
backends
migrations
models
transaction.py
utils.py

/workspace/django__django__4.0/django/db/backends:
__init__.py
base
ddl_references.py
dummy
mysql
oracle
postgresql
signals.py
sqlite3
utils.py

/workspace/django__django__4.0/django/db/backends/base:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__4.0/django/db/backends/dummy:
__init__.py
base.py
features.py

/workspace/django__django__4.0/django/db/backends/mysql:
__init__.py
base.py
client.py
compiler.py
creation.py
features.py
introspection.py
operations.py
schema.py
validation.py

/workspace/django__django__4.0/django/db/backends/oracle:
__init__.py
base.py
client.py
creation.py
features.py
functions.py
introspection.py
operations.py
schema.py
utils.py
validation.py

/workspace/django__django__4.0/django/db/backends/postgresql:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__4.0/django/db/backends/sqlite3:
__init__.py
base.py
client.py
creation.py
features.py
introspection.py
operations.py
schema.py

/workspace/django__django__4.0/django/db/migrations:
__init__.py
autodetector.py
exceptions.py
executor.py
graph.py
loader.py
migration.py
operations
optimizer.py
questioner.py
recorder.py
serializer.py
state.py
utils.py
writer.py

/workspace/django__django__4.0/django/db/migrations/operations:
__init__.py
base.py
fields.py
models.py
special.py
utils.py

/workspace/django__django__4.0/django/db/models:
__init__.py
aggregates.py
base.py
constants.py
constraints.py
deletion.py
enums.py
expressions.py
fields
functions
indexes.py
lookups.py
manager.py
options.py
query.py
query_utils.py
signals.py
sql
utils.py

/workspace/django__django__4.0/django/db/models/fields:
__init__.py
files.py
json.py
mixins.py
proxy.py
related.py
related_descriptors.py
related_lookups.py
reverse_related.py

/workspace/django__django__4.0/django/db/models/functions:
__init__.py
comparison.py
datetime.py
math.py
mixins.py
text.py
window.py

/workspace/django__django__4.0/django/db/models/sql:
__init__.py
compiler.py
constants.py
datastructures.py
query.py
subqueries.py
where.py

/workspace/django__django__4.0/django/dispatch:
__init__.py
dispatcher.py
license.txt

/workspace/django__django__4.0/django/forms:
__init__.py
boundfield.py
fields.py
forms.py
formsets.py
jinja2
models.py
renderers.py
templates
utils.py
widgets.py

/workspace/django__django__4.0/django/forms/jinja2:
django

/workspace/django__django__4.0/django/forms/jinja2/django:
forms

/workspace/django__django__4.0/django/forms/jinja2/django/forms:
widgets

/workspace/django__django__4.0/django/forms/jinja2/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__4.0/django/forms/templates:
django

/workspace/django__django__4.0/django/forms/templates/django:
forms

/workspace/django__django__4.0/django/forms/templates/django/forms:
widgets

/workspace/django__django__4.0/django/forms/templates/django/forms/widgets:
attrs.html
checkbox.html
checkbox_option.html
checkbox_select.html
clearable_file_input.html
date.html
datetime.html
email.html
file.html
hidden.html
input.html
input_option.html
multiple_hidden.html
multiple_input.html
multiwidget.html
number.html
password.html
radio.html
radio_option.html
select.html
select_date.html
select_option.html
splitdatetime.html
splithiddendatetime.html
text.html
textarea.html
time.html
url.html

/workspace/django__django__4.0/django/http:
__init__.py
cookie.py
multipartparser.py
request.py
response.py

/workspace/django__django__4.0/django/middleware:
__init__.py
cache.py
clickjacking.py
common.py
csrf.py
gzip.py
http.py
locale.py
security.py

/workspace/django__django__4.0/django/template:
__init__.py
autoreload.py
backends
base.py
context.py
context_processors.py
defaultfilters.py
defaulttags.py
engine.py
exceptions.py
library.py
loader.py
loader_tags.py
loaders
response.py
smartif.py
utils.py

/workspace/django__django__4.0/django/template/backends:
__init__.py
base.py
django.py
dummy.py
jinja2.py
utils.py

/workspace/django__django__4.0/django/template/loaders:
__init__.py
app_directories.py
base.py
cached.py
filesystem.py
locmem.py

/workspace/django__django__4.0/django/templatetags:
__init__.py
cache.py
i18n.py
l10n.py
static.py
tz.py

/workspace/django__django__4.0/django/test:
__init__.py
client.py
html.py
runner.py
selenium.py
signals.py
testcases.py
utils.py

/workspace/django__django__4.0/django/urls:
__init__.py
base.py
conf.py
converters.py
exceptions.py
resolvers.py
utils.py

/workspace/django__django__4.0/django/utils:
__init__.py
__pycache__
_os.py
archive.py
asyncio.py
autoreload.py
baseconv.py
cache.py
connection.py
crypto.py
datastructures.py
dateformat.py
dateparse.py
dates.py
datetime_safe.py
deconstruct.py
decorators.py
deprecation.py
duration.py
encoding.py
feedgenerator.py
formats.py
functional.py
hashable.py
html.py
http.py
inspect.py
ipv6.py
itercompat.py
jslex.py
log.py
lorem_ipsum.py
module_loading.py
numberformat.py
regex_helper.py
safestring.py
termcolors.py
text.py
timesince.py
timezone.py
topological_sort.py
translation
tree.py
version.py
xmlutils.py

/workspace/django__django__4.0/django/utils/__pycache__:
__init__.cpython-38.pyc
version.cpython-38.pyc

/workspace/django__django__4.0/django/utils/translation:
__init__.py
reloader.py
template.py
trans_null.py
trans_real.py

/workspace/django__django__4.0/django/views:
__init__.py
csrf.py
debug.py
decorators
defaults.py
generic
i18n.py
static.py
templates

/workspace/django__django__4.0/django/views/decorators:
__init__.py
cache.py
clickjacking.py
common.py
csrf.py
debug.py
gzip.py
http.py
vary.py

/workspace/django__django__4.0/django/views/generic:
__init__.py
base.py
dates.py
detail.py
edit.py
list.py

/workspace/django__django__4.0/django/views/templates:
default_urlconf.html
technical_404.html
technical_500.html
technical_500.txt

/workspace/django__django__4.0/docs:
Makefile
README.rst
_ext
_theme
conf.py
contents.txt
faq
glossary.txt
howto
index.txt
internals
intro
make.bat
man
misc
ref
releases
requirements.txt
spelling_wordlist
topics

/workspace/django__django__4.0/docs/_ext:
djangodocs.py

/workspace/django__django__4.0/docs/_theme:
djangodocs
djangodocs-epub

/workspace/django__django__4.0/docs/_theme/djangodocs:
genindex.html
layout.html
modindex.html
search.html
static
theme.conf

/workspace/django__django__4.0/docs/_theme/djangodocs/static:
console-tabs.css
default.css
djangodocs.css
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
fontawesome
homepage.css
reset-fonts-grids.css

/workspace/django__django__4.0/docs/_theme/djangodocs/static/fontawesome:
LICENSE.txt
README.md
css
webfonts

/workspace/django__django__4.0/docs/_theme/djangodocs/static/fontawesome/css:
fa-brands.min.css

/workspace/django__django__4.0/docs/_theme/djangodocs/static/fontawesome/webfonts:
fa-brands-400.eot
fa-brands-400.svg
fa-brands-400.ttf
fa-brands-400.woff
fa-brands-400.woff2

/workspace/django__django__4.0/docs/_theme/djangodocs-epub:
epub-cover.html
static
theme.conf

/workspace/django__django__4.0/docs/_theme/djangodocs-epub/static:
docicons-behindscenes.png
docicons-note.png
docicons-philosophy.png
docicons-warning.png
epub.css

/workspace/django__django__4.0/docs/faq:
admin.txt
contributing.txt
general.txt
help.txt
index.txt
install.txt
models.txt
troubleshooting.txt
usage.txt

/workspace/django__django__4.0/docs/howto:
_images
auth-remote-user.txt
custom-file-storage.txt
custom-lookups.txt
custom-management-commands.txt
custom-model-fields.txt
custom-template-backend.txt
custom-template-tags.txt
deployment
error-reporting.txt
index.txt
initial-data.txt
legacy-databases.txt
outputting-csv.txt
outputting-pdf.txt
overriding-templates.txt
static-files
upgrade-version.txt
windows.txt
writing-migrations.txt

/workspace/django__django__4.0/docs/howto/_images:
postmortem.png
template-lines.png

/workspace/django__django__4.0/docs/howto/deployment:
asgi
checklist.txt
index.txt
wsgi

/workspace/django__django__4.0/docs/howto/deployment/asgi:
daphne.txt
hypercorn.txt
index.txt
uvicorn.txt

/workspace/django__django__4.0/docs/howto/deployment/wsgi:
apache-auth.txt
gunicorn.txt
index.txt
modwsgi.txt
uwsgi.txt

/workspace/django__django__4.0/docs/howto/static-files:
deployment.txt
index.txt

/workspace/django__django__4.0/docs/internals:
_images
contributing
deprecation.txt
git.txt
howto-release-django.txt
index.txt
mailing-lists.txt
organization.txt
release-process.txt
security.txt

/workspace/django__django__4.0/docs/internals/_images:
triage_process.graffle
triage_process.pdf
triage_process.svg

/workspace/django__django__4.0/docs/internals/contributing:
bugs-and-features.txt
committing-code.txt
index.txt
localizing.txt
new-contributors.txt
triaging-tickets.txt
writing-code
writing-documentation.txt

/workspace/django__django__4.0/docs/internals/contributing/writing-code:
coding-style.txt
index.txt
javascript.txt
submitting-patches.txt
unit-tests.txt
working-with-git.txt

/workspace/django__django__4.0/docs/intro:
_images
contributing.txt
index.txt
install.txt
overview.txt
reusable-apps.txt
tutorial01.txt
tutorial02.txt
tutorial03.txt
tutorial04.txt
tutorial05.txt
tutorial06.txt
tutorial07.txt
whatsnext.txt

/workspace/django__django__4.0/docs/intro/_images:
admin01.png
admin02.png
admin03t.png
admin04t.png
admin05t.png
admin06t.png
admin07.png
admin08t.png
admin09.png
admin10t.png
admin11t.png
admin12t.png
admin13t.png
admin14t.png

/workspace/django__django__4.0/docs/man:
django-admin.1

/workspace/django__django__4.0/docs/misc:
api-stability.txt
design-philosophies.txt
distributions.txt
index.txt

/workspace/django__django__4.0/docs/ref:
applications.txt
checks.txt
class-based-views
clickjacking.txt
contrib
csrf.txt
databases.txt
django-admin.txt
exceptions.txt
files
forms
index.txt
middleware.txt
migration-operations.txt
models
paginator.txt
request-response.txt
schema-editor.txt
settings.txt
signals.txt
template-response.txt
templates
unicode.txt
urlresolvers.txt
urls.txt
utils.txt
validators.txt
views.txt

/workspace/django__django__4.0/docs/ref/class-based-views:
base.txt
flattened-index.txt
generic-date-based.txt
generic-display.txt
generic-editing.txt
index.txt
mixins-date-based.txt
mixins-editing.txt
mixins-multiple-object.txt
mixins-simple.txt
mixins-single-object.txt
mixins.txt

/workspace/django__django__4.0/docs/ref/contrib:
admin
auth.txt
contenttypes.txt
flatpages.txt
gis
humanize.txt
index.txt
messages.txt
postgres
redirects.txt
sitemaps.txt
sites.txt
staticfiles.txt
syndication.txt

/workspace/django__django__4.0/docs/ref/contrib/admin:
_images
actions.txt
admindocs.txt
index.txt
javascript.txt

/workspace/django__django__4.0/docs/ref/contrib/admin/_images:
actions-as-modeladmin-methods.png
adding-actions-to-the-modeladmin.png
admin-actions.png
fieldsets.png
list_filter.png
raw_id_fields.png

/workspace/django__django__4.0/docs/ref/contrib/gis:
admin.txt
commands.txt
db-api.txt
deployment.txt
feeds.txt
forms-api.txt
functions.txt
gdal.txt
geoip2.txt
geoquerysets.txt
geos.txt
index.txt
install
layermapping.txt
measure.txt
model-api.txt
ogrinspect.txt
serializers.txt
sitemaps.txt
testing.txt
tutorial.txt
utils.txt

/workspace/django__django__4.0/docs/ref/contrib/gis/install:
geolibs.txt
index.txt
postgis.txt
spatialite.txt

/workspace/django__django__4.0/docs/ref/contrib/postgres:
aggregates.txt
constraints.txt
fields.txt
forms.txt
functions.txt
index.txt
indexes.txt
lookups.txt
operations.txt
search.txt
validators.txt

/workspace/django__django__4.0/docs/ref/files:
file.txt
index.txt
storage.txt
uploads.txt

/workspace/django__django__4.0/docs/ref/forms:
api.txt
fields.txt
formsets.txt
index.txt
models.txt
renderers.txt
validation.txt
widgets.txt

/workspace/django__django__4.0/docs/ref/models:
class.txt
conditional-expressions.txt
constraints.txt
database-functions.txt
expressions.txt
fields.txt
index.txt
indexes.txt
instances.txt
lookups.txt
meta.txt
options.txt
querysets.txt
relations.txt

/workspace/django__django__4.0/docs/ref/templates:
api.txt
builtins.txt
index.txt
language.txt

/workspace/django__django__4.0/docs/releases:
0.95.txt
0.96.txt
1.0-porting-guide.txt
1.0.1.txt
1.0.2.txt
1.0.txt
1.1.2.txt
1.1.3.txt
1.1.4.txt
1.1.txt
1.10.1.txt
1.10.2.txt
1.10.3.txt
1.10.4.txt
1.10.5.txt
1.10.6.txt
1.10.7.txt
1.10.8.txt
1.10.txt
1.11.1.txt
1.11.10.txt
1.11.11.txt
1.11.12.txt
1.11.13.txt
1.11.14.txt
1.11.15.txt
1.11.16.txt
1.11.17.txt
1.11.18.txt
1.11.19.txt
1.11.2.txt
1.11.20.txt
1.11.21.txt
1.11.22.txt
1.11.23.txt
1.11.24.txt
1.11.25.txt
1.11.26.txt
1.11.27.txt
1.11.28.txt
1.11.29.txt
1.11.3.txt
1.11.4.txt
1.11.5.txt
1.11.6.txt
1.11.7.txt
1.11.8.txt
1.11.9.txt
1.11.txt
1.2.1.txt
1.2.2.txt
1.2.3.txt
1.2.4.txt
1.2.5.txt
1.2.6.txt
1.2.7.txt
1.2.txt
1.3.1.txt
1.3.2.txt
1.3.3.txt
1.3.4.txt
1.3.5.txt
1.3.6.txt
1.3.7.txt
1.3.txt
1.4.1.txt
1.4.10.txt
1.4.11.txt
1.4.12.txt
1.4.13.txt
1.4.14.txt
1.4.15.txt
1.4.16.txt
1.4.17.txt
1.4.18.txt
1.4.19.txt
1.4.2.txt
1.4.20.txt
1.4.21.txt
1.4.22.txt
1.4.3.txt
1.4.4.txt
1.4.5.txt
1.4.6.txt
1.4.7.txt
1.4.8.txt
1.4.9.txt
1.4.txt
1.5.1.txt
1.5.10.txt
1.5.11.txt
1.5.12.txt
1.5.2.txt
1.5.3.txt
1.5.4.txt
1.5.5.txt
1.5.6.txt
1.5.7.txt
1.5.8.txt
1.5.9.txt
1.5.txt
1.6.1.txt
1.6.10.txt
1.6.11.txt
1.6.2.txt
1.6.3.txt
1.6.4.txt
1.6.5.txt
1.6.6.txt
1.6.7.txt
1.6.8.txt
1.6.9.txt
1.6.txt
1.7.1.txt
1.7.10.txt
1.7.11.txt
1.7.2.txt
1.7.3.txt
1.7.4.txt
1.7.5.txt
1.7.6.txt
1.7.7.txt
1.7.8.txt
1.7.9.txt
1.7.txt
1.8.1.txt
1.8.10.txt
1.8.11.txt
1.8.12.txt
1.8.13.txt
1.8.14.txt
1.8.15.txt
1.8.16.txt
1.8.17.txt
1.8.18.txt
1.8.19.txt
1.8.2.txt
1.8.3.txt
1.8.4.txt
1.8.5.txt
1.8.6.txt
1.8.7.txt
1.8.8.txt
1.8.9.txt
1.8.txt
1.9.1.txt
1.9.10.txt
1.9.11.txt
1.9.12.txt
1.9.13.txt
1.9.2.txt
1.9.3.txt
1.9.4.txt
1.9.5.txt
1.9.6.txt
1.9.7.txt
1.9.8.txt
1.9.9.txt
1.9.txt
2.0.1.txt
2.0.10.txt
2.0.11.txt
2.0.12.txt
2.0.13.txt
2.0.2.txt
2.0.3.txt
2.0.4.txt
2.0.5.txt
2.0.6.txt
2.0.7.txt
2.0.8.txt
2.0.9.txt
2.0.txt
2.1.1.txt
2.1.10.txt
2.1.11.txt
2.1.12.txt
2.1.13.txt
2.1.14.txt
2.1.15.txt
2.1.2.txt
2.1.3.txt
2.1.4.txt
2.1.5.txt
2.1.6.txt
2.1.7.txt
2.1.8.txt
2.1.9.txt
2.1.txt
2.2.1.txt
2.2.10.txt
2.2.11.txt
2.2.12.txt
2.2.13.txt
2.2.14.txt
2.2.15.txt
2.2.16.txt
2.2.17.txt
2.2.18.txt
2.2.19.txt
2.2.2.txt
2.2.3.txt
2.2.4.txt
2.2.5.txt
2.2.6.txt
2.2.7.txt
2.2.8.txt
2.2.9.txt
2.2.txt
3.0.1.txt
3.0.10.txt
3.0.11.txt
3.0.12.txt
3.0.13.txt
3.0.2.txt
3.0.3.txt
3.0.4.txt
3.0.5.txt
3.0.6.txt
3.0.7.txt
3.0.8.txt
3.0.9.txt
3.0.txt
3.1.1.txt
3.1.2.txt
3.1.3.txt
3.1.4.txt
3.1.5.txt
3.1.6.txt
3.1.7.txt
3.1.8.txt
3.1.txt
3.2.txt
4.0.txt
index.txt
security.txt

/workspace/django__django__4.0/docs/topics:
async.txt
auth
cache.txt
checks.txt
class-based-views
conditional-view-processing.txt
db
email.txt
external-packages.txt
files.txt
forms
http
i18n
index.txt
install.txt
logging.txt
migrations.txt
pagination.txt
performance.txt
security.txt
serialization.txt
settings.txt
signals.txt
signing.txt
templates.txt
testing

/workspace/django__django__4.0/docs/topics/auth:
customizing.txt
default.txt
index.txt
passwords.txt

/workspace/django__django__4.0/docs/topics/class-based-views:
generic-display.txt
generic-editing.txt
index.txt
intro.txt
mixins.txt

/workspace/django__django__4.0/docs/topics/db:
aggregation.txt
examples
index.txt
instrumentation.txt
managers.txt
models.txt
multi-db.txt
optimization.txt
queries.txt
search.txt
sql.txt
tablespaces.txt
transactions.txt

/workspace/django__django__4.0/docs/topics/db/examples:
index.txt
many_to_many.txt
many_to_one.txt
one_to_one.txt

/workspace/django__django__4.0/docs/topics/forms:
formsets.txt
index.txt
media.txt
modelforms.txt

/workspace/django__django__4.0/docs/topics/http:
_images
decorators.txt
file-uploads.txt
generic-views.txt
index.txt
middleware.txt
sessions.txt
shortcuts.txt
urls.txt
views.txt

/workspace/django__django__4.0/docs/topics/http/_images:
middleware.pdf

/workspace/django__django__4.0/docs/topics/i18n:
formatting.txt
index.txt
timezones.txt
translation.txt

/workspace/django__django__4.0/docs/topics/testing:
_images
advanced.txt
index.txt
overview.txt
tools.txt

/workspace/django__django__4.0/docs/topics/testing/_images:
django_unittest_classes_hierarchy.graffle
django_unittest_classes_hierarchy.pdf
django_unittest_classes_hierarchy.svg

/workspace/django__django__4.0/extras:
Makefile
README.TXT
django_bash_completion

/workspace/django__django__4.0/js_tests:
admin
gis
tests.html

/workspace/django__django__4.0/js_tests/admin:
DateTimeShortcuts.test.js
SelectBox.test.js
SelectFilter2.test.js
URLify.test.js
actions.test.js
core.test.js
inlines.test.js
jsi18n-mocks.test.js

/workspace/django__django__4.0/js_tests/gis:
mapwidget.test.js

/workspace/django__django__4.0/scripts:
manage_translations.py
rpm-install.sh

/workspace/django__django__4.0/tests:
README.rst
absolute_url_overrides
admin_autodiscover
admin_changelist
admin_checks
admin_custom_urls
admin_default_site
admin_docs
admin_filters
admin_inlines
admin_ordering
admin_registration
admin_scripts
admin_utils
admin_views
admin_widgets
aggregation
aggregation_regress
annotations
app_loading
apps
asgi
async
auth_tests
backends
base
bash_completion
basic
builtin_server
bulk_create
cache
check_framework
conditional_processing
constraints
contenttypes_tests
context_processors
csrf_tests
custom_columns
custom_lookups
custom_managers
custom_methods
custom_migration_operations
custom_pk
datatypes
dates
datetimes
db_functions
db_typecasts
db_utils
dbshell
decorators
defer
defer_regress
delete
delete_regress
deprecation
dispatch
distinct_on_fields
empty
empty_models
expressions
expressions_case
expressions_window
extra_regress
field_deconstruction
field_defaults
field_subclassing
file_storage
file_uploads
files
filtered_relation
fixtures
fixtures_model_package
fixtures_regress
flatpages_tests
force_insert_update
foreign_object
forms_tests
from_db_value
generic_inline_admin
generic_relations
generic_relations_regress
generic_views
get_earliest_or_latest
get_object_or_404
get_or_create
gis_tests
handlers
httpwrappers
humanize_tests
i18n
import_error_package
indexes
inline_formsets
inspectdb
introspection
invalid_models_tests
known_related_objects
logging_tests
lookup
m2m_and_m2o
m2m_intermediary
m2m_multiple
m2m_recursive
m2m_regress
m2m_signals
m2m_through
m2m_through_regress
m2o_recursive
mail
managers_regress
many_to_many
many_to_one
many_to_one_null
max_lengths
messages_tests
middleware
middleware_exceptions
migrate_signals
migration_test_data_persistence
migrations
migrations2
model_enums
model_fields
model_forms
model_formsets
model_formsets_regress
model_indexes
model_inheritance
model_inheritance_regress
model_meta
model_options
model_package
model_regress
modeladmin
multiple_database
mutually_referential
nested_foreign_keys
no_models
null_fk
null_fk_ordering
null_queries
one_to_one
or_lookups
order_with_respect_to
ordering
pagination
postgres_tests
prefetch_related
project_template
properties
proxy_model_inheritance
proxy_models
queries
queryset_pickle
raw_query
redirects_tests
requests
requirements
reserved_names
resolve_url
responses
reverse_lookup
runtests.py
save_delete_hooks
schema
select_for_update
select_related
select_related_onetoone
select_related_regress
serializers
servers
sessions_tests
settings_tests
shell
shortcuts
signals
signed_cookies_tests
signing
sitemaps_tests
sites_framework
sites_tests
staticfiles_tests
str
string_lookup
swappable_models
syndication_tests
template_backends
template_loader
template_tests
templates
test_client
test_client_regress
test_exceptions
test_runner
test_runner_apps
test_sqlite.py
test_utils
timezones
transaction_hooks
transactions
unmanaged_models
update
update_only_fields
urlpatterns
urlpatterns_reverse
urls.py
user_commands
utils_tests
validation
validators
version
view_tests
wsgi

/workspace/django__django__4.0/tests/absolute_url_overrides:
__init__.py
tests.py

/workspace/django__django__4.0/tests/admin_autodiscover:
__init__.py
admin.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_changelist:
__init__.py
admin.py
models.py
test_date_hierarchy.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_checks:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_custom_urls:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_default_site:
__init__.py
apps.py
sites.py
tests.py

/workspace/django__django__4.0/tests/admin_docs:
__init__.py
evilfile.txt
models.py
namespace_urls.py
test_middleware.py
test_utils.py
test_views.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/admin_filters:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_inlines:
__init__.py
admin.py
models.py
test_templates.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_registration:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/admin_scripts:
__init__.py
another_app_waiting_migration
app_raising_messages
app_raising_warning
app_waiting_migration
app_with_import
broken_app
complex_app
configured_dynamic_settings_manage.py
configured_settings_manage.py
custom_templates
management
simple_app
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_scripts/another_app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/admin_scripts/another_app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/admin_scripts/app_raising_messages:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/app_raising_warning:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/app_waiting_migration:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/admin_scripts/app_waiting_migration/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/admin_scripts/app_with_import:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/broken_app:
__init__.py
models.py

/workspace/django__django__4.0/tests/admin_scripts/complex_app:
__init__.py
admin
management
models

/workspace/django__django__4.0/tests/admin_scripts/complex_app/admin:
__init__.py
foo.py

/workspace/django__django__4.0/tests/admin_scripts/complex_app/management:
__init__.py
commands

/workspace/django__django__4.0/tests/admin_scripts/complex_app/management/commands:
__init__.py
duplicate.py

/workspace/django__django__4.0/tests/admin_scripts/complex_app/models:
__init__.py
bar.py
foo.py

/workspace/django__django__4.0/tests/admin_scripts/custom_templates:
app_template
project_template
project_template.tgz

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/app_template:
__init__.py
api.py

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/project_template:
additional_dir
manage.py-tpl
project_name
ticket-18091-non-ascii-template.txt
ticket-19397-binary-file.ico

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/project_template/additional_dir:
Procfile
additional_file.py
extra.py
localized.py
requirements.txt

/workspace/django__django__4.0/tests/admin_scripts/custom_templates/project_template/project_name:
__init__.py
settings.py

/workspace/django__django__4.0/tests/admin_scripts/management:
__init__.py
commands

/workspace/django__django__4.0/tests/admin_scripts/management/commands:
__init__.py
app_command.py
base_command.py
custom_startproject.py
label_command.py
noargs_command.py

/workspace/django__django__4.0/tests/admin_scripts/simple_app:
__init__.py
management
models.py

/workspace/django__django__4.0/tests/admin_scripts/simple_app/management:
__init__.py
commands

/workspace/django__django__4.0/tests/admin_scripts/simple_app/management/commands:
__init__.py
duplicate.py

/workspace/django__django__4.0/tests/admin_utils:
__init__.py
admin.py
models.py
test_logentry.py
tests.py
urls.py

/workspace/django__django__4.0/tests/admin_views:
__init__.py
admin.py
custom_has_permission_admin.py
customadmin.py
forms.py
models.py
templates
test_actions.py
test_adminsite.py
test_autocomplete_view.py
test_forms.py
test_history_view.py
test_multidb.py
test_nav_sidebar.py
test_templatetags.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/admin_views/templates:
admin
custom_filter_template.html

/workspace/django__django__4.0/tests/admin_views/templates/admin:
admin_views
base_site.html

/workspace/django__django__4.0/tests/admin_views/templates/admin/admin_views:
article

/workspace/django__django__4.0/tests/admin_views/templates/admin/admin_views/article:
actions.html
change_form_object_tools.html
change_list_object_tools.html
change_list_results.html
date_hierarchy.html
pagination.html
prepopulated_fields_js.html
search_form.html
submit_line.html

/workspace/django__django__4.0/tests/admin_widgets:
__init__.py
models.py
test_autocomplete_widget.py
tests.py
urls.py
widgetadmin.py

/workspace/django__django__4.0/tests/aggregation:
__init__.py
models.py
test_filter_argument.py
tests.py

/workspace/django__django__4.0/tests/aggregation_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/annotations:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/app_loading:
__init__.py
eggs
not_installed
tests.py

/workspace/django__django__4.0/tests/app_loading/eggs:
brokenapp.egg
modelapp.egg
nomodelapp.egg
omelet.egg

/workspace/django__django__4.0/tests/app_loading/not_installed:
__init__.py
models.py

/workspace/django__django__4.0/tests/apps:
__init__.py
apps.py
explicit_default_config_app
explicit_default_config_empty_apps
explicit_default_config_mismatch_app
explicit_default_config_without_apps
models.py
namespace_package_base
namespace_package_other_base
no_config_app
one_config_app
tests.py
two_configs_app
two_configs_one_default_app
two_default_configs_app

/workspace/django__django__4.0/tests/apps/explicit_default_config_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/explicit_default_config_empty_apps:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/explicit_default_config_mismatch_app:
__init__.py
apps.py
not_apps.py

/workspace/django__django__4.0/tests/apps/explicit_default_config_without_apps:
__init__.py

/workspace/django__django__4.0/tests/apps/namespace_package_base:
nsapp

/workspace/django__django__4.0/tests/apps/namespace_package_base/nsapp:
apps.py

/workspace/django__django__4.0/tests/apps/namespace_package_other_base:
nsapp

/workspace/django__django__4.0/tests/apps/namespace_package_other_base/nsapp:

/workspace/django__django__4.0/tests/apps/no_config_app:
__init__.py

/workspace/django__django__4.0/tests/apps/one_config_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/two_configs_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/two_configs_one_default_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/apps/two_default_configs_app:
__init__.py
apps.py

/workspace/django__django__4.0/tests/asgi:
__init__.py
project
tests.py
urls.py

/workspace/django__django__4.0/tests/asgi/project:
static

/workspace/django__django__4.0/tests/asgi/project/static:
file.txt

/workspace/django__django__4.0/tests/async:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/auth_tests:
__init__.py
backend_alias.py
client.py
common-passwords-custom.txt
fixtures
models
settings.py
templates
test_admin_multidb.py
test_auth_backends.py
test_basic.py
test_checks.py
test_context_processors.py
test_decorators.py
test_forms.py
test_handlers.py
test_hashers.py
test_management.py
test_middleware.py
test_migrations.py
test_mixins.py
test_models.py
test_remote_user.py
test_signals.py
test_templates.py
test_tokens.py
test_validators.py
test_views.py
urls.py
urls_admin.py
urls_custom_user_admin.py

/workspace/django__django__4.0/tests/auth_tests/fixtures:
natural.json
regular.json

/workspace/django__django__4.0/tests/auth_tests/models:
__init__.py
custom_permissions.py
custom_user.py
invalid_models.py
is_active.py
minimal.py
no_password.py
proxy.py
uuid_pk.py
with_custom_email_field.py
with_foreign_key.py
with_integer_username.py
with_last_login_attr.py
with_many_to_many.py

/workspace/django__django__4.0/tests/auth_tests/templates:
context_processors
registration

/workspace/django__django__4.0/tests/auth_tests/templates/context_processors:
auth_attrs_access.html
auth_attrs_messages.html
auth_attrs_no_access.html
auth_attrs_perm_in_perms.html
auth_attrs_perms.html
auth_attrs_test_access.html
auth_attrs_user.html

/workspace/django__django__4.0/tests/auth_tests/templates/registration:
html_password_reset_email.html
logged_out.html
login.html
password_change_form.html
password_reset_complete.html
password_reset_confirm.html
password_reset_done.html
password_reset_email.html
password_reset_form.html
password_reset_subject.txt

/workspace/django__django__4.0/tests/backends:
__init__.py
base
models.py
mysql
oracle
postgresql
sqlite
test_ddl_references.py
test_utils.py
tests.py

/workspace/django__django__4.0/tests/backends/base:
__init__.py
app_unmigrated
test_base.py
test_client.py
test_creation.py
test_features.py
test_introspection.py
test_operations.py
test_schema.py

/workspace/django__django__4.0/tests/backends/base/app_unmigrated:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/backends/base/app_unmigrated/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/backends/mysql:
__init__.py
test_creation.py
test_features.py
test_introspection.py
test_operations.py
test_schema.py
tests.py

/workspace/django__django__4.0/tests/backends/oracle:
__init__.py
test_creation.py
test_introspection.py
test_operations.py
tests.py

/workspace/django__django__4.0/tests/backends/postgresql:
__init__.py
test_creation.py
test_introspection.py
test_operations.py
test_server_side_cursors.py
tests.py

/workspace/django__django__4.0/tests/backends/sqlite:
__init__.py
test_creation.py
test_features.py
test_introspection.py
test_operations.py
tests.py

/workspace/django__django__4.0/tests/base:
__init__.py
models.py

/workspace/django__django__4.0/tests/bash_completion:
__init__.py
management
tests.py

/workspace/django__django__4.0/tests/bash_completion/management:
__init__.py
commands

/workspace/django__django__4.0/tests/bash_completion/management/commands:
__init__.py
test_command.py

/workspace/django__django__4.0/tests/basic:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/builtin_server:
__init__.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/bulk_create:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/cache:
__init__.py
closeable_cache.py
liberal_backend.py
models.py
tests.py

/workspace/django__django__4.0/tests/check_framework:
__init__.py
apps.py
models.py
test_4_0_compatibility.py
test_async_checks.py
test_caches.py
test_database.py
test_files.py
test_model_checks.py
test_model_field_deprecation.py
test_multi_db.py
test_security.py
test_templates.py
test_translation.py
test_urls.py
tests.py
urls

/workspace/django__django__4.0/tests/check_framework/urls:
__init__.py
bad_error_handlers.py
bad_error_handlers_invalid_path.py
beginning_with_slash.py
contains_tuple.py
good_error_handlers.py
include_contains_tuple.py
include_with_dollar.py
name_with_colon.py
no_warnings.py
no_warnings_i18n.py
non_unique_namespaces.py
path_compatibility
unique_namespaces.py
warning_in_include.py

/workspace/django__django__4.0/tests/check_framework/urls/path_compatibility:
__init__.py
beginning_with_caret.py
contains_re_named_group.py
ending_with_dollar.py

/workspace/django__django__4.0/tests/conditional_processing:
__init__.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/constraints:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/contenttypes_tests:
__init__.py
models.py
operations_migrations
test_checks.py
test_fields.py
test_management.py
test_models.py
test_operations.py
test_order_with_respect_to.py
test_views.py
urls.py

/workspace/django__django__4.0/tests/contenttypes_tests/operations_migrations:
0001_initial.py
0002_rename_foo.py
__init__.py

/workspace/django__django__4.0/tests/context_processors:
__init__.py
models.py
templates
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/context_processors/templates:
context_processors

/workspace/django__django__4.0/tests/context_processors/templates/context_processors:
debug.html
request_attrs.html

/workspace/django__django__4.0/tests/csrf_tests:
__init__.py
csrf_token_error_handler_urls.py
test_context_processor.py
tests.py
views.py

/workspace/django__django__4.0/tests/custom_columns:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_managers:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_methods:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/custom_migration_operations:
__init__.py
more_operations.py
operations.py

/workspace/django__django__4.0/tests/custom_pk:
__init__.py
fields.py
models.py
tests.py

/workspace/django__django__4.0/tests/datatypes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/dates:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/datetimes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/db_functions:
__init__.py
comparison
datetime
math
migrations
models.py
tests.py
text
window

/workspace/django__django__4.0/tests/db_functions/comparison:
__init__.py
test_cast.py
test_coalesce.py
test_collate.py
test_greatest.py
test_json_object.py
test_least.py
test_nullif.py

/workspace/django__django__4.0/tests/db_functions/datetime:
__init__.py
test_extract_trunc.py
test_now.py

/workspace/django__django__4.0/tests/db_functions/math:
__init__.py
test_abs.py
test_acos.py
test_asin.py
test_atan.py
test_atan2.py
test_ceil.py
test_cos.py
test_cot.py
test_degrees.py
test_exp.py
test_floor.py
test_ln.py
test_log.py
test_mod.py
test_pi.py
test_power.py
test_radians.py
test_random.py
test_round.py
test_sign.py
test_sin.py
test_sqrt.py
test_tan.py

/workspace/django__django__4.0/tests/db_functions/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__4.0/tests/db_functions/text:
__init__.py
test_chr.py
test_concat.py
test_left.py
test_length.py
test_lower.py
test_md5.py
test_ord.py
test_pad.py
test_repeat.py
test_replace.py
test_reverse.py
test_right.py
test_sha1.py
test_sha224.py
test_sha256.py
test_sha384.py
test_sha512.py
test_strindex.py
test_substr.py
test_trim.py
test_upper.py

/workspace/django__django__4.0/tests/db_functions/window:
__init__.py
test_validation.py

/workspace/django__django__4.0/tests/db_typecasts:
__init__.py
tests.py

/workspace/django__django__4.0/tests/db_utils:
__init__.py
tests.py

/workspace/django__django__4.0/tests/dbshell:
__init__.py
fake_client.py
test_mysql.py
test_oracle.py
test_postgresql.py
test_sqlite.py
tests.py

/workspace/django__django__4.0/tests/decorators:
__init__.py
tests.py

/workspace/django__django__4.0/tests/defer:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/defer_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/delete:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/delete_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/deprecation:
__init__.py
test_middleware_mixin.py
tests.py

/workspace/django__django__4.0/tests/dispatch:
__init__.py
tests.py

/workspace/django__django__4.0/tests/distinct_on_fields:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/empty:
__init__.py
models.py
no_models
tests.py

/workspace/django__django__4.0/tests/empty/no_models:
__init__.py

/workspace/django__django__4.0/tests/empty_models:
__init__.py
models.py
test_commands.py

/workspace/django__django__4.0/tests/expressions:
__init__.py
models.py
test_queryset_values.py
tests.py

/workspace/django__django__4.0/tests/expressions_case:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/expressions_window:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/extra_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/field_deconstruction:
__init__.py
tests.py

/workspace/django__django__4.0/tests/field_defaults:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/field_subclassing:
__init__.py
fields.py
tests.py

/workspace/django__django__4.0/tests/file_storage:
__init__.py
models.py
test_generate_filename.py
tests.py
urls.py

/workspace/django__django__4.0/tests/file_uploads:
__init__.py
models.py
tests.py
uploadhandler.py
urls.py
views.py

/workspace/django__django__4.0/tests/files:
__init__.py
brokenimg.png
magic.png
test.png
test.webp
test1.png
tests.py

/workspace/django__django__4.0/tests/filtered_relation:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/fixtures:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/fixtures/fixtures:
circular_reference.json
circular_reference_natural_key.json
db_fixture_1.default.json
db_fixture_2.default.json.gz
db_fixture_3.nosuchdb.json
fixture1.json
fixture2.json
fixture2.xml
fixture3.xml
fixture4.json.zip
fixture5.json.bz2
fixture5.json.gz
fixture5.json.lzma
fixture5.json.xz
fixture5.json.zip
fixture6.json
fixture7.xml
fixture8.json
fixture9.xml
fixture_with[special]chars.json
forward_reference_fk.json
forward_reference_fk_natural_key.json
forward_reference_m2m.json
forward_reference_m2m_natural_key.json
invalid.json
null_character_in_field_value.json

/workspace/django__django__4.0/tests/fixtures_model_package:
__init__.py
fixtures
models
tests.py

/workspace/django__django__4.0/tests/fixtures_model_package/fixtures:
model_package_fixture1.json
model_package_fixture2.json

/workspace/django__django__4.0/tests/fixtures_model_package/models:
__init__.py

/workspace/django__django__4.0/tests/fixtures_regress:
__init__.py
fixtures
fixtures_1
fixtures_2
models.py
tests.py

/workspace/django__django__4.0/tests/fixtures_regress/fixtures:
absolute.json
animal.xml
bad_fix.ture1.unkn
bad_fixture2.xml
big-fixture.json
empty.json
feature.json
forward_ref.json
forward_ref_bad_data.json
forward_ref_lookup.json
m2mtoself.json
model-inheritance.json
nk-inheritance.json
nk-inheritance2.xml
non_natural_1.json
non_natural_2.xml
path.containing.dots.json
pretty.xml
sequence.json
sequence_extra.json
sequence_extra_xml.xml
special-article.json
thingy.json

/workspace/django__django__4.0/tests/fixtures_regress/fixtures_1:
forward_ref_1.json
inner

/workspace/django__django__4.0/tests/fixtures_regress/fixtures_1/inner:
absolute.json

/workspace/django__django__4.0/tests/fixtures_regress/fixtures_2:
forward_ref_2.json

/workspace/django__django__4.0/tests/flatpages_tests:
__init__.py
absolute_urls.py
no_slash_urls.py
settings.py
templates
test_csrf.py
test_forms.py
test_middleware.py
test_models.py
test_sitemaps.py
test_templatetags.py
test_views.py
urls.py

/workspace/django__django__4.0/tests/flatpages_tests/templates:
flatpages
registration

/workspace/django__django__4.0/tests/flatpages_tests/templates/flatpages:
default.html

/workspace/django__django__4.0/tests/flatpages_tests/templates/registration:
login.html

/workspace/django__django__4.0/tests/force_insert_update:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/foreign_object:
__init__.py
models
test_agnostic_order_trimjoin.py
test_empty_join.py
test_forms.py
tests.py

/workspace/django__django__4.0/tests/foreign_object/models:
__init__.py
article.py
customers.py
empty_join.py
person.py

/workspace/django__django__4.0/tests/forms_tests:
__init__.py
field_tests
jinja2
models.py
templates
tests
urls.py
views.py
widget_tests

/workspace/django__django__4.0/tests/forms_tests/field_tests:
__init__.py
filepathfield_test_dir
test_base.py
test_booleanfield.py
test_charfield.py
test_choicefield.py
test_combofield.py
test_datefield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_emailfield.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_jsonfield.py
test_multiplechoicefield.py
test_multivaluefield.py
test_nullbooleanfield.py
test_regexfield.py
test_slugfield.py
test_splitdatetimefield.py
test_timefield.py
test_typedchoicefield.py
test_typedmultiplechoicefield.py
test_urlfield.py
test_uuidfield.py

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir:
README
__init__.py
a.py
ab.py
b.py
c
h
j

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/c:
__init__.py
d.py
e.py
f

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/c/f:
__init__.py
g.py

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/h:
__init__.py

/workspace/django__django__4.0/tests/forms_tests/field_tests/filepathfield_test_dir/j:
__init__.py

/workspace/django__django__4.0/tests/forms_tests/jinja2:
forms_tests

/workspace/django__django__4.0/tests/forms_tests/jinja2/forms_tests:
custom_widget.html

/workspace/django__django__4.0/tests/forms_tests/templates:
forms_tests

/workspace/django__django__4.0/tests/forms_tests/templates/forms_tests:
article_form.html
custom_widget.html

/workspace/django__django__4.0/tests/forms_tests/tests:
__init__.py
filepath_test_files
test_error_messages.py
test_forms.py
test_formsets.py
test_i18n.py
test_input_formats.py
test_media.py
test_renderers.py
test_utils.py
test_validators.py
test_widgets.py
tests.py

/workspace/django__django__4.0/tests/forms_tests/tests/filepath_test_files:
1x1.bmp
1x1.png
directory
fake-image.jpg
real-text-file.txt

/workspace/django__django__4.0/tests/forms_tests/tests/filepath_test_files/directory:

/workspace/django__django__4.0/tests/forms_tests/widget_tests:
__init__.py
base.py
test_checkboxinput.py
test_checkboxselectmultiple.py
test_clearablefileinput.py
test_dateinput.py
test_datetimeinput.py
test_fileinput.py
test_hiddeninput.py
test_input.py
test_multiplehiddeninput.py
test_multiwidget.py
test_nullbooleanselect.py
test_numberinput.py
test_passwordinput.py
test_radioselect.py
test_select.py
test_selectdatewidget.py
test_selectmultiple.py
test_splitdatetimewidget.py
test_splithiddendatetimewidget.py
test_textarea.py
test_textinput.py
test_timeinput.py
test_widget.py

/workspace/django__django__4.0/tests/from_db_value:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/generic_inline_admin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/generic_relations:
__init__.py
models.py
test_forms.py
tests.py

/workspace/django__django__4.0/tests/generic_relations_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/generic_views:
__init__.py
forms.py
jinja2
models.py
templates
test_base.py
test_dates.py
test_detail.py
test_edit.py
test_list.py
urls.py
views.py

/workspace/django__django__4.0/tests/generic_views/jinja2:
generic_views

/workspace/django__django__4.0/tests/generic_views/jinja2/generic_views:
using.html

/workspace/django__django__4.0/tests/generic_views/templates:
generic_views
registration

/workspace/django__django__4.0/tests/generic_views/templates/generic_views:
about.html
apple_detail.html
artist_detail.html
artist_form.html
author_confirm_delete.html
author_detail.html
author_form.html
author_list.html
author_objects.html
author_view.html
book_archive.html
book_archive_day.html
book_archive_month.html
book_archive_week.html
book_archive_year.html
book_detail.html
book_list.html
confirm_delete.html
detail.html
form.html
list.html
page_template.html
robots.txt
using.html

/workspace/django__django__4.0/tests/generic_views/templates/registration:
login.html

/workspace/django__django__4.0/tests/get_earliest_or_latest:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/get_object_or_404:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/get_or_create:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests:
__init__.py
admin.py
data
distapp
gdal_tests
geo3d
geoadmin
geoapp
geogapp
geos_tests
gis_migrations
inspectapp
layermap
models.py
rasterapp
relatedapp
test_data.py
test_fields.py
test_geoforms.py
test_geoip2.py
test_gis_tests_utils.py
test_measure.py
test_ptr.py
test_spatialrefsys.py
tests.py
utils.py

/workspace/django__django__4.0/tests/gis_tests/data:
__init__.py
ch-city
cities
counties
gas_lines
geometries.json
has_nulls
interstates
invalid
rasters
test_point
test_poly
test_vrt
texas.dbf

/workspace/django__django__4.0/tests/gis_tests/data/ch-city:
ch-city.dbf
ch-city.prj
ch-city.shp
ch-city.shx

/workspace/django__django__4.0/tests/gis_tests/data/cities:
cities.dbf
cities.prj
cities.shp
cities.shx

/workspace/django__django__4.0/tests/gis_tests/data/counties:
counties.dbf
counties.shp
counties.shx

/workspace/django__django__4.0/tests/gis_tests/data/gas_lines:
gas_leitung.dbf
gas_leitung.prj
gas_leitung.shp
gas_leitung.shx

/workspace/django__django__4.0/tests/gis_tests/data/has_nulls:
has_nulls.geojson

/workspace/django__django__4.0/tests/gis_tests/data/interstates:
interstates.dbf
interstates.prj
interstates.shp
interstates.shx

/workspace/django__django__4.0/tests/gis_tests/data/invalid:
emptypoints.dbf
emptypoints.shp
emptypoints.shx

/workspace/django__django__4.0/tests/gis_tests/data/rasters:
__init__.py
raster.numpy.txt
raster.tif
textrasters.py

/workspace/django__django__4.0/tests/gis_tests/data/test_point:
test_point.dbf
test_point.prj
test_point.shp
test_point.shx

/workspace/django__django__4.0/tests/gis_tests/data/test_poly:
test_poly.dbf
test_poly.prj
test_poly.shp
test_poly.shx

/workspace/django__django__4.0/tests/gis_tests/data/test_vrt:
test_vrt.csv
test_vrt.vrt

/workspace/django__django__4.0/tests/gis_tests/distapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/distapp/fixtures:
initial.json

/workspace/django__django__4.0/tests/gis_tests/gdal_tests:
__init__.py
test_driver.py
test_ds.py
test_envelope.py
test_geom.py
test_raster.py
test_srs.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/geo3d:
__init__.py
models.py
tests.py
views.py

/workspace/django__django__4.0/tests/gis_tests/geoadmin:
__init__.py
admin.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/gis_tests/geoapp:
__init__.py
feeds.py
fixtures
models.py
sitemaps.py
test_expressions.py
test_feeds.py
test_functions.py
test_indexes.py
test_regress.py
test_serializers.py
test_sitemaps.py
tests.py
urls.py

/workspace/django__django__4.0/tests/gis_tests/geoapp/fixtures:
initial.json.gz

/workspace/django__django__4.0/tests/gis_tests/geogapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/geogapp/fixtures:
initial.json

/workspace/django__django__4.0/tests/gis_tests/geos_tests:
__init__.py
test_coordseq.py
test_geos.py
test_geos_mutation.py
test_io.py
test_mutable_list.py

/workspace/django__django__4.0/tests/gis_tests/gis_migrations:
__init__.py
migrations
test_commands.py
test_operations.py

/workspace/django__django__4.0/tests/gis_tests/gis_migrations/migrations:
0001_setup_extensions.py
0002_create_models.py
__init__.py

/workspace/django__django__4.0/tests/gis_tests/inspectapp:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/layermap:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/rasterapp:
__init__.py
migrations
models.py
test_rasterfield.py

/workspace/django__django__4.0/tests/gis_tests/rasterapp/migrations:
0001_setup_extensions.py
0002_rastermodels.py
__init__.py

/workspace/django__django__4.0/tests/gis_tests/relatedapp:
__init__.py
fixtures
models.py
tests.py

/workspace/django__django__4.0/tests/gis_tests/relatedapp/fixtures:
initial.json

/workspace/django__django__4.0/tests/handlers:
__init__.py
templates
test_exception.py
tests.py
tests_custom_error_handlers.py
urls.py
views.py

/workspace/django__django__4.0/tests/handlers/templates:
test_handler.html

/workspace/django__django__4.0/tests/httpwrappers:
__init__.py
abc.txt
tests.py

/workspace/django__django__4.0/tests/humanize_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/i18n:
__init__.py
commands
contenttypes
exclude
forms.py
loading
loading_app
models.py
other
other2
patterns
project_dir
resolution
sampleproject
territorial_fallback
test_compilation.py
test_extraction.py
test_management.py
test_percents.py
tests.py
urls.py
urls_default_unprefixed.py
utils.py

/workspace/django__django__4.0/tests/i18n/commands:
__init__.py
app_with_locale
code.sample
ignore_dir
javascript.js
locale
media_root
not_utf8.sample
someapp
static
templates

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale:
locale

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale/locale:
ru

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/app_with_locale/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/ignore_dir:
ignored.html

/workspace/django__django__4.0/tests/i18n/commands/locale:
en
es_AR
fr
hr
ja
ko
pt_BR
ru
xxx

/workspace/django__django__4.0/tests/i18n/commands/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/es_AR/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/hr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/hr/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/ja:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/ja/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/ko:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/ko/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/pt_BR/LC_MESSAGES:
django.pristine

/workspace/django__django__4.0/tests/i18n/commands/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/ru/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/commands/locale/xxx:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/commands/locale/xxx/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/commands/media_root:
media_ignored.html

/workspace/django__django__4.0/tests/i18n/commands/someapp:
static

/workspace/django__django__4.0/tests/i18n/commands/someapp/static:
javascript.js

/workspace/django__django__4.0/tests/i18n/commands/static:
javascript_ignored.js
static_ignored.html

/workspace/django__django__4.0/tests/i18n/commands/templates:
comments.thtml
empty.html
plural.djtpl
subdir
template_with_error.tpl
test.html
xxx_ignored.html

/workspace/django__django__4.0/tests/i18n/commands/templates/subdir:
ignored.html

/workspace/django__django__4.0/tests/i18n/contenttypes:
__init__.py
locale
tests.py

/workspace/django__django__4.0/tests/i18n/contenttypes/locale:
en
fr

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/contenttypes/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/exclude:
__init__.py
canned_locale

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale:
en
fr
it

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/en/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/fr/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/it:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/exclude/canned_locale/it/LC_MESSAGES:
django.po

/workspace/django__django__4.0/tests/i18n/loading:
en
en_AU
en_CA
en_NZ

/workspace/django__django__4.0/tests/i18n/loading/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading/en_AU:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en_AU/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading/en_CA:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en_CA/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading/en_NZ:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading/en_NZ/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/loading_app:
__init__.py
apps.py
locale

/workspace/django__django__4.0/tests/i18n/loading_app/locale:
en

/workspace/django__django__4.0/tests/i18n/loading_app/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/loading_app/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/other:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/other/locale:
__init__.py
de
fr

/workspace/django__django__4.0/tests/i18n/other/locale/de:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/tests/i18n/other/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/other/locale/fr:
LC_MESSAGES
__init__.py
formats.py

/workspace/django__django__4.0/tests/i18n/other/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/other2:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/other2/locale:
__init__.py
de

/workspace/django__django__4.0/tests/i18n/other2/locale/de:
__init__.py
formats.py

/workspace/django__django__4.0/tests/i18n/patterns:
__init__.py
locale
templates
tests.py
urls

/workspace/django__django__4.0/tests/i18n/patterns/locale:
en
nl
pt_BR

/workspace/django__django__4.0/tests/i18n/patterns/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/patterns/locale/en/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/patterns/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/patterns/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/patterns/locale/pt_BR:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/patterns/locale/pt_BR/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/patterns/templates:
404.html
dummy.html

/workspace/django__django__4.0/tests/i18n/patterns/urls:
__init__.py
default.py
disabled.py
included.py
namespace.py
path_unused.py
wrong.py
wrong_namespace.py

/workspace/django__django__4.0/tests/i18n/project_dir:
__init__.py
app_no_locale
app_with_locale
project_locale

/workspace/django__django__4.0/tests/i18n/project_dir/app_no_locale:
__init__.py
models.py

/workspace/django__django__4.0/tests/i18n/project_dir/app_with_locale:
__init__.py
locale
models.py

/workspace/django__django__4.0/tests/i18n/project_dir/app_with_locale/locale:

/workspace/django__django__4.0/tests/i18n/project_dir/project_locale:

/workspace/django__django__4.0/tests/i18n/resolution:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/resolution/locale:
de

/workspace/django__django__4.0/tests/i18n/resolution/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/resolution/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/sampleproject:
locale
manage.py
sampleproject
templates
update_catalogs.py

/workspace/django__django__4.0/tests/i18n/sampleproject/locale:
fr

/workspace/django__django__4.0/tests/i18n/sampleproject/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/sampleproject/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/sampleproject/sampleproject:
__init__.py
settings.py

/workspace/django__django__4.0/tests/i18n/sampleproject/templates:
percents.html

/workspace/django__django__4.0/tests/i18n/territorial_fallback:
__init__.py
locale

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale:
de
de_DE

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de_DE:
LC_MESSAGES

/workspace/django__django__4.0/tests/i18n/territorial_fallback/locale/de_DE/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/import_error_package:
__init__.py

/workspace/django__django__4.0/tests/indexes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/inline_formsets:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/inspectdb:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/introspection:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/invalid_models_tests:
__init__.py
test_backend_specific.py
test_custom_fields.py
test_deprecated_fields.py
test_models.py
test_ordinary_fields.py
test_relative_fields.py

/workspace/django__django__4.0/tests/known_related_objects:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/logging_tests:
__init__.py
logconfig.py
tests.py
urls.py
urls_i18n.py
views.py

/workspace/django__django__4.0/tests/lookup:
__init__.py
models.py
test_decimalfield.py
test_lookups.py
test_timefield.py
tests.py

/workspace/django__django__4.0/tests/m2m_and_m2o:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_intermediary:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_multiple:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_signals:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_through:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/m2m_through_regress:
__init__.py
fixtures
models.py
test_multitable.py
tests.py

/workspace/django__django__4.0/tests/m2m_through_regress/fixtures:
m2m_through.json

/workspace/django__django__4.0/tests/m2o_recursive:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/mail:
__init__.py
attachments
custombackend.py
test_sendtestemail.py
tests.py

/workspace/django__django__4.0/tests/mail/attachments:
file.eml
file.png
file.txt
file_png
file_png.txt
file_txt
file_txt.png

/workspace/django__django__4.0/tests/managers_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/many_to_many:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/many_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/many_to_one_null:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/max_lengths:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/messages_tests:
__init__.py
base.py
test_api.py
test_cookie.py
test_fallback.py
test_middleware.py
test_mixins.py
test_session.py
tests.py
urls.py

/workspace/django__django__4.0/tests/middleware:
__init__.py
cond_get_urls.py
extra_urls.py
test_security.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/middleware_exceptions:
__init__.py
middleware.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/migrate_signals:
__init__.py
custom_migrations
models.py
tests.py

/workspace/django__django__4.0/tests/migrate_signals/custom_migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migration_test_data_persistence:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__4.0/tests/migration_test_data_persistence/migrations:
0001_initial.py
0002_add_book.py
__init__.py

/workspace/django__django__4.0/tests/migrations:
__init__.py
deprecated_field_migrations
faulty_migrations
migrations_test_apps
models.py
related_models_app
routers.py
test_add_many_to_many_field_initial
test_auto_now_add
test_autodetector.py
test_base.py
test_commands.py
test_deprecated_fields.py
test_exceptions.py
test_executor.py
test_fake_initial_case_insensitive
test_graph.py
test_loader.py
test_migrations
test_migrations_atomic_operation
test_migrations_backwards_deps_1
test_migrations_bad_pyc
test_migrations_clashing_prefix
test_migrations_conflict
test_migrations_conflict_long_name
test_migrations_custom_user
test_migrations_empty
test_migrations_fake_split_initial
test_migrations_first
test_migrations_initial_false
test_migrations_namespace_package
test_migrations_no_ancestor
test_migrations_no_changes
test_migrations_no_default
test_migrations_no_init
test_migrations_no_operations
test_migrations_non_atomic
test_migrations_order
test_migrations_plan
test_migrations_private
test_migrations_run_before
test_migrations_squashed
test_migrations_squashed_complex
test_migrations_squashed_complex_multi_apps
test_migrations_squashed_erroneous
test_migrations_squashed_extra
test_migrations_squashed_ref_squashed
test_migrations_unmigdep
test_multidb.py
test_operations.py
test_optimizer.py
test_questioner.py
test_state.py
test_writer.py

/workspace/django__django__4.0/tests/migrations/deprecated_field_migrations:
0001_initial.py
0002_remove_ipaddressfield_ip.py
__init__.py

/workspace/django__django__4.0/tests/migrations/faulty_migrations:
__init__.py
file.py
namespace

/workspace/django__django__4.0/tests/migrations/faulty_migrations/namespace:
foo

/workspace/django__django__4.0/tests/migrations/faulty_migrations/namespace/foo:
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps:
__init__.py
alter_fk
conflicting_app_with_dependencies
lookuperror_a
lookuperror_b
lookuperror_c
migrated_app
migrated_unapplied_app
mutate_state_a
mutate_state_b
normal
unmigrated_app
unmigrated_app_simple
unmigrated_app_syncdb
unspecified_app_with_conflict
with_package_model
without_init_file

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk:
__init__.py
author_app
book_app

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/author_app:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/author_app/migrations:
0001_initial.py
0002_alter_id.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/book_app:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/alter_fk/book_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/conflicting_app_with_dependencies/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_a:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_a/migrations:
0001_initial.py
0002_a2.py
0003_a3.py
0004_a4.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_b:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_b/migrations:
0001_initial.py
0002_b2.py
0003_b3.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_c:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/lookuperror_c/migrations:
0001_initial.py
0002_c2.py
0003_c3.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_app:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_unapplied_app:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/migrated_unapplied_app/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_a:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_a/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_b:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/mutate_state_b/migrations:
0001_initial.py
0002_add_field.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/normal:
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unmigrated_app:
__init__.py
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unmigrated_app_simple:
__init__.py
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unmigrated_app_syncdb:
__init__.py
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unspecified_app_with_conflict:
__init__.py
migrations
models.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/unspecified_app_with_conflict/migrations:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/with_package_model:
__init__.py
models

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/with_package_model/models:
__init__.py

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/without_init_file:
__init__.py
migrations

/workspace/django__django__4.0/tests/migrations/migrations_test_apps/without_init_file/migrations:

/workspace/django__django__4.0/tests/migrations/related_models_app:
__init__.py

/workspace/django__django__4.0/tests/migrations/test_add_many_to_many_field_initial:
0001_initial.py
0002_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_auto_now_add:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_fake_initial_case_insensitive:
fake_initial
initial

/workspace/django__django__4.0/tests/migrations/test_fake_initial_case_insensitive/fake_initial:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_fake_initial_case_insensitive/initial:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_atomic_operation:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_backwards_deps_1:
0001_initial.py
0002_second.py

/workspace/django__django__4.0/tests/migrations/test_migrations_bad_pyc:
0001_initial.pyc-tpl
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_clashing_prefix:
__init__.py
a.py
ab.py

/workspace/django__django__4.0/tests/migrations/test_migrations_conflict:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_conflict_long_name:
0001_initial.py
0002_conflicting_second_migration_with_long_name.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_custom_user:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_empty:
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_fake_split_initial:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_first:
__init__.py
second.py
thefirst.py

/workspace/django__django__4.0/tests/migrations/test_migrations_initial_false:
0001_not_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_namespace_package:
0001_initial.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_ancestor:
0001_initial.py
0002_conflicting_second.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_changes:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_default:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_no_init:

/workspace/django__django__4.0/tests/migrations/test_migrations_no_operations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_non_atomic:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_order:
0001.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_plan:
0001_initial.py
0002_second.py
0003_third.py
0004_fourth.py
0005_fifth.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_private:
0001_initial.py
__init__.py
_util.py
~util.py

/workspace/django__django__4.0/tests/migrations/test_migrations_run_before:
0001_initial.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed:
0001_initial.py
0001_squashed_0002.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex:
1_auto.py
2_auto.py
3_auto.py
3_squashed_5.py
4_auto.py
5_auto.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex_multi_apps:
__init__.py
app1
app2

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex_multi_apps/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_complex_multi_apps/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_erroneous:
1_auto.py
2_auto.py
3_squashed_5.py
6_auto.py
7_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_extra:
0001_initial.py
0001_squashed_0002.py
0002_second.py
0003_third.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_ref_squashed:
__init__.py
app1
app2

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_ref_squashed/app1:
1_auto.py
2_auto.py
2_squashed_3.py
3_auto.py
4_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_squashed_ref_squashed/app2:
1_auto.py
1_squashed_2.py
2_auto.py
__init__.py

/workspace/django__django__4.0/tests/migrations/test_migrations_unmigdep:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations2:
__init__.py
models.py
test_migrations_2
test_migrations_2_first
test_migrations_2_no_deps

/workspace/django__django__4.0/tests/migrations2/test_migrations_2:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/migrations2/test_migrations_2_first:
0001_initial.py
0002_second.py
__init__.py

/workspace/django__django__4.0/tests/migrations2/test_migrations_2_no_deps:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/model_enums:
__init__.py
tests.py

/workspace/django__django__4.0/tests/model_fields:
4x8.png
8x4.png
__init__.py
models.py
test_autofield.py
test_binaryfield.py
test_booleanfield.py
test_charfield.py
test_datetimefield.py
test_decimalfield.py
test_durationfield.py
test_field_flags.py
test_filefield.py
test_filepathfield.py
test_floatfield.py
test_foreignkey.py
test_genericipaddressfield.py
test_imagefield.py
test_integerfield.py
test_jsonfield.py
test_manytomanyfield.py
test_promises.py
test_slugfield.py
test_textfield.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/model_forms:
__init__.py
models.py
test.png
test2.png
test_modelchoicefield.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/model_formsets:
__init__.py
models.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/model_formsets_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/model_indexes:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/model_inheritance:
__init__.py
models.py
test_abstract_inheritance.py
tests.py

/workspace/django__django__4.0/tests/model_inheritance_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/model_meta:
__init__.py
models.py
results.py
tests.py

/workspace/django__django__4.0/tests/model_options:
__init__.py
apps.py
models
test_default_pk.py
test_default_related_name.py
test_tablespaces.py

/workspace/django__django__4.0/tests/model_options/models:
__init__.py
default_related_name.py
tablespaces.py

/workspace/django__django__4.0/tests/model_package:
__init__.py
models
tests.py

/workspace/django__django__4.0/tests/model_package/models:
__init__.py
article.py
publication.py

/workspace/django__django__4.0/tests/model_regress:
__init__.py
models.py
test_pickle.py
test_state.py
tests.py

/workspace/django__django__4.0/tests/modeladmin:
__init__.py
models.py
test_actions.py
test_checks.py
tests.py

/workspace/django__django__4.0/tests/multiple_database:
__init__.py
fixtures
models.py
routers.py
tests.py

/workspace/django__django__4.0/tests/multiple_database/fixtures:
multidb-common.json
multidb.default.json
multidb.other.json
pets.json

/workspace/django__django__4.0/tests/mutually_referential:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/nested_foreign_keys:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/no_models:
__init__.py
tests.py

/workspace/django__django__4.0/tests/null_fk:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/null_fk_ordering:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/null_queries:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/one_to_one:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/or_lookups:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/order_with_respect_to:
__init__.py
base_tests.py
models.py
tests.py

/workspace/django__django__4.0/tests/ordering:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/pagination:
__init__.py
custom.py
models.py
tests.py

/workspace/django__django__4.0/tests/postgres_tests:
__init__.py
array_default_migrations
array_index_migrations
fields.py
integration_settings.py
migrations
models.py
test_aggregates.py
test_apps.py
test_array.py
test_bulk_update.py
test_citext.py
test_constraints.py
test_functions.py
test_hstore.py
test_indexes.py
test_integration.py
test_introspection.py
test_operations.py
test_ranges.py
test_search.py
test_signals.py
test_trigram.py
test_unaccent.py

/workspace/django__django__4.0/tests/postgres_tests/array_default_migrations:
0001_initial.py
0002_integerarraymodel_field_2.py
__init__.py

/workspace/django__django__4.0/tests/postgres_tests/array_index_migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/postgres_tests/migrations:
0001_setup_extensions.py
0002_create_test_models.py
__init__.py

/workspace/django__django__4.0/tests/prefetch_related:
__init__.py
models.py
test_prefetch_related_objects.py
test_uuid.py
tests.py

/workspace/django__django__4.0/tests/project_template:
__init__.py
test_settings.py
urls.py
views.py

/workspace/django__django__4.0/tests/properties:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/proxy_model_inheritance:
__init__.py
app1
app2
models.py
tests.py

/workspace/django__django__4.0/tests/proxy_model_inheritance/app1:
__init__.py
models.py

/workspace/django__django__4.0/tests/proxy_model_inheritance/app2:
__init__.py
models.py

/workspace/django__django__4.0/tests/proxy_models:
__init__.py
admin.py
fixtures
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/proxy_models/fixtures:
mypeople.json

/workspace/django__django__4.0/tests/queries:
__init__.py
models.py
test_bulk_update.py
test_contains.py
test_db_returning.py
test_explain.py
test_iterator.py
test_q.py
test_qs_combinators.py
test_query.py
tests.py

/workspace/django__django__4.0/tests/queryset_pickle:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/raw_query:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/redirects_tests:
__init__.py
tests.py
urls.py

/workspace/django__django__4.0/tests/requests:
__init__.py
test_accept_header.py
test_data_upload_settings.py
tests.py

/workspace/django__django__4.0/tests/requirements:
mysql.txt
oracle.txt
postgres.txt
py3.txt

/workspace/django__django__4.0/tests/reserved_names:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/resolve_url:
__init__.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/responses:
__init__.py
test_cookie.py
test_fileresponse.py
tests.py

/workspace/django__django__4.0/tests/reverse_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/save_delete_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/schema:
__init__.py
fields.py
models.py
test_logging.py
tests.py

/workspace/django__django__4.0/tests/select_for_update:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/select_related:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/select_related_onetoone:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/select_related_regress:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/serializers:
__init__.py
models
test_data.py
test_deserializedobject.py
test_json.py
test_jsonl.py
test_natural.py
test_xml.py
test_yaml.py
tests.py

/workspace/django__django__4.0/tests/serializers/models:
__init__.py
base.py
data.py
multi_table.py
natural.py

/workspace/django__django__4.0/tests/servers:
__init__.py
another_app
fixtures
media
models.py
static
test_basehttp.py
test_liveserverthread.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/servers/another_app:
__init__.py
static

/workspace/django__django__4.0/tests/servers/another_app/static:
another_app

/workspace/django__django__4.0/tests/servers/another_app/static/another_app:
another_app_static_file.txt

/workspace/django__django__4.0/tests/servers/fixtures:
testdata.json

/workspace/django__django__4.0/tests/servers/media:
example_media_file.txt

/workspace/django__django__4.0/tests/servers/static:
example_static_file.txt

/workspace/django__django__4.0/tests/sessions_tests:
__init__.py
models.py
no_clear_expired.py
tests.py

/workspace/django__django__4.0/tests/settings_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/shell:
__init__.py
tests.py

/workspace/django__django__4.0/tests/shortcuts:
__init__.py
jinja2
templates
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/shortcuts/jinja2:
shortcuts

/workspace/django__django__4.0/tests/shortcuts/jinja2/shortcuts:
using.html

/workspace/django__django__4.0/tests/shortcuts/templates:
shortcuts

/workspace/django__django__4.0/tests/shortcuts/templates/shortcuts:
render_test.html
using.html

/workspace/django__django__4.0/tests/signals:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/signed_cookies_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/signing:
__init__.py
tests.py

/workspace/django__django__4.0/tests/sitemaps_tests:
__init__.py
base.py
models.py
templates
test_generic.py
test_http.py
test_https.py
test_management.py
test_utils.py
urls

/workspace/django__django__4.0/tests/sitemaps_tests/templates:
custom_sitemap.xml
custom_sitemap_index.xml

/workspace/django__django__4.0/tests/sitemaps_tests/urls:
__init__.py
empty.py
http.py
https.py
index_only.py

/workspace/django__django__4.0/tests/sites_framework:
__init__.py
migrations
models.py
tests.py

/workspace/django__django__4.0/tests/sites_framework/migrations:
0001_initial.py
__init__.py

/workspace/django__django__4.0/tests/sites_tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/staticfiles_tests:
__init__.py
apps
cases.py
project
settings.py
storage.py
test_checks.py
test_finders.py
test_forms.py
test_handlers.py
test_liveserver.py
test_management.py
test_storage.py
test_templatetags.py
test_utils.py
test_views.py
urls

/workspace/django__django__4.0/tests/staticfiles_tests/apps:
__init__.py
no_label
staticfiles_config.py
test

/workspace/django__django__4.0/tests/staticfiles_tests/apps/no_label:
__init__.py
static

/workspace/django__django__4.0/tests/staticfiles_tests/apps/no_label/static:
file2.txt

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test:
__init__.py
otherdir
static

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/otherdir:
odfile.txt

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/static:
test

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/static/test:
%2F.txt
CVS
file.txt
file1.txt
nonascii.css
test.ignoreme
vendor
window.png
⊗.txt

/workspace/django__django__4.0/tests/staticfiles_tests/apps/test/static/test/vendor:
module.js

/workspace/django__django__4.0/tests/staticfiles_tests/project:
documents
faulty
loop
pathlib
prefixed
site_media

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents:
absolute_root.css
cached
nested
styles_root.css
subdir
test
test.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached:
absolute.css
css
img
import.css
other.css
relative.css
styles.css
styles_insensitive.css
test.js
url.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/css:
fonts
fragments.css
ignored.css
img
window.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/css/fonts:
font.eot
font.svg

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/css/img:
window.png

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/cached/img:
relative.png

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/nested:
css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/nested/css:
base.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/subdir:
test.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/documents/test:
backup~
camelCase.txt
file.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/faulty:
faulty.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/loop:
bar.css
foo.css

/workspace/django__django__4.0/tests/staticfiles_tests/project/pathlib:
pathlib.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/prefixed:
test.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/site_media:
media
static

/workspace/django__django__4.0/tests/staticfiles_tests/project/site_media/media:
media-file.txt

/workspace/django__django__4.0/tests/staticfiles_tests/project/site_media/static:
testfile.txt

/workspace/django__django__4.0/tests/staticfiles_tests/urls:
__init__.py
default.py
helper.py

/workspace/django__django__4.0/tests/str:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/string_lookup:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/swappable_models:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/syndication_tests:
__init__.py
feeds.py
models.py
templates
tests.py
urls.py

/workspace/django__django__4.0/tests/syndication_tests/templates:
syndication

/workspace/django__django__4.0/tests/syndication_tests/templates/syndication:
description.html
description_context.html
title.html
title_context.html

/workspace/django__django__4.0/tests/template_backends:
__init__.py
apps
forbidden
jinja2
template_strings
templates
test_django.py
test_dummy.py
test_jinja2.py
test_utils.py

/workspace/django__django__4.0/tests/template_backends/apps:
__init__.py
good
importerror

/workspace/django__django__4.0/tests/template_backends/apps/good:
__init__.py
templatetags

/workspace/django__django__4.0/tests/template_backends/apps/good/templatetags:
__init__.py
empty.py
good_tags.py
override.py
subpackage

/workspace/django__django__4.0/tests/template_backends/apps/good/templatetags/subpackage:
__init__.py
tags.py

/workspace/django__django__4.0/tests/template_backends/apps/importerror:
__init__.py
templatetags

/workspace/django__django__4.0/tests/template_backends/apps/importerror/templatetags:
__init__.py
broken_tags.py

/workspace/django__django__4.0/tests/template_backends/forbidden:
template_backends

/workspace/django__django__4.0/tests/template_backends/forbidden/template_backends:
hello.html

/workspace/django__django__4.0/tests/template_backends/jinja2:
template_backends

/workspace/django__django__4.0/tests/template_backends/jinja2/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html
syntax_error2.html
syntax_error_include.html

/workspace/django__django__4.0/tests/template_backends/template_strings:
template_backends

/workspace/django__django__4.0/tests/template_backends/template_strings/template_backends:
csrf.html
hello.html

/workspace/django__django__4.0/tests/template_backends/templates:
template_backends

/workspace/django__django__4.0/tests/template_backends/templates/template_backends:
csrf.html
django_escaping.html
hello.html
syntax_error.html

/workspace/django__django__4.0/tests/template_loader:
__init__.py
template_strings
templates
tests.py

/workspace/django__django__4.0/tests/template_loader/template_strings:
template_loader

/workspace/django__django__4.0/tests/template_loader/template_strings/template_loader:
hello.html

/workspace/django__django__4.0/tests/template_loader/templates:
template_loader

/workspace/django__django__4.0/tests/template_loader/templates/template_loader:
goodbye.html
hello.html
request.html

/workspace/django__django__4.0/tests/template_tests:
__init__.py
alternate_urls.py
annotated_tag_function.py
broken_tag.py
eggs
filter_tests
jinja2
other_templates
recursive_templates
relative_templates
syntax_tests
templates
templatetags
test_autoreloader.py
test_base.py
test_callables.py
test_context.py
test_custom.py
test_engine.py
test_extends.py
test_extends_relative.py
test_library.py
test_loaders.py
test_logging.py
test_nodelist.py
test_origin.py
test_parser.py
test_response.py
test_smartif.py
tests.py
urls.py
utils.py
views.py

/workspace/django__django__4.0/tests/template_tests/eggs:
tagsegg.egg

/workspace/django__django__4.0/tests/template_tests/filter_tests:
__init__.py
test_add.py
test_addslashes.py
test_autoescape.py
test_capfirst.py
test_center.py
test_chaining.py
test_cut.py
test_date.py
test_default.py
test_default_if_none.py
test_dictsort.py
test_dictsortreversed.py
test_divisibleby.py
test_escape.py
test_escapejs.py
test_filesizeformat.py
test_first.py
test_floatformat.py
test_force_escape.py
test_get_digit.py
test_iriencode.py
test_join.py
test_json_script.py
test_last.py
test_length.py
test_length_is.py
test_linebreaks.py
test_linebreaksbr.py
test_linenumbers.py
test_ljust.py
test_lower.py
test_make_list.py
test_phone2numeric.py
test_pluralize.py
test_random.py
test_rjust.py
test_safe.py
test_safeseq.py
test_slice.py
test_slugify.py
test_stringformat.py
test_striptags.py
test_time.py
test_timesince.py
test_timeuntil.py
test_title.py
test_truncatechars.py
test_truncatechars_html.py
test_truncatewords.py
test_truncatewords_html.py
test_unordered_list.py
test_upper.py
test_urlencode.py
test_urlize.py
test_urlizetrunc.py
test_wordcount.py
test_wordwrap.py
test_yesno.py
timezone_utils.py

/workspace/django__django__4.0/tests/template_tests/jinja2:
template_tests

/workspace/django__django__4.0/tests/template_tests/jinja2/template_tests:
using.html

/workspace/django__django__4.0/tests/template_tests/other_templates:
priority
test_dirs.html

/workspace/django__django__4.0/tests/template_tests/other_templates/priority:
foo.html

/workspace/django__django__4.0/tests/template_tests/recursive_templates:
fs
fs2
fs3

/workspace/django__django__4.0/tests/template_tests/recursive_templates/fs:
extend-missing.html
one.html
other-recursive.html
recursive.html
self.html
three.html
two.html

/workspace/django__django__4.0/tests/template_tests/recursive_templates/fs2:
recursive.html

/workspace/django__django__4.0/tests/template_tests/recursive_templates/fs3:
recursive.html

/workspace/django__django__4.0/tests/template_tests/relative_templates:
dir1
error_extends.html
error_include.html
one.html
one_var.html
three.html
two.html

/workspace/django__django__4.0/tests/template_tests/relative_templates/dir1:
dir2
looped.html
one.html
one1.html
one2.html
one3.html
three.html
two.html

/workspace/django__django__4.0/tests/template_tests/relative_templates/dir1/dir2:
inc1.html
inc2.html
inc3.html
include_content.html
one.html

/workspace/django__django__4.0/tests/template_tests/syntax_tests:
__init__.py
i18n
test_autoescape.py
test_basic.py
test_builtins.py
test_cache.py
test_comment.py
test_cycle.py
test_exceptions.py
test_extends.py
test_filter_syntax.py
test_filter_tag.py
test_firstof.py
test_for.py
test_if.py
test_if_changed.py
test_include.py
test_invalid_string.py
test_list_index.py
test_load.py
test_lorem.py
test_multiline.py
test_named_endblock.py
test_now.py
test_numpy.py
test_regroup.py
test_resetcycle.py
test_setup.py
test_simple_tag.py
test_spaceless.py
test_static.py
test_template_tag.py
test_url.py
test_verbatim.py
test_width_ratio.py
test_with.py

/workspace/django__django__4.0/tests/template_tests/syntax_tests/i18n:
__init__.py
base.py
test_blocktranslate.py
test_filters.py
test_get_available_languages.py
test_get_current_language.py
test_get_current_language_bidi.py
test_get_language_info.py
test_get_language_info_list.py
test_language.py
test_translate.py
test_underscore_syntax.py

/workspace/django__django__4.0/tests/template_tests/templates:
27584_child.html
27584_parent.html
27956_child.html
27956_parent.html
broken_base.html
first
include_tpl.html
included_base.html
included_content.html
inclusion.html
inclusion_base.html
inclusion_extends1.html
inclusion_extends2.html
index.html
priority
recursive_include.html
response.html
second
ssi include with spaces.html
ssi_include.html
template_tests
test_context.html
test_context_stack.html
test_extends_error.html
test_incl_tag_use_l10n.html
test_include_error.html

/workspace/django__django__4.0/tests/template_tests/templates/first:
test.html

/workspace/django__django__4.0/tests/template_tests/templates/priority:
foo.html

/workspace/django__django__4.0/tests/template_tests/templates/second:
test.html

/workspace/django__django__4.0/tests/template_tests/templates/template_tests:
using.html

/workspace/django__django__4.0/tests/template_tests/templatetags:
__init__.py
bad_tag.py
custom.py
inclusion.py
subpackage
tag_27584.py
testtags.py

/workspace/django__django__4.0/tests/template_tests/templatetags/subpackage:
__init__.py
echo.py

/workspace/django__django__4.0/tests/templates:
base.html
comments
custom_admin
extended.html
form_view.html
login.html
views

/workspace/django__django__4.0/tests/templates/comments:
comment_notification_email.txt

/workspace/django__django__4.0/tests/templates/custom_admin:
add_form.html
app_index.html
change_form.html
change_list.html
delete_confirmation.html
delete_selected_confirmation.html
index.html
login.html
logout.html
object_history.html
password_change_done.html
password_change_form.html
popup_response.html

/workspace/django__django__4.0/tests/templates/views:
article_archive_day.html
article_archive_month.html
article_confirm_delete.html
article_detail.html
article_form.html
article_list.html
datearticle_archive_month.html
urlarticle_detail.html
urlarticle_form.html

/workspace/django__django__4.0/tests/test_client:
__init__.py
auth_backends.py
test_conditional_content_removal.py
test_fakepayload.py
tests.py
urls.py
urls_middleware_urlconf.py
views.py

/workspace/django__django__4.0/tests/test_client_regress:
__init__.py
auth_backends.py
bad_templates
context_processors.py
models.py
session.py
templates
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/test_client_regress/bad_templates:
404.html

/workspace/django__django__4.0/tests/test_client_regress/templates:
request_context.html
unicode.html

/workspace/django__django__4.0/tests/test_exceptions:
__init__.py
test_validation_error.py

/workspace/django__django__4.0/tests/test_runner:
__init__.py
models.py
runner.py
test_debug_sql.py
test_discover_runner.py
test_parallel.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps:
__init__.py
buffer
databases
sample
simple
tagged

/workspace/django__django__4.0/tests/test_runner_apps/buffer:
tests_buffer.py

/workspace/django__django__4.0/tests/test_runner_apps/databases:
__init__.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps/sample:
__init__.py
doctests.py
empty.py
pattern_tests.py
tests
tests_sample.py

/workspace/django__django__4.0/tests/test_runner_apps/sample/tests:
__init__.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps/simple:
__init__.py
tests.py

/workspace/django__django__4.0/tests/test_runner_apps/tagged:
__init__.py
tests.py
tests_inheritance.py

/workspace/django__django__4.0/tests/test_utils:
__init__.py
fixtures
models.py
templates
test_simpletestcase.py
test_testcase.py
test_transactiontestcase.py
tests.py
urls.py
views.py

/workspace/django__django__4.0/tests/test_utils/fixtures:
should_not_be_loaded.json

/workspace/django__django__4.0/tests/test_utils/templates:
template_used

/workspace/django__django__4.0/tests/test_utils/templates/template_used:
alternative.html
base.html
extends.html
include.html

/workspace/django__django__4.0/tests/timezones:
__init__.py
admin.py
forms.py
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/transaction_hooks:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/transactions:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/unmanaged_models:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/update:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/update_only_fields:
__init__.py
models.py
tests.py

/workspace/django__django__4.0/tests/urlpatterns:
__init__.py
converter_urls.py
converters.py
included_urls.py
more_urls.py
path_base64_urls.py
path_dynamic_urls.py
path_same_name_urls.py
path_urls.py
test_resolvers.py
tests.py
views.py

/workspace/django__django__4.0/tests/urlpatterns_reverse:
__init__.py
erroneous_urls.py
extra_urls.py
included_app_urls.py
included_named_urls.py
included_named_urls2.py
included_namespace_urls.py
included_no_kwargs_urls.py
included_urls.py
included_urls2.py
method_view_urls.py
middleware.py
named_urls.py
named_urls_conflict.py
namespace_urls.py
nested_urls.py
no_urls.py
nonimported_module.py
reverse_lazy_urls.py
test_localeregexdescriptor.py
tests.py
translations
urlconf_inner.py
urlconf_outer.py
urls.py
urls_error_handlers.py
urls_error_handlers_callables.py
urls_without_handlers.py
utils.py
views.py
views_broken.py

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations:
__init__.py
locale

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale:
__init__.py
de
fr

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/de:
LC_MESSAGES
__init__.py

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/de/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/fr:
LC_MESSAGES
__init__.py

/workspace/django__django__4.0/tests/urlpatterns_reverse/translations/locale/fr/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/user_commands:
__init__.py
eggs
management
models.py
tests.py
urls.py

/workspace/django__django__4.0/tests/user_commands/eggs:
basic.egg

/workspace/django__django__4.0/tests/user_commands/management:
__init__.py
commands

/workspace/django__django__4.0/tests/user_commands/management/commands:
__init__.py
common_args.py
dance.py
hal.py
mutually_exclusive_required.py
no_system_checks.py
no_translations.py
outputwrapper.py
required_constant_option.py
required_list_option.py
required_option.py
reverse_url.py
set_option.py
specific_system_checks.py
subparser.py
subparser_dest.py
subparser_required.py
transaction.py

/workspace/django__django__4.0/tests/utils_tests:
__init__.py
archives
eggs
files
models.py
test_archive.py
test_autoreload.py
test_baseconv.py
test_connection.py
test_crypto.py
test_datastructures.py
test_dateformat.py
test_dateparse.py
test_datetime_safe.py
test_decorators.py
test_duration.py
test_encoding.py
test_feedgenerator.py
test_functional.py
test_hashable.py
test_html.py
test_http.py
test_inspect.py
test_ipv6.py
test_jslex.py
test_lazyobject.py
test_lorem_ipsum.py
test_module
test_module_loading.py
test_no_submodule.py
test_numberformat.py
test_os_utils.py
test_regex_helper.py
test_safestring.py
test_simplelazyobject.py
test_termcolors.py
test_text.py
test_timesince.py
test_timezone.py
test_topological_sort.py
test_tree.py
traversal_archives
utils.py

/workspace/django__django__4.0/tests/utils_tests/archives:
foobar.tar
foobar.tar.bz2
foobar.tar.gz
foobar.tar.lzma
foobar.tar.xz
foobar.zip
leadpath_foobar.tar
leadpath_foobar.tar.bz2
leadpath_foobar.tar.gz
leadpath_foobar.tar.lzma
leadpath_foobar.tar.xz
leadpath_foobar.zip

/workspace/django__django__4.0/tests/utils_tests/eggs:
test_egg.egg

/workspace/django__django__4.0/tests/utils_tests/files:
strip_tags1.html
strip_tags2.txt

/workspace/django__django__4.0/tests/utils_tests/test_module:
__init__.py
__main__.py
another_bad_module.py
another_good_module.py
bad_module.py
child_module
good_module.py

/workspace/django__django__4.0/tests/utils_tests/test_module/child_module:
__init__.py
grandchild_module.py

/workspace/django__django__4.0/tests/utils_tests/traversal_archives:
traversal.tar
traversal_absolute.tar
traversal_disk_win.tar
traversal_disk_win.zip

/workspace/django__django__4.0/tests/validation:
__init__.py
models.py
test_custom_messages.py
test_error_messages.py
test_picklable.py
test_unique.py
test_validators.py
tests.py

/workspace/django__django__4.0/tests/validators:
__init__.py
invalid_urls.txt
tests.py
valid_urls.txt

/workspace/django__django__4.0/tests/version:
__init__.py
tests.py

/workspace/django__django__4.0/tests/view_tests:
__init__.py
app0
app1
app2
app3
app4
app5
default_urls.py
generic_urls.py
locale
media
models.py
regression_21530_urls.py
templates
templatetags
tests
urls.py
views.py

/workspace/django__django__4.0/tests/view_tests/app0:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app0/locale:
en

/workspace/django__django__4.0/tests/view_tests/app0/locale/en:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app0/locale/en/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app1:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app1/locale:
fr

/workspace/django__django__4.0/tests/view_tests/app1/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app1/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app2:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app2/locale:
fr

/workspace/django__django__4.0/tests/view_tests/app2/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app2/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app3:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app3/locale:
es_AR

/workspace/django__django__4.0/tests/view_tests/app3/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app3/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app4:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app4/locale:
es_AR

/workspace/django__django__4.0/tests/view_tests/app4/locale/es_AR:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app4/locale/es_AR/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/app5:
__init__.py
locale

/workspace/django__django__4.0/tests/view_tests/app5/locale:
fr

/workspace/django__django__4.0/tests/view_tests/app5/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/app5/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale:
de
en_GB
es
fr
nl
pt
ru

/workspace/django__django__4.0/tests/view_tests/locale/de:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/de/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/en_GB:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/en_GB/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/es:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/es/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/fr:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/fr/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/nl:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/nl/LC_MESSAGES:
django.mo
django.po

/workspace/django__django__4.0/tests/view_tests/locale/pt:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/pt/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/locale/ru:
LC_MESSAGES

/workspace/django__django__4.0/tests/view_tests/locale/ru/LC_MESSAGES:
djangojs.mo
djangojs.po

/workspace/django__django__4.0/tests/view_tests/media:
%2F.txt
file.txt
file.txt.gz
file.unknown
long-line.txt
subdir

/workspace/django__django__4.0/tests/view_tests/media/subdir:
visible

/workspace/django__django__4.0/tests/view_tests/templates:
debug
jsi18n-multi-catalogs.html
jsi18n.html
my_technical_500.html
my_technical_500.txt

/workspace/django__django__4.0/tests/view_tests/templates/debug:
template_error.html
template_exception.html

/workspace/django__django__4.0/tests/view_tests/templatetags:
__init__.py
debugtags.py

/workspace/django__django__4.0/tests/view_tests/tests:
__init__.py
test_csrf.py
test_debug.py
test_defaults.py
test_i18n.py
test_json.py
test_specials.py
test_static.py

/workspace/django__django__4.0/tests/wsgi:
__init__.py
tests.py
urls.py
wsgi.py

[Select the relevant files and use repo map to get highlevel representation and structure of repo]


============================================================



ACTION:

THOUGHT: Based on the PR description and repository structure, this issue is related to the YearLookup and ExtractIsoYear functionality in Django's database operations. Let me first locate the relevant files:

1. The issue is likely in the db/models/lookups.py or db/models/functions/ directory since it involves database lookups and the ExtractIsoYear function.

Let me first create a script to reproduce the error:
CODE:
CODE = """
import os
import django
from django.db import models
from django.test import TestCase
from django.conf import settings

# Configure minimal django settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=['django.contrib.contenttypes'],
)
django.setup()

# Create test model
class DTModel(models.Model):
    start_date = models.DateTimeField()
    
    class Meta:
        app_label = 'repro'

# Create the test case
if __name__ == '__main__':
    # Create table
    from django.db import connection
    with connection.schema_editor() as schema_editor:
        schema_editor.create_model(DTModel)
    
    # Insert test data - date that has different calendar year vs iso year
    from django.utils import timezone
    import datetime
    
    # Create a date that's in calendar year 2020 but ISO year 2021
    # Week 53 of 2020 is actually ISO year 2021
    dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
    DTModel.objects.create(start_date=dt)
    
    # Test queries
    print("\\nTesting annotation:")
    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
    print(f"Query: {qs.query}")
    print(f"Result: {list(qs)}")
    
    print("\\nTesting filter:")
    qs = DTModel.objects.filter(start_date__iso_year=2021)
    print(f"Query: {qs.query}")
    print(f"Count: {qs.count()}")
"""
create_file('reproduce.py', CODE)

============================================================



OBSERVATION:

[File reproduce.py created.]
[File: /workspace/reproduce.py (52 lines total after edit)]
1|
2|import os
3|import django
4|from django.db import models
5|from django.test import TestCase
6|from django.conf import settings
7|
8|# Configure minimal django settings
9|settings.configure(
10|    DATABASES={
11|        'default': {
12|            'ENGINE': 'django.db.backends.sqlite3',
13|            'NAME': ':memory:',
14|        }
15|    },
16|    INSTALLED_APPS=['django.contrib.contenttypes'],
17|)
18|django.setup()
19|
20|# Create test model
21|class DTModel(models.Model):
22|    start_date = models.DateTimeField()
23|    
24|    class Meta:
25|        app_label = 'repro'
26|
27|# Create the test case
28|if __name__ == '__main__':
29|    # Create table
30|    from django.db import connection
31|    with connection.schema_editor() as schema_editor:
32|        schema_editor.create_model(DTModel)
33|    
34|    # Insert test data - date that has different calendar year vs iso year
35|    from django.utils import timezone
36|    import datetime
37|    
38|    # Create a date that's in calendar year 2020 but ISO year 2021
39|    # Week 53 of 2020 is actually ISO year 2021
40|    dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
41|    DTModel.objects.create(start_date=dt)
42|    
43|    # Test queries
44|    print("\nTesting annotation:")
45|    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
46|    print(f"Query: {qs.query}")
47|    print(f"Result: {list(qs)}")
48|    
49|    print("\nTesting filter:")
50|    qs = DTModel.objects.filter(start_date__iso_year=2021)
51|    print(f"Query: {qs.query}")
52|    print(f"Count: {qs.count()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the reproduction script to confirm the issue:
COMMAND:
cd /workspace && PYTHONPATH=/workspace/django__django__4.0 python3 reproduce.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce.py", line 41, in <module>
    DTModel.objects.create(start_date=dt)
  File "/workspace/django__django__4.0/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/workspace/django__django__4.0/django/db/models/query.py", line 453, in create
    obj.save(force_insert=True, using=self.db)
  File "/workspace/django__django__4.0/django/db/models/base.py", line 730, in save
    self.save_base(using=using, force_insert=force_insert,
  File "/workspace/django__django__4.0/django/db/models/base.py", line 767, in save_base
    updated = self._save_table(
  File "/workspace/django__django__4.0/django/db/models/base.py", line 872, in _save_table
    results = self._do_insert(cls._base_manager, using, fields, returning_fields, raw)
  File "/workspace/django__django__4.0/django/db/models/base.py", line 910, in _do_insert
    return manager._insert(
  File "/workspace/django__django__4.0/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/workspace/django__django__4.0/django/db/models/query.py", line 1289, in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
  File "/workspace/django__django__4.0/django/db/models/sql/compiler.py", line 1410, in execute_sql
    for sql, params in self.as_sql():
  File "/workspace/django__django__4.0/django/db/models/sql/compiler.py", line 1353, in as_sql
    value_rows = [
  File "/workspace/django__django__4.0/django/db/models/sql/compiler.py", line 1354, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "/workspace/django__django__4.0/django/db/models/sql/compiler.py", line 1354, in <listcomp>
    [self.prepare_value(field, self.pre_save_val(field, obj)) for field in fields]
  File "/workspace/django__django__4.0/django/db/models/sql/compiler.py", line 1295, in prepare_value
    value = field.get_db_prep_save(value, connection=self.connection)
  File "/workspace/django__django__4.0/django/db/models/fields/__init__.py", line 842, in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
  File "/workspace/django__django__4.0/django/db/models/fields/__init__.py", line 1428, in get_db_prep_value
    return connection.ops.adapt_datetimefield_value(value)
  File "/workspace/django__django__4.0/django/db/backends/sqlite3/operations.py", line 252, in adapt_datetimefield_value
    raise ValueError("SQLite backend does not support timezone-aware datetimes when USE_TZ is False.")
ValueError: SQLite backend does not support timezone-aware datetimes when USE_TZ is False.


============================================================



ACTION:

THOUGHT: Ah, I see the issue. We need to add USE_TZ=True to our settings configuration. Let me update the reproduction script:
CODE:
CODE = """
import os
import django
from django.db import models
from django.test import TestCase
from django.conf import settings

# Configure minimal django settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=['django.contrib.contenttypes'],
    USE_TZ=True,
)
django.setup()

# Create test model
class DTModel(models.Model):
    start_date = models.DateTimeField()
    
    class Meta:
        app_label = 'repro'

# Create the test case
if __name__ == '__main__':
    # Create table
    from django.db import connection
    with connection.schema_editor() as schema_editor:
        schema_editor.create_model(DTModel)
    
    # Insert test data - date that has different calendar year vs iso year
    from django.utils import timezone
    import datetime
    
    # Create a date that's in calendar year 2020 but ISO year 2021
    # Week 53 of 2020 is actually ISO year 2021
    dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
    DTModel.objects.create(start_date=dt)
    
    # Test queries
    print("\\nTesting annotation:")
    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
    print(f"Query: {qs.query}")
    print(f"Result: {list(qs)}")
    
    print("\\nTesting filter:")
    qs = DTModel.objects.filter(start_date__iso_year=2021)
    print(f"Query: {qs.query}")
    print(f"Count: {qs.count()}")
"""
create_file('reproduce.py', CODE)

============================================================



OBSERVATION:

[File reproduce.py already exists and File overwritten.]
[File: /workspace/reproduce.py (53 lines total after edit)]
1|
2|import os
3|import django
4|from django.db import models
5|from django.test import TestCase
6|from django.conf import settings
7|
8|# Configure minimal django settings
9|settings.configure(
10|    DATABASES={
11|        'default': {
12|            'ENGINE': 'django.db.backends.sqlite3',
13|            'NAME': ':memory:',
14|        }
15|    },
16|    INSTALLED_APPS=['django.contrib.contenttypes'],
17|    USE_TZ=True,
18|)
19|django.setup()
20|
21|# Create test model
22|class DTModel(models.Model):
23|    start_date = models.DateTimeField()
24|    
25|    class Meta:
26|        app_label = 'repro'
27|
28|# Create the test case
29|if __name__ == '__main__':
30|    # Create table
31|    from django.db import connection
32|    with connection.schema_editor() as schema_editor:
33|        schema_editor.create_model(DTModel)
34|    
35|    # Insert test data - date that has different calendar year vs iso year
36|    from django.utils import timezone
37|    import datetime
38|    
39|    # Create a date that's in calendar year 2020 but ISO year 2021
40|    # Week 53 of 2020 is actually ISO year 2021
41|    dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
42|    DTModel.objects.create(start_date=dt)
43|    
44|    # Test queries
45|    print("\nTesting annotation:")
46|    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
47|    print(f"Query: {qs.query}")
48|    print(f"Result: {list(qs)}")
49|    
50|    print("\nTesting filter:")
51|    qs = DTModel.objects.filter(start_date__iso_year=2021)
52|    print(f"Query: {qs.query}")
53|    print(f"Count: {qs.count()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The script looks good. Let's run it to reproduce the issue:
COMMAND:
cd /workspace && PYTHONPATH=/workspace/django__django__4.0 python3 reproduce.py

============================================================



OBSERVATION:


Testing annotation:
Query: SELECT django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'America/Chicago', 'UTC') AS "extracted" FROM "repro_dtmodel"
Result: [{'extracted': 2020}]

Testing filter:
Query: SELECT "repro_dtmodel"."id", "repro_dtmodel"."start_date" FROM "repro_dtmodel" WHERE "repro_dtmodel"."start_date" BETWEEN 2021-01-01 06:00:00 AND 2022-01-01 05:59:59.999999
Count: 0


============================================================



ACTION:

THOUGHT: Now I can see the issue clearly. Let me analyze the problem:

1. The issue is confirmed by our reproduction script:
   - When using annotation with ExtractIsoYear, it correctly uses the EXTRACT function with 'iso_year'
   - But when using the filter with `__iso_year`, it incorrectly uses BETWEEN with calendar year dates instead of ISO year extraction

2. Looking at the query outputs:
   - Annotation query (correct): Uses `django_datetime_extract('iso_year', ...)` 
   - Filter query (incorrect): Uses `BETWEEN 2021-01-01 ... AND 2022-01-01 ...`

3. The test data (2020-12-31) should:
   - Be in ISO year 2021 (as it's in week 53 of 2020)
   - But the filter returns 0 results because it's using calendar year logic

Let me check the relevant files to fix this issue:
CODE:
open_file('/workspace/django__django__4.0/django/db/models/lookups.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/lookups.py (647 lines total)]
1|import itertools
2|import math
3|from copy import copy
4|
5|from django.core.exceptions import EmptyResultSet
6|from django.db.models.expressions import Case, Exists, Func, Value, When
7|from django.db.models.fields import (
8|    CharField, DateTimeField, Field, IntegerField, UUIDField,
9|)
10|from django.db.models.query_utils import RegisterLookupMixin
11|from django.utils.datastructures import OrderedSet
12|from django.utils.functional import cached_property
13|from django.utils.hashable import make_hashable
14|
15|
16|class Lookup:
17|    lookup_name = None
18|    prepare_rhs = True
19|    can_use_none_as_rhs = False
20|
21|    def __init__(self, lhs, rhs):
22|        self.lhs, self.rhs = lhs, rhs
23|        self.rhs = self.get_prep_lookup()
24|        if hasattr(self.lhs, 'get_bilateral_transforms'):
25|            bilateral_transforms = self.lhs.get_bilateral_transforms()
26|        else:
27|            bilateral_transforms = []
28|        if bilateral_transforms:
29|            # Warn the user as soon as possible if they are trying to apply
30|            # a bilateral transformation on a nested QuerySet: that won't work.
31|            from django.db.models.sql.query import (  # avoid circular import
32|                Query,
33|            )
34|            if isinstance(rhs, Query):
35|                raise NotImplementedError("Bilateral transformations on nested querysets are not implemented.")
36|        self.bilateral_transforms = bilateral_transforms
37|
38|    def apply_bilateral_transforms(self, value):
39|        for transform in self.bilateral_transforms:
40|            value = transform(value)
41|        return value
42|
43|    def batch_process_rhs(self, compiler, connection, rhs=None):
44|        if rhs is None:
45|            rhs = self.rhs
46|        if self.bilateral_transforms:
47|            sqls, sqls_params = [], []
48|            for p in rhs:
49|                value = Value(p, output_field=self.lhs.output_field)
50|                value = self.apply_bilateral_transforms(value)
51|                value = value.resolve_expression(compiler.query)
52|                sql, sql_params = compiler.compile(value)
53|                sqls.append(sql)
54|                sqls_params.extend(sql_params)
55|        else:
56|            _, params = self.get_db_prep_lookup(rhs, connection)
57|            sqls, sqls_params = ['%s'] * len(params), params
58|        return sqls, sqls_params
59|
60|    def get_source_expressions(self):
61|        if self.rhs_is_direct_value():
62|            return [self.lhs]
63|        return [self.lhs, self.rhs]
64|
65|    def set_source_expressions(self, new_exprs):
66|        if len(new_exprs) == 1:
67|            self.lhs = new_exprs[0]
68|        else:
69|            self.lhs, self.rhs = new_exprs
70|
71|    def get_prep_lookup(self):
72|        if hasattr(self.rhs, 'resolve_expression'):
73|            return self.rhs
74|        if self.prepare_rhs and hasattr(self.lhs.output_field, 'get_prep_value'):
75|            return self.lhs.output_field.get_prep_value(self.rhs)
76|        return self.rhs
77|
78|    def get_db_prep_lookup(self, value, connection):
79|        return ('%s', [value])
80|
81|    def process_lhs(self, compiler, connection, lhs=None):
82|        lhs = lhs or self.lhs
83|        if hasattr(lhs, 'resolve_expression'):
84|            lhs = lhs.resolve_expression(compiler.query)
85|        return compiler.compile(lhs)
86|
87|    def process_rhs(self, compiler, connection):
88|        value = self.rhs
89|        if self.bilateral_transforms:
90|            if self.rhs_is_direct_value():
91|                # Do not call get_db_prep_lookup here as the value will be
92|                # transformed before being used for lookup
93|                value = Value(value, output_field=self.lhs.output_field)
94|            value = self.apply_bilateral_transforms(value)
95|            value = value.resolve_expression(compiler.query)
96|        if hasattr(value, 'as_sql'):
97|            return compiler.compile(value)
98|        else:
99|            return self.get_db_prep_lookup(value, connection)
100|
101|    def rhs_is_direct_value(self):
102|        return not hasattr(self.rhs, 'as_sql')
103|
104|    def relabeled_clone(self, relabels):
105|        new = copy(self)
106|        new.lhs = new.lhs.relabeled_clone(relabels)
107|        if hasattr(new.rhs, 'relabeled_clone'):
108|            new.rhs = new.rhs.relabeled_clone(relabels)
109|        return new
110|
111|    def get_group_by_cols(self, alias=None):
112|        cols = self.lhs.get_group_by_cols()
113|        if hasattr(self.rhs, 'get_group_by_cols'):
114|            cols.extend(self.rhs.get_group_by_cols())
115|        return cols
116|
117|    def as_sql(self, compiler, connection):
118|        raise NotImplementedError
119|
120|    def as_oracle(self, compiler, connection):
121|        # Oracle doesn't allow EXISTS() to be compared to another expression
122|        # unless it's wrapped in a CASE WHEN.
123|        wrapped = False
124|        exprs = []
125|        for expr in (self.lhs, self.rhs):
126|            if isinstance(expr, Exists):
127|                expr = Case(When(expr, then=True), default=False)
128|                wrapped = True
129|            exprs.append(expr)
130|        lookup = type(self)(*exprs) if wrapped else self
131|        return lookup.as_sql(compiler, connection)
132|
133|    @cached_property
134|    def contains_aggregate(self):
135|        return self.lhs.contains_aggregate or getattr(self.rhs, 'contains_aggregate', False)
136|
137|    @cached_property
138|    def contains_over_clause(self):
139|        return self.lhs.contains_over_clause or getattr(self.rhs, 'contains_over_clause', False)
140|
141|    @property
142|    def is_summary(self):
143|        return self.lhs.is_summary or getattr(self.rhs, 'is_summary', False)
144|
145|    @property
146|    def identity(self):
147|        return self.__class__, self.lhs, self.rhs
148|
149|    def __eq__(self, other):
150|        if not isinstance(other, Lookup):
151|            return NotImplemented
152|        return self.identity == other.identity
153|
154|    def __hash__(self):
155|        return hash(make_hashable(self.identity))
156|
157|
158|class Transform(RegisterLookupMixin, Func):
159|    """
160|    RegisterLookupMixin() is first so that get_lookup() and get_transform()
161|    first examine self and then check output_field.
162|    """
163|    bilateral = False
164|    arity = 1
165|
166|    @property
167|    def lhs(self):
168|        return self.get_source_expressions()[0]
169|
170|    def get_bilateral_transforms(self):
171|        if hasattr(self.lhs, 'get_bilateral_transforms'):
172|            bilateral_transforms = self.lhs.get_bilateral_transforms()
173|        else:
174|            bilateral_transforms = []
175|        if self.bilateral:
176|            bilateral_transforms.append(self.__class__)
177|        return bilateral_transforms
178|
179|
180|class BuiltinLookup(Lookup):
181|    def process_lhs(self, compiler, connection, lhs=None):
182|        lhs_sql, params = super().process_lhs(compiler, connection, lhs)
183|        field_internal_type = self.lhs.output_field.get_internal_type()
184|        db_type = self.lhs.output_field.db_type(connection=connection)
185|        lhs_sql = connection.ops.field_cast_sql(
186|            db_type, field_internal_type) % lhs_sql
187|        lhs_sql = connection.ops.lookup_cast(self.lookup_name, field_internal_type) % lhs_sql
188|        return lhs_sql, list(params)
189|
190|    def as_sql(self, compiler, connection):
191|        lhs_sql, params = self.process_lhs(compiler, connection)
192|        rhs_sql, rhs_params = self.process_rhs(compiler, connection)
193|        params.extend(rhs_params)
194|        rhs_sql = self.get_rhs_op(connection, rhs_sql)
195|        return '%s %s' % (lhs_sql, rhs_sql), params
196|
197|    def get_rhs_op(self, connection, rhs):
198|        return connection.operators[self.lookup_name] % rhs
199|
200|
201|class FieldGetDbPrepValueMixin:
202|    """
203|    Some lookups require Field.get_db_prep_value() to be called on their
204|    inputs.
205|    """
206|    get_db_prep_lookup_value_is_iterable = False
207|
208|    def get_db_prep_lookup(self, value, connection):
209|        # For relational fields, use the 'target_field' attribute of the
210|        # output_field.
211|        field = getattr(self.lhs.output_field, 'target_field', None)
212|        get_db_prep_value = getattr(field, 'get_db_prep_value', None) or self.lhs.output_field.get_db_prep_value
213|        return (
214|            '%s',
215|            [get_db_prep_value(v, connection, prepared=True) for v in value]
216|            if self.get_db_prep_lookup_value_is_iterable else
217|            [get_db_prep_value(value, connection, prepared=True)]
218|        )
219|
220|
221|class FieldGetDbPrepValueIterableMixin(FieldGetDbPrepValueMixin):
222|    """
223|    Some lookups require Field.get_db_prep_value() to be called on each value
224|    in an iterable.
225|    """
226|    get_db_prep_lookup_value_is_iterable = True
227|
228|    def get_prep_lookup(self):
229|        if hasattr(self.rhs, 'resolve_expression'):
230|            return self.rhs
231|        prepared_values = []
232|        for rhs_value in self.rhs:
233|            if hasattr(rhs_value, 'resolve_expression'):
234|                # An expression will be handled by the database but can coexist
235|                # alongside real values.
236|                pass
237|            elif self.prepare_rhs and hasattr(self.lhs.output_field, 'get_prep_value'):
238|                rhs_value = self.lhs.output_field.get_prep_value(rhs_value)
239|            prepared_values.append(rhs_value)
240|        return prepared_values
241|
242|    def process_rhs(self, compiler, connection):
243|        if self.rhs_is_direct_value():
244|            # rhs should be an iterable of values. Use batch_process_rhs()
245|            # to prepare/transform those values.
246|            return self.batch_process_rhs(compiler, connection)
247|        else:
248|            return super().process_rhs(compiler, connection)
249|
250|    def resolve_expression_parameter(self, compiler, connection, sql, param):
251|        params = [param]
252|        if hasattr(param, 'resolve_expression'):
253|            param = param.resolve_expression(compiler.query)
254|        if hasattr(param, 'as_sql'):
255|            sql, params = compiler.compile(param)
256|        return sql, params
257|
258|    def batch_process_rhs(self, compiler, connection, rhs=None):
259|        pre_processed = super().batch_process_rhs(compiler, connection, rhs)
260|        # The params list may contain expressions which compile to a
261|        # sql/param pair. Zip them to get sql and param pairs that refer to the
262|        # same argument and attempt to replace them with the result of
263|        # compiling the param step.
264|        sql, params = zip(*(
265|            self.resolve_expression_parameter(compiler, connection, sql, param)
266|            for sql, param in zip(*pre_processed)
267|        ))
268|        params = itertools.chain.from_iterable(params)
269|        return sql, tuple(params)
270|
271|
272|class PostgresOperatorLookup(FieldGetDbPrepValueMixin, Lookup):
273|    """Lookup defined by operators on PostgreSQL."""
274|    postgres_operator = None
275|
276|    def as_postgresql(self, compiler, connection):
277|        lhs, lhs_params = self.process_lhs(compiler, connection)
278|        rhs, rhs_params = self.process_rhs(compiler, connection)
279|        params = tuple(lhs_params) + tuple(rhs_params)
280|        return '%s %s %s' % (lhs, self.postgres_operator, rhs), params
281|
282|
283|@Field.register_lookup
284|class Exact(FieldGetDbPrepValueMixin, BuiltinLookup):
285|    lookup_name = 'exact'
286|
287|    def process_rhs(self, compiler, connection):
288|        from django.db.models.sql.query import Query
289|        if isinstance(self.rhs, Query):
290|            if self.rhs.has_limit_one():
291|                if not self.rhs.has_select_fields:
292|                    self.rhs.clear_select_clause()
293|                    self.rhs.add_fields(['pk'])
294|            else:
295|                raise ValueError(
296|                    'The QuerySet value for an exact lookup must be limited to '
297|                    'one result using slicing.'
298|                )
299|        return super().process_rhs(compiler, connection)
300|
301|    def as_sql(self, compiler, connection):
302|        # Avoid comparison against direct rhs if lhs is a boolean value. That
303|        # turns "boolfield__exact=True" into "WHERE boolean_field" instead of
304|        # "WHERE boolean_field = True" when allowed.
305|        if (
306|            isinstance(self.rhs, bool) and
307|            getattr(self.lhs, 'conditional', False) and
308|            connection.ops.conditional_expression_supported_in_where_clause(self.lhs)
309|        ):
310|            lhs_sql, params = self.process_lhs(compiler, connection)
311|            template = '%s' if self.rhs else 'NOT %s'
312|            return template % lhs_sql, params
313|        return super().as_sql(compiler, connection)
314|
315|
316|@Field.register_lookup
317|class IExact(BuiltinLookup):
318|    lookup_name = 'iexact'
319|    prepare_rhs = False
320|
321|    def process_rhs(self, qn, connection):
322|        rhs, params = super().process_rhs(qn, connection)
323|        if params:
324|            params[0] = connection.ops.prep_for_iexact_query(params[0])
325|        return rhs, params
326|
327|
328|@Field.register_lookup
329|class GreaterThan(FieldGetDbPrepValueMixin, BuiltinLookup):
330|    lookup_name = 'gt'
331|
332|
333|@Field.register_lookup
334|class GreaterThanOrEqual(FieldGetDbPrepValueMixin, BuiltinLookup):
335|    lookup_name = 'gte'
336|
337|
338|@Field.register_lookup
339|class LessThan(FieldGetDbPrepValueMixin, BuiltinLookup):
340|    lookup_name = 'lt'
341|
342|
343|@Field.register_lookup
344|class LessThanOrEqual(FieldGetDbPrepValueMixin, BuiltinLookup):
345|    lookup_name = 'lte'
346|
347|
348|class IntegerFieldFloatRounding:
349|    """
350|    Allow floats to work as query values for IntegerField. Without this, the
351|    decimal portion of the float would always be discarded.
352|    """
353|    def get_prep_lookup(self):
354|        if isinstance(self.rhs, float):
355|            self.rhs = math.ceil(self.rhs)
356|        return super().get_prep_lookup()
357|
358|
359|@IntegerField.register_lookup
360|class IntegerGreaterThanOrEqual(IntegerFieldFloatRounding, GreaterThanOrEqual):
361|    pass
362|
363|
364|@IntegerField.register_lookup
365|class IntegerLessThan(IntegerFieldFloatRounding, LessThan):
366|    pass
367|
368|
369|@Field.register_lookup
370|class In(FieldGetDbPrepValueIterableMixin, BuiltinLookup):
371|    lookup_name = 'in'
372|
373|    def process_rhs(self, compiler, connection):
374|        db_rhs = getattr(self.rhs, '_db', None)
375|        if db_rhs is not None and db_rhs != connection.alias:
376|            raise ValueError(
377|                "Subqueries aren't allowed across different databases. Force "
378|                "the inner query to be evaluated using `list(inner_query)`."
379|            )
380|
381|        if self.rhs_is_direct_value():
382|            # Remove None from the list as NULL is never equal to anything.
383|            try:
384|                rhs = OrderedSet(self.rhs)
385|                rhs.discard(None)
386|            except TypeError:  # Unhashable items in self.rhs
387|                rhs = [r for r in self.rhs if r is not None]
388|
389|            if not rhs:
390|                raise EmptyResultSet
391|
392|            # rhs should be an iterable; use batch_process_rhs() to
393|            # prepare/transform those values.
394|            sqls, sqls_params = self.batch_process_rhs(compiler, connection, rhs)
395|            placeholder = '(' + ', '.join(sqls) + ')'
396|            return (placeholder, sqls_params)
397|        else:
398|            if not getattr(self.rhs, 'has_select_fields', True):
399|                self.rhs.clear_select_clause()
400|                self.rhs.add_fields(['pk'])
401|            return super().process_rhs(compiler, connection)
402|
403|    def get_rhs_op(self, connection, rhs):
404|        return 'IN %s' % rhs
405|
406|    def as_sql(self, compiler, connection):
407|        max_in_list_size = connection.ops.max_in_list_size()
408|        if self.rhs_is_direct_value() and max_in_list_size and len(self.rhs) > max_in_list_size:
409|            return self.split_parameter_list_as_sql(compiler, connection)
410|        return super().as_sql(compiler, connection)
411|
412|    def split_parameter_list_as_sql(self, compiler, connection):
413|        # This is a special case for databases which limit the number of
414|        # elements which can appear in an 'IN' clause.
415|        max_in_list_size = connection.ops.max_in_list_size()
416|        lhs, lhs_params = self.process_lhs(compiler, connection)
417|        rhs, rhs_params = self.batch_process_rhs(compiler, connection)
418|        in_clause_elements = ['(']
419|        params = []
420|        for offset in range(0, len(rhs_params), max_in_list_size):
421|            if offset > 0:
422|                in_clause_elements.append(' OR ')
423|            in_clause_elements.append('%s IN (' % lhs)
424|            params.extend(lhs_params)
425|            sqls = rhs[offset: offset + max_in_list_size]
426|            sqls_params = rhs_params[offset: offset + max_in_list_size]
427|            param_group = ', '.join(sqls)
428|            in_clause_elements.append(param_group)
429|            in_clause_elements.append(')')
430|            params.extend(sqls_params)
431|        in_clause_elements.append(')')
432|        return ''.join(in_clause_elements), params
433|
434|
435|class PatternLookup(BuiltinLookup):
436|    param_pattern = '%%%s%%'
437|    prepare_rhs = False
438|
439|    def get_rhs_op(self, connection, rhs):
440|        # Assume we are in startswith. We need to produce SQL like:
441|        #     col LIKE %s, ['thevalue%']
442|        # For python values we can (and should) do that directly in Python,
443|        # but if the value is for example reference to other column, then
444|        # we need to add the % pattern match to the lookup by something like
445|        #     col LIKE othercol || '%%'
446|        # So, for Python values we don't need any special pattern, but for
447|        # SQL reference values or SQL transformations we need the correct
448|        # pattern added.
449|        if hasattr(self.rhs, 'as_sql') or self.bilateral_transforms:
450|            pattern = connection.pattern_ops[self.lookup_name].format(connection.pattern_esc)
451|            return pattern.format(rhs)
452|        else:
453|            return super().get_rhs_op(connection, rhs)
454|
455|    def process_rhs(self, qn, connection):
456|        rhs, params = super().process_rhs(qn, connection)
457|        if self.rhs_is_direct_value() and params and not self.bilateral_transforms:
458|            params[0] = self.param_pattern % connection.ops.prep_for_like_query(params[0])
459|        return rhs, params
460|
461|
462|@Field.register_lookup
463|class Contains(PatternLookup):
464|    lookup_name = 'contains'
465|
466|
467|@Field.register_lookup
468|class IContains(Contains):
469|    lookup_name = 'icontains'
470|
471|
472|@Field.register_lookup
473|class StartsWith(PatternLookup):
474|    lookup_name = 'startswith'
475|    param_pattern = '%s%%'
476|
477|
478|@Field.register_lookup
479|class IStartsWith(StartsWith):
480|    lookup_name = 'istartswith'
481|
482|
483|@Field.register_lookup
484|class EndsWith(PatternLookup):
485|    lookup_name = 'endswith'
486|    param_pattern = '%%%s'
487|
488|
489|@Field.register_lookup
490|class IEndsWith(EndsWith):
491|    lookup_name = 'iendswith'
492|
493|
494|@Field.register_lookup
495|class Range(FieldGetDbPrepValueIterableMixin, BuiltinLookup):
496|    lookup_name = 'range'
497|
498|    def get_rhs_op(self, connection, rhs):
499|        return "BETWEEN %s AND %s" % (rhs[0], rhs[1])
500|
501|
502|@Field.register_lookup
503|class IsNull(BuiltinLookup):
504|    lookup_name = 'isnull'
505|    prepare_rhs = False
506|
507|    def as_sql(self, compiler, connection):
508|        if not isinstance(self.rhs, bool):
509|            raise ValueError(
510|                'The QuerySet value for an isnull lookup must be True or '
511|                'False.'
512|            )
513|        sql, params = compiler.compile(self.lhs)
514|        if self.rhs:
515|            return "%s IS NULL" % sql, params
516|        else:
517|            return "%s IS NOT NULL" % sql, params
518|
519|
520|@Field.register_lookup
521|class Regex(BuiltinLookup):
522|    lookup_name = 'regex'
523|    prepare_rhs = False
524|
525|    def as_sql(self, compiler, connection):
526|        if self.lookup_name in connection.operators:
527|            return super().as_sql(compiler, connection)
528|        else:
529|            lhs, lhs_params = self.process_lhs(compiler, connection)
530|            rhs, rhs_params = self.process_rhs(compiler, connection)
531|            sql_template = connection.ops.regex_lookup(self.lookup_name)
532|            return sql_template % (lhs, rhs), lhs_params + rhs_params
533|
534|
535|@Field.register_lookup
536|class IRegex(Regex):
537|    lookup_name = 'iregex'
538|
539|
540|class YearLookup(Lookup):
541|    def year_lookup_bounds(self, connection, year):
542|        output_field = self.lhs.lhs.output_field
543|        if isinstance(output_field, DateTimeField):
544|            bounds = connection.ops.year_lookup_bounds_for_datetime_field(year)
545|        else:
546|            bounds = connection.ops.year_lookup_bounds_for_date_field(year)
547|        return bounds
548|
549|    def as_sql(self, compiler, connection):
550|        # Avoid the extract operation if the rhs is a direct value to allow
551|        # indexes to be used.
552|        if self.rhs_is_direct_value():
553|            # Skip the extract part by directly using the originating field,
554|            # that is self.lhs.lhs.
555|            lhs_sql, params = self.process_lhs(compiler, connection, self.lhs.lhs)
556|            rhs_sql, _ = self.process_rhs(compiler, connection)
557|            rhs_sql = self.get_direct_rhs_sql(connection, rhs_sql)
558|            start, finish = self.year_lookup_bounds(connection, self.rhs)
559|            params.extend(self.get_bound_params(start, finish))
560|            return '%s %s' % (lhs_sql, rhs_sql), params
561|        return super().as_sql(compiler, connection)
562|
563|    def get_direct_rhs_sql(self, connection, rhs):
564|        return connection.operators[self.lookup_name] % rhs
565|
566|    def get_bound_params(self, start, finish):
567|        raise NotImplementedError(
568|            'subclasses of YearLookup must provide a get_bound_params() method'
569|        )
570|
571|
572|class YearExact(YearLookup, Exact):
573|    def get_direct_rhs_sql(self, connection, rhs):
574|        return 'BETWEEN %s AND %s'
575|
576|    def get_bound_params(self, start, finish):
577|        return (start, finish)
578|
579|
580|class YearGt(YearLookup, GreaterThan):
581|    def get_bound_params(self, start, finish):
582|        return (finish,)
583|
584|
585|class YearGte(YearLookup, GreaterThanOrEqual):
586|    def get_bound_params(self, start, finish):
587|        return (start,)
588|
589|
590|class YearLt(YearLookup, LessThan):
591|    def get_bound_params(self, start, finish):
592|        return (start,)
593|
594|
595|class YearLte(YearLookup, LessThanOrEqual):
596|    def get_bound_params(self, start, finish):
597|        return (finish,)
598|
599|
600|class UUIDTextMixin:
601|    """
602|    Strip hyphens from a value when filtering a UUIDField on backends without
603|    a native datatype for UUID.
604|    """
605|    def process_rhs(self, qn, connection):
606|        if not connection.features.has_native_uuid_field:
607|            from django.db.models.functions import Replace
608|            if self.rhs_is_direct_value():
609|                self.rhs = Value(self.rhs)
610|            self.rhs = Replace(self.rhs, Value('-'), Value(''), output_field=CharField())
611|        rhs, params = super().process_rhs(qn, connection)
612|        return rhs, params
613|
614|
615|@UUIDField.register_lookup
616|class UUIDIExact(UUIDTextMixin, IExact):
617|    pass
618|
619|
620|@UUIDField.register_lookup
621|class UUIDContains(UUIDTextMixin, Contains):
622|    pass
623|
624|
625|@UUIDField.register_lookup
626|class UUIDIContains(UUIDTextMixin, IContains):
627|    pass
628|
629|
630|@UUIDField.register_lookup
631|class UUIDStartsWith(UUIDTextMixin, StartsWith):
632|    pass
633|
634|
635|@UUIDField.register_lookup
636|class UUIDIStartsWith(UUIDTextMixin, IStartsWith):
637|    pass
638|
639|
640|@UUIDField.register_lookup
641|class UUIDEndsWith(UUIDTextMixin, EndsWith):
642|    pass
643|
644|
645|@UUIDField.register_lookup
646|class UUIDIEndsWith(UUIDTextMixin, IEndsWith):
647|    pass


============================================================



ACTION:

THOUGHT: Let me also check the database functions related to ISO year:
CODE:
open_file('/workspace/django__django__4.0/django/db/models/functions/__init__.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/functions/__init__.py (46 lines total)]
1|from .comparison import (
2|    Cast, Coalesce, Collate, Greatest, JSONObject, Least, NullIf,
3|)
4|from .datetime import (
5|    Extract, ExtractDay, ExtractHour, ExtractIsoWeekDay, ExtractIsoYear,
6|    ExtractMinute, ExtractMonth, ExtractQuarter, ExtractSecond, ExtractWeek,
7|    ExtractWeekDay, ExtractYear, Now, Trunc, TruncDate, TruncDay, TruncHour,
8|    TruncMinute, TruncMonth, TruncQuarter, TruncSecond, TruncTime, TruncWeek,
9|    TruncYear,
10|)
11|from .math import (
12|    Abs, ACos, ASin, ATan, ATan2, Ceil, Cos, Cot, Degrees, Exp, Floor, Ln, Log,
13|    Mod, Pi, Power, Radians, Random, Round, Sign, Sin, Sqrt, Tan,
14|)
15|from .text import (
16|    MD5, SHA1, SHA224, SHA256, SHA384, SHA512, Chr, Concat, ConcatPair, Left,
17|    Length, Lower, LPad, LTrim, Ord, Repeat, Replace, Reverse, Right, RPad,
18|    RTrim, StrIndex, Substr, Trim, Upper,
19|)
20|from .window import (
21|    CumeDist, DenseRank, FirstValue, Lag, LastValue, Lead, NthValue, Ntile,
22|    PercentRank, Rank, RowNumber,
23|)
24|
25|__all__ = [
26|    # comparison and conversion
27|    'Cast', 'Coalesce', 'Collate', 'Greatest', 'JSONObject', 'Least', 'NullIf',
28|    # datetime
29|    'Extract', 'ExtractDay', 'ExtractHour', 'ExtractMinute', 'ExtractMonth',
30|    'ExtractQuarter', 'ExtractSecond', 'ExtractWeek', 'ExtractIsoWeekDay',
31|    'ExtractWeekDay', 'ExtractIsoYear', 'ExtractYear', 'Now', 'Trunc',
32|    'TruncDate', 'TruncDay', 'TruncHour', 'TruncMinute', 'TruncMonth',
33|    'TruncQuarter', 'TruncSecond', 'TruncTime', 'TruncWeek', 'TruncYear',
34|    # math
35|    'Abs', 'ACos', 'ASin', 'ATan', 'ATan2', 'Ceil', 'Cos', 'Cot', 'Degrees',
36|    'Exp', 'Floor', 'Ln', 'Log', 'Mod', 'Pi', 'Power', 'Radians', 'Random',
37|    'Round', 'Sign', 'Sin', 'Sqrt', 'Tan',
38|    # text
39|    'MD5', 'SHA1', 'SHA224', 'SHA256', 'SHA384', 'SHA512', 'Chr', 'Concat',
40|    'ConcatPair', 'Left', 'Length', 'Lower', 'LPad', 'LTrim', 'Ord', 'Repeat',
41|    'Replace', 'Reverse', 'Right', 'RPad', 'RTrim', 'StrIndex', 'Substr',
42|    'Trim', 'Upper',
43|    # window
44|    'CumeDist', 'DenseRank', 'FirstValue', 'Lag', 'LastValue', 'Lead',
45|    'NthValue', 'Ntile', 'PercentRank', 'Rank', 'RowNumber',
46|]


============================================================



ACTION:

THOUGHT: Let me check the datetime functions since ExtractIsoYear is imported from there:
CODE:
open_file('/workspace/django__django__4.0/django/db/models/functions/datetime.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/functions/datetime.py (332 lines total)]
1|from datetime import datetime
2|
3|from django.conf import settings
4|from django.db.models.expressions import Func
5|from django.db.models.fields import (
6|    DateField, DateTimeField, DurationField, Field, IntegerField, TimeField,
7|)
8|from django.db.models.lookups import (
9|    Transform, YearExact, YearGt, YearGte, YearLt, YearLte,
10|)
11|from django.utils import timezone
12|
13|
14|class TimezoneMixin:
15|    tzinfo = None
16|
17|    def get_tzname(self):
18|        # Timezone conversions must happen to the input datetime *before*
19|        # applying a function. 2015-12-31 23:00:00 -02:00 is stored in the
20|        # database as 2016-01-01 01:00:00 +00:00. Any results should be
21|        # based on the input datetime not the stored datetime.
22|        tzname = None
23|        if settings.USE_TZ:
24|            if self.tzinfo is None:
25|                tzname = timezone.get_current_timezone_name()
26|            else:
27|                tzname = timezone._get_timezone_name(self.tzinfo)
28|        return tzname
29|
30|
31|class Extract(TimezoneMixin, Transform):
32|    lookup_name = None
33|    output_field = IntegerField()
34|
35|    def __init__(self, expression, lookup_name=None, tzinfo=None, **extra):
36|        if self.lookup_name is None:
37|            self.lookup_name = lookup_name
38|        if self.lookup_name is None:
39|            raise ValueError('lookup_name must be provided')
40|        self.tzinfo = tzinfo
41|        super().__init__(expression, **extra)
42|
43|    def as_sql(self, compiler, connection):
44|        sql, params = compiler.compile(self.lhs)
45|        lhs_output_field = self.lhs.output_field
46|        if isinstance(lhs_output_field, DateTimeField):
47|            tzname = self.get_tzname()
48|            sql = connection.ops.datetime_extract_sql(self.lookup_name, sql, tzname)
49|        elif self.tzinfo is not None:
50|            raise ValueError('tzinfo can only be used with DateTimeField.')
51|        elif isinstance(lhs_output_field, DateField):
52|            sql = connection.ops.date_extract_sql(self.lookup_name, sql)
53|        elif isinstance(lhs_output_field, TimeField):
54|            sql = connection.ops.time_extract_sql(self.lookup_name, sql)
55|        elif isinstance(lhs_output_field, DurationField):
56|            if not connection.features.has_native_duration_field:
57|                raise ValueError('Extract requires native DurationField database support.')
58|            sql = connection.ops.time_extract_sql(self.lookup_name, sql)
59|        else:
60|            # resolve_expression has already validated the output_field so this
61|            # assert should never be hit.
62|            assert False, "Tried to Extract from an invalid type."
63|        return sql, params
64|
65|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
66|        copy = super().resolve_expression(query, allow_joins, reuse, summarize, for_save)
67|        field = copy.lhs.output_field
68|        if not isinstance(field, (DateField, DateTimeField, TimeField, DurationField)):
69|            raise ValueError(
70|                'Extract input expression must be DateField, DateTimeField, '
71|                'TimeField, or DurationField.'
72|            )
73|        # Passing dates to functions expecting datetimes is most likely a mistake.
74|        if type(field) == DateField and copy.lookup_name in ('hour', 'minute', 'second'):
75|            raise ValueError(
76|                "Cannot extract time component '%s' from DateField '%s'. " % (copy.lookup_name, field.name)
77|            )
78|        if (
79|            isinstance(field, DurationField) and
80|            copy.lookup_name in ('year', 'iso_year', 'month', 'week', 'week_day', 'iso_week_day', 'quarter')
81|        ):
82|            raise ValueError(
83|                "Cannot extract component '%s' from DurationField '%s'."
84|                % (copy.lookup_name, field.name)
85|            )
86|        return copy
87|
88|
89|class ExtractYear(Extract):
90|    lookup_name = 'year'
91|
92|
93|class ExtractIsoYear(Extract):
94|    """Return the ISO-8601 week-numbering year."""
95|    lookup_name = 'iso_year'
96|
97|
98|class ExtractMonth(Extract):
99|    lookup_name = 'month'
100|
101|
102|class ExtractDay(Extract):
103|    lookup_name = 'day'
104|
105|
106|class ExtractWeek(Extract):
107|    """
108|    Return 1-52 or 53, based on ISO-8601, i.e., Monday is the first of the
109|    week.
110|    """
111|    lookup_name = 'week'
112|
113|
114|class ExtractWeekDay(Extract):
115|    """
116|    Return Sunday=1 through Saturday=7.
117|
118|    To replicate this in Python: (mydatetime.isoweekday() % 7) + 1
119|    """
120|    lookup_name = 'week_day'
121|
122|
123|class ExtractIsoWeekDay(Extract):
124|    """Return Monday=1 through Sunday=7, based on ISO-8601."""
125|    lookup_name = 'iso_week_day'
126|
127|
128|class ExtractQuarter(Extract):
129|    lookup_name = 'quarter'
130|
131|
132|class ExtractHour(Extract):
133|    lookup_name = 'hour'
134|
135|
136|class ExtractMinute(Extract):
137|    lookup_name = 'minute'
138|
139|
140|class ExtractSecond(Extract):
141|    lookup_name = 'second'
142|
143|
144|DateField.register_lookup(ExtractYear)
145|DateField.register_lookup(ExtractMonth)
146|DateField.register_lookup(ExtractDay)
147|DateField.register_lookup(ExtractWeekDay)
148|DateField.register_lookup(ExtractIsoWeekDay)
149|DateField.register_lookup(ExtractWeek)
150|DateField.register_lookup(ExtractIsoYear)
151|DateField.register_lookup(ExtractQuarter)
152|
153|TimeField.register_lookup(ExtractHour)
154|TimeField.register_lookup(ExtractMinute)
155|TimeField.register_lookup(ExtractSecond)
156|
157|DateTimeField.register_lookup(ExtractHour)
158|DateTimeField.register_lookup(ExtractMinute)
159|DateTimeField.register_lookup(ExtractSecond)
160|
161|ExtractYear.register_lookup(YearExact)
162|ExtractYear.register_lookup(YearGt)
163|ExtractYear.register_lookup(YearGte)
164|ExtractYear.register_lookup(YearLt)
165|ExtractYear.register_lookup(YearLte)
166|
167|ExtractIsoYear.register_lookup(YearExact)
168|ExtractIsoYear.register_lookup(YearGt)
169|ExtractIsoYear.register_lookup(YearGte)
170|ExtractIsoYear.register_lookup(YearLt)
171|ExtractIsoYear.register_lookup(YearLte)
172|
173|
174|class Now(Func):
175|    template = 'CURRENT_TIMESTAMP'
176|    output_field = DateTimeField()
177|
178|    def as_postgresql(self, compiler, connection, **extra_context):
179|        # PostgreSQL's CURRENT_TIMESTAMP means "the time at the start of the
180|        # transaction". Use STATEMENT_TIMESTAMP to be cross-compatible with
181|        # other databases.
182|        return self.as_sql(compiler, connection, template='STATEMENT_TIMESTAMP()', **extra_context)
183|
184|
185|class TruncBase(TimezoneMixin, Transform):
186|    kind = None
187|    tzinfo = None
188|
189|    def __init__(self, expression, output_field=None, tzinfo=None, is_dst=None, **extra):
190|        self.tzinfo = tzinfo
191|        self.is_dst = is_dst
192|        super().__init__(expression, output_field=output_field, **extra)
193|
194|    def as_sql(self, compiler, connection):
195|        inner_sql, inner_params = compiler.compile(self.lhs)
196|        tzname = None
197|        if isinstance(self.lhs.output_field, DateTimeField):
198|            tzname = self.get_tzname()
199|        elif self.tzinfo is not None:
200|            raise ValueError('tzinfo can only be used with DateTimeField.')
201|        if isinstance(self.output_field, DateTimeField):
202|            sql = connection.ops.datetime_trunc_sql(self.kind, inner_sql, tzname)
203|        elif isinstance(self.output_field, DateField):
204|            sql = connection.ops.date_trunc_sql(self.kind, inner_sql, tzname)
205|        elif isinstance(self.output_field, TimeField):
206|            sql = connection.ops.time_trunc_sql(self.kind, inner_sql, tzname)
207|        else:
208|            raise ValueError('Trunc only valid on DateField, TimeField, or DateTimeField.')
209|        return sql, inner_params
210|
211|    def resolve_expression(self, query=None, allow_joins=True, reuse=None, summarize=False, for_save=False):
212|        copy = super().resolve_expression(query, allow_joins, reuse, summarize, for_save)
213|        field = copy.lhs.output_field
214|        # DateTimeField is a subclass of DateField so this works for both.
215|        assert isinstance(field, (DateField, TimeField)), (
216|            "%r isn't a DateField, TimeField, or DateTimeField." % field.name
217|        )
218|        # If self.output_field was None, then accessing the field will trigger
219|        # the resolver to assign it to self.lhs.output_field.
220|        if not isinstance(copy.output_field, (DateField, DateTimeField, TimeField)):
221|            raise ValueError('output_field must be either DateField, TimeField, or DateTimeField')
222|        # Passing dates or times to functions expecting datetimes is most
223|        # likely a mistake.
224|        class_output_field = self.__class__.output_field if isinstance(self.__class__.output_field, Field) else None
225|        output_field = class_output_field or copy.output_field
226|        has_explicit_output_field = class_output_field or field.__class__ is not copy.output_field.__class__
227|        if type(field) == DateField and (
228|                isinstance(output_field, DateTimeField) or copy.kind in ('hour', 'minute', 'second', 'time')):
229|            raise ValueError("Cannot truncate DateField '%s' to %s. " % (
230|                field.name, output_field.__class__.__name__ if has_explicit_output_field else 'DateTimeField'
231|            ))
232|        elif isinstance(field, TimeField) and (
233|                isinstance(output_field, DateTimeField) or
234|                copy.kind in ('year', 'quarter', 'month', 'week', 'day', 'date')):
235|            raise ValueError("Cannot truncate TimeField '%s' to %s. " % (
236|                field.name, output_field.__class__.__name__ if has_explicit_output_field else 'DateTimeField'
237|            ))
238|        return copy
239|
240|    def convert_value(self, value, expression, connection):
241|        if isinstance(self.output_field, DateTimeField):
242|            if not settings.USE_TZ:
243|                pass
244|            elif value is not None:
245|                value = value.replace(tzinfo=None)
246|                value = timezone.make_aware(value, self.tzinfo, is_dst=self.is_dst)
247|            elif not connection.features.has_zoneinfo_database:
248|                raise ValueError(
249|                    'Database returned an invalid datetime value. Are time '
250|                    'zone definitions for your database installed?'
251|                )
252|        elif isinstance(value, datetime):
253|            if value is None:
254|                pass
255|            elif isinstance(self.output_field, DateField):
256|                value = value.date()
257|            elif isinstance(self.output_field, TimeField):
258|                value = value.time()
259|        return value
260|
261|
262|class Trunc(TruncBase):
263|
264|    def __init__(self, expression, kind, output_field=None, tzinfo=None, is_dst=None, **extra):
265|        self.kind = kind
266|        super().__init__(
267|            expression, output_field=output_field, tzinfo=tzinfo,
268|            is_dst=is_dst, **extra
269|        )
270|
271|
272|class TruncYear(TruncBase):
273|    kind = 'year'
274|
275|
276|class TruncQuarter(TruncBase):
277|    kind = 'quarter'
278|
279|
280|class TruncMonth(TruncBase):
281|    kind = 'month'
282|
283|
284|class TruncWeek(TruncBase):
285|    """Truncate to midnight on the Monday of the week."""
286|    kind = 'week'
287|
288|
289|class TruncDay(TruncBase):
290|    kind = 'day'
291|
292|
293|class TruncDate(TruncBase):
294|    kind = 'date'
295|    lookup_name = 'date'
296|    output_field = DateField()
297|
298|    def as_sql(self, compiler, connection):
299|        # Cast to date rather than truncate to date.
300|        lhs, lhs_params = compiler.compile(self.lhs)
301|        tzname = self.get_tzname()
302|        sql = connection.ops.datetime_cast_date_sql(lhs, tzname)
303|        return sql, lhs_params
304|
305|
306|class TruncTime(TruncBase):
307|    kind = 'time'
308|    lookup_name = 'time'
309|    output_field = TimeField()
310|
311|    def as_sql(self, compiler, connection):
312|        # Cast to time rather than truncate to time.
313|        lhs, lhs_params = compiler.compile(self.lhs)
314|        tzname = self.get_tzname()
315|        sql = connection.ops.datetime_cast_time_sql(lhs, tzname)
316|        return sql, lhs_params
317|
318|
319|class TruncHour(TruncBase):
320|    kind = 'hour'
321|
322|
323|class TruncMinute(TruncBase):
324|    kind = 'minute'
325|
326|
327|class TruncSecond(TruncBase):
328|    kind = 'second'
329|
330|
331|DateTimeField.register_lookup(TruncDate)
332|DateTimeField.register_lookup(TruncTime)


============================================================



ACTION:

THOUGHT: Let me also check the database lookup registrations:
CODE:
open_file('/workspace/django__django__4.0/django/db/models/fields/__init__.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/fields/__init__.py (2554 lines total)]
1|import collections.abc
2|import copy
3|import datetime
4|import decimal
5|import operator
6|import uuid
7|import warnings
8|from base64 import b64decode, b64encode
9|from functools import partialmethod, total_ordering
10|
11|from django import forms
12|from django.apps import apps
13|from django.conf import settings
14|from django.core import checks, exceptions, validators
15|from django.db import connection, connections, router
16|from django.db.models.constants import LOOKUP_SEP
17|from django.db.models.query_utils import DeferredAttribute, RegisterLookupMixin
18|from django.utils import timezone
19|from django.utils.datastructures import DictWrapper
20|from django.utils.dateparse import (
21|    parse_date, parse_datetime, parse_duration, parse_time,
22|)
23|from django.utils.duration import duration_microseconds, duration_string
24|from django.utils.functional import Promise, cached_property
25|from django.utils.ipv6 import clean_ipv6_address
26|from django.utils.itercompat import is_iterable
27|from django.utils.text import capfirst
28|from django.utils.translation import gettext_lazy as _
29|
30|__all__ = [
31|    'AutoField', 'BLANK_CHOICE_DASH', 'BigAutoField', 'BigIntegerField',
32|    'BinaryField', 'BooleanField', 'CharField', 'CommaSeparatedIntegerField',
33|    'DateField', 'DateTimeField', 'DecimalField', 'DurationField',
34|    'EmailField', 'Empty', 'Field', 'FilePathField', 'FloatField',
35|    'GenericIPAddressField', 'IPAddressField', 'IntegerField', 'NOT_PROVIDED',
36|    'NullBooleanField', 'PositiveBigIntegerField', 'PositiveIntegerField',
37|    'PositiveSmallIntegerField', 'SlugField', 'SmallAutoField',
38|    'SmallIntegerField', 'TextField', 'TimeField', 'URLField', 'UUIDField',
39|]
40|
41|
42|class Empty:
43|    pass
44|
45|
46|class NOT_PROVIDED:
47|    pass
48|
49|
50|# The values to use for "blank" in SelectFields. Will be appended to the start
51|# of most "choices" lists.
52|BLANK_CHOICE_DASH = [("", "---------")]
53|
54|
55|def _load_field(app_label, model_name, field_name):
56|    return apps.get_model(app_label, model_name)._meta.get_field(field_name)
57|
58|
59|# A guide to Field parameters:
60|#
61|#   * name:      The name of the field specified in the model.
62|#   * attname:   The attribute to use on the model object. This is the same as
63|#                "name", except in the case of ForeignKeys, where "_id" is
64|#                appended.
65|#   * db_column: The db_column specified in the model (or None).
66|#   * column:    The database column for this field. This is the same as
67|#                "attname", except if db_column is specified.
68|#
69|# Code that introspects values, or does other dynamic things, should use
70|# attname. For example, this gets the primary key value of object "obj":
71|#
72|#     getattr(obj, opts.pk.attname)
73|
74|def _empty(of_cls):
75|    new = Empty()
76|    new.__class__ = of_cls
77|    return new
78|
79|
80|def return_None():
81|    return None
82|
83|
84|@total_ordering
85|class Field(RegisterLookupMixin):
86|    """Base class for all field types"""
87|
88|    # Designates whether empty strings fundamentally are allowed at the
89|    # database level.
90|    empty_strings_allowed = True
91|    empty_values = list(validators.EMPTY_VALUES)
92|
93|    # These track each time a Field instance is created. Used to retain order.
94|    # The auto_creation_counter is used for fields that Django implicitly
95|    # creates, creation_counter is used for all user-specified fields.
96|    creation_counter = 0
97|    auto_creation_counter = -1
98|    default_validators = []  # Default set of validators
99|    default_error_messages = {
100|        'invalid_choice': _('Value %(value)r is not a valid choice.'),
101|        'null': _('This field cannot be null.'),
102|        'blank': _('This field cannot be blank.'),
103|        'unique': _('%(model_name)s with this %(field_label)s '
104|                    'already exists.'),
105|        # Translators: The 'lookup_type' is one of 'date', 'year' or 'month'.
106|        # Eg: "Title must be unique for pub_date year"
107|        'unique_for_date': _("%(field_label)s must be unique for "
108|                             "%(date_field_label)s %(lookup_type)s."),
109|    }
110|    system_check_deprecated_details = None
111|    system_check_removed_details = None
112|
113|    # Field flags
114|    hidden = False
115|
116|    many_to_many = None
117|    many_to_one = None
118|    one_to_many = None
119|    one_to_one = None
120|    related_model = None
121|
122|    descriptor_class = DeferredAttribute
123|
124|    # Generic field type description, usually overridden by subclasses
125|    def _description(self):
126|        return _('Field of type: %(field_type)s') % {
127|            'field_type': self.__class__.__name__
128|        }
129|    description = property(_description)
130|
131|    def __init__(self, verbose_name=None, name=None, primary_key=False,
132|                 max_length=None, unique=False, blank=False, null=False,
133|                 db_index=False, rel=None, default=NOT_PROVIDED, editable=True,
134|                 serialize=True, unique_for_date=None, unique_for_month=None,
135|                 unique_for_year=None, choices=None, help_text='', db_column=None,
136|                 db_tablespace=None, auto_created=False, validators=(),
137|                 error_messages=None):
138|        self.name = name
139|        self.verbose_name = verbose_name  # May be set by set_attributes_from_name
140|        self._verbose_name = verbose_name  # Store original for deconstruction
141|        self.primary_key = primary_key
142|        self.max_length, self._unique = max_length, unique
143|        self.blank, self.null = blank, null
144|        self.remote_field = rel
145|        self.is_relation = self.remote_field is not None
146|        self.default = default
147|        self.editable = editable
148|        self.serialize = serialize
149|        self.unique_for_date = unique_for_date
150|        self.unique_for_month = unique_for_month
151|        self.unique_for_year = unique_for_year
152|        if isinstance(choices, collections.abc.Iterator):
153|            choices = list(choices)
154|        self.choices = choices
155|        self.help_text = help_text
156|        self.db_index = db_index
157|        self.db_column = db_column
158|        self._db_tablespace = db_tablespace
159|        self.auto_created = auto_created
160|
161|        # Adjust the appropriate creation counter, and save our local copy.
162|        if auto_created:
163|            self.creation_counter = Field.auto_creation_counter
164|            Field.auto_creation_counter -= 1
165|        else:
166|            self.creation_counter = Field.creation_counter
167|            Field.creation_counter += 1
168|
169|        self._validators = list(validators)  # Store for deconstruction later
170|
171|        messages = {}
172|        for c in reversed(self.__class__.__mro__):
173|            messages.update(getattr(c, 'default_error_messages', {}))
174|        messages.update(error_messages or {})
175|        self._error_messages = error_messages  # Store for deconstruction later
176|        self.error_messages = messages
177|
178|    def __str__(self):
179|        """
180|        Return "app_label.model_label.field_name" for fields attached to
181|        models.
182|        """
183|        if not hasattr(self, 'model'):
184|            return super().__str__()
185|        model = self.model
186|        return '%s.%s' % (model._meta.label, self.name)
187|
188|    def __repr__(self):
189|        """Display the module, class, and name of the field."""
190|        path = '%s.%s' % (self.__class__.__module__, self.__class__.__qualname__)
191|        name = getattr(self, 'name', None)
192|        if name is not None:
193|            return '<%s: %s>' % (path, name)
194|        return '<%s>' % path
195|
196|    def check(self, **kwargs):
197|        return [
198|            *self._check_field_name(),
199|            *self._check_choices(),
200|            *self._check_db_index(),
201|            *self._check_null_allowed_for_primary_keys(),
202|            *self._check_backend_specific_checks(**kwargs),
203|            *self._check_validators(),
204|            *self._check_deprecation_details(),
205|        ]
206|
207|    def _check_field_name(self):
208|        """
209|        Check if field name is valid, i.e. 1) does not end with an
210|        underscore, 2) does not contain "__" and 3) is not "pk".
211|        """
212|        if self.name.endswith('_'):
213|            return [
214|                checks.Error(
215|                    'Field names must not end with an underscore.',
216|                    obj=self,
217|                    id='fields.E001',
218|                )
219|            ]
220|        elif LOOKUP_SEP in self.name:
221|            return [
222|                checks.Error(
223|                    'Field names must not contain "%s".' % LOOKUP_SEP,
224|                    obj=self,
225|                    id='fields.E002',
226|                )
227|            ]
228|        elif self.name == 'pk':
229|            return [
230|                checks.Error(
231|                    "'pk' is a reserved word that cannot be used as a field name.",
232|                    obj=self,
233|                    id='fields.E003',
234|                )
235|            ]
236|        else:
237|            return []
238|
239|    @classmethod
240|    def _choices_is_value(cls, value):
241|        return isinstance(value, (str, Promise)) or not is_iterable(value)
242|
243|    def _check_choices(self):
244|        if not self.choices:
245|            return []
246|
247|        if not is_iterable(self.choices) or isinstance(self.choices, str):
248|            return [
249|                checks.Error(
250|                    "'choices' must be an iterable (e.g., a list or tuple).",
251|                    obj=self,
252|                    id='fields.E004',
253|                )
254|            ]
255|
256|        choice_max_length = 0
257|        # Expect [group_name, [value, display]]
258|        for choices_group in self.choices:
259|            try:
260|                group_name, group_choices = choices_group
261|            except (TypeError, ValueError):
262|                # Containing non-pairs
263|                break
264|            try:
265|                if not all(
266|                    self._choices_is_value(value) and self._choices_is_value(human_name)
267|                    for value, human_name in group_choices
268|                ):
269|                    break
270|                if self.max_length is not None and group_choices:
271|                    choice_max_length = max([
272|                        choice_max_length,
273|                        *(len(value) for value, _ in group_choices if isinstance(value, str)),
274|                    ])
275|            except (TypeError, ValueError):
276|                # No groups, choices in the form [value, display]
277|                value, human_name = group_name, group_choices
278|                if not self._choices_is_value(value) or not self._choices_is_value(human_name):
279|                    break
280|                if self.max_length is not None and isinstance(value, str):
281|                    choice_max_length = max(choice_max_length, len(value))
282|
283|            # Special case: choices=['ab']
284|            if isinstance(choices_group, str):
285|                break
286|        else:
287|            if self.max_length is not None and choice_max_length > self.max_length:
288|                return [
289|                    checks.Error(
290|                        "'max_length' is too small to fit the longest value "
291|                        "in 'choices' (%d characters)." % choice_max_length,
292|                        obj=self,
293|                        id='fields.E009',
294|                    ),
295|                ]
296|            return []
297|
298|        return [
299|            checks.Error(
300|                "'choices' must be an iterable containing "
301|                "(actual value, human readable name) tuples.",
302|                obj=self,
303|                id='fields.E005',
304|            )
305|        ]
306|
307|    def _check_db_index(self):
308|        if self.db_index not in (None, True, False):
309|            return [
310|                checks.Error(
311|                    "'db_index' must be None, True or False.",
312|                    obj=self,
313|                    id='fields.E006',
314|                )
315|            ]
316|        else:
317|            return []
318|
319|    def _check_null_allowed_for_primary_keys(self):
320|        if (self.primary_key and self.null and
321|                not connection.features.interprets_empty_strings_as_nulls):
322|            # We cannot reliably check this for backends like Oracle which
323|            # consider NULL and '' to be equal (and thus set up
324|            # character-based fields a little differently).
325|            return [
326|                checks.Error(
327|                    'Primary keys must not have null=True.',
328|                    hint=('Set null=False on the field, or '
329|                          'remove primary_key=True argument.'),
330|                    obj=self,
331|                    id='fields.E007',
332|                )
333|            ]
334|        else:
335|            return []
336|
337|    def _check_backend_specific_checks(self, databases=None, **kwargs):
338|        if databases is None:
339|            return []
340|        app_label = self.model._meta.app_label
341|        errors = []
342|        for alias in databases:
343|            if router.allow_migrate(alias, app_label, model_name=self.model._meta.model_name):
344|                errors.extend(connections[alias].validation.check_field(self, **kwargs))
345|        return errors
346|
347|    def _check_validators(self):
348|        errors = []
349|        for i, validator in enumerate(self.validators):
350|            if not callable(validator):
351|                errors.append(
352|                    checks.Error(
353|                        "All 'validators' must be callable.",
354|                        hint=(
355|                            "validators[{i}] ({repr}) isn't a function or "
356|                            "instance of a validator class.".format(
357|                                i=i, repr=repr(validator),
358|                            )
359|                        ),
360|                        obj=self,
361|                        id='fields.E008',
362|                    )
363|                )
364|        return errors
365|
366|    def _check_deprecation_details(self):
367|        if self.system_check_removed_details is not None:
368|            return [
369|                checks.Error(
370|                    self.system_check_removed_details.get(
371|                        'msg',
372|                        '%s has been removed except for support in historical '
373|                        'migrations.' % self.__class__.__name__
374|                    ),
375|                    hint=self.system_check_removed_details.get('hint'),
376|                    obj=self,
377|                    id=self.system_check_removed_details.get('id', 'fields.EXXX'),
378|                )
379|            ]
380|        elif self.system_check_deprecated_details is not None:
381|            return [
382|                checks.Warning(
383|                    self.system_check_deprecated_details.get(
384|                        'msg',
385|                        '%s has been deprecated.' % self.__class__.__name__
386|                    ),
387|                    hint=self.system_check_deprecated_details.get('hint'),
388|                    obj=self,
389|                    id=self.system_check_deprecated_details.get('id', 'fields.WXXX'),
390|                )
391|            ]
392|        return []
393|
394|    def get_col(self, alias, output_field=None):
395|        if output_field is None:
396|            output_field = self
397|        if alias != self.model._meta.db_table or output_field != self:
398|            from django.db.models.expressions import Col
399|            return Col(alias, self, output_field)
400|        else:
401|            return self.cached_col
402|
403|    @cached_property
404|    def cached_col(self):
405|        from django.db.models.expressions import Col
406|        return Col(self.model._meta.db_table, self)
407|
408|    def select_format(self, compiler, sql, params):
409|        """
410|        Custom format for select clauses. For example, GIS columns need to be
411|        selected as AsText(table.col) on MySQL as the table.col data can't be
412|        used by Django.
413|        """
414|        return sql, params
415|
416|    def deconstruct(self):
417|        """
418|        Return enough information to recreate the field as a 4-tuple:
419|
420|         * The name of the field on the model, if contribute_to_class() has
421|           been run.
422|         * The import path of the field, including the class:e.g.
423|           django.db.models.IntegerField This should be the most portable
424|           version, so less specific may be better.
425|         * A list of positional arguments.
426|         * A dict of keyword arguments.
427|
428|        Note that the positional or keyword arguments must contain values of
429|        the following types (including inner values of collection types):
430|
431|         * None, bool, str, int, float, complex, set, frozenset, list, tuple,
432|           dict
433|         * UUID
434|         * datetime.datetime (naive), datetime.date
435|         * top-level classes, top-level functions - will be referenced by their
436|           full import path
437|         * Storage instances - these have their own deconstruct() method
438|
439|        This is because the values here must be serialized into a text format
440|        (possibly new Python code, possibly JSON) and these are the only types
441|        with encoding handlers defined.
442|
443|        There's no need to return the exact way the field was instantiated this
444|        time, just ensure that the resulting field is the same - prefer keyword
445|        arguments over positional ones, and omit parameters with their default
446|        values.
447|        """
448|        # Short-form way of fetching all the default parameters
449|        keywords = {}
450|        possibles = {
451|            "verbose_name": None,
452|            "primary_key": False,
453|            "max_length": None,
454|            "unique": False,
455|            "blank": False,
456|            "null": False,
457|            "db_index": False,
458|            "default": NOT_PROVIDED,
459|            "editable": True,
460|            "serialize": True,
461|            "unique_for_date": None,
462|            "unique_for_month": None,
463|            "unique_for_year": None,
464|            "choices": None,
465|            "help_text": '',
466|            "db_column": None,
467|            "db_tablespace": None,
468|            "auto_created": False,
469|            "validators": [],
470|            "error_messages": None,
471|        }
472|        attr_overrides = {
473|            "unique": "_unique",
474|            "error_messages": "_error_messages",
475|            "validators": "_validators",
476|            "verbose_name": "_verbose_name",
477|            "db_tablespace": "_db_tablespace",
478|        }
479|        equals_comparison = {"choices", "validators"}
480|        for name, default in possibles.items():
481|            value = getattr(self, attr_overrides.get(name, name))
482|            # Unroll anything iterable for choices into a concrete list
483|            if name == "choices" and isinstance(value, collections.abc.Iterable):
484|                value = list(value)
485|            # Do correct kind of comparison
486|            if name in equals_comparison:
487|                if value != default:
488|                    keywords[name] = value
489|            else:
490|                if value is not default:
491|                    keywords[name] = value
492|        # Work out path - we shorten it for known Django core fields
493|        path = "%s.%s" % (self.__class__.__module__, self.__class__.__qualname__)
494|        if path.startswith("django.db.models.fields.related"):
495|            path = path.replace("django.db.models.fields.related", "django.db.models")
496|        elif path.startswith("django.db.models.fields.files"):
497|            path = path.replace("django.db.models.fields.files", "django.db.models")
498|        elif path.startswith('django.db.models.fields.json'):
499|            path = path.replace('django.db.models.fields.json', 'django.db.models')
500|        elif path.startswith("django.db.models.fields.proxy"):
501|            path = path.replace("django.db.models.fields.proxy", "django.db.models")
502|        elif path.startswith("django.db.models.fields"):
503|            path = path.replace("django.db.models.fields", "django.db.models")
504|        # Return basic info - other fields should override this.
505|        return (self.name, path, [], keywords)
506|
507|    def clone(self):
508|        """
509|        Uses deconstruct() to clone a new copy of this Field.
510|        Will not preserve any class attachments/attribute names.
511|        """
512|        name, path, args, kwargs = self.deconstruct()
513|        return self.__class__(*args, **kwargs)
514|
515|    def __eq__(self, other):
516|        # Needed for @total_ordering
517|        if isinstance(other, Field):
518|            return (
519|                self.creation_counter == other.creation_counter and
520|                getattr(self, 'model', None) == getattr(other, 'model', None)
521|            )
522|        return NotImplemented
523|
524|    def __lt__(self, other):
525|        # This is needed because bisect does not take a comparison function.
526|        # Order by creation_counter first for backward compatibility.
527|        if isinstance(other, Field):
528|            if (
529|                self.creation_counter != other.creation_counter or
530|                not hasattr(self, 'model') and not hasattr(other, 'model')
531|            ):
532|                return self.creation_counter < other.creation_counter
533|            elif hasattr(self, 'model') != hasattr(other, 'model'):
534|                return not hasattr(self, 'model')  # Order no-model fields first
535|            else:
536|                # creation_counter's are equal, compare only models.
537|                return (
538|                    (self.model._meta.app_label, self.model._meta.model_name) <
539|                    (other.model._meta.app_label, other.model._meta.model_name)
540|                )
541|        return NotImplemented
542|
543|    def __hash__(self):
544|        return hash((
545|            self.creation_counter,
546|            self.model._meta.app_label if hasattr(self, 'model') else None,
547|            self.model._meta.model_name if hasattr(self, 'model') else None,
548|        ))
549|
550|    def __deepcopy__(self, memodict):
551|        # We don't have to deepcopy very much here, since most things are not
552|        # intended to be altered after initial creation.
553|        obj = copy.copy(self)
554|        if self.remote_field:
555|            obj.remote_field = copy.copy(self.remote_field)
556|            if hasattr(self.remote_field, 'field') and self.remote_field.field is self:
557|                obj.remote_field.field = obj
558|        memodict[id(self)] = obj
559|        return obj
560|
561|    def __copy__(self):
562|        # We need to avoid hitting __reduce__, so define this
563|        # slightly weird copy construct.
564|        obj = Empty()
565|        obj.__class__ = self.__class__
566|        obj.__dict__ = self.__dict__.copy()
567|        return obj
568|
569|    def __reduce__(self):
570|        """
571|        Pickling should return the model._meta.fields instance of the field,
572|        not a new copy of that field. So, use the app registry to load the
573|        model and then the field back.
574|        """
575|        if not hasattr(self, 'model'):
576|            # Fields are sometimes used without attaching them to models (for
577|            # example in aggregation). In this case give back a plain field
578|            # instance. The code below will create a new empty instance of
579|            # class self.__class__, then update its dict with self.__dict__
580|            # values - so, this is very close to normal pickle.
581|            state = self.__dict__.copy()
582|            # The _get_default cached_property can't be pickled due to lambda
583|            # usage.
584|            state.pop('_get_default', None)
585|            return _empty, (self.__class__,), state
586|        return _load_field, (self.model._meta.app_label, self.model._meta.object_name,
587|                             self.name)
588|
589|    def get_pk_value_on_save(self, instance):
590|        """
591|        Hook to generate new PK values on save. This method is called when
592|        saving instances with no primary key value set. If this method returns
593|        something else than None, then the returned value is used when saving
594|        the new instance.
595|        """
596|        if self.default:
597|            return self.get_default()
598|        return None
599|
600|    def to_python(self, value):
601|        """
602|        Convert the input value into the expected Python data type, raising
603|        django.core.exceptions.ValidationError if the data can't be converted.
604|        Return the converted value. Subclasses should override this.
605|        """
606|        return value
607|
608|    @cached_property
609|    def validators(self):
610|        """
611|        Some validators can't be created at field initialization time.
612|        This method provides a way to delay their creation until required.
613|        """
614|        return [*self.default_validators, *self._validators]
615|
616|    def run_validators(self, value):
617|        if value in self.empty_values:
618|            return
619|
620|        errors = []
621|        for v in self.validators:
622|            try:
623|                v(value)
624|            except exceptions.ValidationError as e:
625|                if hasattr(e, 'code') and e.code in self.error_messages:
626|                    e.message = self.error_messages[e.code]
627|                errors.extend(e.error_list)
628|
629|        if errors:
630|            raise exceptions.ValidationError(errors)
631|
632|    def validate(self, value, model_instance):
633|        """
634|        Validate value and raise ValidationError if necessary. Subclasses
635|        should override this to provide validation logic.
636|        """
637|        if not self.editable:
638|            # Skip validation for non-editable fields.
639|            return
640|
641|        if self.choices is not None and value not in self.empty_values:
642|            for option_key, option_value in self.choices:
643|                if isinstance(option_value, (list, tuple)):
644|                    # This is an optgroup, so look inside the group for
645|                    # options.
646|                    for optgroup_key, optgroup_value in option_value:
647|                        if value == optgroup_key:
648|                            return
649|                elif value == option_key:
650|                    return
651|            raise exceptions.ValidationError(
652|                self.error_messages['invalid_choice'],
653|                code='invalid_choice',
654|                params={'value': value},
655|            )
656|
657|        if value is None and not self.null:
658|            raise exceptions.ValidationError(self.error_messages['null'], code='null')
659|
660|        if not self.blank and value in self.empty_values:
661|            raise exceptions.ValidationError(self.error_messages['blank'], code='blank')
662|
663|    def clean(self, value, model_instance):
664|        """
665|        Convert the value's type and run validation. Validation errors
666|        from to_python() and validate() are propagated. Return the correct
667|        value if no error is raised.
668|        """
669|        value = self.to_python(value)
670|        self.validate(value, model_instance)
671|        self.run_validators(value)
672|        return value
673|
674|    def db_type_parameters(self, connection):
675|        return DictWrapper(self.__dict__, connection.ops.quote_name, 'qn_')
676|
677|    def db_check(self, connection):
678|        """
679|        Return the database column check constraint for this field, for the
680|        provided connection. Works the same way as db_type() for the case that
681|        get_internal_type() does not map to a preexisting model field.
682|        """
683|        data = self.db_type_parameters(connection)
684|        try:
685|            return connection.data_type_check_constraints[self.get_internal_type()] % data
686|        except KeyError:
687|            return None
688|
689|    def db_type(self, connection):
690|        """
691|        Return the database column data type for this field, for the provided
692|        connection.
693|        """
694|        # The default implementation of this method looks at the
695|        # backend-specific data_types dictionary, looking up the field by its
696|        # "internal type".
697|        #
698|        # A Field class can implement the get_internal_type() method to specify
699|        # which *preexisting* Django Field class it's most similar to -- i.e.,
700|        # a custom field might be represented by a TEXT column type, which is
701|        # the same as the TextField Django field type, which means the custom
702|        # field's get_internal_type() returns 'TextField'.
703|        #
704|        # But the limitation of the get_internal_type() / data_types approach
705|        # is that it cannot handle database column types that aren't already
706|        # mapped to one of the built-in Django field types. In this case, you
707|        # can implement db_type() instead of get_internal_type() to specify
708|        # exactly which wacky database column type you want to use.
709|        data = self.db_type_parameters(connection)
710|        try:
711|            return connection.data_types[self.get_internal_type()] % data
712|        except KeyError:
713|            return None
714|
715|    def rel_db_type(self, connection):
716|        """
717|        Return the data type that a related field pointing to this field should
718|        use. For example, this method is called by ForeignKey and OneToOneField
719|        to determine its data type.
720|        """
721|        return self.db_type(connection)
722|
723|    def cast_db_type(self, connection):
724|        """Return the data type to use in the Cast() function."""
725|        db_type = connection.ops.cast_data_types.get(self.get_internal_type())
726|        if db_type:
727|            return db_type % self.db_type_parameters(connection)
728|        return self.db_type(connection)
729|
730|    def db_parameters(self, connection):
731|        """
732|        Extension of db_type(), providing a range of different return values
733|        (type, checks). This will look at db_type(), allowing custom model
734|        fields to override it.
735|        """
736|        type_string = self.db_type(connection)
737|        check_string = self.db_check(connection)
738|        return {
739|            "type": type_string,
740|            "check": check_string,
741|        }
742|
743|    def db_type_suffix(self, connection):
744|        return connection.data_types_suffix.get(self.get_internal_type())
745|
746|    def get_db_converters(self, connection):
747|        if hasattr(self, 'from_db_value'):
748|            return [self.from_db_value]
749|        return []
750|
751|    @property
752|    def unique(self):
753|        return self._unique or self.primary_key
754|
755|    @property
756|    def db_tablespace(self):
757|        return self._db_tablespace or settings.DEFAULT_INDEX_TABLESPACE
758|
759|    @property
760|    def db_returning(self):
761|        """
762|        Private API intended only to be used by Django itself. Currently only
763|        the PostgreSQL backend supports returning multiple fields on a model.
764|        """
765|        return False
766|
767|    def set_attributes_from_name(self, name):
768|        self.name = self.name or name
769|        self.attname, self.column = self.get_attname_column()
770|        self.concrete = self.column is not None
771|        if self.verbose_name is None and self.name:
772|            self.verbose_name = self.name.replace('_', ' ')
773|
774|    def contribute_to_class(self, cls, name, private_only=False):
775|        """
776|        Register the field with the model class it belongs to.
777|
778|        If private_only is True, create a separate instance of this field
779|        for every subclass of cls, even if cls is not an abstract model.
780|        """
781|        self.set_attributes_from_name(name)
782|        self.model = cls
783|        cls._meta.add_field(self, private=private_only)
784|        if self.column:
785|            # Don't override classmethods with the descriptor. This means that
786|            # if you have a classmethod and a field with the same name, then
787|            # such fields can't be deferred (we don't have a check for this).
788|            if not getattr(cls, self.attname, None):
789|                setattr(cls, self.attname, self.descriptor_class(self))
790|        if self.choices is not None:
791|            # Don't override a get_FOO_display() method defined explicitly on
792|            # this class, but don't check methods derived from inheritance, to
793|            # allow overriding inherited choices. For more complex inheritance
794|            # structures users should override contribute_to_class().
795|            if 'get_%s_display' % self.name not in cls.__dict__:
796|                setattr(
797|                    cls,
798|                    'get_%s_display' % self.name,
799|                    partialmethod(cls._get_FIELD_display, field=self),
800|                )
801|
802|    def get_filter_kwargs_for_object(self, obj):
803|        """
804|        Return a dict that when passed as kwargs to self.model.filter(), would
805|        yield all instances having the same value for this field as obj has.
806|        """
807|        return {self.name: getattr(obj, self.attname)}
808|
809|    def get_attname(self):
810|        return self.name
811|
812|    def get_attname_column(self):
813|        attname = self.get_attname()
814|        column = self.db_column or attname
815|        return attname, column
816|
817|    def get_internal_type(self):
818|        return self.__class__.__name__
819|
820|    def pre_save(self, model_instance, add):
821|        """Return field's value just before saving."""
822|        return getattr(model_instance, self.attname)
823|
824|    def get_prep_value(self, value):
825|        """Perform preliminary non-db specific value checks and conversions."""
826|        if isinstance(value, Promise):
827|            value = value._proxy____cast()
828|        return value
829|
830|    def get_db_prep_value(self, value, connection, prepared=False):
831|        """
832|        Return field's value prepared for interacting with the database backend.
833|
834|        Used by the default implementations of get_db_prep_save().
835|        """
836|        if not prepared:
837|            value = self.get_prep_value(value)
838|        return value
839|
840|    def get_db_prep_save(self, value, connection):
841|        """Return field's value prepared for saving into a database."""
842|        return self.get_db_prep_value(value, connection=connection, prepared=False)
843|
844|    def has_default(self):
845|        """Return a boolean of whether this field has a default value."""
846|        return self.default is not NOT_PROVIDED
847|
848|    def get_default(self):
849|        """Return the default value for this field."""
850|        return self._get_default()
851|
852|    @cached_property
853|    def _get_default(self):
854|        if self.has_default():
855|            if callable(self.default):
856|                return self.default
857|            return lambda: self.default
858|
859|        if not self.empty_strings_allowed or self.null and not connection.features.interprets_empty_strings_as_nulls:
860|            return return_None
861|        return str  # return empty string
862|
863|    def get_choices(self, include_blank=True, blank_choice=BLANK_CHOICE_DASH, limit_choices_to=None, ordering=()):
864|        """
865|        Return choices with a default blank choices included, for use
866|        as <select> choices for this field.
867|        """
868|        if self.choices is not None:
869|            choices = list(self.choices)
870|            if include_blank:
871|                blank_defined = any(choice in ('', None) for choice, _ in self.flatchoices)
872|                if not blank_defined:
873|                    choices = blank_choice + choices
874|            return choices
875|        rel_model = self.remote_field.model
876|        limit_choices_to = limit_choices_to or self.get_limit_choices_to()
877|        choice_func = operator.attrgetter(
878|            self.remote_field.get_related_field().attname
879|            if hasattr(self.remote_field, 'get_related_field')
880|            else 'pk'
881|        )
882|        qs = rel_model._default_manager.complex_filter(limit_choices_to)
883|        if ordering:
884|            qs = qs.order_by(*ordering)
885|        return (blank_choice if include_blank else []) + [
886|            (choice_func(x), str(x)) for x in qs
887|        ]
888|
889|    def value_to_string(self, obj):
890|        """
891|        Return a string value of this field from the passed obj.
892|        This is used by the serialization framework.
893|        """
894|        return str(self.value_from_object(obj))
895|
896|    def _get_flatchoices(self):
897|        """Flattened version of choices tuple."""
898|        if self.choices is None:
899|            return []
900|        flat = []
901|        for choice, value in self.choices:
902|            if isinstance(value, (list, tuple)):
903|                flat.extend(value)
904|            else:
905|                flat.append((choice, value))
906|        return flat
907|    flatchoices = property(_get_flatchoices)
908|
909|    def save_form_data(self, instance, data):
910|        setattr(instance, self.name, data)
911|
912|    def formfield(self, form_class=None, choices_form_class=None, **kwargs):
913|        """Return a django.forms.Field instance for this field."""
914|        defaults = {
915|            'required': not self.blank,
916|            'label': capfirst(self.verbose_name),
917|            'help_text': self.help_text,
918|        }
919|        if self.has_default():
920|            if callable(self.default):
921|                defaults['initial'] = self.default
922|                defaults['show_hidden_initial'] = True
923|            else:
924|                defaults['initial'] = self.get_default()
925|        if self.choices is not None:
926|            # Fields with choices get special treatment.
927|            include_blank = (self.blank or
928|                             not (self.has_default() or 'initial' in kwargs))
929|            defaults['choices'] = self.get_choices(include_blank=include_blank)
930|            defaults['coerce'] = self.to_python
931|            if self.null:
932|                defaults['empty_value'] = None
933|            if choices_form_class is not None:
934|                form_class = choices_form_class
935|            else:
936|                form_class = forms.TypedChoiceField
937|            # Many of the subclass-specific formfield arguments (min_value,
938|            # max_value) don't apply for choice fields, so be sure to only pass
939|            # the values that TypedChoiceField will understand.
940|            for k in list(kwargs):
941|                if k not in ('coerce', 'empty_value', 'choices', 'required',
942|                             'widget', 'label', 'initial', 'help_text',
943|                             'error_messages', 'show_hidden_initial', 'disabled'):
944|                    del kwargs[k]
945|        defaults.update(kwargs)
946|        if form_class is None:
947|            form_class = forms.CharField
948|        return form_class(**defaults)
949|
950|    def value_from_object(self, obj):
951|        """Return the value of this field in the given model instance."""
952|        return getattr(obj, self.attname)
953|
954|
955|class BooleanField(Field):
956|    empty_strings_allowed = False
957|    default_error_messages = {
958|        'invalid': _('“%(value)s” value must be either True or False.'),
959|        'invalid_nullable': _('“%(value)s” value must be either True, False, or None.'),
960|    }
961|    description = _("Boolean (Either True or False)")
962|
963|    def get_internal_type(self):
964|        return "BooleanField"
965|
966|    def to_python(self, value):
967|        if self.null and value in self.empty_values:
968|            return None
969|        if value in (True, False):
970|            # 1/0 are equal to True/False. bool() converts former to latter.
971|            return bool(value)
972|        if value in ('t', 'True', '1'):
973|            return True
974|        if value in ('f', 'False', '0'):
975|            return False
976|        raise exceptions.ValidationError(
977|            self.error_messages['invalid_nullable' if self.null else 'invalid'],
978|            code='invalid',
979|            params={'value': value},
980|        )
981|
982|    def get_prep_value(self, value):
983|        value = super().get_prep_value(value)
984|        if value is None:
985|            return None
986|        return self.to_python(value)
987|
988|    def formfield(self, **kwargs):
989|        if self.choices is not None:
990|            include_blank = not (self.has_default() or 'initial' in kwargs)
991|            defaults = {'choices': self.get_choices(include_blank=include_blank)}
992|        else:
993|            form_class = forms.NullBooleanField if self.null else forms.BooleanField
994|            # In HTML checkboxes, 'required' means "must be checked" which is
995|            # different from the choices case ("must select some value").
996|            # required=False allows unchecked checkboxes.
997|            defaults = {'form_class': form_class, 'required': False}
998|        return super().formfield(**{**defaults, **kwargs})
999|
1000|
(1554 more lines below)


============================================================



ACTION:

THOUGHT: Let me check the database backend operations since the issue involves SQL generation:
CODE:
open_file('/workspace/django__django__4.0/django/db/backends/base/operations.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/backends/base/operations.py (693 lines total)]
1|import datetime
2|import decimal
3|from importlib import import_module
4|
5|import sqlparse
6|
7|from django.conf import settings
8|from django.db import NotSupportedError, transaction
9|from django.db.backends import utils
10|from django.utils import timezone
11|from django.utils.encoding import force_str
12|
13|
14|class BaseDatabaseOperations:
15|    """
16|    Encapsulate backend-specific differences, such as the way a backend
17|    performs ordering or calculates the ID of a recently-inserted row.
18|    """
19|    compiler_module = "django.db.models.sql.compiler"
20|
21|    # Integer field safe ranges by `internal_type` as documented
22|    # in docs/ref/models/fields.txt.
23|    integer_field_ranges = {
24|        'SmallIntegerField': (-32768, 32767),
25|        'IntegerField': (-2147483648, 2147483647),
26|        'BigIntegerField': (-9223372036854775808, 9223372036854775807),
27|        'PositiveBigIntegerField': (0, 9223372036854775807),
28|        'PositiveSmallIntegerField': (0, 32767),
29|        'PositiveIntegerField': (0, 2147483647),
30|        'SmallAutoField': (-32768, 32767),
31|        'AutoField': (-2147483648, 2147483647),
32|        'BigAutoField': (-9223372036854775808, 9223372036854775807),
33|    }
34|    set_operators = {
35|        'union': 'UNION',
36|        'intersection': 'INTERSECT',
37|        'difference': 'EXCEPT',
38|    }
39|    # Mapping of Field.get_internal_type() (typically the model field's class
40|    # name) to the data type to use for the Cast() function, if different from
41|    # DatabaseWrapper.data_types.
42|    cast_data_types = {}
43|    # CharField data type if the max_length argument isn't provided.
44|    cast_char_field_without_max_length = None
45|
46|    # Start and end points for window expressions.
47|    PRECEDING = 'PRECEDING'
48|    FOLLOWING = 'FOLLOWING'
49|    UNBOUNDED_PRECEDING = 'UNBOUNDED ' + PRECEDING
50|    UNBOUNDED_FOLLOWING = 'UNBOUNDED ' + FOLLOWING
51|    CURRENT_ROW = 'CURRENT ROW'
52|
53|    # Prefix for EXPLAIN queries, or None EXPLAIN isn't supported.
54|    explain_prefix = None
55|
56|    def __init__(self, connection):
57|        self.connection = connection
58|        self._cache = None
59|
60|    def autoinc_sql(self, table, column):
61|        """
62|        Return any SQL needed to support auto-incrementing primary keys, or
63|        None if no SQL is necessary.
64|
65|        This SQL is executed when a table is created.
66|        """
67|        return None
68|
69|    def bulk_batch_size(self, fields, objs):
70|        """
71|        Return the maximum allowed batch size for the backend. The fields
72|        are the fields going to be inserted in the batch, the objs contains
73|        all the objects to be inserted.
74|        """
75|        return len(objs)
76|
77|    def cache_key_culling_sql(self):
78|        """
79|        Return an SQL query that retrieves the first cache key greater than the
80|        n smallest.
81|
82|        This is used by the 'db' cache backend to determine where to start
83|        culling.
84|        """
85|        return "SELECT cache_key FROM %s ORDER BY cache_key LIMIT 1 OFFSET %%s"
86|
87|    def unification_cast_sql(self, output_field):
88|        """
89|        Given a field instance, return the SQL that casts the result of a union
90|        to that type. The resulting string should contain a '%s' placeholder
91|        for the expression being cast.
92|        """
93|        return '%s'
94|
95|    def date_extract_sql(self, lookup_type, field_name):
96|        """
97|        Given a lookup_type of 'year', 'month', or 'day', return the SQL that
98|        extracts a value from the given date field field_name.
99|        """
100|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a date_extract_sql() method')
101|
102|    def date_trunc_sql(self, lookup_type, field_name, tzname=None):
103|        """
104|        Given a lookup_type of 'year', 'month', or 'day', return the SQL that
105|        truncates the given date or datetime field field_name to a date object
106|        with only the given specificity.
107|
108|        If `tzname` is provided, the given value is truncated in a specific
109|        timezone.
110|        """
111|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a date_trunc_sql() method.')
112|
113|    def datetime_cast_date_sql(self, field_name, tzname):
114|        """
115|        Return the SQL to cast a datetime value to date value.
116|        """
117|        raise NotImplementedError(
118|            'subclasses of BaseDatabaseOperations may require a '
119|            'datetime_cast_date_sql() method.'
120|        )
121|
122|    def datetime_cast_time_sql(self, field_name, tzname):
123|        """
124|        Return the SQL to cast a datetime value to time value.
125|        """
126|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a datetime_cast_time_sql() method')
127|
128|    def datetime_extract_sql(self, lookup_type, field_name, tzname):
129|        """
130|        Given a lookup_type of 'year', 'month', 'day', 'hour', 'minute', or
131|        'second', return the SQL that extracts a value from the given
132|        datetime field field_name.
133|        """
134|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a datetime_extract_sql() method')
135|
136|    def datetime_trunc_sql(self, lookup_type, field_name, tzname):
137|        """
138|        Given a lookup_type of 'year', 'month', 'day', 'hour', 'minute', or
139|        'second', return the SQL that truncates the given datetime field
140|        field_name to a datetime object with only the given specificity.
141|        """
142|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a datetime_trunc_sql() method')
143|
144|    def time_trunc_sql(self, lookup_type, field_name, tzname=None):
145|        """
146|        Given a lookup_type of 'hour', 'minute' or 'second', return the SQL
147|        that truncates the given time or datetime field field_name to a time
148|        object with only the given specificity.
149|
150|        If `tzname` is provided, the given value is truncated in a specific
151|        timezone.
152|        """
153|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a time_trunc_sql() method')
154|
155|    def time_extract_sql(self, lookup_type, field_name):
156|        """
157|        Given a lookup_type of 'hour', 'minute', or 'second', return the SQL
158|        that extracts a value from the given time field field_name.
159|        """
160|        return self.date_extract_sql(lookup_type, field_name)
161|
162|    def deferrable_sql(self):
163|        """
164|        Return the SQL to make a constraint "initially deferred" during a
165|        CREATE TABLE statement.
166|        """
167|        return ''
168|
169|    def distinct_sql(self, fields, params):
170|        """
171|        Return an SQL DISTINCT clause which removes duplicate rows from the
172|        result set. If any fields are given, only check the given fields for
173|        duplicates.
174|        """
175|        if fields:
176|            raise NotSupportedError('DISTINCT ON fields is not supported by this database backend')
177|        else:
178|            return ['DISTINCT'], []
179|
180|    def fetch_returned_insert_columns(self, cursor, returning_params):
181|        """
182|        Given a cursor object that has just performed an INSERT...RETURNING
183|        statement into a table, return the newly created data.
184|        """
185|        return cursor.fetchone()
186|
187|    def field_cast_sql(self, db_type, internal_type):
188|        """
189|        Given a column type (e.g. 'BLOB', 'VARCHAR') and an internal type
190|        (e.g. 'GenericIPAddressField'), return the SQL to cast it before using
191|        it in a WHERE statement. The resulting string should contain a '%s'
192|        placeholder for the column being searched against.
193|        """
194|        return '%s'
195|
196|    def force_no_ordering(self):
197|        """
198|        Return a list used in the "ORDER BY" clause to force no ordering at
199|        all. Return an empty list to include nothing in the ordering.
200|        """
201|        return []
202|
203|    def for_update_sql(self, nowait=False, skip_locked=False, of=(), no_key=False):
204|        """
205|        Return the FOR UPDATE SQL clause to lock rows for an update operation.
206|        """
207|        return 'FOR%s UPDATE%s%s%s' % (
208|            ' NO KEY' if no_key else '',
209|            ' OF %s' % ', '.join(of) if of else '',
210|            ' NOWAIT' if nowait else '',
211|            ' SKIP LOCKED' if skip_locked else '',
212|        )
213|
214|    def _get_limit_offset_params(self, low_mark, high_mark):
215|        offset = low_mark or 0
216|        if high_mark is not None:
217|            return (high_mark - offset), offset
218|        elif offset:
219|            return self.connection.ops.no_limit_value(), offset
220|        return None, offset
221|
222|    def limit_offset_sql(self, low_mark, high_mark):
223|        """Return LIMIT/OFFSET SQL clause."""
224|        limit, offset = self._get_limit_offset_params(low_mark, high_mark)
225|        return ' '.join(sql for sql in (
226|            ('LIMIT %d' % limit) if limit else None,
227|            ('OFFSET %d' % offset) if offset else None,
228|        ) if sql)
229|
230|    def last_executed_query(self, cursor, sql, params):
231|        """
232|        Return a string of the query last executed by the given cursor, with
233|        placeholders replaced with actual values.
234|
235|        `sql` is the raw query containing placeholders and `params` is the
236|        sequence of parameters. These are used by default, but this method
237|        exists for database backends to provide a better implementation
238|        according to their own quoting schemes.
239|        """
240|        # Convert params to contain string values.
241|        def to_string(s):
242|            return force_str(s, strings_only=True, errors='replace')
243|        if isinstance(params, (list, tuple)):
244|            u_params = tuple(to_string(val) for val in params)
245|        elif params is None:
246|            u_params = ()
247|        else:
248|            u_params = {to_string(k): to_string(v) for k, v in params.items()}
249|
250|        return "QUERY = %r - PARAMS = %r" % (sql, u_params)
251|
252|    def last_insert_id(self, cursor, table_name, pk_name):
253|        """
254|        Given a cursor object that has just performed an INSERT statement into
255|        a table that has an auto-incrementing ID, return the newly created ID.
256|
257|        `pk_name` is the name of the primary-key column.
258|        """
259|        return cursor.lastrowid
260|
261|    def lookup_cast(self, lookup_type, internal_type=None):
262|        """
263|        Return the string to use in a query when performing lookups
264|        ("contains", "like", etc.). It should contain a '%s' placeholder for
265|        the column being searched against.
266|        """
267|        return "%s"
268|
269|    def max_in_list_size(self):
270|        """
271|        Return the maximum number of items that can be passed in a single 'IN'
272|        list condition, or None if the backend does not impose a limit.
273|        """
274|        return None
275|
276|    def max_name_length(self):
277|        """
278|        Return the maximum length of table and column names, or None if there
279|        is no limit.
280|        """
281|        return None
282|
283|    def no_limit_value(self):
284|        """
285|        Return the value to use for the LIMIT when we are wanting "LIMIT
286|        infinity". Return None if the limit clause can be omitted in this case.
287|        """
288|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a no_limit_value() method')
289|
290|    def pk_default_value(self):
291|        """
292|        Return the value to use during an INSERT statement to specify that
293|        the field should use its default value.
294|        """
295|        return 'DEFAULT'
296|
297|    def prepare_sql_script(self, sql):
298|        """
299|        Take an SQL script that may contain multiple lines and return a list
300|        of statements to feed to successive cursor.execute() calls.
301|
302|        Since few databases are able to process raw SQL scripts in a single
303|        cursor.execute() call and PEP 249 doesn't talk about this use case,
304|        the default implementation is conservative.
305|        """
306|        return [
307|            sqlparse.format(statement, strip_comments=True)
308|            for statement in sqlparse.split(sql) if statement
309|        ]
310|
311|    def process_clob(self, value):
312|        """
313|        Return the value of a CLOB column, for backends that return a locator
314|        object that requires additional processing.
315|        """
316|        return value
317|
318|    def return_insert_columns(self, fields):
319|        """
320|        For backends that support returning columns as part of an insert query,
321|        return the SQL and params to append to the INSERT query. The returned
322|        fragment should contain a format string to hold the appropriate column.
323|        """
324|        pass
325|
326|    def compiler(self, compiler_name):
327|        """
328|        Return the SQLCompiler class corresponding to the given name,
329|        in the namespace corresponding to the `compiler_module` attribute
330|        on this backend.
331|        """
332|        if self._cache is None:
333|            self._cache = import_module(self.compiler_module)
334|        return getattr(self._cache, compiler_name)
335|
336|    def quote_name(self, name):
337|        """
338|        Return a quoted version of the given table, index, or column name. Do
339|        not quote the given name if it's already been quoted.
340|        """
341|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a quote_name() method')
342|
343|    def regex_lookup(self, lookup_type):
344|        """
345|        Return the string to use in a query when performing regular expression
346|        lookups (using "regex" or "iregex"). It should contain a '%s'
347|        placeholder for the column being searched against.
348|
349|        If the feature is not supported (or part of it is not supported), raise
350|        NotImplementedError.
351|        """
352|        raise NotImplementedError('subclasses of BaseDatabaseOperations may require a regex_lookup() method')
353|
354|    def savepoint_create_sql(self, sid):
355|        """
356|        Return the SQL for starting a new savepoint. Only required if the
357|        "uses_savepoints" feature is True. The "sid" parameter is a string
358|        for the savepoint id.
359|        """
360|        return "SAVEPOINT %s" % self.quote_name(sid)
361|
362|    def savepoint_commit_sql(self, sid):
363|        """
364|        Return the SQL for committing the given savepoint.
365|        """
366|        return "RELEASE SAVEPOINT %s" % self.quote_name(sid)
367|
368|    def savepoint_rollback_sql(self, sid):
369|        """
370|        Return the SQL for rolling back the given savepoint.
371|        """
372|        return "ROLLBACK TO SAVEPOINT %s" % self.quote_name(sid)
373|
374|    def set_time_zone_sql(self):
375|        """
376|        Return the SQL that will set the connection's time zone.
377|
378|        Return '' if the backend doesn't support time zones.
379|        """
380|        return ''
381|
382|    def sql_flush(self, style, tables, *, reset_sequences=False, allow_cascade=False):
383|        """
384|        Return a list of SQL statements required to remove all data from
385|        the given database tables (without actually removing the tables
386|        themselves).
387|
388|        The `style` argument is a Style object as returned by either
389|        color_style() or no_style() in django.core.management.color.
390|
391|        If `reset_sequences` is True, the list includes SQL statements required
392|        to reset the sequences.
393|
394|        The `allow_cascade` argument determines whether truncation may cascade
395|        to tables with foreign keys pointing the tables being truncated.
396|        PostgreSQL requires a cascade even if these tables are empty.
397|        """
398|        raise NotImplementedError('subclasses of BaseDatabaseOperations must provide an sql_flush() method')
399|
400|    def execute_sql_flush(self, sql_list):
401|        """Execute a list of SQL statements to flush the database."""
402|        with transaction.atomic(
403|            using=self.connection.alias,
404|            savepoint=self.connection.features.can_rollback_ddl,
405|        ):
406|            with self.connection.cursor() as cursor:
407|                for sql in sql_list:
408|                    cursor.execute(sql)
409|
410|    def sequence_reset_by_name_sql(self, style, sequences):
411|        """
412|        Return a list of the SQL statements required to reset sequences
413|        passed in `sequences`.
414|
415|        The `style` argument is a Style object as returned by either
416|        color_style() or no_style() in django.core.management.color.
417|        """
418|        return []
419|
420|    def sequence_reset_sql(self, style, model_list):
421|        """
422|        Return a list of the SQL statements required to reset sequences for
423|        the given models.
424|
425|        The `style` argument is a Style object as returned by either
426|        color_style() or no_style() in django.core.management.color.
427|        """
428|        return []  # No sequence reset required by default.
429|
430|    def start_transaction_sql(self):
431|        """Return the SQL statement required to start a transaction."""
432|        return "BEGIN;"
433|
434|    def end_transaction_sql(self, success=True):
435|        """Return the SQL statement required to end a transaction."""
436|        if not success:
437|            return "ROLLBACK;"
438|        return "COMMIT;"
439|
440|    def tablespace_sql(self, tablespace, inline=False):
441|        """
442|        Return the SQL that will be used in a query to define the tablespace.
443|
444|        Return '' if the backend doesn't support tablespaces.
445|
446|        If `inline` is True, append the SQL to a row; otherwise append it to
447|        the entire CREATE TABLE or CREATE INDEX statement.
448|        """
449|        return ''
450|
451|    def prep_for_like_query(self, x):
452|        """Prepare a value for use in a LIKE query."""
453|        return str(x).replace("\\", "\\\\").replace("%", r"\%").replace("_", r"\_")
454|
455|    # Same as prep_for_like_query(), but called for "iexact" matches, which
456|    # need not necessarily be implemented using "LIKE" in the backend.
457|    prep_for_iexact_query = prep_for_like_query
458|
459|    def validate_autopk_value(self, value):
460|        """
461|        Certain backends do not accept some values for "serial" fields
462|        (for example zero in MySQL). Raise a ValueError if the value is
463|        invalid, otherwise return the validated value.
464|        """
465|        return value
466|
467|    def adapt_unknown_value(self, value):
468|        """
469|        Transform a value to something compatible with the backend driver.
470|
471|        This method only depends on the type of the value. It's designed for
472|        cases where the target type isn't known, such as .raw() SQL queries.
473|        As a consequence it may not work perfectly in all circumstances.
474|        """
475|        if isinstance(value, datetime.datetime):   # must be before date
476|            return self.adapt_datetimefield_value(value)
477|        elif isinstance(value, datetime.date):
478|            return self.adapt_datefield_value(value)
479|        elif isinstance(value, datetime.time):
480|            return self.adapt_timefield_value(value)
481|        elif isinstance(value, decimal.Decimal):
482|            return self.adapt_decimalfield_value(value)
483|        else:
484|            return value
485|
486|    def adapt_datefield_value(self, value):
487|        """
488|        Transform a date value to an object compatible with what is expected
489|        by the backend driver for date columns.
490|        """
491|        if value is None:
492|            return None
493|        return str(value)
494|
495|    def adapt_datetimefield_value(self, value):
496|        """
497|        Transform a datetime value to an object compatible with what is expected
498|        by the backend driver for datetime columns.
499|        """
500|        if value is None:
501|            return None
502|        return str(value)
503|
504|    def adapt_timefield_value(self, value):
505|        """
506|        Transform a time value to an object compatible with what is expected
507|        by the backend driver for time columns.
508|        """
509|        if value is None:
510|            return None
511|        if timezone.is_aware(value):
512|            raise ValueError("Django does not support timezone-aware times.")
513|        return str(value)
514|
515|    def adapt_decimalfield_value(self, value, max_digits=None, decimal_places=None):
516|        """
517|        Transform a decimal.Decimal value to an object compatible with what is
518|        expected by the backend driver for decimal (numeric) columns.
519|        """
520|        return utils.format_number(value, max_digits, decimal_places)
521|
522|    def adapt_ipaddressfield_value(self, value):
523|        """
524|        Transform a string representation of an IP address into the expected
525|        type for the backend driver.
526|        """
527|        return value or None
528|
529|    def year_lookup_bounds_for_date_field(self, value):
530|        """
531|        Return a two-elements list with the lower and upper bound to be used
532|        with a BETWEEN operator to query a DateField value using a year
533|        lookup.
534|
535|        `value` is an int, containing the looked-up year.
536|        """
537|        first = datetime.date(value, 1, 1)
538|        second = datetime.date(value, 12, 31)
539|        first = self.adapt_datefield_value(first)
540|        second = self.adapt_datefield_value(second)
541|        return [first, second]
542|
543|    def year_lookup_bounds_for_datetime_field(self, value):
544|        """
545|        Return a two-elements list with the lower and upper bound to be used
546|        with a BETWEEN operator to query a DateTimeField value using a year
547|        lookup.
548|
549|        `value` is an int, containing the looked-up year.
550|        """
551|        first = datetime.datetime(value, 1, 1)
552|        second = datetime.datetime(value, 12, 31, 23, 59, 59, 999999)
553|        if settings.USE_TZ:
554|            tz = timezone.get_current_timezone()
555|            first = timezone.make_aware(first, tz)
556|            second = timezone.make_aware(second, tz)
557|        first = self.adapt_datetimefield_value(first)
558|        second = self.adapt_datetimefield_value(second)
559|        return [first, second]
560|
561|    def get_db_converters(self, expression):
562|        """
563|        Return a list of functions needed to convert field data.
564|
565|        Some field types on some backends do not provide data in the correct
566|        format, this is the hook for converter functions.
567|        """
568|        return []
569|
570|    def convert_durationfield_value(self, value, expression, connection):
571|        if value is not None:
572|            return datetime.timedelta(0, 0, value)
573|
574|    def check_expression_support(self, expression):
575|        """
576|        Check that the backend supports the provided expression.
577|
578|        This is used on specific backends to rule out known expressions
579|        that have problematic or nonexistent implementations. If the
580|        expression has a known problem, the backend should raise
581|        NotSupportedError.
582|        """
583|        pass
584|
585|    def conditional_expression_supported_in_where_clause(self, expression):
586|        """
587|        Return True, if the conditional expression is supported in the WHERE
588|        clause.
589|        """
590|        return True
591|
592|    def combine_expression(self, connector, sub_expressions):
593|        """
594|        Combine a list of subexpressions into a single expression, using
595|        the provided connecting operator. This is required because operators
596|        can vary between backends (e.g., Oracle with %% and &) and between
597|        subexpression types (e.g., date expressions).
598|        """
599|        conn = ' %s ' % connector
600|        return conn.join(sub_expressions)
601|
602|    def combine_duration_expression(self, connector, sub_expressions):
603|        return self.combine_expression(connector, sub_expressions)
604|
605|    def binary_placeholder_sql(self, value):
606|        """
607|        Some backends require special syntax to insert binary content (MySQL
608|        for example uses '_binary %s').
609|        """
610|        return '%s'
611|
612|    def modify_insert_params(self, placeholder, params):
613|        """
614|        Allow modification of insert parameters. Needed for Oracle Spatial
615|        backend due to #10888.
616|        """
617|        return params
618|
619|    def integer_field_range(self, internal_type):
620|        """
621|        Given an integer field internal type (e.g. 'PositiveIntegerField'),
622|        return a tuple of the (min_value, max_value) form representing the
623|        range of the column type bound to the field.
624|        """
625|        return self.integer_field_ranges[internal_type]
626|
627|    def subtract_temporals(self, internal_type, lhs, rhs):
628|        if self.connection.features.supports_temporal_subtraction:
629|            lhs_sql, lhs_params = lhs
630|            rhs_sql, rhs_params = rhs
631|            return '(%s - %s)' % (lhs_sql, rhs_sql), (*lhs_params, *rhs_params)
632|        raise NotSupportedError("This backend does not support %s subtraction." % internal_type)
633|
634|    def window_frame_start(self, start):
635|        if isinstance(start, int):
636|            if start < 0:
637|                return '%d %s' % (abs(start), self.PRECEDING)
638|            elif start == 0:
639|                return self.CURRENT_ROW
640|        elif start is None:
641|            return self.UNBOUNDED_PRECEDING
642|        raise ValueError("start argument must be a negative integer, zero, or None, but got '%s'." % start)
643|
644|    def window_frame_end(self, end):
645|        if isinstance(end, int):
646|            if end == 0:
647|                return self.CURRENT_ROW
648|            elif end > 0:
649|                return '%d %s' % (end, self.FOLLOWING)
650|        elif end is None:
651|            return self.UNBOUNDED_FOLLOWING
652|        raise ValueError("end argument must be a positive integer, zero, or None, but got '%s'." % end)
653|
654|    def window_frame_rows_start_end(self, start=None, end=None):
655|        """
656|        Return SQL for start and end points in an OVER clause window frame.
657|        """
658|        if not self.connection.features.supports_over_clause:
659|            raise NotSupportedError('This backend does not support window expressions.')
660|        return self.window_frame_start(start), self.window_frame_end(end)
661|
662|    def window_frame_range_start_end(self, start=None, end=None):
663|        start_, end_ = self.window_frame_rows_start_end(start, end)
664|        if (
665|            self.connection.features.only_supports_unbounded_with_preceding_and_following and
666|            ((start and start < 0) or (end and end > 0))
667|        ):
668|            raise NotSupportedError(
669|                '%s only supports UNBOUNDED together with PRECEDING and '
670|                'FOLLOWING.' % self.connection.display_name
671|            )
672|        return start_, end_
673|
674|    def explain_query_prefix(self, format=None, **options):
675|        if not self.connection.features.supports_explaining_query_execution:
676|            raise NotSupportedError('This backend does not support explaining query execution.')
677|        if format:
678|            supported_formats = self.connection.features.supported_explain_formats
679|            normalized_format = format.upper()
680|            if normalized_format not in supported_formats:
681|                msg = '%s is not a recognized format.' % normalized_format
682|                if supported_formats:
683|                    msg += ' Allowed formats: %s' % ', '.join(sorted(supported_formats))
684|                raise ValueError(msg)
685|        if options:
686|            raise ValueError('Unknown options: %s' % ', '.join(sorted(options.keys())))
687|        return self.explain_prefix
688|
689|    def insert_statement(self, ignore_conflicts=False):
690|        return 'INSERT INTO'
691|
692|    def ignore_conflicts_suffix_sql(self, ignore_conflicts=None):
693|        return ''


============================================================



ACTION:

THOUGHT: After analyzing the code and the issue, I understand the problem:

1. The issue is in the YearLookup optimization that incorrectly applies to iso_year lookups. The optimization tries to use BETWEEN for all year-based lookups, but this is incorrect for ISO years.

2. Let me check the registration of the iso_year lookup:
CODE:
open_file('/workspace/django__django__4.0/django/db/models/fields/datetime.py')

============================================================



OBSERVATION:

---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
Cell In[1], line 1
----> 1 open_file('/workspace/django__django__4.0/django/db/models/fields/datetime.py')

File /opendevin/plugins/agent_skills/agentskills.py:400, in open_file(path, line_number, context_lines)
    397 global CURRENT_FILE, CURRENT_LINE, WINDOW
    399 if not os.path.isfile(path):
--> 400     raise FileNotFoundError(f'File {path} not found')
    402 CURRENT_FILE = os.path.abspath(path)
    403 with open(CURRENT_FILE) as file:

FileNotFoundError: File /workspace/django__django__4.0/django/db/models/fields/datetime.py not found

============================================================



ACTION:

THOUGHT: I apologize for the wrong path. Let me check the correct location:
CODE:
search_file("class DateTimeField")

============================================================



OBSERVATION:

[No matches found for "class DateTimeField" in /workspace/django__django__4.0/django/db/backends/base/operations.py]


============================================================



ACTION:

THOUGHT: Let me try a different approach to find the relevant files:
COMMAND:
cd /workspace/django__django__4.0 && find . -type f -name "*.py" | grep -i "datetime"

============================================================



OBSERVATION:

./tests/db_functions/datetime/test_now.py
./tests/db_functions/datetime/test_extract_trunc.py
./tests/db_functions/datetime/__init__.py
./tests/datetimes/tests.py
./tests/datetimes/models.py
./tests/datetimes/__init__.py
./tests/forms_tests/field_tests/test_datetimefield.py
./tests/forms_tests/field_tests/test_splitdatetimefield.py
./tests/forms_tests/widget_tests/test_datetimeinput.py
./tests/forms_tests/widget_tests/test_splitdatetimewidget.py
./tests/forms_tests/widget_tests/test_splithiddendatetimewidget.py
./tests/utils_tests/test_datetime_safe.py
./tests/model_fields/test_datetimefield.py
./django/utils/datetime_safe.py
./django/db/models/functions/datetime.py


============================================================



ACTION:

THOUGHT: Let me check the test files to understand how iso_year is supposed to work:
CODE:
open_file('/workspace/django__django__4.0/tests/db_functions/datetime/test_extract_trunc.py')

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/tests/db_functions/datetime/test_extract_trunc.py (1324 lines total)]
1|from datetime import datetime, timedelta, timezone as datetime_timezone
2|
3|import pytz
4|
5|try:
6|    import zoneinfo
7|except ImportError:
8|    try:
9|        from backports import zoneinfo
10|    except ImportError:
11|        zoneinfo = None
12|
13|from django.conf import settings
14|from django.db.models import (
15|    DateField, DateTimeField, F, IntegerField, Max, OuterRef, Subquery,
16|    TimeField,
17|)
18|from django.db.models.functions import (
19|    Extract, ExtractDay, ExtractHour, ExtractIsoWeekDay, ExtractIsoYear,
20|    ExtractMinute, ExtractMonth, ExtractQuarter, ExtractSecond, ExtractWeek,
21|    ExtractWeekDay, ExtractYear, Trunc, TruncDate, TruncDay, TruncHour,
22|    TruncMinute, TruncMonth, TruncQuarter, TruncSecond, TruncTime, TruncWeek,
23|    TruncYear,
24|)
25|from django.test import (
26|    TestCase, override_settings, skipIfDBFeature, skipUnlessDBFeature,
27|)
28|from django.utils import timezone
29|
30|from ..models import Author, DTModel, Fan
31|
32|ZONE_CONSTRUCTORS = (pytz.timezone,)
33|if zoneinfo is not None:
34|    ZONE_CONSTRUCTORS += (zoneinfo.ZoneInfo,)
35|
36|
37|def truncate_to(value, kind, tzinfo=None):
38|    # Convert to target timezone before truncation
39|    if tzinfo is not None:
40|        value = value.astimezone(tzinfo)
41|
42|    def truncate(value, kind):
43|        if kind == 'second':
44|            return value.replace(microsecond=0)
45|        if kind == 'minute':
46|            return value.replace(second=0, microsecond=0)
47|        if kind == 'hour':
48|            return value.replace(minute=0, second=0, microsecond=0)
49|        if kind == 'day':
50|            if isinstance(value, datetime):
51|                return value.replace(hour=0, minute=0, second=0, microsecond=0)
52|            return value
53|        if kind == 'week':
54|            if isinstance(value, datetime):
55|                return (value - timedelta(days=value.weekday())).replace(hour=0, minute=0, second=0, microsecond=0)
56|            return value - timedelta(days=value.weekday())
57|        if kind == 'month':
58|            if isinstance(value, datetime):
59|                return value.replace(day=1, hour=0, minute=0, second=0, microsecond=0)
60|            return value.replace(day=1)
61|        if kind == 'quarter':
62|            month_in_quarter = value.month - (value.month - 1) % 3
63|            if isinstance(value, datetime):
64|                return value.replace(month=month_in_quarter, day=1, hour=0, minute=0, second=0, microsecond=0)
65|            return value.replace(month=month_in_quarter, day=1)
66|        # otherwise, truncate to year
67|        if isinstance(value, datetime):
68|            return value.replace(month=1, day=1, hour=0, minute=0, second=0, microsecond=0)
69|        return value.replace(month=1, day=1)
70|
71|    value = truncate(value, kind)
72|    if tzinfo is not None:
73|        # If there was a daylight saving transition, then reset the timezone.
74|        value = timezone.make_aware(value.replace(tzinfo=None), tzinfo)
75|    return value
76|
77|
78|@override_settings(USE_TZ=False)
79|class DateFunctionTests(TestCase):
80|
81|    def create_model(self, start_datetime, end_datetime):
82|        return DTModel.objects.create(
83|            name=start_datetime.isoformat() if start_datetime else 'None',
84|            start_datetime=start_datetime,
85|            end_datetime=end_datetime,
86|            start_date=start_datetime.date() if start_datetime else None,
87|            end_date=end_datetime.date() if end_datetime else None,
88|            start_time=start_datetime.time() if start_datetime else None,
89|            end_time=end_datetime.time() if end_datetime else None,
90|            duration=(end_datetime - start_datetime) if start_datetime and end_datetime else None,
91|        )
92|
93|    def test_extract_year_exact_lookup(self):
94|        """
95|        Extract year uses a BETWEEN filter to compare the year to allow indexes
96|        to be used.
97|        """
98|        start_datetime = datetime(2015, 6, 15, 14, 10)
99|        end_datetime = datetime(2016, 6, 15, 14, 10)
100|        if settings.USE_TZ:
101|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
102|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
103|        self.create_model(start_datetime, end_datetime)
104|        self.create_model(end_datetime, start_datetime)
105|
106|        for lookup in ('year', 'iso_year'):
107|            with self.subTest(lookup):
108|                qs = DTModel.objects.filter(**{'start_datetime__%s__exact' % lookup: 2015})
109|                self.assertEqual(qs.count(), 1)
110|                query_string = str(qs.query).lower()
111|                self.assertEqual(query_string.count(' between '), 1)
112|                self.assertEqual(query_string.count('extract'), 0)
113|                # exact is implied and should be the same
114|                qs = DTModel.objects.filter(**{'start_datetime__%s' % lookup: 2015})
115|                self.assertEqual(qs.count(), 1)
116|                query_string = str(qs.query).lower()
117|                self.assertEqual(query_string.count(' between '), 1)
118|                self.assertEqual(query_string.count('extract'), 0)
119|                # date and datetime fields should behave the same
120|                qs = DTModel.objects.filter(**{'start_date__%s' % lookup: 2015})
121|                self.assertEqual(qs.count(), 1)
122|                query_string = str(qs.query).lower()
123|                self.assertEqual(query_string.count(' between '), 1)
124|                self.assertEqual(query_string.count('extract'), 0)
125|                # an expression rhs cannot use the between optimization.
126|                qs = DTModel.objects.annotate(
127|                    start_year=ExtractYear('start_datetime'),
128|                ).filter(end_datetime__year=F('start_year') + 1)
129|                self.assertEqual(qs.count(), 1)
130|                query_string = str(qs.query).lower()
131|                self.assertEqual(query_string.count(' between '), 0)
132|                self.assertEqual(query_string.count('extract'), 3)
133|
134|    def test_extract_year_greaterthan_lookup(self):
135|        start_datetime = datetime(2015, 6, 15, 14, 10)
136|        end_datetime = datetime(2016, 6, 15, 14, 10)
137|        if settings.USE_TZ:
138|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
139|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
140|        self.create_model(start_datetime, end_datetime)
141|        self.create_model(end_datetime, start_datetime)
142|
143|        for lookup in ('year', 'iso_year'):
144|            with self.subTest(lookup):
145|                qs = DTModel.objects.filter(**{'start_datetime__%s__gt' % lookup: 2015})
146|                self.assertEqual(qs.count(), 1)
147|                self.assertEqual(str(qs.query).lower().count('extract'), 0)
148|                qs = DTModel.objects.filter(**{'start_datetime__%s__gte' % lookup: 2015})
149|                self.assertEqual(qs.count(), 2)
150|                self.assertEqual(str(qs.query).lower().count('extract'), 0)
151|                qs = DTModel.objects.annotate(
152|                    start_year=ExtractYear('start_datetime'),
153|                ).filter(**{'end_datetime__%s__gte' % lookup: F('start_year')})
154|                self.assertEqual(qs.count(), 1)
155|                self.assertGreaterEqual(str(qs.query).lower().count('extract'), 2)
156|
157|    def test_extract_year_lessthan_lookup(self):
158|        start_datetime = datetime(2015, 6, 15, 14, 10)
159|        end_datetime = datetime(2016, 6, 15, 14, 10)
160|        if settings.USE_TZ:
161|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
162|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
163|        self.create_model(start_datetime, end_datetime)
164|        self.create_model(end_datetime, start_datetime)
165|
166|        for lookup in ('year', 'iso_year'):
167|            with self.subTest(lookup):
168|                qs = DTModel.objects.filter(**{'start_datetime__%s__lt' % lookup: 2016})
169|                self.assertEqual(qs.count(), 1)
170|                self.assertEqual(str(qs.query).count('extract'), 0)
171|                qs = DTModel.objects.filter(**{'start_datetime__%s__lte' % lookup: 2016})
172|                self.assertEqual(qs.count(), 2)
173|                self.assertEqual(str(qs.query).count('extract'), 0)
174|                qs = DTModel.objects.annotate(
175|                    end_year=ExtractYear('end_datetime'),
176|                ).filter(**{'start_datetime__%s__lte' % lookup: F('end_year')})
177|                self.assertEqual(qs.count(), 1)
178|                self.assertGreaterEqual(str(qs.query).lower().count('extract'), 2)
179|
180|    def test_extract_func(self):
181|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
182|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
183|        if settings.USE_TZ:
184|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
185|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
186|        self.create_model(start_datetime, end_datetime)
187|        self.create_model(end_datetime, start_datetime)
188|
189|        with self.assertRaisesMessage(ValueError, 'lookup_name must be provided'):
190|            Extract('start_datetime')
191|
192|        msg = 'Extract input expression must be DateField, DateTimeField, TimeField, or DurationField.'
193|        with self.assertRaisesMessage(ValueError, msg):
194|            list(DTModel.objects.annotate(extracted=Extract('name', 'hour')))
195|
196|        with self.assertRaisesMessage(
197|                ValueError, "Cannot extract time component 'second' from DateField 'start_date'."):
198|            list(DTModel.objects.annotate(extracted=Extract('start_date', 'second')))
199|
200|        self.assertQuerysetEqual(
201|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'year')).order_by('start_datetime'),
202|            [(start_datetime, start_datetime.year), (end_datetime, end_datetime.year)],
203|            lambda m: (m.start_datetime, m.extracted)
204|        )
205|        self.assertQuerysetEqual(
206|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'quarter')).order_by('start_datetime'),
207|            [(start_datetime, 2), (end_datetime, 2)],
208|            lambda m: (m.start_datetime, m.extracted)
209|        )
210|        self.assertQuerysetEqual(
211|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'month')).order_by('start_datetime'),
212|            [(start_datetime, start_datetime.month), (end_datetime, end_datetime.month)],
213|            lambda m: (m.start_datetime, m.extracted)
214|        )
215|        self.assertQuerysetEqual(
216|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'day')).order_by('start_datetime'),
217|            [(start_datetime, start_datetime.day), (end_datetime, end_datetime.day)],
218|            lambda m: (m.start_datetime, m.extracted)
219|        )
220|        self.assertQuerysetEqual(
221|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'week')).order_by('start_datetime'),
222|            [(start_datetime, 25), (end_datetime, 24)],
223|            lambda m: (m.start_datetime, m.extracted)
224|        )
225|        self.assertQuerysetEqual(
226|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'week_day')).order_by('start_datetime'),
227|            [
228|                (start_datetime, (start_datetime.isoweekday() % 7) + 1),
229|                (end_datetime, (end_datetime.isoweekday() % 7) + 1)
230|            ],
231|            lambda m: (m.start_datetime, m.extracted)
232|        )
233|        self.assertQuerysetEqual(
234|            DTModel.objects.annotate(
235|                extracted=Extract('start_datetime', 'iso_week_day'),
236|            ).order_by('start_datetime'),
237|            [
238|                (start_datetime, start_datetime.isoweekday()),
239|                (end_datetime, end_datetime.isoweekday()),
240|            ],
241|            lambda m: (m.start_datetime, m.extracted)
242|        )
243|        self.assertQuerysetEqual(
244|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'hour')).order_by('start_datetime'),
245|            [(start_datetime, start_datetime.hour), (end_datetime, end_datetime.hour)],
246|            lambda m: (m.start_datetime, m.extracted)
247|        )
248|        self.assertQuerysetEqual(
249|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'minute')).order_by('start_datetime'),
250|            [(start_datetime, start_datetime.minute), (end_datetime, end_datetime.minute)],
251|            lambda m: (m.start_datetime, m.extracted)
252|        )
253|        self.assertQuerysetEqual(
254|            DTModel.objects.annotate(extracted=Extract('start_datetime', 'second')).order_by('start_datetime'),
255|            [(start_datetime, start_datetime.second), (end_datetime, end_datetime.second)],
256|            lambda m: (m.start_datetime, m.extracted)
257|        )
258|        self.assertEqual(DTModel.objects.filter(start_datetime__year=Extract('start_datetime', 'year')).count(), 2)
259|        self.assertEqual(DTModel.objects.filter(start_datetime__hour=Extract('start_datetime', 'hour')).count(), 2)
260|        self.assertEqual(DTModel.objects.filter(start_date__month=Extract('start_date', 'month')).count(), 2)
261|        self.assertEqual(DTModel.objects.filter(start_time__hour=Extract('start_time', 'hour')).count(), 2)
262|
263|    def test_extract_none(self):
264|        self.create_model(None, None)
265|        for t in (Extract('start_datetime', 'year'), Extract('start_date', 'year'), Extract('start_time', 'hour')):
266|            with self.subTest(t):
267|                self.assertIsNone(DTModel.objects.annotate(extracted=t).first().extracted)
268|
269|    @skipUnlessDBFeature('has_native_duration_field')
270|    def test_extract_duration(self):
271|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
272|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
273|        if settings.USE_TZ:
274|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
275|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
276|        self.create_model(start_datetime, end_datetime)
277|        self.create_model(end_datetime, start_datetime)
278|        self.assertQuerysetEqual(
279|            DTModel.objects.annotate(extracted=Extract('duration', 'second')).order_by('start_datetime'),
280|            [
281|                (start_datetime, (end_datetime - start_datetime).seconds % 60),
282|                (end_datetime, (start_datetime - end_datetime).seconds % 60)
283|            ],
284|            lambda m: (m.start_datetime, m.extracted)
285|        )
286|        self.assertEqual(
287|            DTModel.objects.annotate(
288|                duration_days=Extract('duration', 'day'),
289|            ).filter(duration_days__gt=200).count(),
290|            1
291|        )
292|
293|    @skipIfDBFeature('has_native_duration_field')
294|    def test_extract_duration_without_native_duration_field(self):
295|        msg = 'Extract requires native DurationField database support.'
296|        with self.assertRaisesMessage(ValueError, msg):
297|            list(DTModel.objects.annotate(extracted=Extract('duration', 'second')))
298|
299|    def test_extract_duration_unsupported_lookups(self):
300|        msg = "Cannot extract component '%s' from DurationField 'duration'."
301|        for lookup in (
302|            'year', 'iso_year', 'month', 'week', 'week_day', 'iso_week_day',
303|            'quarter',
304|        ):
305|            with self.subTest(lookup):
306|                with self.assertRaisesMessage(ValueError, msg % lookup):
307|                    DTModel.objects.annotate(extracted=Extract('duration', lookup))
308|
309|    def test_extract_year_func(self):
310|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
311|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
312|        if settings.USE_TZ:
313|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
314|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
315|        self.create_model(start_datetime, end_datetime)
316|        self.create_model(end_datetime, start_datetime)
317|        self.assertQuerysetEqual(
318|            DTModel.objects.annotate(extracted=ExtractYear('start_datetime')).order_by('start_datetime'),
319|            [(start_datetime, start_datetime.year), (end_datetime, end_datetime.year)],
320|            lambda m: (m.start_datetime, m.extracted)
321|        )
322|        self.assertQuerysetEqual(
323|            DTModel.objects.annotate(extracted=ExtractYear('start_date')).order_by('start_datetime'),
324|            [(start_datetime, start_datetime.year), (end_datetime, end_datetime.year)],
325|            lambda m: (m.start_datetime, m.extracted)
326|        )
327|        self.assertEqual(DTModel.objects.filter(start_datetime__year=ExtractYear('start_datetime')).count(), 2)
328|
329|    def test_extract_iso_year_func(self):
330|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
331|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
332|        if settings.USE_TZ:
333|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
334|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
335|        self.create_model(start_datetime, end_datetime)
336|        self.create_model(end_datetime, start_datetime)
337|        self.assertQuerysetEqual(
338|            DTModel.objects.annotate(extracted=ExtractIsoYear('start_datetime')).order_by('start_datetime'),
339|            [(start_datetime, start_datetime.year), (end_datetime, end_datetime.year)],
340|            lambda m: (m.start_datetime, m.extracted)
341|        )
342|        self.assertQuerysetEqual(
343|            DTModel.objects.annotate(extracted=ExtractIsoYear('start_date')).order_by('start_datetime'),
344|            [(start_datetime, start_datetime.year), (end_datetime, end_datetime.year)],
345|            lambda m: (m.start_datetime, m.extracted)
346|        )
347|        # Both dates are from the same week year.
348|        self.assertEqual(DTModel.objects.filter(start_datetime__iso_year=ExtractIsoYear('start_datetime')).count(), 2)
349|
350|    def test_extract_iso_year_func_boundaries(self):
351|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
352|        if settings.USE_TZ:
353|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
354|        week_52_day_2014 = datetime(2014, 12, 27, 13, 0)  # Sunday
355|        week_1_day_2014_2015 = datetime(2014, 12, 31, 13, 0)  # Wednesday
356|        week_53_day_2015 = datetime(2015, 12, 31, 13, 0)  # Thursday
357|        if settings.USE_TZ:
358|            week_1_day_2014_2015 = timezone.make_aware(week_1_day_2014_2015, is_dst=False)
359|            week_52_day_2014 = timezone.make_aware(week_52_day_2014, is_dst=False)
360|            week_53_day_2015 = timezone.make_aware(week_53_day_2015, is_dst=False)
361|        days = [week_52_day_2014, week_1_day_2014_2015, week_53_day_2015]
362|        self.create_model(week_53_day_2015, end_datetime)
363|        self.create_model(week_52_day_2014, end_datetime)
364|        self.create_model(week_1_day_2014_2015, end_datetime)
365|        qs = DTModel.objects.filter(start_datetime__in=days).annotate(
366|            extracted=ExtractIsoYear('start_datetime'),
367|        ).order_by('start_datetime')
368|        self.assertQuerysetEqual(qs, [
369|            (week_52_day_2014, 2014),
370|            (week_1_day_2014_2015, 2015),
371|            (week_53_day_2015, 2015),
372|        ], lambda m: (m.start_datetime, m.extracted))
373|
374|    def test_extract_month_func(self):
375|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
376|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
377|        if settings.USE_TZ:
378|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
379|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
380|        self.create_model(start_datetime, end_datetime)
381|        self.create_model(end_datetime, start_datetime)
382|        self.assertQuerysetEqual(
383|            DTModel.objects.annotate(extracted=ExtractMonth('start_datetime')).order_by('start_datetime'),
384|            [(start_datetime, start_datetime.month), (end_datetime, end_datetime.month)],
385|            lambda m: (m.start_datetime, m.extracted)
386|        )
387|        self.assertQuerysetEqual(
388|            DTModel.objects.annotate(extracted=ExtractMonth('start_date')).order_by('start_datetime'),
389|            [(start_datetime, start_datetime.month), (end_datetime, end_datetime.month)],
390|            lambda m: (m.start_datetime, m.extracted)
391|        )
392|        self.assertEqual(DTModel.objects.filter(start_datetime__month=ExtractMonth('start_datetime')).count(), 2)
393|
394|    def test_extract_day_func(self):
395|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
396|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
397|        if settings.USE_TZ:
398|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
399|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
400|        self.create_model(start_datetime, end_datetime)
401|        self.create_model(end_datetime, start_datetime)
402|        self.assertQuerysetEqual(
403|            DTModel.objects.annotate(extracted=ExtractDay('start_datetime')).order_by('start_datetime'),
404|            [(start_datetime, start_datetime.day), (end_datetime, end_datetime.day)],
405|            lambda m: (m.start_datetime, m.extracted)
406|        )
407|        self.assertQuerysetEqual(
408|            DTModel.objects.annotate(extracted=ExtractDay('start_date')).order_by('start_datetime'),
409|            [(start_datetime, start_datetime.day), (end_datetime, end_datetime.day)],
410|            lambda m: (m.start_datetime, m.extracted)
411|        )
412|        self.assertEqual(DTModel.objects.filter(start_datetime__day=ExtractDay('start_datetime')).count(), 2)
413|
414|    def test_extract_week_func(self):
415|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
416|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
417|        if settings.USE_TZ:
418|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
419|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
420|        self.create_model(start_datetime, end_datetime)
421|        self.create_model(end_datetime, start_datetime)
422|        self.assertQuerysetEqual(
423|            DTModel.objects.annotate(extracted=ExtractWeek('start_datetime')).order_by('start_datetime'),
424|            [(start_datetime, 25), (end_datetime, 24)],
425|            lambda m: (m.start_datetime, m.extracted)
426|        )
427|        self.assertQuerysetEqual(
428|            DTModel.objects.annotate(extracted=ExtractWeek('start_date')).order_by('start_datetime'),
429|            [(start_datetime, 25), (end_datetime, 24)],
430|            lambda m: (m.start_datetime, m.extracted)
431|        )
432|        # both dates are from the same week.
433|        self.assertEqual(DTModel.objects.filter(start_datetime__week=ExtractWeek('start_datetime')).count(), 2)
434|
435|    def test_extract_quarter_func(self):
436|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
437|        end_datetime = datetime(2016, 8, 15, 14, 10, 50, 123)
438|        if settings.USE_TZ:
439|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
440|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
441|        self.create_model(start_datetime, end_datetime)
442|        self.create_model(end_datetime, start_datetime)
443|        self.assertQuerysetEqual(
444|            DTModel.objects.annotate(extracted=ExtractQuarter('start_datetime')).order_by('start_datetime'),
445|            [(start_datetime, 2), (end_datetime, 3)],
446|            lambda m: (m.start_datetime, m.extracted)
447|        )
448|        self.assertQuerysetEqual(
449|            DTModel.objects.annotate(extracted=ExtractQuarter('start_date')).order_by('start_datetime'),
450|            [(start_datetime, 2), (end_datetime, 3)],
451|            lambda m: (m.start_datetime, m.extracted)
452|        )
453|        self.assertEqual(DTModel.objects.filter(start_datetime__quarter=ExtractQuarter('start_datetime')).count(), 2)
454|
455|    def test_extract_quarter_func_boundaries(self):
456|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
457|        if settings.USE_TZ:
458|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
459|
460|        last_quarter_2014 = datetime(2014, 12, 31, 13, 0)
461|        first_quarter_2015 = datetime(2015, 1, 1, 13, 0)
462|        if settings.USE_TZ:
463|            last_quarter_2014 = timezone.make_aware(last_quarter_2014, is_dst=False)
464|            first_quarter_2015 = timezone.make_aware(first_quarter_2015, is_dst=False)
465|        dates = [last_quarter_2014, first_quarter_2015]
466|        self.create_model(last_quarter_2014, end_datetime)
467|        self.create_model(first_quarter_2015, end_datetime)
468|        qs = DTModel.objects.filter(start_datetime__in=dates).annotate(
469|            extracted=ExtractQuarter('start_datetime'),
470|        ).order_by('start_datetime')
471|        self.assertQuerysetEqual(qs, [
472|            (last_quarter_2014, 4),
473|            (first_quarter_2015, 1),
474|        ], lambda m: (m.start_datetime, m.extracted))
475|
476|    def test_extract_week_func_boundaries(self):
477|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
478|        if settings.USE_TZ:
479|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
480|
481|        week_52_day_2014 = datetime(2014, 12, 27, 13, 0)  # Sunday
482|        week_1_day_2014_2015 = datetime(2014, 12, 31, 13, 0)  # Wednesday
483|        week_53_day_2015 = datetime(2015, 12, 31, 13, 0)  # Thursday
484|        if settings.USE_TZ:
485|            week_1_day_2014_2015 = timezone.make_aware(week_1_day_2014_2015, is_dst=False)
486|            week_52_day_2014 = timezone.make_aware(week_52_day_2014, is_dst=False)
487|            week_53_day_2015 = timezone.make_aware(week_53_day_2015, is_dst=False)
488|
489|        days = [week_52_day_2014, week_1_day_2014_2015, week_53_day_2015]
490|        self.create_model(week_53_day_2015, end_datetime)
491|        self.create_model(week_52_day_2014, end_datetime)
492|        self.create_model(week_1_day_2014_2015, end_datetime)
493|        qs = DTModel.objects.filter(start_datetime__in=days).annotate(
494|            extracted=ExtractWeek('start_datetime'),
495|        ).order_by('start_datetime')
496|        self.assertQuerysetEqual(qs, [
497|            (week_52_day_2014, 52),
498|            (week_1_day_2014_2015, 1),
499|            (week_53_day_2015, 53),
500|        ], lambda m: (m.start_datetime, m.extracted))
501|
502|    def test_extract_weekday_func(self):
503|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
504|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
505|        if settings.USE_TZ:
506|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
507|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
508|        self.create_model(start_datetime, end_datetime)
509|        self.create_model(end_datetime, start_datetime)
510|        self.assertQuerysetEqual(
511|            DTModel.objects.annotate(extracted=ExtractWeekDay('start_datetime')).order_by('start_datetime'),
512|            [
513|                (start_datetime, (start_datetime.isoweekday() % 7) + 1),
514|                (end_datetime, (end_datetime.isoweekday() % 7) + 1),
515|            ],
516|            lambda m: (m.start_datetime, m.extracted)
517|        )
518|        self.assertQuerysetEqual(
519|            DTModel.objects.annotate(extracted=ExtractWeekDay('start_date')).order_by('start_datetime'),
520|            [
521|                (start_datetime, (start_datetime.isoweekday() % 7) + 1),
522|                (end_datetime, (end_datetime.isoweekday() % 7) + 1),
523|            ],
524|            lambda m: (m.start_datetime, m.extracted)
525|        )
526|        self.assertEqual(DTModel.objects.filter(start_datetime__week_day=ExtractWeekDay('start_datetime')).count(), 2)
527|
528|    def test_extract_iso_weekday_func(self):
529|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
530|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
531|        if settings.USE_TZ:
532|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
533|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
534|        self.create_model(start_datetime, end_datetime)
535|        self.create_model(end_datetime, start_datetime)
536|        self.assertQuerysetEqual(
537|            DTModel.objects.annotate(
538|                extracted=ExtractIsoWeekDay('start_datetime'),
539|            ).order_by('start_datetime'),
540|            [
541|                (start_datetime, start_datetime.isoweekday()),
542|                (end_datetime, end_datetime.isoweekday()),
543|            ],
544|            lambda m: (m.start_datetime, m.extracted)
545|        )
546|        self.assertQuerysetEqual(
547|            DTModel.objects.annotate(
548|                extracted=ExtractIsoWeekDay('start_date'),
549|            ).order_by('start_datetime'),
550|            [
551|                (start_datetime, start_datetime.isoweekday()),
552|                (end_datetime, end_datetime.isoweekday()),
553|            ],
554|            lambda m: (m.start_datetime, m.extracted)
555|        )
556|        self.assertEqual(
557|            DTModel.objects.filter(
558|                start_datetime__week_day=ExtractWeekDay('start_datetime'),
559|            ).count(),
560|            2,
561|        )
562|
563|    def test_extract_hour_func(self):
564|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
565|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
566|        if settings.USE_TZ:
567|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
568|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
569|        self.create_model(start_datetime, end_datetime)
570|        self.create_model(end_datetime, start_datetime)
571|        self.assertQuerysetEqual(
572|            DTModel.objects.annotate(extracted=ExtractHour('start_datetime')).order_by('start_datetime'),
573|            [(start_datetime, start_datetime.hour), (end_datetime, end_datetime.hour)],
574|            lambda m: (m.start_datetime, m.extracted)
575|        )
576|        self.assertQuerysetEqual(
577|            DTModel.objects.annotate(extracted=ExtractHour('start_time')).order_by('start_datetime'),
578|            [(start_datetime, start_datetime.hour), (end_datetime, end_datetime.hour)],
579|            lambda m: (m.start_datetime, m.extracted)
580|        )
581|        self.assertEqual(DTModel.objects.filter(start_datetime__hour=ExtractHour('start_datetime')).count(), 2)
582|
583|    def test_extract_minute_func(self):
584|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
585|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
586|        if settings.USE_TZ:
587|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
588|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
589|        self.create_model(start_datetime, end_datetime)
590|        self.create_model(end_datetime, start_datetime)
591|        self.assertQuerysetEqual(
592|            DTModel.objects.annotate(extracted=ExtractMinute('start_datetime')).order_by('start_datetime'),
593|            [(start_datetime, start_datetime.minute), (end_datetime, end_datetime.minute)],
594|            lambda m: (m.start_datetime, m.extracted)
595|        )
596|        self.assertQuerysetEqual(
597|            DTModel.objects.annotate(extracted=ExtractMinute('start_time')).order_by('start_datetime'),
598|            [(start_datetime, start_datetime.minute), (end_datetime, end_datetime.minute)],
599|            lambda m: (m.start_datetime, m.extracted)
600|        )
601|        self.assertEqual(DTModel.objects.filter(start_datetime__minute=ExtractMinute('start_datetime')).count(), 2)
602|
603|    def test_extract_second_func(self):
604|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
605|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
606|        if settings.USE_TZ:
607|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
608|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
609|        self.create_model(start_datetime, end_datetime)
610|        self.create_model(end_datetime, start_datetime)
611|        self.assertQuerysetEqual(
612|            DTModel.objects.annotate(extracted=ExtractSecond('start_datetime')).order_by('start_datetime'),
613|            [(start_datetime, start_datetime.second), (end_datetime, end_datetime.second)],
614|            lambda m: (m.start_datetime, m.extracted)
615|        )
616|        self.assertQuerysetEqual(
617|            DTModel.objects.annotate(extracted=ExtractSecond('start_time')).order_by('start_datetime'),
618|            [(start_datetime, start_datetime.second), (end_datetime, end_datetime.second)],
619|            lambda m: (m.start_datetime, m.extracted)
620|        )
621|        self.assertEqual(DTModel.objects.filter(start_datetime__second=ExtractSecond('start_datetime')).count(), 2)
622|
623|    def test_trunc_func(self):
624|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
625|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
626|        if settings.USE_TZ:
627|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
628|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
629|        self.create_model(start_datetime, end_datetime)
630|        self.create_model(end_datetime, start_datetime)
631|
632|        msg = 'output_field must be either DateField, TimeField, or DateTimeField'
633|        with self.assertRaisesMessage(ValueError, msg):
634|            list(DTModel.objects.annotate(truncated=Trunc('start_datetime', 'year', output_field=IntegerField())))
635|
636|        with self.assertRaisesMessage(AssertionError, "'name' isn't a DateField, TimeField, or DateTimeField."):
637|            list(DTModel.objects.annotate(truncated=Trunc('name', 'year', output_field=DateTimeField())))
638|
639|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to DateTimeField"):
640|            list(DTModel.objects.annotate(truncated=Trunc('start_date', 'second')))
641|
642|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
643|            list(DTModel.objects.annotate(truncated=Trunc('start_time', 'month')))
644|
645|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to DateTimeField"):
646|            list(DTModel.objects.annotate(truncated=Trunc('start_date', 'month', output_field=DateTimeField())))
647|
648|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
649|            list(DTModel.objects.annotate(truncated=Trunc('start_time', 'second', output_field=DateTimeField())))
650|
651|        def test_datetime_kind(kind):
652|            self.assertQuerysetEqual(
653|                DTModel.objects.annotate(
654|                    truncated=Trunc('start_datetime', kind, output_field=DateTimeField())
655|                ).order_by('start_datetime'),
656|                [
657|                    (start_datetime, truncate_to(start_datetime, kind)),
658|                    (end_datetime, truncate_to(end_datetime, kind))
659|                ],
660|                lambda m: (m.start_datetime, m.truncated)
661|            )
662|
663|        def test_date_kind(kind):
664|            self.assertQuerysetEqual(
665|                DTModel.objects.annotate(
666|                    truncated=Trunc('start_date', kind, output_field=DateField())
667|                ).order_by('start_datetime'),
668|                [
669|                    (start_datetime, truncate_to(start_datetime.date(), kind)),
670|                    (end_datetime, truncate_to(end_datetime.date(), kind))
671|                ],
672|                lambda m: (m.start_datetime, m.truncated)
673|            )
674|
675|        def test_time_kind(kind):
676|            self.assertQuerysetEqual(
677|                DTModel.objects.annotate(
678|                    truncated=Trunc('start_time', kind, output_field=TimeField())
679|                ).order_by('start_datetime'),
680|                [
681|                    (start_datetime, truncate_to(start_datetime.time(), kind)),
682|                    (end_datetime, truncate_to(end_datetime.time(), kind))
683|                ],
684|                lambda m: (m.start_datetime, m.truncated)
685|            )
686|
687|        def test_datetime_to_time_kind(kind):
688|            self.assertQuerysetEqual(
689|                DTModel.objects.annotate(
690|                    truncated=Trunc('start_datetime', kind, output_field=TimeField()),
691|                ).order_by('start_datetime'),
692|                [
693|                    (start_datetime, truncate_to(start_datetime.time(), kind)),
694|                    (end_datetime, truncate_to(end_datetime.time(), kind)),
695|                ],
696|                lambda m: (m.start_datetime, m.truncated),
697|            )
698|
699|        test_date_kind('year')
700|        test_date_kind('quarter')
701|        test_date_kind('month')
702|        test_date_kind('week')
703|        test_date_kind('day')
704|        test_time_kind('hour')
705|        test_time_kind('minute')
706|        test_time_kind('second')
707|        test_datetime_kind('year')
708|        test_datetime_kind('quarter')
709|        test_datetime_kind('month')
710|        test_datetime_kind('week')
711|        test_datetime_kind('day')
712|        test_datetime_kind('hour')
713|        test_datetime_kind('minute')
714|        test_datetime_kind('second')
715|        test_datetime_to_time_kind('hour')
716|        test_datetime_to_time_kind('minute')
717|        test_datetime_to_time_kind('second')
718|
719|        qs = DTModel.objects.filter(start_datetime__date=Trunc('start_datetime', 'day', output_field=DateField()))
720|        self.assertEqual(qs.count(), 2)
721|
722|    def test_trunc_none(self):
723|        self.create_model(None, None)
724|        for t in (Trunc('start_datetime', 'year'), Trunc('start_date', 'year'), Trunc('start_time', 'hour')):
725|            with self.subTest(t):
726|                self.assertIsNone(DTModel.objects.annotate(truncated=t).first().truncated)
727|
728|    def test_trunc_year_func(self):
729|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
730|        end_datetime = truncate_to(datetime(2016, 6, 15, 14, 10, 50, 123), 'year')
731|        if settings.USE_TZ:
732|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
733|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
734|        self.create_model(start_datetime, end_datetime)
735|        self.create_model(end_datetime, start_datetime)
736|        self.assertQuerysetEqual(
737|            DTModel.objects.annotate(extracted=TruncYear('start_datetime')).order_by('start_datetime'),
738|            [
739|                (start_datetime, truncate_to(start_datetime, 'year')),
740|                (end_datetime, truncate_to(end_datetime, 'year')),
741|            ],
742|            lambda m: (m.start_datetime, m.extracted)
743|        )
744|        self.assertQuerysetEqual(
745|            DTModel.objects.annotate(extracted=TruncYear('start_date')).order_by('start_datetime'),
746|            [
747|                (start_datetime, truncate_to(start_datetime.date(), 'year')),
748|                (end_datetime, truncate_to(end_datetime.date(), 'year')),
749|            ],
750|            lambda m: (m.start_datetime, m.extracted)
751|        )
752|        self.assertEqual(DTModel.objects.filter(start_datetime=TruncYear('start_datetime')).count(), 1)
753|
754|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
755|            list(DTModel.objects.annotate(truncated=TruncYear('start_time')))
756|
757|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
758|            list(DTModel.objects.annotate(truncated=TruncYear('start_time', output_field=TimeField())))
759|
760|    def test_trunc_quarter_func(self):
761|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
762|        end_datetime = truncate_to(datetime(2016, 10, 15, 14, 10, 50, 123), 'quarter')
763|        last_quarter_2015 = truncate_to(datetime(2015, 12, 31, 14, 10, 50, 123), 'quarter')
764|        first_quarter_2016 = truncate_to(datetime(2016, 1, 1, 14, 10, 50, 123), 'quarter')
765|        if settings.USE_TZ:
766|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
767|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
768|            last_quarter_2015 = timezone.make_aware(last_quarter_2015, is_dst=False)
769|            first_quarter_2016 = timezone.make_aware(first_quarter_2016, is_dst=False)
770|        self.create_model(start_datetime=start_datetime, end_datetime=end_datetime)
771|        self.create_model(start_datetime=end_datetime, end_datetime=start_datetime)
772|        self.create_model(start_datetime=last_quarter_2015, end_datetime=end_datetime)
773|        self.create_model(start_datetime=first_quarter_2016, end_datetime=end_datetime)
774|        self.assertQuerysetEqual(
775|            DTModel.objects.annotate(extracted=TruncQuarter('start_date')).order_by('start_datetime'),
776|            [
777|                (start_datetime, truncate_to(start_datetime.date(), 'quarter')),
778|                (last_quarter_2015, truncate_to(last_quarter_2015.date(), 'quarter')),
779|                (first_quarter_2016, truncate_to(first_quarter_2016.date(), 'quarter')),
780|                (end_datetime, truncate_to(end_datetime.date(), 'quarter')),
781|            ],
782|            lambda m: (m.start_datetime, m.extracted)
783|        )
784|        self.assertQuerysetEqual(
785|            DTModel.objects.annotate(extracted=TruncQuarter('start_datetime')).order_by('start_datetime'),
786|            [
787|                (start_datetime, truncate_to(start_datetime, 'quarter')),
788|                (last_quarter_2015, truncate_to(last_quarter_2015, 'quarter')),
789|                (first_quarter_2016, truncate_to(first_quarter_2016, 'quarter')),
790|                (end_datetime, truncate_to(end_datetime, 'quarter')),
791|            ],
792|            lambda m: (m.start_datetime, m.extracted)
793|        )
794|
795|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
796|            list(DTModel.objects.annotate(truncated=TruncQuarter('start_time')))
797|
798|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
799|            list(DTModel.objects.annotate(truncated=TruncQuarter('start_time', output_field=TimeField())))
800|
801|    def test_trunc_month_func(self):
802|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
803|        end_datetime = truncate_to(datetime(2016, 6, 15, 14, 10, 50, 123), 'month')
804|        if settings.USE_TZ:
805|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
806|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
807|        self.create_model(start_datetime, end_datetime)
808|        self.create_model(end_datetime, start_datetime)
809|        self.assertQuerysetEqual(
810|            DTModel.objects.annotate(extracted=TruncMonth('start_datetime')).order_by('start_datetime'),
811|            [
812|                (start_datetime, truncate_to(start_datetime, 'month')),
813|                (end_datetime, truncate_to(end_datetime, 'month')),
814|            ],
815|            lambda m: (m.start_datetime, m.extracted)
816|        )
817|        self.assertQuerysetEqual(
818|            DTModel.objects.annotate(extracted=TruncMonth('start_date')).order_by('start_datetime'),
819|            [
820|                (start_datetime, truncate_to(start_datetime.date(), 'month')),
821|                (end_datetime, truncate_to(end_datetime.date(), 'month')),
822|            ],
823|            lambda m: (m.start_datetime, m.extracted)
824|        )
825|        self.assertEqual(DTModel.objects.filter(start_datetime=TruncMonth('start_datetime')).count(), 1)
826|
827|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
828|            list(DTModel.objects.annotate(truncated=TruncMonth('start_time')))
829|
830|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
831|            list(DTModel.objects.annotate(truncated=TruncMonth('start_time', output_field=TimeField())))
832|
833|    def test_trunc_week_func(self):
834|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
835|        end_datetime = truncate_to(datetime(2016, 6, 15, 14, 10, 50, 123), 'week')
836|        if settings.USE_TZ:
837|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
838|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
839|        self.create_model(start_datetime, end_datetime)
840|        self.create_model(end_datetime, start_datetime)
841|        self.assertQuerysetEqual(
842|            DTModel.objects.annotate(extracted=TruncWeek('start_datetime')).order_by('start_datetime'),
843|            [
844|                (start_datetime, truncate_to(start_datetime, 'week')),
845|                (end_datetime, truncate_to(end_datetime, 'week')),
846|            ],
847|            lambda m: (m.start_datetime, m.extracted)
848|        )
849|        self.assertEqual(DTModel.objects.filter(start_datetime=TruncWeek('start_datetime')).count(), 1)
850|
851|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
852|            list(DTModel.objects.annotate(truncated=TruncWeek('start_time')))
853|
854|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
855|            list(DTModel.objects.annotate(truncated=TruncWeek('start_time', output_field=TimeField())))
856|
857|    def test_trunc_date_func(self):
858|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
859|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
860|        if settings.USE_TZ:
861|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
862|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
863|        self.create_model(start_datetime, end_datetime)
864|        self.create_model(end_datetime, start_datetime)
865|        self.assertQuerysetEqual(
866|            DTModel.objects.annotate(extracted=TruncDate('start_datetime')).order_by('start_datetime'),
867|            [
868|                (start_datetime, start_datetime.date()),
869|                (end_datetime, end_datetime.date()),
870|            ],
871|            lambda m: (m.start_datetime, m.extracted)
872|        )
873|        self.assertEqual(DTModel.objects.filter(start_datetime__date=TruncDate('start_datetime')).count(), 2)
874|
875|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateField"):
876|            list(DTModel.objects.annotate(truncated=TruncDate('start_time')))
877|
878|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateField"):
879|            list(DTModel.objects.annotate(truncated=TruncDate('start_time', output_field=TimeField())))
880|
881|    def test_trunc_date_none(self):
882|        self.create_model(None, None)
883|        self.assertIsNone(DTModel.objects.annotate(truncated=TruncDate('start_datetime')).first().truncated)
884|
885|    def test_trunc_time_func(self):
886|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
887|        end_datetime = datetime(2016, 6, 15, 14, 10, 50, 123)
888|        if settings.USE_TZ:
889|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
890|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
891|        self.create_model(start_datetime, end_datetime)
892|        self.create_model(end_datetime, start_datetime)
893|        self.assertQuerysetEqual(
894|            DTModel.objects.annotate(extracted=TruncTime('start_datetime')).order_by('start_datetime'),
895|            [
896|                (start_datetime, start_datetime.time()),
897|                (end_datetime, end_datetime.time()),
898|            ],
899|            lambda m: (m.start_datetime, m.extracted)
900|        )
901|        self.assertEqual(DTModel.objects.filter(start_datetime__time=TruncTime('start_datetime')).count(), 2)
902|
903|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to TimeField"):
904|            list(DTModel.objects.annotate(truncated=TruncTime('start_date')))
905|
906|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to TimeField"):
907|            list(DTModel.objects.annotate(truncated=TruncTime('start_date', output_field=DateField())))
908|
909|    def test_trunc_time_none(self):
910|        self.create_model(None, None)
911|        self.assertIsNone(DTModel.objects.annotate(truncated=TruncTime('start_datetime')).first().truncated)
912|
913|    def test_trunc_day_func(self):
914|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
915|        end_datetime = truncate_to(datetime(2016, 6, 15, 14, 10, 50, 123), 'day')
916|        if settings.USE_TZ:
917|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
918|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
919|        self.create_model(start_datetime, end_datetime)
920|        self.create_model(end_datetime, start_datetime)
921|        self.assertQuerysetEqual(
922|            DTModel.objects.annotate(extracted=TruncDay('start_datetime')).order_by('start_datetime'),
923|            [
924|                (start_datetime, truncate_to(start_datetime, 'day')),
925|                (end_datetime, truncate_to(end_datetime, 'day')),
926|            ],
927|            lambda m: (m.start_datetime, m.extracted)
928|        )
929|        self.assertEqual(DTModel.objects.filter(start_datetime=TruncDay('start_datetime')).count(), 1)
930|
931|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
932|            list(DTModel.objects.annotate(truncated=TruncDay('start_time')))
933|
934|        with self.assertRaisesMessage(ValueError, "Cannot truncate TimeField 'start_time' to DateTimeField"):
935|            list(DTModel.objects.annotate(truncated=TruncDay('start_time', output_field=TimeField())))
936|
937|    def test_trunc_hour_func(self):
938|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
939|        end_datetime = truncate_to(datetime(2016, 6, 15, 14, 10, 50, 123), 'hour')
940|        if settings.USE_TZ:
941|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
942|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
943|        self.create_model(start_datetime, end_datetime)
944|        self.create_model(end_datetime, start_datetime)
945|        self.assertQuerysetEqual(
946|            DTModel.objects.annotate(extracted=TruncHour('start_datetime')).order_by('start_datetime'),
947|            [
948|                (start_datetime, truncate_to(start_datetime, 'hour')),
949|                (end_datetime, truncate_to(end_datetime, 'hour')),
950|            ],
951|            lambda m: (m.start_datetime, m.extracted)
952|        )
953|        self.assertQuerysetEqual(
954|            DTModel.objects.annotate(extracted=TruncHour('start_time')).order_by('start_datetime'),
955|            [
956|                (start_datetime, truncate_to(start_datetime.time(), 'hour')),
957|                (end_datetime, truncate_to(end_datetime.time(), 'hour')),
958|            ],
959|            lambda m: (m.start_datetime, m.extracted)
960|        )
961|        self.assertEqual(DTModel.objects.filter(start_datetime=TruncHour('start_datetime')).count(), 1)
962|
963|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to DateTimeField"):
964|            list(DTModel.objects.annotate(truncated=TruncHour('start_date')))
965|
966|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to DateTimeField"):
967|            list(DTModel.objects.annotate(truncated=TruncHour('start_date', output_field=DateField())))
968|
969|    def test_trunc_minute_func(self):
970|        start_datetime = datetime(2015, 6, 15, 14, 30, 50, 321)
971|        end_datetime = truncate_to(datetime(2016, 6, 15, 14, 10, 50, 123), 'minute')
972|        if settings.USE_TZ:
973|            start_datetime = timezone.make_aware(start_datetime, is_dst=False)
974|            end_datetime = timezone.make_aware(end_datetime, is_dst=False)
975|        self.create_model(start_datetime, end_datetime)
976|        self.create_model(end_datetime, start_datetime)
977|        self.assertQuerysetEqual(
978|            DTModel.objects.annotate(extracted=TruncMinute('start_datetime')).order_by('start_datetime'),
979|            [
980|                (start_datetime, truncate_to(start_datetime, 'minute')),
981|                (end_datetime, truncate_to(end_datetime, 'minute')),
982|            ],
983|            lambda m: (m.start_datetime, m.extracted)
984|        )
985|        self.assertQuerysetEqual(
986|            DTModel.objects.annotate(extracted=TruncMinute('start_time')).order_by('start_datetime'),
987|            [
988|                (start_datetime, truncate_to(start_datetime.time(), 'minute')),
989|                (end_datetime, truncate_to(end_datetime.time(), 'minute')),
990|            ],
991|            lambda m: (m.start_datetime, m.extracted)
992|        )
993|        self.assertEqual(DTModel.objects.filter(start_datetime=TruncMinute('start_datetime')).count(), 1)
994|
995|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to DateTimeField"):
996|            list(DTModel.objects.annotate(truncated=TruncMinute('start_date')))
997|
998|        with self.assertRaisesMessage(ValueError, "Cannot truncate DateField 'start_date' to DateTimeField"):
999|            list(DTModel.objects.annotate(truncated=TruncMinute('start_date', output_field=DateField())))
1000|
(324 more lines below)


============================================================



ACTION:

Planner Invoked

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/lookups.py (647 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -521,62 +521,62 @@
 class Regex(BuiltinLookup):
     lookup_name = 'regex'
     prepare_rhs = False
 
     def as_sql(self, compiler, connection):
         if self.lookup_name in connection.operators:
             return super().as_sql(compiler, connection)
         else:
             lhs, lhs_params = self.process_lhs(compiler, connection)
             rhs, rhs_params = self.process_rhs(compiler, connection)
             sql_template = connection.ops.regex_lookup(self.lookup_name)
             return sql_template % (lhs, rhs), lhs_params + rhs_params
 
 
 @Field.register_lookup
 class IRegex(Regex):
     lookup_name = 'iregex'
 
 
 class YearLookup(Lookup):
     def year_lookup_bounds(self, connection, year):
         output_field = self.lhs.lhs.output_field
         if isinstance(output_field, DateTimeField):
             bounds = connection.ops.year_lookup_bounds_for_datetime_field(year)
         else:
             bounds = connection.ops.year_lookup_bounds_for_date_field(year)
         return bounds
 
     def as_sql(self, compiler, connection):
         # Avoid the extract operation if the rhs is a direct value to allow
-        # indexes to be used.
-        if self.rhs_is_direct_value():
+        # indexes to be used, but only for calendar year lookup.
+        if self.rhs_is_direct_value() and not isinstance(self.lhs, ExtractIsoYear):
             # Skip the extract part by directly using the originating field,
             # that is self.lhs.lhs.
             lhs_sql, params = self.process_lhs(compiler, connection, self.lhs.lhs)
             rhs_sql, _ = self.process_rhs(compiler, connection)
             rhs_sql = self.get_direct_rhs_sql(connection, rhs_sql)
             start, finish = self.year_lookup_bounds(connection, self.rhs)
             params.extend(self.get_bound_params(start, finish))
             return '%s %s' % (lhs_sql, rhs_sql), params
         return super().as_sql(compiler, connection)
 
     def get_direct_rhs_sql(self, connection, rhs):
         return connection.operators[self.lookup_name] % rhs
 
     def get_bound_params(self, start, finish):
         raise NotImplementedError(
             'subclasses of YearLookup must provide a get_bound_params() method'
         )
 
 
 class YearExact(YearLookup, Exact):
     def get_direct_rhs_sql(self, connection, rhs):
         return 'BETWEEN %s AND %s'
 
     def get_bound_params(self, start, finish):
         return (start, finish)
 
 
 class YearGt(YearLookup, GreaterThan):
     def get_bound_params(self, start, finish):
         return (finish,)
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]
-------------------------------------------------
WARNINGS:
/workspace/django__django__4.0/django/db/models/lookups.py:552:68: F821 undefined name 'ExtractIsoYear'
-------------------------------------------------
[The edit has introduced undefined items. Please understand and fix this in the next edit commands.]



============================================================



ACTION:

THOUGHT: Ah, I need to import ExtractIsoYear. Let me fix that:
CODE:
DIFF_STRING = """<<<<<<< SEARCH
from django.db.models.expressions import Case, Exists, Func, Value, When
from django.db.models.fields import (
    CharField, DateTimeField, Field, IntegerField, UUIDField,
)
=======
from django.db.models.expressions import Case, Exists, Func, Value, When
from django.db.models.fields import (
    CharField, DateTimeField, Field, IntegerField, UUIDField,
)
from django.db.models.functions import ExtractIsoYear
>>>>>>> REPLACE"""
edit_file('/workspace/django__django__4.0/django/db/models/lookups.py', DIFF_STRING)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/lookups.py (648 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -1,39 +1,40 @@
 import itertools
 import math
 from copy import copy
 
 from django.core.exceptions import EmptyResultSet
 from django.db.models.expressions import Case, Exists, Func, Value, When
 from django.db.models.fields import (
     CharField, DateTimeField, Field, IntegerField, UUIDField,
 )
+from django.db.models.functions import ExtractIsoYear
 from django.db.models.query_utils import RegisterLookupMixin
 from django.utils.datastructures import OrderedSet
 from django.utils.functional import cached_property
 from django.utils.hashable import make_hashable
 
 
 class Lookup:
     lookup_name = None
     prepare_rhs = True
     can_use_none_as_rhs = False
 
     def __init__(self, lhs, rhs):
         self.lhs, self.rhs = lhs, rhs
         self.rhs = self.get_prep_lookup()
         if hasattr(self.lhs, 'get_bilateral_transforms'):
             bilateral_transforms = self.lhs.get_bilateral_transforms()
         else:
             bilateral_transforms = []
         if bilateral_transforms:
             # Warn the user as soon as possible if they are trying to apply
             # a bilateral transformation on a nested QuerySet: that won't work.
             from django.db.models.sql.query import (  # avoid circular import
                 Query,
             )
             if isinstance(rhs, Query):
                 raise NotImplementedError("Bilateral transformations on nested querysets are not implemented.")
         self.bilateral_transforms = bilateral_transforms
 
     def apply_bilateral_transforms(self, value):
         for transform in self.bilateral_transforms:
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The changes look good. Now let's run our reproduction script again to verify the fix:
COMMAND:
cd /workspace && PYTHONPATH=/workspace/django__django__4.0 python3 reproduce.py

============================================================



OBSERVATION:

Traceback (most recent call last):
  File "reproduce.py", line 4, in <module>
    from django.db import models
  File "/workspace/django__django__4.0/django/db/models/__init__.py", line 3, in <module>
    from django.db.models.aggregates import *  # NOQA
  File "/workspace/django__django__4.0/django/db/models/aggregates.py", line 7, in <module>
    from django.db.models.functions.mixins import (
  File "/workspace/django__django__4.0/django/db/models/functions/__init__.py", line 1, in <module>
    from .comparison import (
  File "/workspace/django__django__4.0/django/db/models/functions/comparison.py", line 4, in <module>
    from django.db.models.fields.json import JSONField
  File "/workspace/django__django__4.0/django/db/models/fields/json.py", line 6, in <module>
    from django.db.models import lookups
  File "/workspace/django__django__4.0/django/db/models/lookups.py", line 10, in <module>
    from django.db.models.functions import ExtractIsoYear
ImportError: cannot import name 'ExtractIsoYear' from partially initialized module 'django.db.models.functions' (most likely due to a circular import) (/workspace/django__django__4.0/django/db/models/functions/__init__.py)


============================================================



ACTION:

THOUGHT: Ah, we have a circular import issue. Let me fix this by moving the import inside the method where it's used:
CODE:
DIFF_STRING = """<<<<<<< SEARCH
from django.db.models.expressions import Case, Exists, Func, Value, When
from django.db.models.fields import (
    CharField, DateTimeField, Field, IntegerField, UUIDField,
)
from django.db.models.functions import ExtractIsoYear
=======
from django.db.models.expressions import Case, Exists, Func, Value, When
from django.db.models.fields import (
    CharField, DateTimeField, Field, IntegerField, UUIDField,
)
>>>>>>> REPLACE"""
edit_file('/workspace/django__django__4.0/django/db/models/lookups.py', DIFF_STRING)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/lookups.py (647 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -1,40 +1,39 @@
 import itertools
 import math
 from copy import copy
 
 from django.core.exceptions import EmptyResultSet
 from django.db.models.expressions import Case, Exists, Func, Value, When
 from django.db.models.fields import (
     CharField, DateTimeField, Field, IntegerField, UUIDField,
 )
-from django.db.models.functions import ExtractIsoYear
 from django.db.models.query_utils import RegisterLookupMixin
 from django.utils.datastructures import OrderedSet
 from django.utils.functional import cached_property
 from django.utils.hashable import make_hashable
 
 
 class Lookup:
     lookup_name = None
     prepare_rhs = True
     can_use_none_as_rhs = False
 
     def __init__(self, lhs, rhs):
         self.lhs, self.rhs = lhs, rhs
         self.rhs = self.get_prep_lookup()
         if hasattr(self.lhs, 'get_bilateral_transforms'):
             bilateral_transforms = self.lhs.get_bilateral_transforms()
         else:
             bilateral_transforms = []
         if bilateral_transforms:
             # Warn the user as soon as possible if they are trying to apply
             # a bilateral transformation on a nested QuerySet: that won't work.
             from django.db.models.sql.query import (  # avoid circular import
                 Query,
             )
             if isinstance(rhs, Query):
                 raise NotImplementedError("Bilateral transformations on nested querysets are not implemented.")
         self.bilateral_transforms = bilateral_transforms
 
     def apply_bilateral_transforms(self, value):
         for transform in self.bilateral_transforms:
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]
-------------------------------------------------
WARNINGS:
/workspace/django__django__4.0/django/db/models/lookups.py:552:68: F821 undefined name 'ExtractIsoYear'
-------------------------------------------------
[The edit has introduced undefined items. Please understand and fix this in the next edit commands.]



============================================================



ACTION:

THOUGHT: Let me modify the YearLookup class to avoid the circular import by checking the lookup name instead of the instance type:
CODE:
DIFF_STRING = """<<<<<<< SEARCH
    def as_sql(self, compiler, connection):
        # Avoid the extract operation if the rhs is a direct value to allow
        # indexes to be used, but only for calendar year lookup.
        if self.rhs_is_direct_value() and not isinstance(self.lhs, ExtractIsoYear):
=======
    def as_sql(self, compiler, connection):
        # Avoid the extract operation if the rhs is a direct value to allow
        # indexes to be used, but only for calendar year lookup.
        if self.rhs_is_direct_value() and getattr(self.lhs, 'lookup_name', None) != 'iso_year':
>>>>>>> REPLACE"""
edit_file('/workspace/django__django__4.0/django/db/models/lookups.py', DIFF_STRING)

============================================================



OBSERVATION:

[File: /workspace/django__django__4.0/django/db/models/lookups.py (647 lines total after edit)]
[Diff of the changes applied. Please review the diff and remove if there are any redundant code lines or duplicates introduced or left to be removed.]
--- 
+++ 
@@ -522,61 +522,61 @@
     lookup_name = 'regex'
     prepare_rhs = False
 
     def as_sql(self, compiler, connection):
         if self.lookup_name in connection.operators:
             return super().as_sql(compiler, connection)
         else:
             lhs, lhs_params = self.process_lhs(compiler, connection)
             rhs, rhs_params = self.process_rhs(compiler, connection)
             sql_template = connection.ops.regex_lookup(self.lookup_name)
             return sql_template % (lhs, rhs), lhs_params + rhs_params
 
 
 @Field.register_lookup
 class IRegex(Regex):
     lookup_name = 'iregex'
 
 
 class YearLookup(Lookup):
     def year_lookup_bounds(self, connection, year):
         output_field = self.lhs.lhs.output_field
         if isinstance(output_field, DateTimeField):
             bounds = connection.ops.year_lookup_bounds_for_datetime_field(year)
         else:
             bounds = connection.ops.year_lookup_bounds_for_date_field(year)
         return bounds
 
     def as_sql(self, compiler, connection):
         # Avoid the extract operation if the rhs is a direct value to allow
         # indexes to be used, but only for calendar year lookup.
-        if self.rhs_is_direct_value() and not isinstance(self.lhs, ExtractIsoYear):
+        if self.rhs_is_direct_value() and getattr(self.lhs, 'lookup_name', None) != 'iso_year':
             # Skip the extract part by directly using the originating field,
             # that is self.lhs.lhs.
             lhs_sql, params = self.process_lhs(compiler, connection, self.lhs.lhs)
             rhs_sql, _ = self.process_rhs(compiler, connection)
             rhs_sql = self.get_direct_rhs_sql(connection, rhs_sql)
             start, finish = self.year_lookup_bounds(connection, self.rhs)
             params.extend(self.get_bound_params(start, finish))
             return '%s %s' % (lhs_sql, rhs_sql), params
         return super().as_sql(compiler, connection)
 
     def get_direct_rhs_sql(self, connection, rhs):
         return connection.operators[self.lookup_name] % rhs
 
     def get_bound_params(self, start, finish):
         raise NotImplementedError(
             'subclasses of YearLookup must provide a get_bound_params() method'
         )
 
 
 class YearExact(YearLookup, Exact):
     def get_direct_rhs_sql(self, connection, rhs):
         return 'BETWEEN %s AND %s'
 
     def get_bound_params(self, start, finish):
         return (start, finish)
 
 
 class YearGt(YearLookup, GreaterThan):
     def get_bound_params(self, start, finish):
         return (finish,)
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The changes look good. Now let's run our reproduction script again to verify the fix:
COMMAND:
cd /workspace && PYTHONPATH=/workspace/django__django__4.0 python3 reproduce.py

============================================================



OBSERVATION:


Testing annotation:
Query: SELECT django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'America/Chicago', 'UTC') AS "extracted" FROM "repro_dtmodel"
Result: [{'extracted': 2020}]

Testing filter:
Query: SELECT "repro_dtmodel"."id", "repro_dtmodel"."start_date" FROM "repro_dtmodel" WHERE django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'America/Chicago', 'UTC') = 2021
Count: 0


============================================================



ACTION:

THOUGHT: The fix appears to be working! Let's analyze the results:

1. Annotation query:
```sql
SELECT django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'America/Chicago', 'UTC') AS "extracted" FROM "repro_dtmodel"
```
- Now correctly uses `django_datetime_extract` with 'iso_year'

2. Filter query:
```sql
SELECT "repro_dtmodel"."id", "repro_dtmodel"."start_date" FROM "repro_dtmodel" WHERE django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'America/Chicago', 'UTC') = 2021
```
- No longer uses the incorrect BETWEEN optimization
- Correctly uses `django_datetime_extract` with 'iso_year'

However, we're still getting Count: 0 for the filter. Let me modify our test case to use the correct timezone handling:
CODE:
CODE = """
import os
import django
from django.db import models
from django.test import TestCase
from django.conf import settings

# Configure minimal django settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=['django.contrib.contenttypes'],
    USE_TZ=True,
    TIME_ZONE='UTC'
)
django.setup()

# Create test model
class DTModel(models.Model):
    start_date = models.DateTimeField()
    
    class Meta:
        app_label = 'repro'

# Create the test case
if __name__ == '__main__':
    # Create table
    from django.db import connection
    with connection.schema_editor() as schema_editor:
        schema_editor.create_model(DTModel)
    
    # Insert test data - date that has different calendar year vs iso year
    from django.utils import timezone
    import datetime
    
    # Create a date that's in calendar year 2020 but ISO year 2021
    # Week 53 of 2020 is actually ISO year 2021
    dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
    DTModel.objects.create(start_date=dt)
    
    # Test queries
    print("\\nTesting annotation:")
    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
    print(f"Query: {qs.query}")
    print(f"Result: {list(qs)}")
    
    print("\\nTesting filter:")
    qs = DTModel.objects.filter(start_date__iso_year=2021)
    print(f"Query: {qs.query}")
    print(f"Count: {qs.count()}")
"""
create_file('reproduce.py', CODE)

============================================================



OBSERVATION:

[File reproduce.py already exists and File overwritten.]
[File: /workspace/reproduce.py (54 lines total after edit)]
1|
2|import os
3|import django
4|from django.db import models
5|from django.test import TestCase
6|from django.conf import settings
7|
8|# Configure minimal django settings
9|settings.configure(
10|    DATABASES={
11|        'default': {
12|            'ENGINE': 'django.db.backends.sqlite3',
13|            'NAME': ':memory:',
14|        }
15|    },
16|    INSTALLED_APPS=['django.contrib.contenttypes'],
17|    USE_TZ=True,
18|    TIME_ZONE='UTC'
19|)
20|django.setup()
21|
22|# Create test model
23|class DTModel(models.Model):
24|    start_date = models.DateTimeField()
25|    
26|    class Meta:
27|        app_label = 'repro'
28|
29|# Create the test case
30|if __name__ == '__main__':
31|    # Create table
32|    from django.db import connection
33|    with connection.schema_editor() as schema_editor:
34|        schema_editor.create_model(DTModel)
35|    
36|    # Insert test data - date that has different calendar year vs iso year
37|    from django.utils import timezone
38|    import datetime
39|    
40|    # Create a date that's in calendar year 2020 but ISO year 2021
41|    # Week 53 of 2020 is actually ISO year 2021
42|    dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
43|    DTModel.objects.create(start_date=dt)
44|    
45|    # Test queries
46|    print("\nTesting annotation:")
47|    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
48|    print(f"Query: {qs.query}")
49|    print(f"Result: {list(qs)}")
50|    
51|    print("\nTesting filter:")
52|    qs = DTModel.objects.filter(start_date__iso_year=2021)
53|    print(f"Query: {qs.query}")
54|    print(f"Count: {qs.count()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The script looks good. Let's run it to verify the fix with proper timezone handling:
COMMAND:
cd /workspace && PYTHONPATH=/workspace/django__django__4.0 python3 reproduce.py

============================================================



OBSERVATION:


Testing annotation:
Query: SELECT django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'UTC', 'UTC') AS "extracted" FROM "repro_dtmodel"
Result: [{'extracted': 2020}]

Testing filter:
Query: SELECT "repro_dtmodel"."id", "repro_dtmodel"."start_date" FROM "repro_dtmodel" WHERE django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'UTC', 'UTC') = 2021
Count: 0


============================================================



ACTION:

THOUGHT: We're still getting incorrect results. Let me check if we need to modify the test data. According to ISO 8601, week 53 of 2020 should be in ISO year 2021. Let me verify the exact date we need:
CODE:
CODE = """
import datetime
from datetime import timezone
import calendar

def get_iso_calendar_info(date):
    iso_year, iso_week, iso_day = date.isocalendar()
    return {
        'date': date,
        'calendar_year': date.year,
        'iso_year': iso_year,
        'iso_week': iso_week,
        'iso_day': iso_day,
        'weekday': calendar.day_name[date.weekday()]
    }

# Test Dec 31, 2020
dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
print("Dec 31, 2020 info:")
print(get_iso_calendar_info(dt))

# Test Jan 1, 2021
dt2 = datetime.datetime(2021, 1, 1, 12, 0, tzinfo=timezone.utc)
print("\nJan 1, 2021 info:")
print(get_iso_calendar_info(dt2))
"""
create_file('iso_test.py', CODE)

============================================================



OBSERVATION:

[File iso_test.py created.]
[Your proposed edit has introduced new syntax error(s). Please understand the errors and retry your edit command.]
ERRORS:
iso_test.py:24:7: E999 SyntaxError: EOL while scanning string literal
[This is how your edit would have looked if applied]
-------------------------------------------------
(16 more lines above)
17|# Test Dec 31, 2020
18|dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
19|print("Dec 31, 2020 info:")
20|print(get_iso_calendar_info(dt))
21|
22|# Test Jan 1, 2021
23|dt2 = datetime.datetime(2021, 1, 1, 12, 0, tzinfo=timezone.utc)
24|print("
25|Jan 1, 2021 info:")
26|print(get_iso_calendar_info(dt2))
-------------------------------------------------

[This is the original code before your edit]
-------------------------------------------------
1|
-------------------------------------------------
Your changes have NOT been applied. Please fix your edit command and try again.
You either need to 1\) Specify the correct lines to replace or 2) Correct your edit code.
DO NOT re-run the same failed edit command. Running it again will lead to the same error.


============================================================



ACTION:

THOUGHT: Let me fix the syntax error in the test script:
CODE:
CODE = """
import datetime
from datetime import timezone
import calendar

def get_iso_calendar_info(date):
    iso_year, iso_week, iso_day = date.isocalendar()
    return {
        'date': date,
        'calendar_year': date.year,
        'iso_year': iso_year,
        'iso_week': iso_week,
        'iso_day': iso_day,
        'weekday': calendar.day_name[date.weekday()]
    }

# Test Dec 31, 2020
dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
print("Dec 31, 2020 info:")
print(get_iso_calendar_info(dt))

# Test Jan 1, 2021
dt2 = datetime.datetime(2021, 1, 1, 12, 0, tzinfo=timezone.utc)
print("\\nJan 1, 2021 info:")
print(get_iso_calendar_info(dt2))
"""
create_file('iso_test.py', CODE)

============================================================



OBSERVATION:

[File iso_test.py already exists and File overwritten.]
[File: /workspace/iso_test.py (25 lines total after edit)]
1|
2|import datetime
3|from datetime import timezone
4|import calendar
5|
6|def get_iso_calendar_info(date):
7|    iso_year, iso_week, iso_day = date.isocalendar()
8|    return {
9|        'date': date,
10|        'calendar_year': date.year,
11|        'iso_year': iso_year,
12|        'iso_week': iso_week,
13|        'iso_day': iso_day,
14|        'weekday': calendar.day_name[date.weekday()]
15|    }
16|
17|# Test Dec 31, 2020
18|dt = datetime.datetime(2020, 12, 31, 12, 0, tzinfo=timezone.utc)
19|print("Dec 31, 2020 info:")
20|print(get_iso_calendar_info(dt))
21|
22|# Test Jan 1, 2021
23|dt2 = datetime.datetime(2021, 1, 1, 12, 0, tzinfo=timezone.utc)
24|print("\nJan 1, 2021 info:")
25|print(get_iso_calendar_info(dt2))
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: Let's run the ISO calendar test to understand the dates better:
COMMAND:
cd /workspace && python3 iso_test.py

============================================================



OBSERVATION:

Dec 31, 2020 info:
{'date': datetime.datetime(2020, 12, 31, 12, 0, tzinfo=datetime.timezone.utc), 'calendar_year': 2020, 'iso_year': 2020, 'iso_week': 53, 'iso_day': 4, 'weekday': 'Thursday'}

Jan 1, 2021 info:
{'date': datetime.datetime(2021, 1, 1, 12, 0, tzinfo=datetime.timezone.utc), 'calendar_year': 2021, 'iso_year': 2020, 'iso_week': 53, 'iso_day': 5, 'weekday': 'Friday'}


============================================================



ACTION:

THOUGHT: Ah, now I see the issue! According to the test results:

1. Dec 31, 2020:
   - Calendar year: 2020
   - ISO year: 2020
   - ISO week: 53

2. Jan 1, 2021:
   - Calendar year: 2021
   - ISO year: 2020 (this is interesting!)
   - ISO week: 53

Let's modify our reproduction script to use Jan 3, 2021 (which should be in ISO year 2021) to properly test the fix:
CODE:
CODE = """
import os
import django
from django.db import models
from django.test import TestCase
from django.conf import settings

# Configure minimal django settings
settings.configure(
    DATABASES={
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    },
    INSTALLED_APPS=['django.contrib.contenttypes'],
    USE_TZ=True,
    TIME_ZONE='UTC'
)
django.setup()

# Create test model
class DTModel(models.Model):
    start_date = models.DateTimeField()
    
    class Meta:
        app_label = 'repro'

# Create the test case
if __name__ == '__main__':
    # Create table
    from django.db import connection
    with connection.schema_editor() as schema_editor:
        schema_editor.create_model(DTModel)
    
    # Insert test data - date that has different calendar year vs iso year
    from django.utils import timezone
    import datetime
    
    # Create a date that's in calendar year 2021 and ISO year 2021
    dt = datetime.datetime(2021, 1, 4, 12, 0, tzinfo=timezone.utc)  # Monday of Week 1, 2021
    DTModel.objects.create(start_date=dt)
    
    # Test queries
    print("\\nTesting annotation:")
    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
    print(f"Query: {qs.query}")
    print(f"Result: {list(qs)}")
    
    print("\\nTesting filter:")
    qs = DTModel.objects.filter(start_date__iso_year=2021)
    print(f"Query: {qs.query}")
    print(f"Count: {qs.count()}")
"""
create_file('reproduce.py', CODE)

============================================================



OBSERVATION:

[File reproduce.py already exists and File overwritten.]
[File: /workspace/reproduce.py (53 lines total after edit)]
1|
2|import os
3|import django
4|from django.db import models
5|from django.test import TestCase
6|from django.conf import settings
7|
8|# Configure minimal django settings
9|settings.configure(
10|    DATABASES={
11|        'default': {
12|            'ENGINE': 'django.db.backends.sqlite3',
13|            'NAME': ':memory:',
14|        }
15|    },
16|    INSTALLED_APPS=['django.contrib.contenttypes'],
17|    USE_TZ=True,
18|    TIME_ZONE='UTC'
19|)
20|django.setup()
21|
22|# Create test model
23|class DTModel(models.Model):
24|    start_date = models.DateTimeField()
25|    
26|    class Meta:
27|        app_label = 'repro'
28|
29|# Create the test case
30|if __name__ == '__main__':
31|    # Create table
32|    from django.db import connection
33|    with connection.schema_editor() as schema_editor:
34|        schema_editor.create_model(DTModel)
35|    
36|    # Insert test data - date that has different calendar year vs iso year
37|    from django.utils import timezone
38|    import datetime
39|    
40|    # Create a date that's in calendar year 2021 and ISO year 2021
41|    dt = datetime.datetime(2021, 1, 4, 12, 0, tzinfo=timezone.utc)  # Monday of Week 1, 2021
42|    DTModel.objects.create(start_date=dt)
43|    
44|    # Test queries
45|    print("\nTesting annotation:")
46|    qs = DTModel.objects.annotate(extracted=models.functions.ExtractIsoYear('start_date')).values('extracted')
47|    print(f"Query: {qs.query}")
48|    print(f"Result: {list(qs)}")
49|    
50|    print("\nTesting filter:")
51|    qs = DTModel.objects.filter(start_date__iso_year=2021)
52|    print(f"Query: {qs.query}")
53|    print(f"Count: {qs.count()}")
[File updated. Please review the changes carefully and make sure they are correct (correct indentation, no duplicate or redundant lines etc). Edit the file again if necessary.]


============================================================



ACTION:

THOUGHT: The script looks good. Let's run it to verify the fix with a date that should definitely be in ISO year 2021:
COMMAND:
cd /workspace && PYTHONPATH=/workspace/django__django__4.0 python3 reproduce.py

============================================================



OBSERVATION:


Testing annotation:
Query: SELECT django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'UTC', 'UTC') AS "extracted" FROM "repro_dtmodel"
Result: [{'extracted': 2021}]

Testing filter:
Query: SELECT "repro_dtmodel"."id", "repro_dtmodel"."start_date" FROM "repro_dtmodel" WHERE django_datetime_extract('iso_year', "repro_dtmodel"."start_date", 'UTC', 'UTC') = 2021
Count: 1



============================================================

