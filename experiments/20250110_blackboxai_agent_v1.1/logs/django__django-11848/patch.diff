diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/utils/http.py b/django/utils/http.py
index 572cfb4347..a59bf3b981 100644
--- a/django/utils/http.py
+++ b/django/utils/http.py
@@ -176,10 +176,32 @@ def parse_http_date(date):
     try:
         year = int(m.group('year'))
         if year < 100:
-            if year < 70:
-                year += 2000
+            # RFC 7231: Recipients of a timestamp value in rfc850-date format, which uses a
+            # two-digit year, MUST interpret a timestamp that appears to be more than 50 years
+            # in the future as representing the most recent year in the past that had the
+            # same last two digits.
+            current_year = datetime.datetime.utcnow().year
+            current_century = (current_year // 100) * 100
+            candidate_year = current_century + year
+            
+            # According to RFC 7231, if the year would be more than 50 years in the future,
+            # we should interpret it as being in the past century instead.
+            # For example, if current year is 2023:
+            # - '24' becomes 2024 (less than 50 years in future)
+            # - '73' becomes 1973 (2073 would be 50 years in future)
+            # - '99' becomes 1999 (2099 would be 76 years in future)
+            
+            # First try interpreting it in current century
+            this_century = current_century + year
+            
+            # Check if using current century would make it appear to be
+            # more than 50 years in the future from the current year.
+            # Note: RFC says "more than 50 years in the future", so we
+            # strictly check for more than 50 years ahead.
+            if this_century > current_year + 50:
+                year = this_century - 100
             else:
-                year += 1900
+                year = this_century
         month = MONTHS.index(m.group('mon').lower()) + 1
         day = int(m.group('day'))
         hour = int(m.group('hour'))
