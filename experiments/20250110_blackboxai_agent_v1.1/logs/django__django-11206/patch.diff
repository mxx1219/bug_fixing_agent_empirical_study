diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/utils/numberformat.py b/django/utils/numberformat.py
index 88b35fc435..517d79cb44 100644
--- a/django/utils/numberformat.py
+++ b/django/utils/numberformat.py
@@ -27,6 +27,20 @@ def format(number, decimal_sep, decimal_pos=None, grouping=0, thousand_sep='',
     # sign
     sign = ''
     if isinstance(number, Decimal):
+        # If decimal_pos is specified and number is smaller than what can be displayed,
+        # return "0" with the appropriate number of decimal places
+        if decimal_pos is not None:
+            # If the absolute value is smaller than 10^-decimal_pos, we won't have
+            # any non-zero digit before or after the decimal point
+            cutoff = Decimal('1e-{}'.format(decimal_pos))
+            if abs(number) < cutoff:
+                # handle sign
+                sign = '-' if number < 0 else ''
+                # e.g. decimal_pos=2 => "0.00"
+                zero_digits = '0' * decimal_pos
+                decimal_section = (decimal_sep + zero_digits) if decimal_pos > 0 else ''
+                return mark_safe(sign + '0' + decimal_section)
+
         # Format values with more than 200 digits (an arbitrary cutoff) using
         # scientific notation to avoid high memory usage in {:f}'.format().
         _, digits, exponent = number.as_tuple()
