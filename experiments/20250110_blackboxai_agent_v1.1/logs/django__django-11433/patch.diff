diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/forms/models.py b/django/forms/models.py
index 5edbbd376f..e61b7beadb 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -39,24 +39,35 @@ def construct_instance(form, instance, fields=None, exclude=None):
     cleaned_data = form.cleaned_data
     file_field_list = []
     for f in opts.fields:
-        if not f.editable or isinstance(f, models.AutoField) \
-                or f.name not in cleaned_data:
+        if not f.editable or isinstance(f, models.AutoField):
             continue
+
+        # Always process fields in cleaned_data, regardless of form fields, exclude, or fields list
+        if f.name in cleaned_data:
+            if isinstance(f, models.FileField):
+                file_field_list.append(f)
+            else:
+                f.save_form_data(instance, cleaned_data[f.name])
+            continue
+
+        # For remaining fields, respect the fields/exclude parameters
         if fields is not None and f.name not in fields:
             continue
-        if exclude and f.name in exclude:
+
+        # For fields not in cleaned_data, only process if they're in form fields
+        if f.name not in form.fields:
             continue
-        # Leave defaults for fields that aren't in POST data, except for
-        # checkbox inputs because they don't appear in POST data if not checked.
+
+        # Leave defaults for fields that aren't in POST data except for checkboxes
         if (f.has_default() and
                 form[f.name].field.widget.value_omitted_from_data(form.data, form.files, form.add_prefix(f.name))):
             continue
-        # Defer saving file-type fields until after the other fields, so a
-        # callable upload_to can use the values from other fields.
+
+        # Handle fields in form normally
         if isinstance(f, models.FileField):
             file_field_list.append(f)
         else:
-            f.save_form_data(instance, cleaned_data[f.name])
+            f.save_form_data(instance, cleaned_data.get(f.name))
 
     for f in file_field_list:
         f.save_form_data(instance, cleaned_data[f.name])
