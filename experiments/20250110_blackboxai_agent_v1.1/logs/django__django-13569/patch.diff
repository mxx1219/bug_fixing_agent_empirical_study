diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/db/models/functions/math.py b/django/db/models/functions/math.py
index 304e112225..987a9b4373 100644
--- a/django/db/models/functions/math.py
+++ b/django/db/models/functions/math.py
@@ -145,6 +145,10 @@ class Random(NumericOutputFieldMixin, Func):
     function = 'RANDOM'
     arity = 0
 
+    def get_group_by_cols(self):
+        # Random() should not be included in GROUP BY
+        return []
+
     def as_mysql(self, compiler, connection, **extra_context):
         return super().as_sql(compiler, connection, function='RAND', **extra_context)
 
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 04e430a42e..80b7adbe1c 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -126,8 +126,7 @@ class SQLCompiler:
             for col in cols:
                 expressions.append(col)
         for expr, (sql, params, is_ref) in order_by:
-            # Skip References to the select clause, as all expressions in the
-            # select clause are already part of the group by.
+            # Skip References to the select clause, as all expressions in the select clause are already part of the group by.
             if not is_ref:
                 expressions.extend(expr.get_group_by_cols())
         having_group_by = self.having.get_group_by_cols() if self.having else ()
