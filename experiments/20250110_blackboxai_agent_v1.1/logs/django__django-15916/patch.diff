diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/forms/models.py b/django/forms/models.py
index 192d9fad94..4a7d2be999 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -565,13 +565,14 @@ def modelform_factory(
     form=ModelForm,
     fields=None,
     exclude=None,
-    formfield_callback=None,
+    formfield_callback=...,  # Use sentinel to detect if explicitly passed
     widgets=None,
     localized_fields=None,
     labels=None,
     help_texts=None,
     error_messages=None,
     field_classes=None,
+    **kwargs
 ):
     """
     Return a ModelForm containing form fields for the given model. You can
@@ -630,13 +631,39 @@ def modelform_factory(
     # creating needs to inherit from the parent's inner meta.
     bases = (form.Meta,) if hasattr(form, "Meta") else ()
     Meta = type("Meta", bases, attrs)
-    if formfield_callback:
-        Meta.formfield_callback = staticmethod(formfield_callback)
+
     # Give this new form class a reasonable name.
     class_name = model.__name__ + "Form"
 
     # Class attributes for the new form class.
-    form_class_attrs = {"Meta": Meta, "formfield_callback": formfield_callback}
+    form_class_attrs = {"Meta": Meta}
+
+    # Handle formfield_callback
+    if formfield_callback is ...:
+        # No callback provided - try to inherit
+        if hasattr(form, "formfield_callback"):
+            # Class-level callback takes precedence
+            callback = form.formfield_callback
+            if callback is not None:
+                form_class_attrs["formfield_callback"] = callback
+                Meta.formfield_callback = staticmethod(callback)
+        elif hasattr(form, "Meta"):
+            # Then try Meta callback
+            callback = getattr(form.Meta, "formfield_callback", None)
+            if callback is not None:
+                form_class_attrs["formfield_callback"] = callback
+                Meta.formfield_callback = staticmethod(callback)
+    elif formfield_callback is not None:
+        # Explicit non-None callback provided
+        form_class_attrs["formfield_callback"] = formfield_callback
+        Meta.formfield_callback = staticmethod(formfield_callback)
+    else:
+        # Explicit None callback - clear any inherited callbacks
+        form_class_attrs["formfield_callback"] = None
+        try:
+            delattr(Meta, "formfield_callback")
+        except AttributeError:
+            pass
 
     if getattr(Meta, "fields", None) is None and getattr(Meta, "exclude", None) is None:
         raise ImproperlyConfigured(
