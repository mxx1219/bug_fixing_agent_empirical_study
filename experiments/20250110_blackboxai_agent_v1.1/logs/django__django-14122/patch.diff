diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 850734709d..6613c258ca 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -97,6 +97,9 @@ class SQLCompiler:
         # The query.group_by is either None (no GROUP BY at all), True
         # (group by select fields), or a list of expressions to be added
         # to the group by.
+
+        # Track if we're using Meta.ordering fields
+        meta_ordering = getattr(self, '_meta_ordering', None)
         if self.query.group_by is None:
             return []
         expressions = []
@@ -129,6 +132,11 @@ class SQLCompiler:
             # Skip References to the select clause, as all expressions in the
             # select clause are already part of the group by.
             if not is_ref:
+                # Skip Meta.ordering fields unless they're explicitly needed
+                if meta_ordering and isinstance(expr, OrderBy):
+                    source = expr.get_source_expressions()[0]
+                    if isinstance(source, F) and source.name in meta_ordering:
+                        continue
                 expressions.extend(expr.get_group_by_cols())
         having_group_by = self.having.get_group_by_cols() if self.having else ()
         for expr in having_group_by:
@@ -285,7 +293,8 @@ class SQLCompiler:
             ordering = self.query.order_by
         elif self.query.get_meta().ordering:
             ordering = self.query.get_meta().ordering
-            self._meta_ordering = ordering
+            # Mark these as coming from Meta.ordering
+            self._meta_ordering = set(ordering)
         else:
             ordering = []
         if self.query.standard_ordering:
