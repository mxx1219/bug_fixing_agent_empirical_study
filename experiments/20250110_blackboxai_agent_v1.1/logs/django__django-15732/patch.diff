diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py
index f2ca8c8df9..22791538e3 100644
--- a/django/db/backends/base/schema.py
+++ b/django/db/backends/base/schema.py
@@ -562,12 +562,26 @@ class BaseDatabaseSchemaEditor:
         }
         meta_index_names = {constraint.name for constraint in model._meta.indexes}
         columns = [model._meta.get_field(field).column for field in fields]
+        
+        # Get all matching constraints
         constraint_names = self._constraint_names(
             model,
             columns,
             exclude=meta_constraint_names | meta_index_names,
             **constraint_kwargs,
         )
+        
+        # When dropping unique_together constraints, if we find multiple constraints
+        # and one of them is a primary key, ignore the primary key constraint
+        if constraint_kwargs.get('unique') and len(constraint_names) > 1:
+            pk_constraints = self._constraint_names(
+                model,
+                columns,
+                primary_key=True
+            )
+            if pk_constraints:
+                constraint_names = [name for name in constraint_names if name not in pk_constraints]
+            
         if len(constraint_names) != 1:
             raise ValueError(
                 "Found wrong number (%s) of constraints for %s(%s)"
