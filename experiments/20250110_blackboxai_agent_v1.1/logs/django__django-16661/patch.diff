diff --git a/.gitignore b/.gitignore
index 238fb3a200..521baaa795 100644
--- a/.gitignore
+++ b/.gitignore
@@ -16,3 +16,4 @@ tests/coverage_html/
 tests/.coverage
 build/
 tests/report/
+.aider/
diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index 5240b07cd6..a295cade0f 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -461,14 +461,21 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):
                 # Lookups on nonexistent fields are ok, since they're ignored
                 # later.
                 break
-            # It is allowed to filter on values that would be found from local
-            # model anyways. For example, if you filter on employee__department__id,
-            # then the id value would be found already from employee__department_id.
-            if not prev_field or (
-                prev_field.is_relation
-                and field not in prev_field.path_infos[-1].target_fields
-            ):
-                relation_parts.append(part)
+            # Always include the part in relation_parts
+            relation_parts.append(part)
+
+            # Only try to optimize (remove redundant parts) if:
+            # 1. We have a previous field
+            # 2. It has path_infos
+            # 3. The current field is in the target fields
+            # 4. Neither the current field nor previous field is a OneToOneField primary key
+            if (prev_field and 
+                prev_field.is_relation and
+                getattr(prev_field, 'path_infos', None) and
+                field in prev_field.path_infos[-1].target_fields and
+                not (isinstance(prev_field, models.OneToOneField) and prev_field.primary_key) and
+                not (isinstance(field, models.OneToOneField) and field.primary_key)):
+                relation_parts.pop()
             if not getattr(field, "path_infos", None):
                 # This is not a relational field, so further parts
                 # must be transforms.
