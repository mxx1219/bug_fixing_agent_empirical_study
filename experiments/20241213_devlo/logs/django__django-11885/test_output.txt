+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen
+ locale-gen
Generating locales (this might take a while)...
  en_US.UTF-8... done
Generation complete.
+ export LANG=en_US.UTF-8
+ LANG=en_US.UTF-8
+ export LANGUAGE=en_US:en
+ LANGUAGE=en_US:en
+ export LC_ALL=en_US.UTF-8
+ LC_ALL=en_US.UTF-8
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/db/models/deletion.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 04ac9b45a34440fa447feb6ae934687aacbfc5f4
Author: Alex Gaynor <alex.gaynor@gmail.com>
Date:   Tue Oct 8 22:25:20 2019 -0400

    Improved performance of django.template.base.Parser.
    
    pop(0), which is used to fetch each token, is O(n) in the length of the
    list. By reversing the list and operating off the end, we can perform
    next_token(), prepend_token(), and delete_first_token() in constant
    time.

diff --git a/django/template/base.py b/django/template/base.py
index 6e22fbdcca..7ee23f7ebf 100644
--- a/django/template/base.py
+++ b/django/template/base.py
@@ -405,7 +405,9 @@ class DebugLexer(Lexer):
 
 class Parser:
     def __init__(self, tokens, libraries=None, builtins=None, origin=None):
-        self.tokens = tokens
+        # Reverse the tokens so delete_first_token(), prepend_token(), and
+        # next_token() can operate at the end of the list in constant time.
+        self.tokens = list(reversed(tokens))
         self.tags = {}
         self.filters = {}
         self.command_stack = []
@@ -541,13 +543,13 @@ class Parser:
         raise self.error(token, msg)
 
     def next_token(self):
-        return self.tokens.pop(0)
+        return self.tokens.pop()
 
     def prepend_token(self, token):
-        self.tokens.insert(0, token)
+        self.tokens.append(token)
 
     def delete_first_token(self):
-        del self.tokens[0]
+        del self.tokens[-1]
 
     def add_library(self, lib):
         self.tags.update(lib.tags)
+ git diff 04ac9b45a34440fa447feb6ae934687aacbfc5f4
diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index ae82d26340..c455b17704 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -4,6 +4,7 @@ from operator import attrgetter
 
 from django.db import IntegrityError, connections, transaction
 from django.db.models import signals, sql
+from django.db.models.query_utils import Q
 
 
 class ProtectedError(IntegrityError):
@@ -172,7 +173,7 @@ class Collector:
             return [objs]
 
     def collect(self, objs, source=None, nullable=False, collect_related=True,
-                source_attr=None, reverse_dependency=False, keep_parents=False):
+                source_attr=None, reverse_dependency=False, keep_parents=False, _seen_fields=None):
         """
         Add 'objs' to the collection of objects to be deleted as well as all
         parent instances.  'objs' must be a homogeneous iterable collection of
@@ -214,6 +215,8 @@ class Collector:
         if collect_related:
             if keep_parents:
                 parents = set(model._meta.get_parent_list())
+            if _seen_fields is None:
+                _seen_fields = set()
             for related in get_candidate_relations_to_delete(model._meta):
                 # Preserve parent reverse relationships if keep_parents=True.
                 if keep_parents and related.model in parents:
@@ -221,10 +224,21 @@ class Collector:
                 field = related.field
                 if field.remote_field.on_delete == DO_NOTHING:
                     continue
+                # Skip if we've already processed this field or another field targeting the same table
+                field_key = (field.related_model, field.remote_field.on_delete)
+                if field_key in _seen_fields:
+                    continue
+                _seen_fields.add(field_key)
                 batches = self.get_del_batches(new_objs, field)
                 for batch in batches:
                     sub_objs = self.related_objects(related, batch)
                     if self.can_fast_delete(sub_objs, from_field=field):
+                        # Check if we can combine this with the previous fast delete
+                        if (self.fast_deletes and
+                            self.fast_deletes[-1].model == sub_objs.model and
+                            self.fast_deletes[-1].query.where.children == sub_objs.query.where.children):
+                            # Skip this query since it's identical to the previous one
+                            continue
                         self.fast_deletes.append(sub_objs)
                     else:
                         related_model = related.related_model
@@ -253,9 +267,15 @@ class Collector:
         """
         Get a QuerySet of objects related to `objs` via the relation `related`.
         """
-        return related.related_model._base_manager.using(self.using).filter(
-            **{"%s__in" % related.field.name: objs}
-        )
+        # Check if there are other foreign keys from the same model pointing to our objects
+        filters = Q(**{"%s__in" % related.field.name: objs})
+        opts = related.related_model._meta
+        for field in opts.fields:
+            if (field.related_model == objs[0].__class__ and 
+                field != related.field and 
+                field.remote_field.on_delete == related.field.remote_field.on_delete):
+                filters |= Q(**{"%s__in" % field.name: objs})
+        return related.related_model._base_manager.using(self.using).filter(filters)
 
     def instances_with_model(self):
         for model, instances in self.data.items():
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (2024.2)
Requirement already satisfied: sqlparse in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (0.4.4)
Requirement already satisfied: asgiref in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from Django==3.1) (3.4.1)
Requirement already satisfied: typing-extensions in /opt/miniconda3/envs/testbed/lib/python3.6/site-packages (from asgiref->Django==3.1) (4.1.1)
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 3.1
    Uninstalling Django-3.1:
      Successfully uninstalled Django-3.1
  Running setup.py develop for Django
Successfully installed Django-3.1
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv
+ git checkout 04ac9b45a34440fa447feb6ae934687aacbfc5f4 tests/delete/tests.py
Updated 0 paths from 17b077174f
+ git apply -v -
Checking patch tests/delete/tests.py...
Applied patch tests/delete/tests.py cleanly.
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 delete.tests
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
test_bulk (delete.tests.DeletionTests) ... ok
test_can_defer_constraint_checks (delete.tests.DeletionTests) ... ok
test_cannot_defer_constraint_checks (delete.tests.DeletionTests) ... skipped 'Database has feature(s) can_defer_constraint_checks'
test_delete_with_keeping_parents (delete.tests.DeletionTests) ... ok
test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests) ... ok
test_deletion_order (delete.tests.DeletionTests) ... FAIL
ERROR
test_hidden_related (delete.tests.DeletionTests) ... FAIL
ERROR
test_instance_update (delete.tests.DeletionTests) ... ok
ERROR
test_large_delete (delete.tests.DeletionTests) ... ok
test_large_delete_related (delete.tests.DeletionTests) ... ok
test_m2m (delete.tests.DeletionTests) ... FAIL
ERROR
test_model_delete_returns_num_rows (delete.tests.DeletionTests) ... FAIL
ERROR
test_only_referenced_fields_selected (delete.tests.DeletionTests) ... ok
test_proxied_model_duplicate_queries (delete.tests.DeletionTests) ... ok
test_queryset_delete_returns_num_rows (delete.tests.DeletionTests) ... ERROR
ERROR
test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests) ... ok
test_fast_delete_combined_relationships (delete.tests.FastDeleteTests) ... ok
test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests) ... ok
test_fast_delete_fk (delete.tests.FastDeleteTests) ... ok
test_fast_delete_inheritance (delete.tests.FastDeleteTests) ... ok
test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests) ... ok
test_fast_delete_joined_qs (delete.tests.FastDeleteTests) ... ok
test_fast_delete_large_batch (delete.tests.FastDeleteTests) ... ok
test_fast_delete_m2m (delete.tests.FastDeleteTests) ... ok
test_fast_delete_qs (delete.tests.FastDeleteTests) ... ok
test_fast_delete_revm2m (delete.tests.FastDeleteTests) ... ok
test_auto (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_auto_nullable (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_cascade (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_cascade_from_child (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_cascade_from_parent (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_cascade_nullable (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_do_nothing (delete.tests.OnDeleteTests) ... ok
test_do_nothing_qscount (delete.tests.OnDeleteTests) ... ok
test_inheritance_cascade_down (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_inheritance_cascade_up (delete.tests.OnDeleteTests) ... ok
test_non_callable (delete.tests.OnDeleteTests) ... ok
test_o2o_setnull (delete.tests.OnDeleteTests) ... ERROR
ERROR
test_protect (delete.tests.OnDeleteTests) ... ok
test_setdefault (delete.tests.OnDeleteTests) ... ok
test_setdefault_none (delete.tests.OnDeleteTests) ... ERROR
ERROR
test_setnull (delete.tests.OnDeleteTests) ... ok
test_setnull_from_child (delete.tests.OnDeleteTests) ... ok
test_setnull_from_parent (delete.tests.OnDeleteTests) ... FAIL
ERROR
test_setvalue (delete.tests.OnDeleteTests) ... ok

======================================================================
ERROR: test_deletion_order (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_rchild' with primary key '1' has an invalid foreign key: delete_rchild.r_ptr_id contains a value '1' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_hidden_related (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_hiddenuser' with primary key '1' has an invalid foreign key: delete_hiddenuser.r_id contains a value '1' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_instance_update (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '2' has an invalid foreign key: delete_a.cascade_id contains a value '21' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_m2m (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_mr' with primary key '1' has an invalid foreign key: delete_mr.r_id contains a value '1' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_model_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_m_m2m' with primary key '1' has an invalid foreign key: delete_m_m2m.r_id contains a value '1' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 415, in test_queryset_delete_returns_num_rows
    self.assertEqual(deleted_objs[k], v)
KeyError: 'delete.HiddenUser'

======================================================================
ERROR: test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_hiddenuser' with primary key '1' has an invalid foreign key: delete_hiddenuser.r_id contains a value '1' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_auto (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.auto_id contains a value '2' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_auto_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.auto_nullable_id contains a value '3' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_cascade (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.cascade_id contains a value '8' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_cascade_from_child (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.child_id contains a value '13' that does not have a corresponding value in delete_rchild.r_ptr_id.

======================================================================
ERROR: test_cascade_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_rchild' with primary key '13' has an invalid foreign key: delete_rchild.r_ptr_id contains a value '13' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_cascade_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.cascade_nullable_id contains a value '9' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_inheritance_cascade_down (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_rchild' with primary key '2' has an invalid foreign key: delete_rchild.r_ptr_id contains a value '2' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_o2o_setnull (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/db/models/fields/related_descriptors.py", line 172, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "/testbed/django/db/models/fields/mixins.py", line 13, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'o2o_setnull'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 147, in test_o2o_setnull
    self.assertIsNone(a.o2o_setnull)
  File "/testbed/django/db/models/fields/related_descriptors.py", line 186, in __get__
    rel_obj = self.get_object(instance)
  File "/testbed/django/db/models/fields/related_descriptors.py", line 153, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "/testbed/django/db/models/query.py", line 414, in get
    self.model._meta.object_name
delete.models.R.DoesNotExist: R matching query does not exist.

======================================================================
ERROR: test_o2o_setnull (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.o2o_setnull_id contains a value '12' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_setdefault_none (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/db/models/fields/related_descriptors.py", line 172, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "/testbed/django/db/models/fields/mixins.py", line 13, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'setdefault_none'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 58, in test_setdefault_none
    self.assertIsNone(a.setdefault_none)
  File "/testbed/django/db/models/fields/related_descriptors.py", line 186, in __get__
    rel_obj = self.get_object(instance)
  File "/testbed/django/db/models/fields/related_descriptors.py", line 153, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "/testbed/django/db/models/query.py", line 414, in get
    self.model._meta.object_name
delete.models.R.DoesNotExist: R matching query does not exist.

======================================================================
ERROR: test_setdefault_none (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_a' with primary key '1' has an invalid foreign key: delete_a.setdefault_none_id contains a value '7' that does not have a corresponding value in delete_r.id.

======================================================================
ERROR: test_setnull_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/django/test/testcases.py", line 253, in __call__
    self._post_teardown()
  File "/testbed/django/test/testcases.py", line 968, in _post_teardown
    self._fixture_teardown()
  File "/testbed/django/test/testcases.py", line 1126, in _fixture_teardown
    connections[db_name].check_constraints()
  File "/testbed/django/db/backends/sqlite3/base.py", line 331, in check_constraints
    bad_value, referenced_table_name, referenced_column_name
django.db.utils.IntegrityError: The row in table 'delete_rchild' with primary key '14' has an invalid foreign key: delete_rchild.r_ptr_id contains a value '14' that does not have a corresponding value in delete_r.id.

======================================================================
FAIL: test_deletion_order (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 241, in test_deletion_order
    pre_delete_order, [(T, 2), (T, 1), (RChild, 1), (S, 2), (S, 1), (R, 1)]
AssertionError: Lists differ: [(<cl[78 chars]dels.S'>, 2), (<class 'delete.models.S'>, 1), [26 chars], 1)] != [(<cl[78 chars]dels.RChild'>, 1), (<class 'delete.models.S'>,[63 chars], 1)]

First differing element 2:
(<class 'delete.models.S'>, 2)
(<class 'delete.models.RChild'>, 1)

Second list contains 1 additional elements.
First extra element 5:
(<class 'delete.models.R'>, 1)

  [(<class 'delete.models.T'>, 2),
   (<class 'delete.models.T'>, 1),
+  (<class 'delete.models.RChild'>, 1),
   (<class 'delete.models.S'>, 2),
   (<class 'delete.models.S'>, 1),
   (<class 'delete.models.R'>, 1)]

======================================================================
FAIL: test_hidden_related (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 328, in test_hidden_related
    self.assertEqual(HiddenUserProfile.objects.count(), 0)
AssertionError: 1 != 0

======================================================================
FAIL: test_m2m (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 157, in test_m2m
    self.assertFalse(MR.objects.exists())
AssertionError: True is not false

======================================================================
FAIL: test_model_delete_returns_num_rows (delete.tests.DeletionTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 443, in test_model_delete_returns_num_rows
    self.assertEqual(deleted, sum(existed_objs.values()))
AssertionError: 1 != 9

======================================================================
FAIL: test_auto (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 22, in test_auto
    self.assertFalse(A.objects.filter(name='auto').exists())
AssertionError: True is not false

======================================================================
FAIL: test_auto_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 34, in test_auto_nullable
    self.assertFalse(A.objects.filter(name='auto_nullable').exists())
AssertionError: True is not false

======================================================================
FAIL: test_cascade (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 63, in test_cascade
    self.assertFalse(A.objects.filter(name='cascade').exists())
AssertionError: True is not false

======================================================================
FAIL: test_cascade_from_child (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 118, in test_cascade_from_child
    self.assertFalse(A.objects.filter(name='child').exists())
AssertionError: True is not false

======================================================================
FAIL: test_cascade_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 124, in test_cascade_from_parent
    self.assertFalse(A.objects.filter(name='child').exists())
AssertionError: True is not false

======================================================================
FAIL: test_cascade_nullable (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 68, in test_cascade_nullable
    self.assertFalse(A.objects.filter(name='cascade_nullable').exists())
AssertionError: True is not false

======================================================================
FAIL: test_inheritance_cascade_down (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 113, in test_inheritance_cascade_down
    self.assertFalse(RChild.objects.filter(pk=child.pk).exists())
AssertionError: True is not false

======================================================================
FAIL: test_setnull_from_parent (delete.tests.OnDeleteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/delete/tests.py", line 138, in test_setnull_from_parent
    self.assertFalse(RChild.objects.filter(pk=a.child_setnull_id).exists())
AssertionError: True is not false

----------------------------------------------------------------------
Ran 45 tests in 1.363s

FAILED (failures=12, errors=19, skipped=1)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Testing against Django installed in '/testbed/django'
Importing application delete
Skipping setup of unused database(s): other.
Operations to perform:
  Synchronize unmigrated apps: auth, contenttypes, delete, messages, sessions, staticfiles
  Apply all migrations: admin, sites
Synchronizing apps without migrations:
  Creating tables...
    Creating table django_content_type
    Creating table auth_permission
    Creating table auth_group
    Creating table auth_user
    Creating table django_session
    Creating table delete_r
    Creating table delete_s
    Creating table delete_t
    Creating table delete_u
    Creating table delete_rchild
    Creating table delete_rchildchild
    Creating table delete_a
    Creating table delete_m
    Creating table delete_mr
    Creating table delete_mrnull
    Creating table delete_avatar
    Creating table delete_user
    Creating table delete_hiddenuser
    Creating table delete_hiddenuserprofile
    Creating table delete_m2mto
    Creating table delete_m2mfrom
    Creating table delete_parent
    Creating table delete_child
    Creating table delete_base
    Creating table delete_reltobase
    Creating table delete_origin
    Creating table delete_referrer
    Creating table delete_secondreferrer
    Running deferred SQL...
Running migrations:
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying sites.0001_initial... OK
  Applying sites.0002_alter_domain_unique... OK
System check identified no issues (0 silenced).
+ git checkout 04ac9b45a34440fa447feb6ae934687aacbfc5f4 tests/delete/tests.py
Updated 1 path from 17b077174f
