diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 6ea18dd22f..f9191b9db8 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -318,12 +318,29 @@ class LocalePrefixPattern:
         if language_code == settings.LANGUAGE_CODE and not self.prefix_default_language:
             return ''
         else:
+            # Use the canonical case from settings.LANGUAGES
+            from django.utils.translation import get_supported_language_variant
+            try:
+                language_code = get_supported_language_variant(language_code)
+            except LookupError:
+                pass
             return '%s/' % language_code
 
     def match(self, path):
-        language_prefix = self.language_prefix
-        if path.startswith(language_prefix):
-            return path[len(language_prefix):], (), {}
+        from django.utils.translation import get_language_from_path
+        path_lang_code = get_language_from_path(path)
+        if path_lang_code:
+            # Extract the actual prefix from the path
+            parts = path.split('/')
+            if len(parts) > 1:
+                path_prefix = parts[1]
+                # Compare case-insensitively
+                if path_prefix.lower() == path_lang_code.lower():
+                    # Handle paths with and without trailing slash
+                    rest = path[len(path_prefix) + 1:]
+                    if not rest:
+                        rest = '/'
+                    return rest, (), {}
         return None
 
     def check(self):
diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py
index 7dcc77b46c..e5b8b9ca87 100644
--- a/django/utils/translation/trans_real.py
+++ b/django/utils/translation/trans_real.py
@@ -43,7 +43,7 @@ language_code_re = _lazy_re_compile(
     re.IGNORECASE
 )
 
-language_code_prefix_re = _lazy_re_compile(r'^/(\w+([@-]\w+)?)(/|$)')
+language_code_prefix_re = _lazy_re_compile(r'^/([a-z]{1,8}(?:-[a-z0-9]{1,8})*(?:@[a-z0-9]{1,20})?)(?:/|$)', re.IGNORECASE)
 
 
 @receiver(setting_changed)
