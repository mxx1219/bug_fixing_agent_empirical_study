diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 28374272f4..5b585709ba 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -516,17 +516,24 @@ class Field(RegisterLookupMixin):
     def __eq__(self, other):
         # Needed for @total_ordering
         if isinstance(other, Field):
+            if hasattr(self, 'model') and hasattr(other, 'model'):
+                if self.model != other.model:
+                    return False
             return self.creation_counter == other.creation_counter
         return NotImplemented
 
     def __lt__(self, other):
         # This is needed because bisect does not take a comparison function.
         if isinstance(other, Field):
+            if hasattr(self, 'model') and hasattr(other, 'model'):
+                if self.model != other.model:
+                    return self.model.__name__ < other.model.__name__
             return self.creation_counter < other.creation_counter
         return NotImplemented
 
     def __hash__(self):
-        return hash(self.creation_counter)
+        model_hash = hash(self.model.__name__) if hasattr(self, 'model') else 0
+        return hash((model_hash, self.creation_counter))
 
     def __deepcopy__(self, memodict):
         # We don't have to deepcopy very much here, since most things are not
