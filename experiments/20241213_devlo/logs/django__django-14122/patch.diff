diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 850734709d..38bb8af333 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -125,11 +125,26 @@ class SQLCompiler:
             cols = expr.get_group_by_cols()
             for col in cols:
                 expressions.append(col)
+        # Get the fields that are being grouped by
+        group_by_fields = {
+            expr.get_source_expressions()[0].target.name
+            for expr, _, _ in select
+            if hasattr(expr, 'get_source_expressions') and expr.get_source_expressions()
+            and hasattr(expr.get_source_expressions()[0], 'target')
+        }
+
         for expr, (sql, params, is_ref) in order_by:
             # Skip References to the select clause, as all expressions in the
             # select clause are already part of the group by.
+            # Also skip expressions from Meta.ordering and ORDER BY clauses when they're not in the select clause
             if not is_ref:
-                expressions.extend(expr.get_group_by_cols())
+                source = expr.get_source_expressions()[0]
+                if hasattr(source, 'target'):  # For Col objects
+                    field_name = source.target.name
+                else:
+                    field_name = source.name
+                if field_name in group_by_fields:
+                    expressions.extend(expr.get_group_by_cols())
         having_group_by = self.having.get_group_by_cols() if self.having else ()
         for expr in having_group_by:
             expressions.append(expr)
