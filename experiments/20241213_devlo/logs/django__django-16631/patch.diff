diff --git a/django/contrib/auth/base_user.py b/django/contrib/auth/base_user.py
index 5ee30bf59c..262595d4fb 100644
--- a/django/contrib/auth/base_user.py
+++ b/django/contrib/auth/base_user.py
@@ -136,11 +136,42 @@ class AbstractBaseUser(models.Model):
         Return an HMAC of the password field.
         """
         key_salt = "django.contrib.auth.models.AbstractBaseUser.get_session_auth_hash"
-        return salted_hmac(
+        from django.conf import settings
+        
+        # Generate hash with current key
+        hmac = salted_hmac(
             key_salt,
             self.password,
             algorithm="sha256",
-        ).hexdigest()
+        )
+        current_hash = hmac.hexdigest()
+        
+        # If no cached hash, use current hash
+        cached_hash = getattr(self, '_session_auth_hash_cache', None)
+        if not cached_hash:
+            self._session_auth_hash_cache = current_hash
+            return current_hash
+            
+        # If cached hash matches current key, use it
+        if current_hash == cached_hash:
+            return cached_hash
+            
+        # Try fallback keys
+        if hasattr(settings, 'SECRET_KEY_FALLBACKS'):
+            for secret in settings.SECRET_KEY_FALLBACKS:
+                hmac = salted_hmac(
+                    key_salt,
+                    self.password,
+                    secret=secret,
+                    algorithm="sha256",
+                )
+                if hmac.hexdigest() == cached_hash:
+                    # Keep using the old hash if it was generated with a fallback key
+                    return cached_hash
+        
+        # No match found with any key, use current key's hash
+        self._session_auth_hash_cache = current_hash
+        return current_hash
 
     @classmethod
     def get_email_field_name(cls):
