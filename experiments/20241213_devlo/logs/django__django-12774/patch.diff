diff --git a/django/db/models/query.py b/django/db/models/query.py
index d9c9b0db04..e7bb42eaf1 100644
--- a/django/db/models/query.py
+++ b/django/db/models/query.py
@@ -23,6 +23,7 @@ from django.db.models.functions import Cast, Trunc
 from django.db.models.query_utils import FilteredRelation, Q
 from django.db.models.sql.constants import CURSOR, GET_ITERATOR_CHUNK_SIZE
 from django.db.models.utils import resolve_callables
+from django.db.models.constraints import UniqueConstraint
 from django.utils import timezone
 from django.utils.functional import cached_property, partition
 from django.utils.version import get_version
@@ -689,8 +690,18 @@ class QuerySet:
         """
         assert not self.query.is_sliced, \
             "Cannot use 'limit' or 'offset' with in_bulk"
-        if field_name != 'pk' and not self.model._meta.get_field(field_name).unique:
-            raise ValueError("in_bulk()'s field_name must be a unique field but %r isn't." % field_name)
+        if field_name != 'pk':
+            field = self.model._meta.get_field(field_name)
+            # Check if field is unique either via field.unique or via UniqueConstraint
+            is_unique = field.unique or any(
+                isinstance(constraint, UniqueConstraint) and 
+                len(constraint.fields) == 1 and 
+                constraint.fields[0] == field_name and
+                constraint.condition is None
+                for constraint in self.model._meta.constraints
+            )
+            if not is_unique:
+                raise ValueError("in_bulk()'s field_name must be a unique field but %r isn't." % field_name)
         if id_list is not None:
             if not id_list:
                 return {}
