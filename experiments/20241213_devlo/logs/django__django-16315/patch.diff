diff --git a/django/db/backends/postgresql/operations.py b/django/db/backends/postgresql/operations.py
index 62273fc43c..211f39299f 100644
--- a/django/db/backends/postgresql/operations.py
+++ b/django/db/backends/postgresql/operations.py
@@ -353,14 +353,25 @@ class DatabaseOperations(BaseDatabaseOperations):
         if on_conflict == OnConflict.IGNORE:
             return "ON CONFLICT DO NOTHING"
         if on_conflict == OnConflict.UPDATE:
+            # Get a mapping of field names to their db_column values
+            field_map = {field.name: field.db_column or field.name for field in fields}
+            
+            # Use db_column values for unique_fields and update_fields
+            quoted_unique_fields = [
+                self.quote_name(field_map.get(field, field))
+                for field in unique_fields
+            ]
+            quoted_update_fields = [
+                (
+                    f"{self.quote_name(field_map.get(field, field))} = "
+                    f"EXCLUDED.{self.quote_name(field_map.get(field, field))}"
+                )
+                for field in update_fields
+            ]
+            
             return "ON CONFLICT(%s) DO UPDATE SET %s" % (
-                ", ".join(map(self.quote_name, unique_fields)),
-                ", ".join(
-                    [
-                        f"{field} = EXCLUDED.{field}"
-                        for field in map(self.quote_name, update_fields)
-                    ]
-                ),
+                ", ".join(quoted_unique_fields),
+                ", ".join(quoted_update_fields),
             )
         return super().on_conflict_suffix_sql(
             fields,
