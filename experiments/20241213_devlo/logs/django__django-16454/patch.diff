diff --git a/django/core/management/base.py b/django/core/management/base.py
index abc6f79a15..e57894e953 100644
--- a/django/core/management/base.py
+++ b/django/core/management/base.py
@@ -71,6 +71,31 @@ class CommandParser(ArgumentParser):
         else:
             raise CommandError("Error: %s" % message)
 
+    def add_subparsers(self, **kwargs):
+        """
+        Custom add_subparsers that ensures our error handling is inherited.
+        """
+        subparsers_action = super().add_subparsers(**kwargs)
+        
+        # Save the original add_parser method
+        original_add_parser = subparsers_action.add_parser
+        
+        # Define a wrapper that injects our custom arguments
+        def add_parser_wrapper(name, **kwargs):
+            # Ensure the parser gets the same error handling arguments
+            kwargs.setdefault('missing_args_message', self.missing_args_message)
+            kwargs.setdefault('called_from_command_line', self.called_from_command_line)
+            kwargs.setdefault('formatter_class', self.formatter_class)
+            # Create parser through CommandParser to get our error handling
+            parser = CommandParser(**kwargs)
+            # Add it to the subparsers action
+            subparsers_action._name_parser_map[name] = parser
+            return parser
+            
+        # Replace the add_parser method with our wrapper
+        subparsers_action.add_parser = add_parser_wrapper
+        return subparsers_action
+
 
 def handle_default_options(options):
     """
