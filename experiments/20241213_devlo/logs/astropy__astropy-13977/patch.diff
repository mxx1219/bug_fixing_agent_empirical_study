diff --git a/astropy/units/core.py b/astropy/units/core.py
index 8c3204b8b0..5111820eec 100644
--- a/astropy/units/core.py
+++ b/astropy/units/core.py
@@ -2614,7 +2614,9 @@ def _condition_arg(value):
 
     Returns
     -------
-    Scalar value or numpy array
+    Scalar value or numpy array or NotImplemented
+        Returns NotImplemented if the value has a unit attribute but cannot be
+        directly converted to a numpy array, to allow for reflected operations.
 
     Raises
     ------
@@ -2624,6 +2626,11 @@ def _condition_arg(value):
     if isinstance(value, (np.ndarray, float, int, complex, np.void)):
         return value
 
+    # If the value has a unit attribute, return NotImplemented to allow
+    # for reflected operations rather than raising an error
+    if hasattr(value, 'unit'):
+        return NotImplemented
+
     avalue = np.array(value)
     if avalue.dtype.kind not in ["i", "f", "c"]:
         raise ValueError(
diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py
index b98abfafb0..8399225785 100644
--- a/astropy/units/quantity.py
+++ b/astropy/units/quantity.py
@@ -667,7 +667,16 @@ class Quantity(np.ndarray):
         arrays = []
         for input_, converter in zip(inputs, converters):
             input_ = getattr(input_, "value", input_)
-            arrays.append(converter(input_) if converter else input_)
+            if converter:
+                try:
+                    converted = converter(input_)
+                    if converted is NotImplemented:
+                        return NotImplemented
+                    arrays.append(converted)
+                except Exception:
+                    return NotImplemented
+            else:
+                arrays.append(input_)
 
         # Call our superclass's __array_ufunc__
         result = super().__array_ufunc__(function, method, *arrays, **kwargs)
diff --git a/astropy/units/quantity_helper/converters.py b/astropy/units/quantity_helper/converters.py
index 47b40c2072..b8f350b968 100644
--- a/astropy/units/quantity_helper/converters.py
+++ b/astropy/units/quantity_helper/converters.py
@@ -196,6 +196,9 @@ def converters_and_unit(function, method, *args):
                         continue
                     if can_have_arbitrary_unit(args[i]):
                         converters[i] = None
+                    elif hasattr(args[i], 'unit'):
+                        # If the argument has a unit attribute, allow it to handle the operation
+                        return [None] * len(converters), None
                     else:
                         raise UnitConversionError(
                             f"Can only apply '{function.__name__}' function to "
diff --git a/pyproject.toml b/pyproject.toml
index 486d6b9b3b..1c5f74f3a1 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
