diff --git a/django/db/models/options.py b/django/db/models/options.py
index a375f6ba1d..8861288e4c 100644
--- a/django/db/models/options.py
+++ b/django/db/models/options.py
@@ -240,21 +240,28 @@ class Options:
 
         if self.pk is None:
             if self.parents:
-                # Promote the first parent link in lieu of adding yet another
-                # field.
-                field = next(iter(self.parents.values()))
-                # Look for a local field with the same name as the
-                # first parent link. If a local field has already been
-                # created, use it instead of promoting the parent
-                already_created = [fld for fld in self.local_fields if fld.name == field.name]
-                if already_created:
-                    field = already_created[0]
+                # First try to find a field with parent_link=True
+                parent_link_fields = [f for f in self.local_fields if f.remote_field and getattr(f.remote_field, 'parent_link', False)]
+                if parent_link_fields:
+                    field = parent_link_fields[0]
+                else:
+                    # If no explicit parent_link field found, use the first parent field
+                    field = next(iter(self.parents.values()))
+                    # Look for a local field with the same name as the
+                    # first parent link. If a local field has already been
+                    # created, use it instead of promoting the parent
+                    already_created = [fld for fld in self.local_fields if fld.name == field.name]
+                    if already_created:
+                        field = already_created[0]
+                    # If there are multiple OneToOne fields to the same parent,
+                    # we need an explicit parent_link=True marker
+                    parent_fields = [f for f in self.local_fields if f.remote_field and f.remote_field.model == field.remote_field.model]
+                    if len(parent_fields) > 1:
+                        raise ImproperlyConfigured(
+                            'Add parent_link=True to %s.' % field,
+                        )
                 field.primary_key = True
                 self.setup_pk(field)
-                if not field.remote_field.parent_link:
-                    raise ImproperlyConfigured(
-                        'Add parent_link=True to %s.' % field,
-                    )
             else:
                 auto = AutoField(verbose_name='ID', primary_key=True, auto_created=True)
                 model.add_to_class('id', auto)
