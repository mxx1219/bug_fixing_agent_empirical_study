diff --git a/django/apps/registry.py b/django/apps/registry.py
index 408964a146..7bb3096971 100644
--- a/django/apps/registry.py
+++ b/django/apps/registry.py
@@ -154,6 +154,16 @@ class Apps:
         try:
             return self.app_configs[app_label]
         except KeyError:
+            # Only try case-insensitive match if there's a mixed-case app registered
+            has_mixed_case = any(
+                not (label.islower() or label.isupper())
+                for label in self.app_configs
+            )
+            if has_mixed_case:
+                for config_label, app_config in self.app_configs.items():
+                    if config_label.lower() == app_label.lower():
+                        return app_config
+            
             message = "No installed app with label '%s'." % app_label
             for app_config in self.get_app_configs():
                 if app_config.name == app_label:
diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py
index c2aea9c730..db161be546 100644
--- a/django/db/models/fields/related.py
+++ b/django/db/models/fields/related.py
@@ -54,7 +54,15 @@ def resolve_relation(scope_model, relation):
     # Look for an "app.Model" relation
     if isinstance(relation, str):
         if "." not in relation:
+            # Use the original case of the app_label from the model
             relation = "%s.%s" % (scope_model._meta.app_label, relation)
+        else:
+            # For explicit app_label.model references, try to match case-insensitively
+            app_label, model_name = relation.split('.')
+            for app_config in scope_model._meta.apps.get_app_configs():
+                if app_config.label.lower() == app_label.lower():
+                    relation = "%s.%s" % (app_config.label, model_name)
+                    break
 
     return relation
 
