diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index d913658291..68dde096fa 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -451,15 +451,15 @@ class CombinedExpression(SQLiteNumericMixin, Expression):
             rhs_type = self.rhs.output_field.get_internal_type()
         except FieldError:
             rhs_type = None
+        datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}
+        if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:
+            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
         if (
             not connection.features.has_native_duration_field and
             'DurationField' in {lhs_type, rhs_type} and
             lhs_type != rhs_type
         ):
             return DurationExpression(self.lhs, self.connector, self.rhs).as_sql(compiler, connection)
-        datetime_fields = {'DateField', 'DateTimeField', 'TimeField'}
-        if self.connector == self.SUB and lhs_type in datetime_fields and lhs_type == rhs_type:
-            return TemporalSubtraction(self.lhs, self.rhs).as_sql(compiler, connection)
         expressions = []
         expression_params = []
         sql, params = compiler.compile(self.lhs)
@@ -517,9 +517,14 @@ class TemporalSubtraction(CombinedExpression):
 
     def as_sql(self, compiler, connection):
         connection.ops.check_expression_support(self)
-        lhs = compiler.compile(self.lhs)
-        rhs = compiler.compile(self.rhs)
-        return connection.ops.subtract_temporals(self.lhs.output_field.get_internal_type(), lhs, rhs)
+        lhs_sql, lhs_params = compiler.compile(self.lhs)
+        rhs_sql, rhs_params = compiler.compile(self.rhs)
+        sql, params = connection.ops.subtract_temporals(
+            self.lhs.output_field.get_internal_type(),
+            (lhs_sql, lhs_params),
+            (rhs_sql, rhs_params)
+        )
+        return sql, params
 
 
 @deconstructible
