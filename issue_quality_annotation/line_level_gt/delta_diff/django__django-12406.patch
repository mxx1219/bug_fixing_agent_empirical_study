
django/db/models/fields/related.py

 980⋮ 980│             'queryset': self.remote_field.model._default_manager.using(using),
 981⋮ 981│             'to_field_name': self.remote_field.field_name,
 982⋮ 982│             **kwargs,
    ⋮ 983│+            'blank': self.blank,
 983⋮ 984│         })
 984⋮ 985│ 
 985⋮ 986│     def db_check(self, connection):

django/forms/models.py

 13 ⋮ 13 │ from django.forms.formsets import BaseFormSet, formset_factory
 14 ⋮ 14 │ from django.forms.utils import ErrorList
 15 ⋮ 15 │ from django.forms.widgets import (
 16 ⋮    │-    HiddenInput, MultipleHiddenInput, SelectMultiple,
    ⋮ 16 │+    HiddenInput, MultipleHiddenInput, RadioSelect, SelectMultiple,
 17 ⋮ 17 │ )
 18 ⋮ 18 │ from django.utils.text import capfirst, get_text_list
 19 ⋮ 19 │ from django.utils.translation import gettext, gettext_lazy as _

1184⋮1184│     def __init__(self, queryset, *, empty_label="---------",
1185⋮1185│                  required=True, widget=None, label=None, initial=None,
1186⋮1186│                  help_text='', to_field_name=None, limit_choices_to=None,
1187⋮    │-                 **kwargs):
1188⋮    │-        if required and (initial is not None):
1189⋮    │-            self.empty_label = None
1190⋮    │-        else:
1191⋮    │-            self.empty_label = empty_label
1192⋮    │-
    ⋮1187│+                 blank=False, **kwargs):
1193⋮1188│         # Call Field instead of ChoiceField __init__() because we don't need
1194⋮1189│         # ChoiceField.__init__().
1195⋮1190│         Field.__init__(
1196⋮1191│             self, required=required, widget=widget, label=label,
1197⋮1192│             initial=initial, help_text=help_text, **kwargs
1198⋮1193│         )
    ⋮1194│+        if (
    ⋮1195│+            (required and initial is not None) or
    ⋮1196│+            (isinstance(self.widget, RadioSelect) and not blank)
    ⋮1197│+        ):
    ⋮1198│+            self.empty_label = None
    ⋮1199│+        else:
    ⋮1200│+            self.empty_label = empty_label
1199⋮1201│         self.queryset = queryset
1200⋮1202│         self.limit_choices_to = limit_choices_to   # limit the queryset later.
1201⋮1203│         self.to_field_name = to_field_name
