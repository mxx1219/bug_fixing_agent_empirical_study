
xarray/core/rolling.py

 267⋮ 267│         # TODO legacy attribute
 268⋮ 268│         self.window_labels = self.obj[self.dim[0]]
 269⋮ 269│ 
 270⋮    │-    def __iter__(self) -> Iterator[tuple[RollingKey, DataArray]]:
    ⋮ 270│+    def __iter__(self) -> Iterator[tuple[DataArray, DataArray]]:
 271⋮ 271│         if self.ndim > 1:
 272⋮ 272│             raise ValueError("__iter__ is only supported for 1d-rolling")
 273⋮    │-        stops = np.arange(1, len(self.window_labels) + 1)
 274⋮    │-        starts = stops - int(self.window[0])
 275⋮    │-        starts[: int(self.window[0])] = 0
    ⋮ 273│+
    ⋮ 274│+        dim0 = self.dim[0]
    ⋮ 275│+        window0 = int(self.window[0])
    ⋮ 276│+        offset = (window0 + 1) // 2 if self.center[0] else 1
    ⋮ 277│+        stops = np.arange(offset, self.obj.sizes[dim0] + offset)
    ⋮ 278│+        starts = stops - window0
    ⋮ 279│+        starts[: window0 - offset] = 0
    ⋮ 280│+
 276⋮ 281│         for (label, start, stop) in zip(self.window_labels, starts, stops):
 277⋮    │-            window = self.obj.isel({self.dim[0]: slice(start, stop)})
    ⋮ 282│+            window = self.obj.isel({dim0: slice(start, stop)})
 278⋮ 283│ 
 279⋮    │-            counts = window.count(dim=self.dim[0])
    ⋮ 284│+            counts = window.count(dim=dim0)
 280⋮ 285│             window = window.where(counts >= self.min_periods)
 281⋮ 286│ 
 282⋮ 287│             yield (label, window)
