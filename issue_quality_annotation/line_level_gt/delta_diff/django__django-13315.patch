
django/forms/models.py

 97 ⋮ 97 │ 
 98 ⋮ 98 │ def apply_limit_choices_to_to_formfield(formfield):
 99 ⋮ 99 │     """Apply limit_choices_to to the formfield's queryset if needed."""
    ⋮ 100│+    from django.db.models import Exists, OuterRef, Q
 100⋮ 101│     if hasattr(formfield, 'queryset') and hasattr(formfield, 'get_limit_choices_to'):
 101⋮ 102│         limit_choices_to = formfield.get_limit_choices_to()
 102⋮    │-        if limit_choices_to is not None:
 103⋮    │-            formfield.queryset = formfield.queryset.complex_filter(limit_choices_to)
    ⋮ 103│+        if limit_choices_to:
    ⋮ 104│+            complex_filter = limit_choices_to
    ⋮ 105│+            if not isinstance(complex_filter, Q):
    ⋮ 106│+                complex_filter = Q(**limit_choices_to)
    ⋮ 107│+            complex_filter &= Q(pk=OuterRef('pk'))
    ⋮ 108│+            # Use Exists() to avoid potential duplicates.
    ⋮ 109│+            formfield.queryset = formfield.queryset.filter(
    ⋮ 110│+                Exists(formfield.queryset.model._base_manager.filter(complex_filter)),
    ⋮ 111│+            )
 104⋮ 112│ 
 105⋮ 113│ 
 106⋮ 114│ def fields_for_model(model, fields=None, exclude=None, widgets=None,
