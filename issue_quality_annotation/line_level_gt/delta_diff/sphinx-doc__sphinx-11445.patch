
sphinx/util/rst.py

 10 ⋮ 10 │ 
 11 ⋮ 11 │ from docutils.parsers.rst import roles
 12 ⋮ 12 │ from docutils.parsers.rst.languages import en as english
    ⋮ 13 │+from docutils.parsers.rst.states import Body
 13 ⋮ 14 │ from docutils.statemachine import StringList
 14 ⋮ 15 │ from docutils.utils import Reporter
 15 ⋮    │-from jinja2 import Environment
    ⋮ 16 │+from jinja2 import Environment, pass_environment
 16 ⋮ 17 │ 
 17 ⋮ 18 │ from sphinx.locale import __
 18 ⋮ 19 │ from sphinx.util import docutils, logging
 19 ⋮ 20 │ 
 20 ⋮    │-try:
 21 ⋮    │-    from jinja2.utils import pass_environment
 22 ⋮    │-except ImportError:
 23 ⋮    │-    from jinja2 import environmentfilter as pass_environment
 24 ⋮    │-
 25 ⋮    │-
 26 ⋮ 21 │ logger = logging.getLogger(__name__)
 27 ⋮ 22 │ 
 28 ⋮    │-docinfo_re = re.compile(':\\w+:.*?')
    ⋮ 23 │+FIELD_NAME_RE = re.compile(Body.patterns['field_marker'])
 29 ⋮ 24 │ symbols_re = re.compile(r'([!-\-/:-@\[-`{-~])')  # symbols without dot(0x2e)
 30 ⋮ 25 │ SECTIONING_CHARS = ['=', '-', '~']
 31 ⋮ 26 │ 

 80 ⋮ 75 │     if prolog:
 81 ⋮ 76 │         pos = 0
 82 ⋮ 77 │         for line in content:
 83 ⋮    │-            if docinfo_re.match(line):
    ⋮ 78 │+            if FIELD_NAME_RE.match(line):
 84 ⋮ 79 │                 pos += 1
 85 ⋮ 80 │             else:
 86 ⋮ 81 │                 break

 91 ⋮ 86 │             pos += 1
 92 ⋮ 87 │ 
 93 ⋮ 88 │         # insert prolog (after docinfo if exists)
    ⋮ 89 │+        lineno = 0
 94 ⋮ 90 │         for lineno, line in enumerate(prolog.splitlines()):
 95 ⋮ 91 │             content.insert(pos + lineno, line, '<rst_prolog>', lineno)
 96 ⋮ 92 │ 
