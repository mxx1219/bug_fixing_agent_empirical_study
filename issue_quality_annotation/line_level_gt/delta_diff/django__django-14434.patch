
django/db/backends/base/schema.py

1241⋮1241│             return self.quote_name(self._create_index_name(*args, **kwargs))
1242⋮1242│ 
1243⋮1243│         compiler = Query(model, alias_cols=False).get_compiler(connection=self.connection)
1244⋮    │-        table = Table(model._meta.db_table, self.quote_name)
    ⋮1244│+        table = model._meta.db_table
1245⋮1245│         if name is None:
1246⋮    │-            name = IndexName(model._meta.db_table, columns, '_uniq', create_unique_name)
    ⋮1246│+            name = IndexName(table, columns, '_uniq', create_unique_name)
1247⋮1247│         else:
1248⋮1248│             name = self.quote_name(name)
1249⋮1249│         if condition or include or opclasses or expressions:

1253⋮1253│         if columns:
1254⋮1254│             columns = self._index_columns(table, columns, col_suffixes=(), opclasses=opclasses)
1255⋮1255│         else:
1256⋮    │-            columns = Expressions(model._meta.db_table, expressions, compiler, self.quote_value)
    ⋮1256│+            columns = Expressions(table, expressions, compiler, self.quote_value)
1257⋮1257│         return Statement(
1258⋮1258│             sql,
1259⋮    │-            table=table,
    ⋮1259│+            table=Table(table, self.quote_name),
1260⋮1260│             name=name,
1261⋮1261│             columns=columns,
1262⋮1262│             condition=self._index_condition_sql(condition),
