
astropy/timeseries/core.py

 55 ⋮ 55 │     _required_columns_relax = False
 56 ⋮ 56 │ 
 57 ⋮ 57 │     def _check_required_columns(self):
    ⋮ 58 │+        def as_scalar_or_list_str(obj):
    ⋮ 59 │+            if not hasattr(obj, "__len__"):
    ⋮ 60 │+                return f"'{obj}'"
    ⋮ 61 │+            elif len(obj) == 1:
    ⋮ 62 │+                return f"'{obj[0]}'"
    ⋮ 63 │+            else:
    ⋮ 64 │+                return str(obj)
 58 ⋮ 65 │ 
 59 ⋮ 66 │         if not self._required_columns_enabled:
 60 ⋮ 67 │             return

 76 ⋮ 83 │ 
 77 ⋮ 84 │             elif self.colnames[:len(required_columns)] != required_columns:
 78 ⋮ 85 │ 
 79 ⋮    │-                raise ValueError("{} object is invalid - expected '{}' "
 80 ⋮    │-                                 "as the first column{} but found '{}'"
 81 ⋮    │-                                 .format(self.__class__.__name__, required_columns[0], plural, self.colnames[0]))
    ⋮ 86 │+                raise ValueError("{} object is invalid - expected {} "
    ⋮ 87 │+                                 "as the first column{} but found {}"
    ⋮ 88 │+                                 .format(self.__class__.__name__, as_scalar_or_list_str(required_columns),
    ⋮ 89 │+                                            plural, as_scalar_or_list_str(self.colnames[:len(required_columns)])))
 82 ⋮ 90 │ 
 83 ⋮ 91 │             if (self._required_columns_relax
 84 ⋮ 92 │                     and self._required_columns == self.colnames[:len(self._required_columns)]):
