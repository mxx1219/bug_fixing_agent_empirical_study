
sklearn/model_selection/_search.py

 17 ⋮ 17 │ from functools import partial, reduce
 18 ⋮ 18 │ from itertools import product
 19 ⋮ 19 │ import operator
    ⋮ 20 │+import time
 20 ⋮ 21 │ import warnings
 21 ⋮ 22 │ 
 22 ⋮ 23 │ import numpy as np

 766⋮ 767│         if self.refit:
 767⋮ 768│             self.best_estimator_ = clone(base_estimator).set_params(
 768⋮ 769│                 **self.best_params_)
    ⋮ 770│+            refit_start_time = time.time()
 769⋮ 771│             if y is not None:
 770⋮ 772│                 self.best_estimator_.fit(X, y, **fit_params)
 771⋮ 773│             else:
 772⋮ 774│                 self.best_estimator_.fit(X, **fit_params)
    ⋮ 775│+            refit_end_time = time.time()
    ⋮ 776│+            self.refit_time_ = refit_end_time - refit_start_time
 773⋮ 777│ 
 774⋮ 778│         # Store the only scorer not as a dict for single metric evaluation
 775⋮ 779│         self.scorer_ = scorers if self.multimetric_ else scorers['score']

1076⋮1080│     n_splits_ : int
1077⋮1081│         The number of cross-validation splits (folds/iterations).
1078⋮1082│ 
    ⋮1083│+    refit_time_ : float
    ⋮1084│+        Seconds used for refitting the best model on the whole dataset.
    ⋮1085│+
    ⋮1086│+        This is present only if ``refit`` is not False.
    ⋮1087│+
1079⋮1088│     Notes
1080⋮1089│     ------
1081⋮1090│     The parameters selected are those that maximize the score of the left out

1387⋮1396│     n_splits_ : int
1388⋮1397│         The number of cross-validation splits (folds/iterations).
1389⋮1398│ 
    ⋮1399│+    refit_time_ : float
    ⋮1400│+        Seconds used for refitting the best model on the whole dataset.
    ⋮1401│+
    ⋮1402│+        This is present only if ``refit`` is not False.
    ⋮1403│+
1390⋮1404│     Notes
1391⋮1405│     -----
1392⋮1406│     The parameters selected are those that maximize the score of the held-out
