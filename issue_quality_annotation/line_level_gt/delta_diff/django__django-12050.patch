
django/db/models/sql/query.py

1059⋮1059│         elif isinstance(value, (list, tuple)):
1060⋮1060│             # The items of the iterable may be expressions and therefore need
1061⋮1061│             # to be resolved independently.
1062⋮    │-            resolved_values = []
1063⋮    │-            for sub_value in value:
1064⋮    │-                if hasattr(sub_value, 'resolve_expression'):
1065⋮    │-                    if isinstance(sub_value, F):
1066⋮    │-                        resolved_values.append(sub_value.resolve_expression(
1067⋮    │-                            self, reuse=can_reuse, allow_joins=allow_joins,
1068⋮    │-                            simple_col=simple_col,
1069⋮    │-                        ))
1070⋮    │-                    else:
1071⋮    │-                        resolved_values.append(sub_value.resolve_expression(
1072⋮    │-                            self, reuse=can_reuse, allow_joins=allow_joins,
1073⋮    │-                        ))
1074⋮    │-                else:
1075⋮    │-                    resolved_values.append(sub_value)
1076⋮    │-            value = tuple(resolved_values)
    ⋮1062│+            return type(value)(
    ⋮1063│+                self.resolve_lookup_value(sub_value, can_reuse, allow_joins, simple_col)
    ⋮1064│+                for sub_value in value
    ⋮1065│+            )
1077⋮1066│         return value
1078⋮1067│ 
1079⋮1068│     def solve_lookup_type(self, lookup):
