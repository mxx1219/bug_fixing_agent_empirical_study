
sympy/polys/polytools.py

  2 ⋮  2 │ 
  3 ⋮  3 │ from __future__ import print_function, division
  4 ⋮  4 │ 
  5 ⋮    │-from functools import wraps
    ⋮  5 │+from functools import wraps, reduce
    ⋮  6 │+from operator import mul
  6 ⋮  7 │ 
  7 ⋮  8 │ from sympy.core import (
  8 ⋮  9 │     S, Basic, Expr, I, Integer, Add, Mul, Dummy, Tuple

5905⋮5906│         if arg.is_Number:
5906⋮5907│             coeff *= arg
5907⋮5908│             continue
5908⋮    │-        if arg.is_Mul:
5909⋮    │-            args.extend(arg.args)
5910⋮    │-            continue
5911⋮    │-        if arg.is_Pow:
    ⋮5909│+        elif arg.is_Pow:
5912⋮5910│             base, exp = arg.args
5913⋮5911│             if base.is_Number and exp.is_Number:
5914⋮5912│                 coeff *= arg

5949⋮5947│                         other.append((f, k))
5950⋮5948│ 
5951⋮5949│                 factors.append((_factors_product(other), exp))
    ⋮5950│+    if method == 'sqf':
    ⋮5951│+        factors = [(reduce(mul, (f for f, _ in factors if _ == k)), k)
    ⋮5952│+                   for k in set(i for _, i in factors)]
5952⋮5953│ 
5953⋮5954│     return coeff, factors
5954⋮5955│ 
